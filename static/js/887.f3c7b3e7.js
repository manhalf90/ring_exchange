(self.webpackChunk_few_interface = self.webpackChunk_few_interface || []).push([
    [887], {
        91650: (e, t) => {
            "use strict";

            function r(e) {
                var t = /^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(e);
                if (!t) throw RangeError("'" + e + "' is not a valid hex color");
                return [t[1], t[2], t[3]].map(function(e) {
                    return parseInt(e, 16)
                })
            }

            function n(e, t, r) {
                return e /= 255, t /= 255, r /= 255, [.4124 * (e = (e > .04045 ? Math.pow((e + .005) / 1.055, 2.4) : e / 12.92) * 100) + .3576 * (t = (t > .04045 ? Math.pow((t + .005) / 1.055, 2.4) : t / 12.92) * 100) + .1805 * (r = (r > .04045 ? Math.pow((r + .005) / 1.055, 2.4) : r / 12.92) * 100), .2126 * e + .7152 * t + .0722 * r, .0193 * e + .1192 * t + .9505 * r]
            }

            function i(e, t, r) {
                return e /= 95.047, t /= 100, r /= 108.883, e = e > .008856 ? Math.pow(e, 1 / 3) : 7.787 * e + 16 / 116, [116 * (t = t > .008856 ? Math.pow(t, 1 / 3) : 7.787 * t + 16 / 116) - 16, 500 * (e - t), 200 * (t - (r = r > .008856 ? Math.pow(r, 1 / 3) : 7.787 * r + 16 / 116))]
            }

            function o(e, t, r) {
                var o = n(e, t, r);
                return i(o[0], o[1], o[2])
            }

            function s(e, t) {
                var r = e[0],
                    n = e[1],
                    i = e[2],
                    o = t[0],
                    s = t[1],
                    a = t[2],
                    c = r - o,
                    u = n - s,
                    l = i - a,
                    d = Math.sqrt(n * n + i * i),
                    h = o - r,
                    f = Math.sqrt(s * s + a * a) - d,
                    p = Math.sqrt(c * c + u * u + l * l),
                    g = Math.sqrt(p) > Math.sqrt(Math.abs(h)) + Math.sqrt(Math.abs(f)) ? Math.sqrt(p * p - h * h - f * f) : 0;
                return Math.sqrt((h /= 1) * h + (f /= 1 * (1 + .045 * d)) * f + (g /= 1 * (1 + .015 * d)) * g)
            }

            function a(e, t) {
                return s(o.apply(void 0, e), o.apply(void 0, t))
            }
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.getColorDiffStatus = t.hexDiff = t.rgbDiff = t.deltaE94 = t.rgbToCIELab = t.xyzToCIELab = t.rgbToXyz = t.hslToRgb = t.rgbToHsl = t.rgbToHex = t.hexToRgb = t.DELTAE94_DIFF_STATUS = void 0, t.DELTAE94_DIFF_STATUS = {
                NA: 0,
                PERFECT: 1,
                CLOSE: 2,
                GOOD: 10,
                SIMILAR: 50
            }, t.hexToRgb = r, t.rgbToHex = function(e, t, r) {
                return "#" + (16777216 + (e << 16) + (t << 8) + r).toString(16).slice(1, 7)
            }, t.rgbToHsl = function(e, t, r) {
                var n = Math.max(e /= 255, t /= 255, r /= 255),
                    i = Math.min(e, t, r),
                    o = 0,
                    s = 0,
                    a = (n + i) / 2;
                if (n !== i) {
                    var c = n - i;
                    switch (s = a > .5 ? c / (2 - n - i) : c / (n + i), n) {
                        case e:
                            o = (t - r) / c + (t < r ? 6 : 0);
                            break;
                        case t:
                            o = (r - e) / c + 2;
                            break;
                        case r:
                            o = (e - t) / c + 4
                    }
                    o /= 6
                }
                return [o, s, a]
            }, t.hslToRgb = function(e, t, r) {
                function n(e, t, r) {
                    return (r < 0 && (r += 1), r > 1 && (r -= 1), r < 1 / 6) ? e + (t - e) * 6 * r : r < .5 ? t : r < 2 / 3 ? e + (t - e) * (2 / 3 - r) * 6 : e
                }
                if (0 === t) i = o = s = r;
                else {
                    var i, o, s, a = r < .5 ? r * (1 + t) : r + t - r * t,
                        c = 2 * r - a;
                    i = n(c, a, e + 1 / 3), o = n(c, a, e), s = n(c, a, e - 1 / 3)
                }
                return [255 * i, 255 * o, 255 * s]
            }, t.rgbToXyz = n, t.xyzToCIELab = i, t.rgbToCIELab = o, t.deltaE94 = s, t.rgbDiff = a, t.hexDiff = function(e, t) {
                return a(r(e), r(t))
            }, t.getColorDiffStatus = function(e) {
                return e < t.DELTAE94_DIFF_STATUS.NA ? "N/A" : e <= t.DELTAE94_DIFF_STATUS.PERFECT ? "Perfect" : e <= t.DELTAE94_DIFF_STATUS.CLOSE ? "Close" : e <= t.DELTAE94_DIFF_STATUS.GOOD ? "Good" : e < t.DELTAE94_DIFF_STATUS.SIMILAR ? "Similar" : "Wrong"
            }
        },
        13500: (e, t, r) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.Swatch = void 0;
            var n = r(91650),
                i = function() {
                    function e(e, t) {
                        this._rgb = e, this._population = t
                    }
                    return e.applyFilters = function(e, t) {
                        return t.length > 0 ? e.filter(function(e) {
                            for (var r = e.r, n = e.g, i = e.b, o = 0; o < t.length; o++)
                                if (!t[o](r, n, i, 255)) return !1;
                            return !0
                        }) : e
                    }, e.clone = function(t) {
                        return new e(t._rgb, t._population)
                    }, Object.defineProperty(e.prototype, "r", {
                        get: function() {
                            return this._rgb[0]
                        },
                        enumerable: !1,
                        configurable: !0
                    }), Object.defineProperty(e.prototype, "g", {
                        get: function() {
                            return this._rgb[1]
                        },
                        enumerable: !1,
                        configurable: !0
                    }), Object.defineProperty(e.prototype, "b", {
                        get: function() {
                            return this._rgb[2]
                        },
                        enumerable: !1,
                        configurable: !0
                    }), Object.defineProperty(e.prototype, "rgb", {
                        get: function() {
                            return this._rgb
                        },
                        enumerable: !1,
                        configurable: !0
                    }), Object.defineProperty(e.prototype, "hsl", {
                        get: function() {
                            if (!this._hsl) {
                                var e = this._rgb,
                                    t = e[0],
                                    r = e[1],
                                    i = e[2];
                                this._hsl = n.rgbToHsl(t, r, i)
                            }
                            return this._hsl
                        },
                        enumerable: !1,
                        configurable: !0
                    }), Object.defineProperty(e.prototype, "hex", {
                        get: function() {
                            if (!this._hex) {
                                var e = this._rgb,
                                    t = e[0],
                                    r = e[1],
                                    i = e[2];
                                this._hex = n.rgbToHex(t, r, i)
                            }
                            return this._hex
                        },
                        enumerable: !1,
                        configurable: !0
                    }), Object.defineProperty(e.prototype, "population", {
                        get: function() {
                            return this._population
                        },
                        enumerable: !1,
                        configurable: !0
                    }), e.prototype.toJSON = function() {
                        return {
                            rgb: this.rgb,
                            population: this.population
                        }
                    }, e.prototype.getRgb = function() {
                        return this._rgb
                    }, e.prototype.getHsl = function() {
                        return this.hsl
                    }, e.prototype.getPopulation = function() {
                        return this._population
                    }, e.prototype.getHex = function() {
                        return this.hex
                    }, e.prototype.getYiq = function() {
                        if (!this._yiq) {
                            var e = this._rgb;
                            this._yiq = (299 * e[0] + 587 * e[1] + 114 * e[2]) / 1e3
                        }
                        return this._yiq
                    }, Object.defineProperty(e.prototype, "titleTextColor", {
                        get: function() {
                            return this._titleTextColor && (this._titleTextColor = 200 > this.getYiq() ? "#fff" : "#000"), this._titleTextColor
                        },
                        enumerable: !1,
                        configurable: !0
                    }), Object.defineProperty(e.prototype, "bodyTextColor", {
                        get: function() {
                            return this._bodyTextColor && (this._bodyTextColor = 150 > this.getYiq() ? "#fff" : "#000"), this._bodyTextColor
                        },
                        enumerable: !1,
                        configurable: !0
                    }), e.prototype.getTitleTextColor = function() {
                        return this.titleTextColor
                    }, e.prototype.getBodyTextColor = function() {
                        return this.bodyTextColor
                    }, e
                }();
            t.Swatch = i
        },
        17038: function(e, t, r) {
            "use strict";
            var n = this && this.__importDefault || function(e) {
                return e && e.__esModule ? e : {
                    default: e
                }
            };
            Object.defineProperty(t, "__esModule", {
                value: !0
            });
            var i = n(r(79597)),
                o = r(62786),
                s = function() {
                    function e(e, t) {
                        void 0 === t && (t = {}), this._src = e, this._opts = o.assignDeep({}, i.default.DefaultOpts, t)
                    }
                    return e.prototype.maxColorCount = function(e) {
                        return this._opts.colorCount = e, this
                    }, e.prototype.maxDimension = function(e) {
                        return this._opts.maxDimension = e, this
                    }, e.prototype.addFilter = function(e) {
                        return this._opts.filters ? this._opts.filters.push(e) : this._opts.filters = [e], this
                    }, e.prototype.removeFilter = function(e) {
                        if (this._opts.filters) {
                            var t = this._opts.filters.indexOf(e);
                            t > 0 && this._opts.filters.splice(t)
                        }
                        return this
                    }, e.prototype.clearFilters = function() {
                        return this._opts.filters = [], this
                    }, e.prototype.quality = function(e) {
                        return this._opts.quality = e, this
                    }, e.prototype.useImageClass = function(e) {
                        return this._opts.ImageClass = e, this
                    }, e.prototype.useGenerator = function(e, t) {
                        return this._opts.generators || (this._opts.generators = []), this._opts.generators.push(t ? {
                            name: e,
                            options: t
                        } : e), this
                    }, e.prototype.useQuantizer = function(e, t) {
                        return this._opts.quantizer = t ? {
                            name: e,
                            options: t
                        } : e, this
                    }, e.prototype.build = function() {
                        return new i.default(this._src, this._opts)
                    }, e.prototype.getPalette = function(e) {
                        return this.build().getPalette(e)
                    }, e.prototype.getSwatches = function(e) {
                        return this.build().getPalette(e)
                    }, e
                }();
            t.default = s
        },
        79597: function(e, t, r) {
            "use strict";
            var n = this && this.__importDefault || function(e) {
                return e && e.__esModule ? e : {
                    default: e
                }
            };
            Object.defineProperty(t, "__esModule", {
                value: !0
            });
            var i = r(82627),
                o = n(r(17038)),
                s = r(62786),
                a = function() {
                    function e(t, r) {
                        this._src = t, this.opts = s.assignDeep({}, e.DefaultOpts, r)
                    }
                    return e.use = function(e) {
                        this._pipeline = e
                    }, e.from = function(e) {
                        return new o.default(e)
                    }, Object.defineProperty(e.prototype, "result", {
                        get: function() {
                            return this._result
                        },
                        enumerable: !1,
                        configurable: !0
                    }), e.prototype._process = function(t, r) {
                        this.opts.quantizer, t.scaleDown(this.opts);
                        var n = i.buildProcessOptions(this.opts, r);
                        return e._pipeline.process(t.getImageData(), n)
                    }, e.prototype.palette = function() {
                        return this.swatches()
                    }, e.prototype.swatches = function() {
                        throw Error("Method deprecated. Use `Vibrant.result.palettes[name]` instead")
                    }, e.prototype.getPalette = function() {
                        var e = this,
                            t = arguments[0],
                            r = arguments[1],
                            n = "string" == typeof t ? t : "default",
                            i = "string" == typeof t ? r : t,
                            o = new this.opts.ImageClass;
                        return o.load(this._src).then(function(t) {
                            return e._process(t, {
                                generators: [n]
                            })
                        }).then(function(t) {
                            return e._result = t, t.palettes[n]
                        }).then(function(e) {
                            return o.remove(), i && i(void 0, e), e
                        }).catch(function(e) {
                            return o.remove(), i && i(e), Promise.reject(e)
                        })
                    }, e.prototype.getPalettes = function() {
                        var e = this,
                            t = arguments[0],
                            r = arguments[1],
                            n = Array.isArray(t) ? t : ["*"],
                            i = Array.isArray(t) ? r : t,
                            o = new this.opts.ImageClass;
                        return o.load(this._src).then(function(t) {
                            return e._process(t, {
                                generators: n
                            })
                        }).then(function(t) {
                            return e._result = t, t.palettes
                        }).then(function(e) {
                            return o.remove(), i && i(void 0, e), e
                        }).catch(function(e) {
                            return o.remove(), i && i(e), Promise.reject(e)
                        })
                    }, e.DefaultOpts = {
                        colorCount: 64,
                        quality: 5,
                        filters: []
                    }, e
                }();
            t.default = a
        },
        82627: (e, t, r) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.buildProcessOptions = void 0;
            var n = r(62786);
            t.buildProcessOptions = function(e, t) {
                var r = e.colorCount,
                    i = e.quantizer,
                    o = e.generators,
                    s = e.filters,
                    a = "string" == typeof i ? {
                        name: i,
                        options: {}
                    } : i;
                return a.options = n.assignDeep({}, {
                    colorCount: r
                }, a.options), n.assignDeep({}, {
                    quantizer: a,
                    generators: o,
                    filters: s
                }, t)
            }
        },
        7943: function(e, t, r) {
            "use strict";
            var n = this && this.__awaiter || function(e, t, r, n) {
                    return new(r || (r = Promise))(function(i, o) {
                        function s(e) {
                            try {
                                c(n.next(e))
                            } catch (e) {
                                o(e)
                            }
                        }

                        function a(e) {
                            try {
                                c(n.throw(e))
                            } catch (e) {
                                o(e)
                            }
                        }

                        function c(e) {
                            var t;
                            e.done ? i(e.value) : ((t = e.value) instanceof r ? t : new r(function(e) {
                                e(t)
                            })).then(s, a)
                        }
                        c((n = n.apply(e, t || [])).next())
                    })
                },
                i = this && this.__generator || function(e, t) {
                    var r, n, i, o, s = {
                        label: 0,
                        sent: function() {
                            if (1 & i[0]) throw i[1];
                            return i[1]
                        },
                        trys: [],
                        ops: []
                    };
                    return o = {
                        next: a(0),
                        throw: a(1),
                        return: a(2)
                    }, "function" == typeof Symbol && (o[Symbol.iterator] = function() {
                        return this
                    }), o;

                    function a(o) {
                        return function(a) {
                            return function(o) {
                                if (r) throw TypeError("Generator is already executing.");
                                for (; s;) try {
                                    if (r = 1, n && (i = 2 & o[0] ? n.return : o[0] ? n.throw || ((i = n.return) && i.call(n), 0) : n.next) && !(i = i.call(n, o[1])).done) return i;
                                    switch (n = 0, i && (o = [2 & o[0], i.value]), o[0]) {
                                        case 0:
                                        case 1:
                                            i = o;
                                            break;
                                        case 4:
                                            return s.label++, {
                                                value: o[1],
                                                done: !1
                                            };
                                        case 5:
                                            s.label++, n = o[1], o = [0];
                                            continue;
                                        case 7:
                                            o = s.ops.pop(), s.trys.pop();
                                            continue;
                                        default:
                                            if (!(i = (i = s.trys).length > 0 && i[i.length - 1]) && (6 === o[0] || 2 === o[0])) {
                                                s = 0;
                                                continue
                                            }
                                            if (3 === o[0] && (!i || o[1] > i[0] && o[1] < i[3])) {
                                                s.label = o[1];
                                                break
                                            }
                                            if (6 === o[0] && s.label < i[1]) {
                                                s.label = i[1], i = o;
                                                break
                                            }
                                            if (i && s.label < i[2]) {
                                                s.label = i[2], s.ops.push(o);
                                                break
                                            }
                                            i[2] && s.ops.pop(), s.trys.pop();
                                            continue
                                    }
                                    o = t.call(e, s)
                                } catch (e) {
                                    o = [6, e], n = 0
                                } finally {
                                    r = i = 0
                                }
                                if (5 & o[0]) throw o[1];
                                return {
                                    value: o[0] ? o[1] : void 0,
                                    done: !0
                                }
                            }([o, a])
                        }
                    }
                };
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.BasicPipeline = t.Stage = void 0;
            var o = r(89897),
                s = function() {
                    function e(e) {
                        this.pipeline = e, this._map = {}
                    }
                    return e.prototype.names = function() {
                        return Object.keys(this._map)
                    }, e.prototype.has = function(e) {
                        return !!this._map[e]
                    }, e.prototype.get = function(e) {
                        return this._map[e]
                    }, e.prototype.register = function(e, t) {
                        return this._map[e] = t, this.pipeline
                    }, e
                }();
            t.Stage = s;
            var a = function() {
                function e() {
                    this.filter = new s(this), this.quantizer = new s(this), this.generator = new s(this)
                }
                return e.prototype._buildProcessTasks = function(e) {
                    var t = this,
                        r = e.filters,
                        n = e.quantizer,
                        i = e.generators;
                    return 1 === i.length && "*" === i[0] && (i = this.generator.names()), {
                        filters: r.map(function(e) {
                            return o(t.filter, e)
                        }),
                        quantizer: o(this.quantizer, n),
                        generators: i.map(function(e) {
                            return o(t.generator, e)
                        })
                    };

                    function o(e, t) {
                        var r, n;
                        return "string" == typeof t ? r = t : (r = t.name, n = t.options), {
                            name: r,
                            fn: e.get(r),
                            options: n
                        }
                    }
                }, e.prototype.process = function(e, t) {
                    return n(this, void 0, void 0, function() {
                        var r, n, o, s, a, c, u;
                        return i(this, function(i) {
                            switch (i.label) {
                                case 0:
                                    return n = (r = this._buildProcessTasks(t)).filters, o = r.quantizer, s = r.generators, [4, this._filterColors(n, e)];
                                case 1:
                                    return a = i.sent(), [4, this._generateColors(o, a)];
                                case 2:
                                    return c = i.sent(), [4, this._generatePalettes(s, c)];
                                case 3:
                                    return u = i.sent(), [2, {
                                        colors: c,
                                        palettes: u
                                    }]
                            }
                        })
                    })
                }, e.prototype._filterColors = function(e, t) {
                    return Promise.resolve(o.applyFilters(t, e.map(function(e) {
                        return e.fn
                    })))
                }, e.prototype._generateColors = function(e, t) {
                    return Promise.resolve(e.fn(t.data, e.options))
                }, e.prototype._generatePalettes = function(e, t) {
                    return n(this, void 0, void 0, function() {
                        return i(this, function(r) {
                            switch (r.label) {
                                case 0:
                                    return [4, Promise.all(e.map(function(e) {
                                        return Promise.resolve((0, e.fn)(t, e.options))
                                    }))];
                                case 1:
                                    return [2, Promise.resolve(r.sent().reduce(function(t, r, n) {
                                        return t[e[n].name] = r, t
                                    }, {}))]
                            }
                        })
                    })
                }, e
            }();
            t.BasicPipeline = a
        },
        62786: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.assignDeep = t.mapValues = void 0, t.mapValues = function(e, t) {
                var r = {};
                for (var n in e)
                    if (e.hasOwnProperty(n)) {
                        var i = e[n];
                        r[n] = t(i)
                    }
                return r
            }, t.assignDeep = function e(t) {
                for (var r = [], n = 1; n < arguments.length; n++) r[n - 1] = arguments[n];
                return r.forEach(function(r) {
                    if (r) {
                        for (var n in r)
                            if (r.hasOwnProperty(n)) {
                                var i = r[n];
                                Array.isArray(i) ? t[n] = i.slice(0) : "object" == typeof i ? (t[n] || (t[n] = {}), e(t[n], i)) : t[n] = i
                            }
                    }
                }), t
            }
        },
        17467: (e, t, r) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            });
            var n = r(13500),
                i = r(91650),
                o = {
                    targetDarkLuma: .26,
                    maxDarkLuma: .45,
                    minLightLuma: .55,
                    targetLightLuma: .74,
                    minNormalLuma: .3,
                    targetNormalLuma: .5,
                    maxNormalLuma: .7,
                    targetMutesSaturation: .3,
                    maxMutesSaturation: .4,
                    targetVibrantSaturation: 1,
                    minVibrantSaturation: .35,
                    weightSaturation: 3,
                    weightLuma: 6.5,
                    weightPopulation: .5
                };

            function s(e, t, r, n, i, o, s, a, c, u) {
                var l = null,
                    d = 0;
                return t.forEach(function(t) {
                    var h = t.hsl,
                        f = h[1],
                        p = h[2];
                    if (f >= a && f <= c && p >= i && p <= o && e.Vibrant !== t && e.DarkVibrant !== t && e.LightVibrant !== t && e.Muted !== t && e.DarkMuted !== t && e.LightMuted !== t) {
                        var g = function(e, t, r, n, i, o, s) {
                            function a(e, t) {
                                return 1 - Math.abs(e - t)
                            }
                            return function() {
                                for (var e = [], t = 0; t < arguments.length; t++) e[t] = arguments[t];
                                for (var r = 0, n = 0, i = 0; i < e.length; i += 2) {
                                    var o = e[i],
                                        s = e[i + 1];
                                    r += o * s, n += s
                                }
                                return r / n
                            }(a(e, t), s.weightSaturation, a(r, n), s.weightLuma, i / o, s.weightPopulation)
                        }(f, s, p, n, t.population, r, u);
                        (null === l || g > d) && (l = t, d = g)
                    }
                }), l
            }
            t.default = function(e, t) {
                t = Object.assign({}, o, t);
                var r, a, c, u = (r = 0, e.forEach(function(e) {
                        r = Math.max(r, e.population)
                    }), r),
                    l = (a = t, (c = {
                        Vibrant: null,
                        DarkVibrant: null,
                        LightVibrant: null,
                        Muted: null,
                        DarkMuted: null,
                        LightMuted: null
                    }).Vibrant = s(c, e, u, a.targetNormalLuma, a.minNormalLuma, a.maxNormalLuma, a.targetVibrantSaturation, a.minVibrantSaturation, 1, a), c.LightVibrant = s(c, e, u, a.targetLightLuma, a.minLightLuma, 1, a.targetVibrantSaturation, a.minVibrantSaturation, 1, a), c.DarkVibrant = s(c, e, u, a.targetDarkLuma, 0, a.maxDarkLuma, a.targetVibrantSaturation, a.minVibrantSaturation, 1, a), c.Muted = s(c, e, u, a.targetNormalLuma, a.minNormalLuma, a.maxNormalLuma, a.targetMutesSaturation, 0, a.maxMutesSaturation, a), c.LightMuted = s(c, e, u, a.targetLightLuma, a.minLightLuma, 1, a.targetMutesSaturation, 0, a.maxMutesSaturation, a), c.DarkMuted = s(c, e, u, a.targetDarkLuma, 0, a.maxDarkLuma, a.targetMutesSaturation, 0, a.maxMutesSaturation, a), c);
                return ! function(e, t, r) {
                    if (!e.Vibrant && !e.DarkVibrant && !e.LightVibrant) {
                        if (!e.DarkVibrant && e.DarkMuted) {
                            var o = e.DarkMuted.hsl,
                                s = o[0],
                                a = o[1],
                                c = o[2];
                            c = r.targetDarkLuma, e.DarkVibrant = new n.Swatch(i.hslToRgb(s, a, c), 0)
                        }
                        if (!e.LightVibrant && e.LightMuted) {
                            var u = e.LightMuted.hsl,
                                s = u[0],
                                a = u[1],
                                c = u[2];
                            c = r.targetDarkLuma, e.DarkVibrant = new n.Swatch(i.hslToRgb(s, a, c), 0)
                        }
                    }
                    if (!e.Vibrant && e.DarkVibrant) {
                        var l = e.DarkVibrant.hsl,
                            s = l[0],
                            a = l[1],
                            c = l[2];
                        c = r.targetNormalLuma, e.Vibrant = new n.Swatch(i.hslToRgb(s, a, c), 0)
                    } else if (!e.Vibrant && e.LightVibrant) {
                        var d = e.LightVibrant.hsl,
                            s = d[0],
                            a = d[1],
                            c = d[2];
                        c = r.targetNormalLuma, e.Vibrant = new n.Swatch(i.hslToRgb(s, a, c), 0)
                    }
                    if (!e.DarkVibrant && e.Vibrant) {
                        var h = e.Vibrant.hsl,
                            s = h[0],
                            a = h[1],
                            c = h[2];
                        c = r.targetDarkLuma, e.DarkVibrant = new n.Swatch(i.hslToRgb(s, a, c), 0)
                    }
                    if (!e.LightVibrant && e.Vibrant) {
                        var f = e.Vibrant.hsl,
                            s = f[0],
                            a = f[1],
                            c = f[2];
                        c = r.targetLightLuma, e.LightVibrant = new n.Swatch(i.hslToRgb(s, a, c), 0)
                    }
                    if (!e.Muted && e.Vibrant) {
                        var p = e.Vibrant.hsl,
                            s = p[0],
                            a = p[1],
                            c = p[2];
                        c = r.targetMutesSaturation, e.Muted = new n.Swatch(i.hslToRgb(s, a, c), 0)
                    }
                    if (!e.DarkMuted && e.DarkVibrant) {
                        var g = e.DarkVibrant.hsl,
                            s = g[0],
                            a = g[1],
                            c = g[2];
                        c = r.targetMutesSaturation, e.DarkMuted = new n.Swatch(i.hslToRgb(s, a, c), 0)
                    }
                    if (!e.LightMuted && e.LightVibrant) {
                        var m = e.LightVibrant.hsl,
                            s = m[0],
                            a = m[1],
                            c = m[2];
                        c = r.targetMutesSaturation, e.LightMuted = new n.Swatch(i.hslToRgb(s, a, c), 0)
                    }
                }(l, 0, t), l
            }
        },
        92449: function(e, t, r) {
            "use strict";
            var n, i = this && this.__extends || (n = function(e, t) {
                return (n = Object.setPrototypeOf || ({
                    __proto__: []
                }) instanceof Array && function(e, t) {
                    e.__proto__ = t
                } || function(e, t) {
                    for (var r in t) t.hasOwnProperty(r) && (e[r] = t[r])
                })(e, t)
            }, function(e, t) {
                function r() {
                    this.constructor = e
                }
                n(e, t), e.prototype = null === t ? Object.create(t) : (r.prototype = t.prototype, new r)
            });
            Object.defineProperty(t, "__esModule", {
                value: !0
            });
            var o = function(e) {
                function t() {
                    return null !== e && e.apply(this, arguments) || this
                }
                return i(t, e), t.prototype._initCanvas = function() {
                    var e = this.image,
                        t = this._canvas = document.createElement("canvas"),
                        r = t.getContext("2d");
                    if (!r) throw ReferenceError("Failed to create canvas context");
                    this._context = r, t.className = "@vibrant/canvas", t.style.display = "none", this._width = t.width = e.width, this._height = t.height = e.height, r.drawImage(e, 0, 0), document.body.appendChild(t)
                }, t.prototype.load = function(e) {
                    var t, r, n, i, o, s, a, c, u = this;
                    if ("string" == typeof e) a = document.createElement("img"), t = c = e, ((r = new URL(t, location.href)).protocol !== location.protocol || r.host !== location.host || r.port !== location.port) && (n = window.location.href, i = c, o = new URL(n), s = new URL(i), o.protocol !== s.protocol || o.hostname !== s.hostname || o.port !== s.port) && (a.crossOrigin = "anonymous"), a.src = c;
                    else {
                        if (!(e instanceof HTMLImageElement)) return Promise.reject(Error("Cannot load buffer as an image in browser"));
                        a = e, c = e.src
                    }
                    return this.image = a, new Promise(function(e, t) {
                        var r = function() {
                            u._initCanvas(), e(u)
                        };
                        a.complete ? r() : (a.onload = r, a.onerror = function(e) {
                            return t(Error("Fail to load image: " + c))
                        })
                    })
                }, t.prototype.clear = function() {
                    this._context.clearRect(0, 0, this._width, this._height)
                }, t.prototype.update = function(e) {
                    this._context.putImageData(e, 0, 0)
                }, t.prototype.getWidth = function() {
                    return this._width
                }, t.prototype.getHeight = function() {
                    return this._height
                }, t.prototype.resize = function(e, t, r) {
                    var n = this._canvas,
                        i = this._context,
                        o = this.image;
                    this._width = n.width = e, this._height = n.height = t, i.scale(r, r), i.drawImage(o, 0, 0)
                }, t.prototype.getPixelCount = function() {
                    return this._width * this._height
                }, t.prototype.getImageData = function() {
                    return this._context.getImageData(0, 0, this._width, this._height)
                }, t.prototype.remove = function() {
                    this._canvas && this._canvas.parentNode && this._canvas.parentNode.removeChild(this._canvas)
                }, t
            }(r(89897).ImageBase);
            t.default = o
        },
        16917: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            });
            var r = function() {
                function e(e, t) {
                    this.pixels = e, this.opts = t;
                    var r, n, i, o, s, a, c, u, l, d = t.sigBits,
                        h = function(e, t, r) {
                            return (e << 2 * d) + (t << d) + r
                        };
                    this.getColorIndex = h;
                    var f = 8 - d,
                        p = new Uint32Array(1 << 3 * d);
                    r = i = s = 0, n = o = a = Number.MAX_VALUE;
                    for (var g = e.length / 4, m = 0; m < g;) {
                        var b = 4 * m;
                        if (m++, c = e[b + 0], u = e[b + 1], l = e[b + 2], 0 !== e[b + 3]) {
                            var y = h(c >>= f, u >>= f, l >>= f);
                            p[y] += 1, c > r && (r = c), c < n && (n = c), u > i && (i = u), u < o && (o = u), l > s && (s = l), l < a && (a = l)
                        }
                    }
                    this._colorCount = p.reduce(function(e, t) {
                        return t > 0 ? e + 1 : e
                    }, 0), this.hist = p, this.rmax = r, this.rmin = n, this.gmax = i, this.gmin = o, this.bmax = s, this.bmin = a
                }
                return Object.defineProperty(e.prototype, "colorCount", {
                    get: function() {
                        return this._colorCount
                    },
                    enumerable: !1,
                    configurable: !0
                }), e
            }();
            t.default = r
        },
        89897: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.applyFilters = t.ImageBase = void 0;
            var r = function() {
                function e() {}
                return e.prototype.scaleDown = function(e) {
                    var t = this.getWidth(),
                        r = this.getHeight(),
                        n = 1;
                    if (e.maxDimension > 0) {
                        var i = Math.max(t, r);
                        i > e.maxDimension && (n = e.maxDimension / i)
                    } else n = 1 / e.quality;
                    n < 1 && this.resize(t * n, r * n, n)
                }, e
            }();
            t.ImageBase = r, t.applyFilters = function(e, t) {
                if (t.length > 0)
                    for (var r = e.data, n = r.length / 4, i = void 0, o = void 0, s = void 0, a = void 0, c = void 0, u = 0; u < n; u++) {
                        o = r[(i = 4 * u) + 0], s = r[i + 1], a = r[i + 2], c = r[i + 3];
                        for (var l = 0; l < t.length; l++)
                            if (!t[l](o, s, a, c)) {
                                r[i + 3] = 0;
                                break
                            }
                    }
                return e
            }
        },
        89585: function(e, t, r) {
            "use strict";
            var n = this && this.__importDefault || function(e) {
                return e && e.__esModule ? e : {
                    default: e
                }
            };
            Object.defineProperty(t, "__esModule", {
                value: !0
            });
            var i = r(13500),
                o = n(r(22713)),
                s = n(r(17916));

            function a(e, t) {
                for (var r = e.size(); e.size() < t;) {
                    var n = e.pop();
                    if (n && n.count() > 0) {
                        var i = n.split(),
                            o = i[0],
                            s = i[1];
                        if (e.push(o), s && s.count() > 0 && e.push(s), e.size() === r) break;
                        r = e.size()
                    } else break
                }
            }
            t.default = function(e, t) {
                if (0 === e.length || t.colorCount < 2 || t.colorCount > 256) throw Error("Wrong MMCQ parameters");
                var r = o.default.build(e);
                r.histogram.colorCount;
                var n = new s.default(function(e, t) {
                    return e.count() - t.count()
                });
                n.push(r), a(n, .75 * t.colorCount);
                var c = new s.default(function(e, t) {
                    return e.count() * e.volume() - t.count() * t.volume()
                });
                return c.contents = n.contents, a(c, t.colorCount - c.size()),
                    function(e) {
                        for (var t = []; e.size();) {
                            var r = e.pop(),
                                n = r.avg();
                            n[0], n[1], n[2], t.push(new i.Swatch(n, r.count()))
                        }
                        return t
                    }(c)
            }
        },
        17916: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            });
            var r = function() {
                function e(e) {
                    this._comparator = e, this.contents = [], this._sorted = !1
                }
                return e.prototype._sort = function() {
                    this._sorted || (this.contents.sort(this._comparator), this._sorted = !0)
                }, e.prototype.push = function(e) {
                    this.contents.push(e), this._sorted = !1
                }, e.prototype.peek = function(e) {
                    return this._sort(), e = "number" == typeof e ? e : this.contents.length - 1, this.contents[e]
                }, e.prototype.pop = function() {
                    return this._sort(), this.contents.pop()
                }, e.prototype.size = function() {
                    return this.contents.length
                }, e.prototype.map = function(e) {
                    return this._sort(), this.contents.map(e)
                }, e
            }();
            t.default = r
        },
        22713: function(e, t, r) {
            "use strict";
            var n = this && this.__importDefault || function(e) {
                return e && e.__esModule ? e : {
                    default: e
                }
            };
            Object.defineProperty(t, "__esModule", {
                value: !0
            });
            var i = n(r(16917)),
                o = function() {
                    function e(e, t, r, n, i, o, s) {
                        this.histogram = s, this._volume = -1, this._count = -1, this.dimension = {
                            r1: e,
                            r2: t,
                            g1: r,
                            g2: n,
                            b1: i,
                            b2: o
                        }
                    }
                    return e.build = function(t) {
                        var r = new i.default(t, {
                            sigBits: 5
                        });
                        return new e(r.rmin, r.rmax, r.gmin, r.gmax, r.bmin, r.bmax, r)
                    }, e.prototype.invalidate = function() {
                        this._volume = this._count = -1, this._avg = null
                    }, e.prototype.volume = function() {
                        if (this._volume < 0) {
                            var e = this.dimension,
                                t = e.r1,
                                r = e.r2,
                                n = e.g1,
                                i = e.g2,
                                o = e.b1,
                                s = e.b2;
                            this._volume = (r - t + 1) * (i - n + 1) * (s - o + 1)
                        }
                        return this._volume
                    }, e.prototype.count = function() {
                        if (this._count < 0) {
                            for (var e = this.histogram, t = e.hist, r = e.getColorIndex, n = this.dimension, i = n.r1, o = n.r2, s = n.g1, a = n.g2, c = n.b1, u = n.b2, l = 0, d = i; d <= o; d++)
                                for (var h = s; h <= a; h++)
                                    for (var f = c; f <= u; f++) l += t[r(d, h, f)];
                            this._count = l
                        }
                        return this._count
                    }, e.prototype.clone = function() {
                        var t = this.histogram,
                            r = this.dimension;
                        return new e(r.r1, r.r2, r.g1, r.g2, r.b1, r.b2, t)
                    }, e.prototype.avg = function() {
                        if (!this._avg) {
                            var e = this.histogram,
                                t = e.hist,
                                r = e.getColorIndex,
                                n = this.dimension,
                                i = n.r1,
                                o = n.r2,
                                s = n.g1,
                                a = n.g2,
                                c = n.b1,
                                u = n.b2,
                                l = 0,
                                d = void 0,
                                h = void 0,
                                f = void 0;
                            d = h = f = 0;
                            for (var p = i; p <= o; p++)
                                for (var g = s; g <= a; g++)
                                    for (var m = c; m <= u; m++) {
                                        var b = t[r(p, g, m)];
                                        l += b, d += b * (p + .5) * 8, h += b * (g + .5) * 8, f += b * (m + .5) * 8
                                    }
                            l ? this._avg = [~~(d / l), ~~(h / l), ~~(f / l)] : this._avg = [~~(8 * (i + o + 1) / 2), ~~(8 * (s + a + 1) / 2), ~~(8 * (c + u + 1) / 2)]
                        }
                        return this._avg
                    }, e.prototype.contains = function(e) {
                        var t = e[0],
                            r = e[1],
                            n = e[2],
                            i = this.dimension,
                            o = i.r1,
                            s = i.r2,
                            a = i.g1,
                            c = i.g2,
                            u = i.b1,
                            l = i.b2;
                        return r >>= 3, n >>= 3, (t >>= 3) >= o && t <= s && r >= a && r <= c && n >= u && n <= l
                    }, e.prototype.split = function() {
                        var e, t, r = this.histogram,
                            n = r.hist,
                            i = r.getColorIndex,
                            o = this.dimension,
                            s = o.r1,
                            a = o.r2,
                            c = o.g1,
                            u = o.g2,
                            l = o.b1,
                            d = o.b2,
                            h = this.count();
                        if (!h) return [];
                        if (1 === h) return [this.clone()];
                        var f = a - s + 1,
                            p = u - c + 1,
                            g = Math.max(f, p, d - l + 1),
                            m = null;
                        e = t = 0;
                        var b = null;
                        if (g === f) {
                            b = "r", m = new Uint32Array(a + 1);
                            for (var y = s; y <= a; y++) {
                                e = 0;
                                for (var v = c; v <= u; v++)
                                    for (var w = l; w <= d; w++) {
                                        var E = i(y, v, w);
                                        e += n[E]
                                    }
                                t += e, m[y] = t
                            }
                        } else if (g === p) {
                            b = "g", m = new Uint32Array(u + 1);
                            for (var v = c; v <= u; v++) {
                                e = 0;
                                for (var y = s; y <= a; y++)
                                    for (var w = l; w <= d; w++) {
                                        var E = i(y, v, w);
                                        e += n[E]
                                    }
                                t += e, m[v] = t
                            }
                        } else {
                            b = "b", m = new Uint32Array(d + 1);
                            for (var w = l; w <= d; w++) {
                                e = 0;
                                for (var y = s; y <= a; y++)
                                    for (var v = c; v <= u; v++) {
                                        var E = i(y, v, w);
                                        e += n[E]
                                    }
                                t += e, m[w] = t
                            }
                        }
                        for (var _ = -1, P = new Uint32Array(m.length), x = 0; x < m.length; x++) {
                            var I = m[x];
                            _ < 0 && I > t / 2 && (_ = x), P[x] = t - I
                        }
                        var O = this;
                        return function(e) {
                            var t = e + "1",
                                r = e + "2",
                                n = O.dimension[t],
                                i = O.dimension[r],
                                o = O.clone(),
                                s = O.clone(),
                                a = _ - n,
                                c = i - _;
                            for (a <= c ? i = Math.max(0, i = Math.min(i - 1, ~~(_ + c / 2))) : (i = Math.max(n, ~~(_ - 1 - a / 2)), i = Math.min(O.dimension[r], i)); !m[i];) i++;
                            for (var u = P[i]; !u && m[i - 1];) u = P[--i];
                            return o.dimension[r] = i, s.dimension[t] = i + 1, [o, s]
                        }(b)
                    }, e
                }();
            t.default = o
        },
        55797: (e, t, r) => {
            "use strict";

            function n() {
                return (null === r.g || void 0 === r.g ? void 0 : r.g.crypto) || (null === r.g || void 0 === r.g ? void 0 : r.g.msCrypto) || {}
            }

            function i() {
                let e = n();
                return e.subtle || e.webkitSubtle
            }
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.isBrowserCryptoAvailable = t.getSubtleCrypto = t.getBrowerCrypto = void 0, t.getBrowerCrypto = n, t.getSubtleCrypto = i, t.isBrowserCryptoAvailable = function() {
                return !!n() && !!i()
            }
        },
        85530: (e, t, r) => {
            "use strict";
            var n = r(41544);

            function i() {
                return "undefined" == typeof document && "undefined" != typeof navigator && "ReactNative" === navigator.product
            }

            function o() {
                return void 0 !== n && void 0 !== n.versions && void 0 !== n.versions.node
            }
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.isBrowser = t.isNode = t.isReactNative = void 0, t.isReactNative = i, t.isNode = o, t.isBrowser = function() {
                return !i() && !o()
            }
        },
        86351: (e, t, r) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            });
            let n = r(7446);
            n.__exportStar(r(55797), t), n.__exportStar(r(85530), t)
        },
        7446: (e, t, r) => {
            "use strict";
            r.r(t), r.d(t, {
                __assign: () => o,
                __asyncDelegator: () => w,
                __asyncGenerator: () => v,
                __asyncValues: () => E,
                __await: () => y,
                __awaiter: () => l,
                __classPrivateFieldGet: () => I,
                __classPrivateFieldSet: () => O,
                __createBinding: () => h,
                __decorate: () => a,
                __exportStar: () => f,
                __extends: () => i,
                __generator: () => d,
                __importDefault: () => x,
                __importStar: () => P,
                __makeTemplateObject: () => _,
                __metadata: () => u,
                __param: () => c,
                __read: () => g,
                __rest: () => s,
                __spread: () => m,
                __spreadArrays: () => b,
                __values: () => p
            });
            /*! *****************************************************************************
            Copyright (c) Microsoft Corporation.
            Permission to use, copy, modify, and/or distribute this software for any
            purpose with or without fee is hereby granted.
            THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
            REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
            AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
            INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
            LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
            OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
            PERFORMANCE OF THIS SOFTWARE.
            ***************************************************************************** */
            var n = function(e, t) {
                return (n = Object.setPrototypeOf || ({
                    __proto__: []
                }) instanceof Array && function(e, t) {
                    e.__proto__ = t
                } || function(e, t) {
                    for (var r in t) t.hasOwnProperty(r) && (e[r] = t[r])
                })(e, t)
            };

            function i(e, t) {
                function r() {
                    this.constructor = e
                }
                n(e, t), e.prototype = null === t ? Object.create(t) : (r.prototype = t.prototype, new r)
            }
            var o = function() {
                return (o = Object.assign || function(e) {
                    for (var t, r = 1, n = arguments.length; r < n; r++)
                        for (var i in t = arguments[r]) Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i]);
                    return e
                }).apply(this, arguments)
            };

            function s(e, t) {
                var r = {};
                for (var n in e) Object.prototype.hasOwnProperty.call(e, n) && 0 > t.indexOf(n) && (r[n] = e[n]);
                if (null != e && "function" == typeof Object.getOwnPropertySymbols)
                    for (var i = 0, n = Object.getOwnPropertySymbols(e); i < n.length; i++) 0 > t.indexOf(n[i]) && Object.prototype.propertyIsEnumerable.call(e, n[i]) && (r[n[i]] = e[n[i]]);
                return r
            }

            function a(e, t, r, n) {
                var i, o = arguments.length,
                    s = o < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, r) : n;
                if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, r, n);
                else
                    for (var a = e.length - 1; a >= 0; a--)(i = e[a]) && (s = (o < 3 ? i(s) : o > 3 ? i(t, r, s) : i(t, r)) || s);
                return o > 3 && s && Object.defineProperty(t, r, s), s
            }

            function c(e, t) {
                return function(r, n) {
                    t(r, n, e)
                }
            }

            function u(e, t) {
                if ("object" == typeof Reflect && "function" == typeof Reflect.metadata) return Reflect.metadata(e, t)
            }

            function l(e, t, r, n) {
                return new(r || (r = Promise))(function(i, o) {
                    function s(e) {
                        try {
                            c(n.next(e))
                        } catch (e) {
                            o(e)
                        }
                    }

                    function a(e) {
                        try {
                            c(n.throw(e))
                        } catch (e) {
                            o(e)
                        }
                    }

                    function c(e) {
                        var t;
                        e.done ? i(e.value) : ((t = e.value) instanceof r ? t : new r(function(e) {
                            e(t)
                        })).then(s, a)
                    }
                    c((n = n.apply(e, t || [])).next())
                })
            }

            function d(e, t) {
                var r, n, i, o, s = {
                    label: 0,
                    sent: function() {
                        if (1 & i[0]) throw i[1];
                        return i[1]
                    },
                    trys: [],
                    ops: []
                };
                return o = {
                    next: a(0),
                    throw: a(1),
                    return: a(2)
                }, "function" == typeof Symbol && (o[Symbol.iterator] = function() {
                    return this
                }), o;

                function a(o) {
                    return function(a) {
                        return function(o) {
                            if (r) throw TypeError("Generator is already executing.");
                            for (; s;) try {
                                if (r = 1, n && (i = 2 & o[0] ? n.return : o[0] ? n.throw || ((i = n.return) && i.call(n), 0) : n.next) && !(i = i.call(n, o[1])).done) return i;
                                switch (n = 0, i && (o = [2 & o[0], i.value]), o[0]) {
                                    case 0:
                                    case 1:
                                        i = o;
                                        break;
                                    case 4:
                                        return s.label++, {
                                            value: o[1],
                                            done: !1
                                        };
                                    case 5:
                                        s.label++, n = o[1], o = [0];
                                        continue;
                                    case 7:
                                        o = s.ops.pop(), s.trys.pop();
                                        continue;
                                    default:
                                        if (!(i = (i = s.trys).length > 0 && i[i.length - 1]) && (6 === o[0] || 2 === o[0])) {
                                            s = 0;
                                            continue
                                        }
                                        if (3 === o[0] && (!i || o[1] > i[0] && o[1] < i[3])) {
                                            s.label = o[1];
                                            break
                                        }
                                        if (6 === o[0] && s.label < i[1]) {
                                            s.label = i[1], i = o;
                                            break
                                        }
                                        if (i && s.label < i[2]) {
                                            s.label = i[2], s.ops.push(o);
                                            break
                                        }
                                        i[2] && s.ops.pop(), s.trys.pop();
                                        continue
                                }
                                o = t.call(e, s)
                            } catch (e) {
                                o = [6, e], n = 0
                            } finally {
                                r = i = 0
                            }
                            if (5 & o[0]) throw o[1];
                            return {
                                value: o[0] ? o[1] : void 0,
                                done: !0
                            }
                        }([o, a])
                    }
                }
            }

            function h(e, t, r, n) {
                void 0 === n && (n = r), e[n] = t[r]
            }

            function f(e, t) {
                for (var r in e) "default" === r || t.hasOwnProperty(r) || (t[r] = e[r])
            }

            function p(e) {
                var t = "function" == typeof Symbol && Symbol.iterator,
                    r = t && e[t],
                    n = 0;
                if (r) return r.call(e);
                if (e && "number" == typeof e.length) return {
                    next: function() {
                        return e && n >= e.length && (e = void 0), {
                            value: e && e[n++],
                            done: !e
                        }
                    }
                };
                throw TypeError(t ? "Object is not iterable." : "Symbol.iterator is not defined.")
            }

            function g(e, t) {
                var r = "function" == typeof Symbol && e[Symbol.iterator];
                if (!r) return e;
                var n, i, o = r.call(e),
                    s = [];
                try {
                    for (;
                        (void 0 === t || t-- > 0) && !(n = o.next()).done;) s.push(n.value)
                } catch (e) {
                    i = {
                        error: e
                    }
                } finally {
                    try {
                        n && !n.done && (r = o.return) && r.call(o)
                    } finally {
                        if (i) throw i.error
                    }
                }
                return s
            }

            function m() {
                for (var e = [], t = 0; t < arguments.length; t++) e = e.concat(g(arguments[t]));
                return e
            }

            function b() {
                for (var e = 0, t = 0, r = arguments.length; t < r; t++) e += arguments[t].length;
                for (var n = Array(e), i = 0, t = 0; t < r; t++)
                    for (var o = arguments[t], s = 0, a = o.length; s < a; s++, i++) n[i] = o[s];
                return n
            }

            function y(e) {
                return this instanceof y ? (this.v = e, this) : new y(e)
            }

            function v(e, t, r) {
                if (!Symbol.asyncIterator) throw TypeError("Symbol.asyncIterator is not defined.");
                var n, i = r.apply(e, t || []),
                    o = [];
                return n = {}, s("next"), s("throw"), s("return"), n[Symbol.asyncIterator] = function() {
                    return this
                }, n;

                function s(e) {
                    i[e] && (n[e] = function(t) {
                        return new Promise(function(r, n) {
                            o.push([e, t, r, n]) > 1 || a(e, t)
                        })
                    })
                }

                function a(e, t) {
                    try {
                        var r;
                        (r = i[e](t)).value instanceof y ? Promise.resolve(r.value.v).then(c, u) : l(o[0][2], r)
                    } catch (e) {
                        l(o[0][3], e)
                    }
                }

                function c(e) {
                    a("next", e)
                }

                function u(e) {
                    a("throw", e)
                }

                function l(e, t) {
                    e(t), o.shift(), o.length && a(o[0][0], o[0][1])
                }
            }

            function w(e) {
                var t, r;
                return t = {}, n("next"), n("throw", function(e) {
                    throw e
                }), n("return"), t[Symbol.iterator] = function() {
                    return this
                }, t;

                function n(n, i) {
                    t[n] = e[n] ? function(t) {
                        return (r = !r) ? {
                            value: y(e[n](t)),
                            done: "return" === n
                        } : i ? i(t) : t
                    } : i
                }
            }

            function E(e) {
                if (!Symbol.asyncIterator) throw TypeError("Symbol.asyncIterator is not defined.");
                var t, r = e[Symbol.asyncIterator];
                return r ? r.call(e) : (e = p(e), t = {}, n("next"), n("throw"), n("return"), t[Symbol.asyncIterator] = function() {
                    return this
                }, t);

                function n(r) {
                    t[r] = e[r] && function(t) {
                        return new Promise(function(n, i) {
                            ! function(e, t, r, n) {
                                Promise.resolve(n).then(function(t) {
                                    e({
                                        value: t,
                                        done: r
                                    })
                                }, t)
                            }(n, i, (t = e[r](t)).done, t.value)
                        })
                    }
                }
            }

            function _(e, t) {
                return Object.defineProperty ? Object.defineProperty(e, "raw", {
                    value: t
                }) : e.raw = t, e
            }

            function P(e) {
                if (e && e.__esModule) return e;
                var t = {};
                if (null != e)
                    for (var r in e) Object.hasOwnProperty.call(e, r) && (t[r] = e[r]);
                return t.default = e, t
            }

            function x(e) {
                return e && e.__esModule ? e : {
                    default: e
                }
            }

            function I(e, t) {
                if (!t.has(e)) throw TypeError("attempted to get private field on non-instance");
                return t.get(e)
            }

            function O(e, t, r) {
                if (!t.has(e)) throw TypeError("attempted to set private field on non-instance");
                return t.set(e, r), r
            }
        },
        51118: (e, t, r) => {
            "use strict";
            r.r(t), r.d(t, {
                EthereumProvider: () => iA,
                OPTIONAL_EVENTS: () => ig,
                OPTIONAL_METHODS: () => ih,
                REQUIRED_EVENTS: () => ip,
                REQUIRED_METHODS: () => id,
                default: () => iT
            });
            var n = r(32821),
                i = r.n(n),
                o = r(6949),
                s = r(51250),
                a = r(23423),
                c = r(54242),
                u = r(9668),
                l = r(95856),
                d = r(18127),
                h = r(62057),
                f = r(62462),
                p = r(78201),
                g = r(93343);
            r(22841);
            let m = {
                waku: {
                    publish: "waku_publish",
                    batchPublish: "waku_batchPublish",
                    subscribe: "waku_subscribe",
                    batchSubscribe: "waku_batchSubscribe",
                    subscription: "waku_subscription",
                    unsubscribe: "waku_unsubscribe",
                    batchUnsubscribe: "waku_batchUnsubscribe"
                },
                irn: {
                    publish: "irn_publish",
                    batchPublish: "irn_batchPublish",
                    subscribe: "irn_subscribe",
                    batchSubscribe: "irn_batchSubscribe",
                    subscription: "irn_subscription",
                    unsubscribe: "irn_unsubscribe",
                    batchUnsubscribe: "irn_batchUnsubscribe"
                },
                iridium: {
                    publish: "iridium_publish",
                    batchPublish: "iridium_batchPublish",
                    subscribe: "iridium_subscribe",
                    batchSubscribe: "iridium_batchSubscribe",
                    subscription: "iridium_subscription",
                    unsubscribe: "iridium_unsubscribe",
                    batchUnsubscribe: "iridium_batchUnsubscribe"
                }
            };
            var b = r(41544);

            function y(e, t) {
                return e.includes(":") ? [e] : t.chains || []
            }
            let v = "base10",
                w = "base16",
                E = "base64pad",
                _ = "utf8";

            function P() {
                let e = (0, a.randomBytes)(32);
                return (0, l.BB)(e, w)
            }

            function x(e) {
                let t = (0, c.vp)((0, l.mL)(e, _));
                return (0, l.BB)(t, w)
            }

            function I(e) {
                return Number((0, l.BB)(e, v))
            }

            function O(e) {
                let t = (0, l.mL)(e, E),
                    r = t.slice(0, 1);
                if (1 === I(r)) {
                    let e = t.slice(1, 33),
                        n = t.slice(33, 45);
                    return {
                        type: r,
                        sealed: t.slice(45),
                        iv: n,
                        senderPublicKey: e
                    }
                }
                let n = t.slice(1, 13);
                return {
                    type: r,
                    sealed: t.slice(13),
                    iv: n
                }
            }

            function T(e) {
                let t = e ? .type || 0;
                if (1 === t) {
                    if (typeof e ? .senderPublicKey > "u") throw Error("missing sender public key");
                    if (typeof e ? .receiverPublicKey > "u") throw Error("missing receiver public key")
                }
                return {
                    type: t,
                    senderPublicKey: e ? .senderPublicKey,
                    receiverPublicKey: e ? .receiverPublicKey
                }
            }

            function A(e) {
                return 1 === e.type && "string" == typeof e.senderPublicKey && "string" == typeof e.receiverPublicKey
            }
            var S = Object.defineProperty,
                j = Object.getOwnPropertySymbols,
                R = Object.prototype.hasOwnProperty,
                C = Object.prototype.propertyIsEnumerable,
                N = (e, t, r) => t in e ? S(e, t, {
                    enumerable: !0,
                    configurable: !0,
                    writable: !0,
                    value: r
                }) : e[t] = r,
                M = (e, t) => {
                    for (var r in t || (t = {})) R.call(t, r) && N(e, r, t[r]);
                    if (j)
                        for (var r of j(t)) C.call(t, r) && N(e, r, t[r]);
                    return e
                };
            let B = {
                reactNative: "react-native",
                node: "node",
                browser: "browser",
                unknown: "unknown"
            };

            function k() {
                return "u" > typeof b && "u" > typeof b.versions && "u" > typeof b.versions.node
            }

            function D() {
                return !(0, f.getDocument)() && !!(0, f.getNavigator)() && "ReactNative" === navigator.product
            }

            function U() {
                return !k() && !!(0, f.getNavigator)() && !!(0, f.getDocument)()
            }

            function L() {
                return D() ? B.reactNative : k() ? B.node : U() ? B.browser : B.unknown
            }

            function F(e, t) {
                return e.filter(e => t.includes(e)).length === e.length
            }

            function q(e) {
                return Object.fromEntries(e.entries())
            }

            function H(e) {
                return new Map(Object.entries(e))
            }

            function $(e = h.FIVE_MINUTES, t) {
                let r, n, i;
                let o = (0, h.toMiliseconds)(e || h.FIVE_MINUTES);
                return {
                    resolve: e => {
                        i && r && (clearTimeout(i), r(e))
                    },
                    reject: e => {
                        i && n && (clearTimeout(i), n(e))
                    },
                    done: () => new Promise((e, s) => {
                        i = setTimeout(() => {
                            s(Error(t))
                        }, o), r = e, n = s
                    })
                }
            }

            function z(e, t, r) {
                return new Promise(async (n, i) => {
                    let o = setTimeout(() => i(Error(r)), t);
                    try {
                        let t = await e;
                        n(t)
                    } catch (e) {
                        i(e)
                    }
                    clearTimeout(o)
                })
            }

            function V(e, t) {
                if ("string" == typeof t && t.startsWith(`${e}:`)) return t;
                if ("topic" === e.toLowerCase()) {
                    if ("string" != typeof t) throw Error('Value must be "string" for expirer target type: topic');
                    return `topic:${t}`
                }
                if ("id" === e.toLowerCase()) {
                    if ("number" != typeof t) throw Error('Value must be "number" for expirer target type: id');
                    return `id:${t}`
                }
                throw Error(`Unknown expirer target type: ${e}`)
            }

            function G(e) {
                let [t, r] = e.split(":"), n = {
                    id: void 0,
                    topic: void 0
                };
                if ("topic" === t && "string" == typeof r) n.topic = r;
                else if ("id" === t && Number.isInteger(Number(r))) n.id = Number(r);
                else throw Error(`Invalid target, expected id:number or topic:string, got ${t}:${r}`);
                return n
            }

            function W(e, t) {
                return (0, h.fromMiliseconds)((t || Date.now()) + (0, h.toMiliseconds)(e))
            }

            function K(e) {
                return Date.now() >= (0, h.toMiliseconds)(e)
            }

            function J(e, t) {
                return `${e}${t?`:${t}`:""}`
            }

            function Y(e = [], t = []) {
                return [...new Set([...e, ...t])]
            }
            async function Z({
                id: e,
                topic: t,
                wcDeepLink: n
            }) {
                try {
                    if (!n) return;
                    let i = "string" == typeof n ? JSON.parse(n) : n,
                        o = i ? .href;
                    if ("string" != typeof o) return;
                    o.endsWith("/") && (o = o.slice(0, -1));
                    let s = `${o}/wc?requestId=${e}&sessionTopic=${t}`,
                        a = L();
                    a === B.browser ? s.startsWith("https://") ? window.open(s, "_blank", "noreferrer noopener") : window.open(s, "_self", "noreferrer noopener") : a === B.reactNative && "u" > typeof(null == r.g ? void 0 : r.g.Linking) && await r.g.Linking.openURL(s)
                } catch (e) {
                    console.error(e)
                }
            }
            async function Q(e, t) {
                try {
                    return await e.getItem(t) || (U() ? localStorage.getItem(t) : void 0)
                } catch (e) {
                    console.error(e)
                }
            }

            function X(e) {
                return e ? .relay || {
                    protocol: "irn"
                }
            }

            function ee(e) {
                let t = m[e];
                if (typeof t > "u") throw Error(`Relay Protocol not supported: ${e}`);
                return t
            }
            var et = Object.defineProperty,
                er = Object.getOwnPropertySymbols,
                en = Object.prototype.hasOwnProperty,
                ei = Object.prototype.propertyIsEnumerable,
                eo = (e, t, r) => t in e ? et(e, t, {
                    enumerable: !0,
                    configurable: !0,
                    writable: !0,
                    value: r
                }) : e[t] = r,
                es = (e, t) => {
                    for (var r in t || (t = {})) en.call(t, r) && eo(e, r, t[r]);
                    if (er)
                        for (var r of er(t)) ei.call(t, r) && eo(e, r, t[r]);
                    return e
                };

            function ea(e) {
                var t;
                let r = (e = (e = e.includes("wc://") ? e.replace("wc://", "") : e).includes("wc:") ? e.replace("wc:", "") : e).indexOf(":"),
                    n = -1 !== e.indexOf("?") ? e.indexOf("?") : void 0,
                    i = e.substring(0, r),
                    o = e.substring(r + 1, n).split("@"),
                    s = "u" > typeof n ? e.substring(n) : "",
                    a = g.parse(s);
                return {
                    protocol: i,
                    topic: (t = o[0]).startsWith("//") ? t.substring(2) : t,
                    version: parseInt(o[1], 10),
                    symKey: a.symKey,
                    relay: function(e, t = "-") {
                        let r = {},
                            n = "relay" + t;
                        return Object.keys(e).forEach(t => {
                            if (t.startsWith(n)) {
                                let i = t.replace(n, ""),
                                    o = e[t];
                                r[i] = o
                            }
                        }), r
                    }(a)
                }
            }
            var ec = Object.defineProperty,
                eu = Object.defineProperties,
                el = Object.getOwnPropertyDescriptors,
                ed = Object.getOwnPropertySymbols,
                eh = Object.prototype.hasOwnProperty,
                ef = Object.prototype.propertyIsEnumerable,
                ep = (e, t, r) => t in e ? ec(e, t, {
                    enumerable: !0,
                    configurable: !0,
                    writable: !0,
                    value: r
                }) : e[t] = r;

            function eg(e) {
                let t = [];
                return e.forEach(e => {
                    let [r, n] = e.split(":");
                    t.push(`${r}:${n}`)
                }), t
            }

            function em(e) {
                return e.includes(":")
            }

            function eb(e) {
                return em(e) ? e.split(":")[0] : e
            }
            let ey = {
                    INVALID_METHOD: {
                        message: "Invalid method.",
                        code: 1001
                    },
                    INVALID_EVENT: {
                        message: "Invalid event.",
                        code: 1002
                    },
                    INVALID_UPDATE_REQUEST: {
                        message: "Invalid update request.",
                        code: 1003
                    },
                    INVALID_EXTEND_REQUEST: {
                        message: "Invalid extend request.",
                        code: 1004
                    },
                    INVALID_SESSION_SETTLE_REQUEST: {
                        message: "Invalid session settle request.",
                        code: 1005
                    },
                    UNAUTHORIZED_METHOD: {
                        message: "Unauthorized method.",
                        code: 3001
                    },
                    UNAUTHORIZED_EVENT: {
                        message: "Unauthorized event.",
                        code: 3002
                    },
                    UNAUTHORIZED_UPDATE_REQUEST: {
                        message: "Unauthorized update request.",
                        code: 3003
                    },
                    UNAUTHORIZED_EXTEND_REQUEST: {
                        message: "Unauthorized extend request.",
                        code: 3004
                    },
                    USER_REJECTED: {
                        message: "User rejected.",
                        code: 5e3
                    },
                    USER_REJECTED_CHAINS: {
                        message: "User rejected chains.",
                        code: 5001
                    },
                    USER_REJECTED_METHODS: {
                        message: "User rejected methods.",
                        code: 5002
                    },
                    USER_REJECTED_EVENTS: {
                        message: "User rejected events.",
                        code: 5003
                    },
                    UNSUPPORTED_CHAINS: {
                        message: "Unsupported chains.",
                        code: 5100
                    },
                    UNSUPPORTED_METHODS: {
                        message: "Unsupported methods.",
                        code: 5101
                    },
                    UNSUPPORTED_EVENTS: {
                        message: "Unsupported events.",
                        code: 5102
                    },
                    UNSUPPORTED_ACCOUNTS: {
                        message: "Unsupported accounts.",
                        code: 5103
                    },
                    UNSUPPORTED_NAMESPACE_KEY: {
                        message: "Unsupported namespace key.",
                        code: 5104
                    },
                    USER_DISCONNECTED: {
                        message: "User disconnected.",
                        code: 6e3
                    },
                    SESSION_SETTLEMENT_FAILED: {
                        message: "Session settlement failed.",
                        code: 7e3
                    },
                    WC_METHOD_UNSUPPORTED: {
                        message: "Unsupported wc_ method.",
                        code: 10001
                    }
                },
                ev = {
                    NOT_INITIALIZED: {
                        message: "Not initialized.",
                        code: 1
                    },
                    NO_MATCHING_KEY: {
                        message: "No matching key.",
                        code: 2
                    },
                    RESTORE_WILL_OVERRIDE: {
                        message: "Restore will override.",
                        code: 3
                    },
                    RESUBSCRIBED: {
                        message: "Resubscribed.",
                        code: 4
                    },
                    MISSING_OR_INVALID: {
                        message: "Missing or invalid.",
                        code: 5
                    },
                    EXPIRED: {
                        message: "Expired.",
                        code: 6
                    },
                    UNKNOWN_TYPE: {
                        message: "Unknown type.",
                        code: 7
                    },
                    MISMATCHED_TOPIC: {
                        message: "Mismatched topic.",
                        code: 8
                    },
                    NON_CONFORMING_NAMESPACES: {
                        message: "Non conforming namespaces.",
                        code: 9
                    }
                };

            function ew(e, t) {
                let {
                    message: r,
                    code: n
                } = ev[e];
                return {
                    message: t ? `${r} ${t}` : r,
                    code: n
                }
            }

            function eE(e, t) {
                let {
                    message: r,
                    code: n
                } = ey[e];
                return {
                    message: t ? `${r} ${t}` : r,
                    code: n
                }
            }

            function e_(e, t) {
                return !!Array.isArray(e) && (!("u" > typeof t) || !e.length || e.every(t))
            }

            function eP(e) {
                return Object.getPrototypeOf(e) === Object.prototype && Object.keys(e).length
            }

            function ex(e) {
                return typeof e > "u"
            }

            function eI(e, t) {
                return !!(t && ex(e)) || "string" == typeof e && !!e.trim().length
            }

            function eO(e, t) {
                return !!(t && ex(e)) || "number" == typeof e && !isNaN(e)
            }

            function eT(e) {
                return !!(eI(e, !1) && e.includes(":")) && 2 === e.split(":").length
            }

            function eA(e) {
                let t = !0;
                return e_(e) ? e.length && (t = e.every(e => eI(e, !1))) : t = !1, t
            }

            function eS(e, t) {
                let r = null;
                return Object.values(e).forEach(e => {
                    var n;
                    let i;
                    if (r) return;
                    let o = (n = `${t}, namespace`, i = null, eA(e ? .methods) ? eA(e ? .events) || (i = eE("UNSUPPORTED_EVENTS", `${n}, events should be an array of strings or empty array for no events`)) : i = eE("UNSUPPORTED_METHODS", `${n}, methods should be an array of strings or empty array for no methods`), i);
                    o && (r = o)
                }), r
            }

            function ej(e, t) {
                let r = null;
                if (e && eP(e)) {
                    let n;
                    let i = eS(e, t);
                    i && (r = i);
                    let o = (n = null, Object.values(e).forEach(e => {
                        var r, i;
                        let o;
                        if (n) return;
                        let s = (r = e ? .accounts, i = `${t} namespace`, o = null, e_(r) ? r.forEach(e => {
                            o || function(e) {
                                if (eI(e, !1) && e.includes(":")) {
                                    let t = e.split(":");
                                    if (3 === t.length) {
                                        let e = t[0] + ":" + t[1];
                                        return !!t[2] && eT(e)
                                    }
                                }
                                return !1
                            }(e) || (o = eE("UNSUPPORTED_ACCOUNTS", `${i}, account ${e} should be a string and conform to "namespace:chainId:address" format`))
                        }) : o = eE("UNSUPPORTED_ACCOUNTS", `${i}, accounts should be an array of strings conforming to "namespace:chainId:address" format`), o);
                        s && (n = s)
                    }), n);
                    o && (r = o)
                } else r = ew("MISSING_OR_INVALID", `${t}, namespaces should be an object with data`);
                return r
            }

            function eR(e) {
                return eI(e.protocol, !0)
            }

            function eC(e) {
                return "u" > typeof e
            }

            function eN(e, t) {
                return !(!eT(t) || !(function(e) {
                    let t = [];
                    return Object.values(e).forEach(e => {
                        t.push(...eg(e.accounts))
                    }), t
                })(e).includes(t))
            }

            function eM(e, t, r) {
                let n = null,
                    i = function(e) {
                        let t = {};
                        return Object.keys(e).forEach(r => {
                            var n;
                            r.includes(":") ? t[r] = e[r] : null == (n = e[r].chains) || n.forEach(n => {
                                t[n] = {
                                    methods: e[r].methods,
                                    events: e[r].events
                                }
                            })
                        }), t
                    }(e),
                    o = function(e) {
                        let t = {};
                        return Object.keys(e).forEach(r => {
                            if (r.includes(":")) t[r] = e[r];
                            else {
                                let n = eg(e[r].accounts);
                                n ? .forEach(n => {
                                    t[n] = {
                                        accounts: e[r].accounts.filter(e => e.includes(`${n}:`)),
                                        methods: e[r].methods,
                                        events: e[r].events
                                    }
                                })
                            }
                        }), t
                    }(t),
                    s = Object.keys(i),
                    a = Object.keys(o),
                    c = eB(Object.keys(e)),
                    u = eB(Object.keys(t)),
                    l = c.filter(e => !u.includes(e));
                return l.length && (n = ew("NON_CONFORMING_NAMESPACES", `${r} namespaces keys don't satisfy requiredNamespaces.
      Required: ${l.toString()}
      Received: ${Object.keys(t).toString()}`)), F(s, a) || (n = ew("NON_CONFORMING_NAMESPACES", `${r} namespaces chains don't satisfy required namespaces.
      Required: ${s.toString()}
      Approved: ${a.toString()}`)), Object.keys(t).forEach(e => {
                    if (!e.includes(":") || n) return;
                    let i = eg(t[e].accounts);
                    i.includes(e) || (n = ew("NON_CONFORMING_NAMESPACES", `${r} namespaces accounts don't satisfy namespace accounts for ${e}
        Required: ${e}
        Approved: ${i.toString()}`))
                }), s.forEach(e => {
                    n || (F(i[e].methods, o[e].methods) ? F(i[e].events, o[e].events) || (n = ew("NON_CONFORMING_NAMESPACES", `${r} namespaces events don't satisfy namespace events for ${e}`)) : n = ew("NON_CONFORMING_NAMESPACES", `${r} namespaces methods don't satisfy namespace methods for ${e}`))
                }), n
            }

            function eB(e) {
                return [...new Set(e.map(e => e.includes(":") ? e.split(":")[0] : e))]
            }

            function ek() {
                let e = L();
                return new Promise(t => {
                    switch (e) {
                        case B.browser:
                            t(U() && navigator ? .onLine);
                            break;
                        case B.reactNative:
                            t(eD());
                            break;
                        case B.node:
                        default:
                            t(!0)
                    }
                })
            }
            async function eD() {
                if (D() && "u" > typeof r.g && null != r.g && r.g.NetInfo) {
                    let e = await (null == r.g ? void 0 : r.g.NetInfo.fetch());
                    return e ? .isConnected
                }
                return !0
            }
            let eU = {},
                eL = class {
                    static get(e) {
                        return eU[e]
                    }
                    static set(e, t) {
                        eU[e] = t
                    }
                    static delete(e) {
                        delete eU[e]
                    }
                };
            var eF = r(25221),
                eq = r(65364),
                eH = r(63893),
                e$ = (e = {}) => {
                    let t;
                    let r = e.base && e.base.length > 0 ? `${e.base}:` : "",
                        n = e => r + e;
                    return e.dbName && e.storeName && (t = (0, eq.MT)(e.dbName, e.storeName)), {
                        name: "idb-keyval",
                        options: e,
                        hasItem: async e => !(typeof await (0, eq.U2)(n(e), t) > "u"),
                        getItem: async e => await (0, eq.U2)(n(e), t) ? ? null,
                        setItem: (e, r) => (0, eq.t8)(n(e), r, t),
                        removeItem: e => (0, eq.IV)(n(e), t),
                        getKeys: () => (0, eq.XP)(t),
                        clear: () => (0, eq.ZH)(t)
                    }
                };
            let ez = class {
                async getKeys() {
                    return this.indexedDb.getKeys()
                }
                async getEntries() {
                    return (await this.indexedDb.getItems(await this.indexedDb.getKeys())).map(e => [e.key, e.value])
                }
                async getItem(e) {
                    let t = await this.indexedDb.getItem(e);
                    if (null !== t) return t
                }
                async setItem(e, t) {
                    await this.indexedDb.setItem(e, (0, eH.u)(t))
                }
                async removeItem(e) {
                    await this.indexedDb.removeItem(e)
                }
                constructor() {
                    this.indexedDb = (0, eF.o6)({
                        driver: e$({
                            dbName: "WALLET_CONNECT_V2_INDEXED_DB",
                            storeName: "keyvaluestorage"
                        })
                    })
                }
            };
            var eV = "u" > typeof globalThis ? globalThis : "u" > typeof window ? window : "u" > typeof r.g ? r.g : "u" > typeof self ? self : {},
                eG = {
                    exports: {}
                };

            function eW(e) {
                var t;
                return [e[0], (0, eH.D)(null != (t = e[1]) ? t : "")]
            }! function() {
                function e() {}
                e.prototype.getItem = function(e) {
                    return this.hasOwnProperty(e) ? String(this[e]) : null
                }, e.prototype.setItem = function(e, t) {
                    this[e] = String(t)
                }, e.prototype.removeItem = function(e) {
                    delete this[e]
                }, e.prototype.clear = function() {
                    let e = this;
                    Object.keys(e).forEach(function(t) {
                        e[t] = void 0, delete e[t]
                    })
                }, e.prototype.key = function(e) {
                    return e = e || 0, Object.keys(this)[e]
                }, e.prototype.__defineGetter__("length", function() {
                    return Object.keys(this).length
                }), "u" > typeof eV && eV.localStorage ? eG.exports = eV.localStorage : "u" > typeof window && window.localStorage ? eG.exports = window.localStorage : eG.exports = new e
            }();
            let eK = class {
                    async getKeys() {
                        return Object.keys(this.localStorage)
                    }
                    async getEntries() {
                        return Object.entries(this.localStorage).map(eW)
                    }
                    async getItem(e) {
                        let t = this.localStorage.getItem(e);
                        if (null !== t) return (0, eH.D)(t)
                    }
                    async setItem(e, t) {
                        this.localStorage.setItem(e, (0, eH.u)(t))
                    }
                    async removeItem(e) {
                        this.localStorage.removeItem(e)
                    }
                    constructor() {
                        this.localStorage = eG.exports
                    }
                },
                eJ = async (e, t, r) => {
                    let n = "wc_storage_version",
                        i = await t.getItem(n);
                    if (i && i >= 1) {
                        r(t);
                        return
                    }
                    let o = await e.getKeys();
                    if (!o.length) {
                        r(t);
                        return
                    }
                    let s = [];
                    for (; o.length;) {
                        let r = o.shift();
                        if (!r) continue;
                        let n = r.toLowerCase();
                        if (n.includes("wc@") || n.includes("walletconnect") || n.includes("wc_") || n.includes("wallet_connect")) {
                            let n = await e.getItem(r);
                            await t.setItem(r, n), s.push(r)
                        }
                    }
                    await t.setItem(n, 1), r(t), eY(e, s)
                },
                eY = async (e, t) => {
                    t.length && t.forEach(async t => {
                        await e.removeItem(t)
                    })
                },
                eZ = class {
                    async getKeys() {
                        return await this.initialize(), this.storage.getKeys()
                    }
                    async getEntries() {
                        return await this.initialize(), this.storage.getEntries()
                    }
                    async getItem(e) {
                        return await this.initialize(), this.storage.getItem(e)
                    }
                    async setItem(e, t) {
                        return await this.initialize(), this.storage.setItem(e, t)
                    }
                    async removeItem(e) {
                        return await this.initialize(), this.storage.removeItem(e)
                    }
                    async initialize() {
                        this.initialized || await new Promise(e => {
                            let t = setInterval(() => {
                                this.initialized && (clearInterval(t), e())
                            }, 20)
                        })
                    }
                    constructor() {
                        this.initialized = !1, this.setInitialized = e => {
                            this.storage = e, this.initialized = !0
                        };
                        let e = new eK;
                        this.storage = e;
                        try {
                            let t = new ez;
                            eJ(e, t, this.setInitialized)
                        } catch {
                            this.initialized = !0
                        }
                    }
                };
            var eQ = r(46229),
                eX = r(80314),
                e0 = r(58976);
            let e1 = class extends e0.q {
                    constructor(e) {
                        super(), this.opts = e, this.protocol = "wc", this.version = 2
                    }
                },
                e2 = class extends e0.q {
                    constructor(e, t) {
                        super(), this.core = e, this.logger = t, this.records = new Map
                    }
                },
                e6 = class {
                    constructor(e, t) {
                        this.logger = e, this.core = t
                    }
                },
                e5 = class extends e0.q {
                    constructor(e, t) {
                        super(), this.relayer = e, this.logger = t
                    }
                },
                e3 = class extends e0.q {
                    constructor(e) {
                        super()
                    }
                },
                e8 = class {
                    constructor(e, t, r, n) {
                        this.core = e, this.logger = t, this.name = r
                    }
                },
                e4 = class extends e0.q {
                    constructor(e, t) {
                        super(), this.relayer = e, this.logger = t
                    }
                },
                e9 = class extends e0.q {
                    constructor(e, t) {
                        super(), this.core = e, this.logger = t
                    }
                },
                e7 = class {
                    constructor(e, t) {
                        this.projectId = e, this.logger = t
                    }
                },
                te = class {
                    constructor(e, t) {
                        this.projectId = e, this.logger = t
                    }
                },
                tt = class {
                    constructor(e) {
                        this.opts = e, this.protocol = "wc", this.version = 2
                    }
                },
                tr = class {
                    constructor(e) {
                        this.client = e
                    }
                };
            var tn = r(76518);
            let ti = "base64url",
                to = "base58btc";
            var ts = r(45834),
                ta = r(77001),
                tc = r(14575);

            function tu(e) {
                return (0, ta.toString)((0, tc.fromString)((0, eH.u)(e), "utf8"), ti)
            }

            function tl(e) {
                let t = (0, tc.fromString)("K36", to);
                return ["did", "key", "z" + (0, ta.toString)((0, ts.concat)([t, e]), to)].join(":")
            }

            function td(e = (0, a.randomBytes)(32)) {
                return tn._w(e)
            }
            async function th(e, t, r, n, i = (0, h.fromMiliseconds)(Date.now())) {
                var o, s, a;
                let c = {
                        alg: "EdDSA",
                        typ: "JWT"
                    },
                    u = {
                        iss: tl(n.publicKey),
                        sub: e,
                        aud: t,
                        iat: i,
                        exp: i + r
                    },
                    l = (o = {
                        header: c,
                        payload: u
                    }, (0, tc.fromString)([tu(o.header), tu(o.payload)].join("."), "utf8"));
                return [tu((s = {
                    header: c,
                    payload: u,
                    signature: tn.Xx(n.secretKey, l)
                }).header), tu(s.payload), (a = s.signature, (0, ta.toString)(a, ti))].join(".")
            }
            r(49152);
            var tf = r(39468),
                tp = r(43621);
            let tg = () => "u" > typeof WebSocket || "u" > typeof r.g && "u" > typeof r.g.WebSocket || "u" > typeof window && "u" > typeof window.WebSocket || "u" > typeof self && "u" > typeof self.WebSocket,
                tm = e => e.split("?")[0],
                tb = "u" > typeof WebSocket ? WebSocket : "u" > typeof r.g && "u" > typeof r.g.WebSocket ? r.g.WebSocket : "u" > typeof window && "u" > typeof window.WebSocket ? window.WebSocket : "u" > typeof self && "u" > typeof self.WebSocket ? self.WebSocket : r(43377),
                ty = class {
                    get connected() {
                        return "u" > typeof this.socket
                    }
                    get connecting() {
                        return this.registering
                    }
                    on(e, t) {
                        this.events.on(e, t)
                    }
                    once(e, t) {
                        this.events.once(e, t)
                    }
                    off(e, t) {
                        this.events.off(e, t)
                    }
                    removeListener(e, t) {
                        this.events.removeListener(e, t)
                    }
                    async open(e = this.url) {
                        await this.register(e)
                    }
                    async close() {
                        return new Promise((e, t) => {
                            if (typeof this.socket > "u") {
                                t(Error("Connection already closed"));
                                return
                            }
                            this.socket.onclose = t => {
                                this.onClose(t), e()
                            }, this.socket.close()
                        })
                    }
                    async send(e) {
                        typeof this.socket > "u" && (this.socket = await this.register());
                        try {
                            this.socket.send((0, eH.u)(e))
                        } catch (t) {
                            this.onError(e.id, t)
                        }
                    }
                    register(e = this.url) {
                        if (!(0, tp.isWsUrl)(e)) throw Error(`Provided URL is not compatible with WebSocket connection: ${e}`);
                        if (this.registering) {
                            let e = this.events.getMaxListeners();
                            return (this.events.listenerCount("register_error") >= e || this.events.listenerCount("open") >= e) && this.events.setMaxListeners(e + 1), new Promise((e, t) => {
                                this.events.once("register_error", e => {
                                    this.resetMaxListeners(), t(e)
                                }), this.events.once("open", () => {
                                    if (this.resetMaxListeners(), typeof this.socket > "u") return t(Error("WebSocket connection is missing or invalid"));
                                    e(this.socket)
                                })
                            })
                        }
                        return this.url = e, this.registering = !0, new Promise((t, r) => {
                            let n = new URLSearchParams(e).get("origin"),
                                i = (0, tp.isReactNative)() ? {
                                    headers: {
                                        origin: n
                                    }
                                } : {
                                    rejectUnauthorized: !(0, tp.isLocalhostUrl)(e)
                                },
                                o = new tb(e, [], i);
                            tg() ? o.onerror = e => {
                                r(this.emitError(e.error))
                            } : o.on("error", e => {
                                r(this.emitError(e))
                            }), o.onopen = () => {
                                this.onOpen(o), t(o)
                            }
                        })
                    }
                    onOpen(e) {
                        e.onmessage = e => this.onPayload(e), e.onclose = e => this.onClose(e), this.socket = e, this.registering = !1, this.events.emit("open")
                    }
                    onClose(e) {
                        this.socket = void 0, this.registering = !1, this.events.emit("close", e)
                    }
                    onPayload(e) {
                        if (typeof e.data > "u") return;
                        let t = "string" == typeof e.data ? (0, eH.D)(e.data) : e.data;
                        this.events.emit("payload", t)
                    }
                    onError(e, t) {
                        let r = this.parseError(t),
                            n = r.message || r.toString(),
                            i = (0, tp.formatJsonRpcError)(e, n);
                        this.events.emit("payload", i)
                    }
                    parseError(e, t = this.url) {
                        return (0, tp.parseConnectionError)(e, tm(t), "WS")
                    }
                    resetMaxListeners() {
                        this.events.getMaxListeners() > 10 && this.events.setMaxListeners(10)
                    }
                    emitError(e) {
                        let t = this.parseError(Error(e ? .message || `WebSocket connection failed for host: ${tm(this.url)}`));
                        return this.events.emit("register_error", t), t
                    }
                    constructor(e) {
                        if (this.url = e, this.events = new n.EventEmitter, this.registering = !1, !(0, tp.isWsUrl)(e)) throw Error(`Provided URL is not compatible with WebSocket connection: ${e}`);
                        this.url = e
                    }
                };
            var tv = r(60989),
                tw = r.n(tv),
                tE = r(1794),
                t_ = r.n(tE),
                tP = function(e, t) {
                    if (e.length >= 255) throw TypeError("Alphabet too long");
                    for (var r = new Uint8Array(256), n = 0; n < r.length; n++) r[n] = 255;
                    for (var i = 0; i < e.length; i++) {
                        var o = e.charAt(i),
                            s = o.charCodeAt(0);
                        if (255 !== r[s]) throw TypeError(o + " is ambiguous");
                        r[s] = i
                    }
                    var a = e.length,
                        c = e.charAt(0),
                        u = Math.log(a) / Math.log(256),
                        l = Math.log(256) / Math.log(a);

                    function d(e) {
                        if ("string" != typeof e) throw TypeError("Expected String");
                        if (0 === e.length) return new Uint8Array;
                        var t = 0;
                        if (" " !== e[0]) {
                            for (var n = 0, i = 0; e[t] === c;) n++, t++;
                            for (var o = (e.length - t) * u + 1 >>> 0, s = new Uint8Array(o); e[t];) {
                                var l = r[e.charCodeAt(t)];
                                if (255 === l) return;
                                for (var d = 0, h = o - 1;
                                    (0 !== l || d < i) && -1 !== h; h--, d++) l += a * s[h] >>> 0, s[h] = l % 256 >>> 0, l = l / 256 >>> 0;
                                if (0 !== l) throw Error("Non-zero carry");
                                i = d, t++
                            }
                            if (" " !== e[t]) {
                                for (var f = o - i; f !== o && 0 === s[f];) f++;
                                for (var p = new Uint8Array(n + (o - f)), g = n; f !== o;) p[g++] = s[f++];
                                return p
                            }
                        }
                    }
                    return {
                        encode: function(t) {
                            if (t instanceof Uint8Array || (ArrayBuffer.isView(t) ? t = new Uint8Array(t.buffer, t.byteOffset, t.byteLength) : Array.isArray(t) && (t = Uint8Array.from(t))), !(t instanceof Uint8Array)) throw TypeError("Expected Uint8Array");
                            if (0 === t.length) return "";
                            for (var r = 0, n = 0, i = 0, o = t.length; i !== o && 0 === t[i];) i++, r++;
                            for (var s = (o - i) * l + 1 >>> 0, u = new Uint8Array(s); i !== o;) {
                                for (var d = t[i], h = 0, f = s - 1;
                                    (0 !== d || h < n) && -1 !== f; f--, h++) d += 256 * u[f] >>> 0, u[f] = d % a >>> 0, d = d / a >>> 0;
                                if (0 !== d) throw Error("Non-zero carry");
                                n = h, i++
                            }
                            for (var p = s - n; p !== s && 0 === u[p];) p++;
                            for (var g = c.repeat(r); p < s; ++p) g += e.charAt(u[p]);
                            return g
                        },
                        decodeUnsafe: d,
                        decode: function(e) {
                            var r = d(e);
                            if (r) return r;
                            throw Error(`Non-${t} character`)
                        }
                    }
                };
            let tx = e => {
                    if (e instanceof Uint8Array && "Uint8Array" === e.constructor.name) return e;
                    if (e instanceof ArrayBuffer) return new Uint8Array(e);
                    if (ArrayBuffer.isView(e)) return new Uint8Array(e.buffer, e.byteOffset, e.byteLength);
                    throw Error("Unknown type, must be binary type")
                },
                tI = e => new TextEncoder().encode(e),
                tO = e => new TextDecoder().decode(e),
                tT = class {
                    encode(e) {
                        if (e instanceof Uint8Array) return `${this.prefix}${this.baseEncode(e)}`;
                        throw Error("Unknown type, must be binary type")
                    }
                    constructor(e, t, r) {
                        this.name = e, this.prefix = t, this.baseEncode = r
                    }
                },
                tA = class {
                    decode(e) {
                        if ("string" == typeof e) {
                            if (e.codePointAt(0) !== this.prefixCodePoint) throw Error(`Unable to decode multibase string ${JSON.stringify(e)}, ${this.name} decoder only supports inputs prefixed with ${this.prefix}`);
                            return this.baseDecode(e.slice(this.prefix.length))
                        }
                        throw Error("Can only multibase decode strings")
                    }
                    or(e) {
                        return tj(this, e)
                    }
                    constructor(e, t, r) {
                        if (this.name = e, this.prefix = t, void 0 === t.codePointAt(0)) throw Error("Invalid prefix character");
                        this.prefixCodePoint = t.codePointAt(0), this.baseDecode = r
                    }
                },
                tS = class {
                    or(e) {
                        return tj(this, e)
                    }
                    decode(e) {
                        let t = e[0],
                            r = this.decoders[t];
                        if (r) return r.decode(e);
                        throw RangeError(`Unable to decode multibase string ${JSON.stringify(e)}, only inputs prefixed with ${Object.keys(this.decoders)} are supported`)
                    }
                    constructor(e) {
                        this.decoders = e
                    }
                },
                tj = (e, t) => new tS({ ...e.decoders || {
                        [e.prefix]: e
                    },
                    ...t.decoders || {
                        [t.prefix]: t
                    }
                }),
                tR = class {
                    encode(e) {
                        return this.encoder.encode(e)
                    }
                    decode(e) {
                        return this.decoder.decode(e)
                    }
                    constructor(e, t, r, n) {
                        this.name = e, this.prefix = t, this.baseEncode = r, this.baseDecode = n, this.encoder = new tT(e, t, r), this.decoder = new tA(e, t, n)
                    }
                },
                tC = ({
                    name: e,
                    prefix: t,
                    encode: r,
                    decode: n
                }) => new tR(e, t, r, n),
                tN = ({
                    prefix: e,
                    name: t,
                    alphabet: r
                }) => {
                    let {
                        encode: n,
                        decode: i
                    } = tP(r, t);
                    return tC({
                        prefix: e,
                        name: t,
                        encode: n,
                        decode: e => tx(i(e))
                    })
                },
                tM = (e, t, r, n) => {
                    let i = {};
                    for (let e = 0; e < t.length; ++e) i[t[e]] = e;
                    let o = e.length;
                    for (;
                        "=" === e[o - 1];) --o;
                    let s = new Uint8Array(o * r / 8 | 0),
                        a = 0,
                        c = 0,
                        u = 0;
                    for (let t = 0; t < o; ++t) {
                        let o = i[e[t]];
                        if (void 0 === o) throw SyntaxError(`Non-${n} character`);
                        c = c << r | o, (a += r) >= 8 && (a -= 8, s[u++] = 255 & c >> a)
                    }
                    if (a >= r || 255 & c << 8 - a) throw SyntaxError("Unexpected end of data");
                    return s
                },
                tB = (e, t, r) => {
                    let n = "=" === t[t.length - 1],
                        i = (1 << r) - 1,
                        o = "",
                        s = 0,
                        a = 0;
                    for (let n = 0; n < e.length; ++n)
                        for (a = a << 8 | e[n], s += 8; s > r;) s -= r, o += t[i & a >> s];
                    if (s && (o += t[i & a << r - s]), n)
                        for (; o.length * r & 7;) o += "=";
                    return o
                },
                tk = ({
                    name: e,
                    prefix: t,
                    bitsPerChar: r,
                    alphabet: n
                }) => tC({
                    prefix: t,
                    name: e,
                    encode: e => tB(e, n, r),
                    decode: t => tM(t, n, r, e)
                });
            var tD = Object.freeze({
                    __proto__: null,
                    identity: tC({
                        prefix: "\x00",
                        name: "identity",
                        encode: e => tO(e),
                        decode: e => tI(e)
                    })
                }),
                tU = Object.freeze({
                    __proto__: null,
                    base2: tk({
                        prefix: "0",
                        name: "base2",
                        alphabet: "01",
                        bitsPerChar: 1
                    })
                }),
                tL = Object.freeze({
                    __proto__: null,
                    base8: tk({
                        prefix: "7",
                        name: "base8",
                        alphabet: "01234567",
                        bitsPerChar: 3
                    })
                }),
                tF = Object.freeze({
                    __proto__: null,
                    base10: tN({
                        prefix: "9",
                        name: "base10",
                        alphabet: "0123456789"
                    })
                }),
                tq = Object.freeze({
                    __proto__: null,
                    base16: tk({
                        prefix: "f",
                        name: "base16",
                        alphabet: "0123456789abcdef",
                        bitsPerChar: 4
                    }),
                    base16upper: tk({
                        prefix: "F",
                        name: "base16upper",
                        alphabet: "0123456789ABCDEF",
                        bitsPerChar: 4
                    })
                });
            let tH = tk({
                    prefix: "b",
                    name: "base32",
                    alphabet: "abcdefghijklmnopqrstuvwxyz234567",
                    bitsPerChar: 5
                }),
                t$ = tk({
                    prefix: "B",
                    name: "base32upper",
                    alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZ234567",
                    bitsPerChar: 5
                }),
                tz = tk({
                    prefix: "c",
                    name: "base32pad",
                    alphabet: "abcdefghijklmnopqrstuvwxyz234567=",
                    bitsPerChar: 5
                }),
                tV = tk({
                    prefix: "C",
                    name: "base32padupper",
                    alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZ234567=",
                    bitsPerChar: 5
                }),
                tG = tk({
                    prefix: "v",
                    name: "base32hex",
                    alphabet: "0123456789abcdefghijklmnopqrstuv",
                    bitsPerChar: 5
                }),
                tW = tk({
                    prefix: "V",
                    name: "base32hexupper",
                    alphabet: "0123456789ABCDEFGHIJKLMNOPQRSTUV",
                    bitsPerChar: 5
                });
            var tK = Object.freeze({
                    __proto__: null,
                    base32: tH,
                    base32upper: t$,
                    base32pad: tz,
                    base32padupper: tV,
                    base32hex: tG,
                    base32hexupper: tW,
                    base32hexpad: tk({
                        prefix: "t",
                        name: "base32hexpad",
                        alphabet: "0123456789abcdefghijklmnopqrstuv=",
                        bitsPerChar: 5
                    }),
                    base32hexpadupper: tk({
                        prefix: "T",
                        name: "base32hexpadupper",
                        alphabet: "0123456789ABCDEFGHIJKLMNOPQRSTUV=",
                        bitsPerChar: 5
                    }),
                    base32z: tk({
                        prefix: "h",
                        name: "base32z",
                        alphabet: "ybndrfg8ejkmcpqxot1uwisza345h769",
                        bitsPerChar: 5
                    })
                }),
                tJ = Object.freeze({
                    __proto__: null,
                    base36: tN({
                        prefix: "k",
                        name: "base36",
                        alphabet: "0123456789abcdefghijklmnopqrstuvwxyz"
                    }),
                    base36upper: tN({
                        prefix: "K",
                        name: "base36upper",
                        alphabet: "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ"
                    })
                }),
                tY = Object.freeze({
                    __proto__: null,
                    base58btc: tN({
                        name: "base58btc",
                        prefix: "z",
                        alphabet: "123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz"
                    }),
                    base58flickr: tN({
                        name: "base58flickr",
                        prefix: "Z",
                        alphabet: "123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ"
                    })
                });
            let tZ = tk({
                prefix: "m",
                name: "base64",
                alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",
                bitsPerChar: 6
            });
            var tQ = Object.freeze({
                __proto__: null,
                base64: tZ,
                base64pad: tk({
                    prefix: "M",
                    name: "base64pad",
                    alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",
                    bitsPerChar: 6
                }),
                base64url: tk({
                    prefix: "u",
                    name: "base64url",
                    alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_",
                    bitsPerChar: 6
                }),
                base64urlpad: tk({
                    prefix: "U",
                    name: "base64urlpad",
                    alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_=",
                    bitsPerChar: 6
                })
            });
            let tX = Array.from("🚀🪐☄🛰🌌🌑🌒🌓🌔🌕🌖🌗🌘🌍🌏🌎🐉☀💻🖥💾💿😂❤😍🤣😊🙏💕😭😘👍😅👏😁🔥🥰💔💖💙😢🤔😆🙄💪😉☺👌🤗💜😔😎😇🌹🤦🎉💞✌✨🤷😱😌🌸🙌😋💗💚😏💛🙂💓🤩😄😀🖤😃💯🙈👇🎶😒🤭❣😜💋👀😪😑💥🙋😞😩😡🤪👊🥳😥🤤👉💃😳✋😚😝😴🌟😬🙃🍀🌷😻😓⭐✅🥺🌈😈🤘💦✔😣🏃💐☹🎊💘😠☝😕🌺🎂🌻😐🖕💝🙊😹🗣💫💀👑🎵🤞😛🔴😤🌼😫⚽🤙☕🏆🤫👈😮🙆🍻🍃🐶💁😲🌿🧡🎁⚡🌞🎈❌✊👋😰🤨😶🤝🚶💰🍓💢🤟🙁🚨💨🤬✈🎀🍺🤓😙💟🌱😖👶🥴▶➡❓💎💸⬇😨🌚🦋😷🕺⚠🙅😟😵👎🤲🤠🤧📌🔵💅🧐🐾🍒😗🤑🌊🤯🐷☎💧😯💆👆🎤🙇🍑❄🌴💣🐸💌📍🥀🤢👅💡💩👐📸👻🤐🤮🎼🥵🚩🍎🍊👼💍📣🥂"),
                t0 = tX.reduce((e, t, r) => (e[r] = t, e), []),
                t1 = tX.reduce((e, t, r) => (e[t.codePointAt(0)] = r, e), []);
            var t2 = Object.freeze({
                    __proto__: null,
                    base256emoji: tC({
                        prefix: "🚀",
                        name: "base256emoji",
                        encode: function(e) {
                            return e.reduce((e, t) => e += t0[t], "")
                        },
                        decode: function(e) {
                            let t = [];
                            for (let r of e) {
                                let e = t1[r.codePointAt(0)];
                                if (void 0 === e) throw Error(`Non-base256emoji character: ${r}`);
                                t.push(e)
                            }
                            return new Uint8Array(t)
                        }
                    })
                }),
                t6 = {
                    encode: function e(t, r, n) {
                        r = r || [], n = n || 0;
                        for (var i = n; t >= 2147483648;) r[n++] = 255 & t | 128, t /= 128;
                        for (; - 128 & t;) r[n++] = 255 & t | 128, t >>>= 7;
                        return r[n] = 0 | t, e.bytes = n - i + 1, r
                    },
                    decode: function e(t, r) {
                        var n, i = 0,
                            r = r || 0,
                            o = 0,
                            s = r,
                            a = t.length;
                        do {
                            if (s >= a) throw e.bytes = 0, RangeError("Could not decode varint");
                            n = t[s++], i += o < 28 ? (127 & n) << o : (127 & n) * Math.pow(2, o), o += 7
                        } while (n >= 128) return e.bytes = s - r, i
                    },
                    encodingLength: function(e) {
                        return e < 128 ? 1 : e < 16384 ? 2 : e < 2097152 ? 3 : e < 268435456 ? 4 : e < 34359738368 ? 5 : e < 4398046511104 ? 6 : e < 562949953421312 ? 7 : e < 72057594037927940 ? 8 : e < 0x7fffffffffffffff ? 9 : 10
                    }
                };
            let t5 = (e, t, r = 0) => (t6.encode(e, t, r), t),
                t3 = e => t6.encodingLength(e),
                t8 = (e, t) => {
                    let r = t.byteLength,
                        n = t3(e),
                        i = n + t3(r),
                        o = new Uint8Array(i + r);
                    return t5(e, o, 0), t5(r, o, n), o.set(t, i), new t4(e, r, t, o)
                },
                t4 = class {
                    constructor(e, t, r, n) {
                        this.code = e, this.size = t, this.digest = r, this.bytes = n
                    }
                },
                t9 = ({
                    name: e,
                    code: t,
                    encode: r
                }) => new t7(e, t, r),
                t7 = class {
                    digest(e) {
                        if (e instanceof Uint8Array) {
                            let t = this.encode(e);
                            return t instanceof Uint8Array ? t8(this.code, t) : t.then(e => t8(this.code, e))
                        }
                        throw Error("Unknown type, must be binary type")
                    }
                    constructor(e, t, r) {
                        this.name = e, this.code = t, this.encode = r
                    }
                },
                re = e => async t => new Uint8Array(await crypto.subtle.digest(e, t));
            var rt = Object.freeze({
                    __proto__: null,
                    sha256: t9({
                        name: "sha2-256",
                        code: 18,
                        encode: re("SHA-256")
                    }),
                    sha512: t9({
                        name: "sha2-512",
                        code: 19,
                        encode: re("SHA-512")
                    })
                }),
                rr = Object.freeze({
                    __proto__: null,
                    identity: {
                        code: 0,
                        name: "identity",
                        encode: tx,
                        digest: e => t8(0, tx(e))
                    }
                });
            new TextEncoder, new TextDecoder;
            let rn = { ...tD,
                ...tU,
                ...tL,
                ...tF,
                ...tq,
                ...tK,
                ...tJ,
                ...tY,
                ...tQ,
                ...t2
            };

            function ri(e) {
                return null != globalThis.Buffer ? new Uint8Array(e.buffer, e.byteOffset, e.byteLength) : e
            }

            function ro(e, t, r, n) {
                return {
                    name: e,
                    prefix: t,
                    encoder: {
                        name: e,
                        prefix: t,
                        encode: r
                    },
                    decoder: {
                        decode: n
                    }
                }
            }({ ...rt,
                ...rr
            });
            let rs = ro("utf8", "u", e => "u" + new TextDecoder("utf8").decode(e), e => new TextEncoder().encode(e.substring(1))),
                ra = ro("ascii", "a", e => {
                    let t = "a";
                    for (let r = 0; r < e.length; r++) t += String.fromCharCode(e[r]);
                    return t
                }, e => {
                    let t = function(e = 0) {
                        return null != globalThis.Buffer && null != globalThis.Buffer.allocUnsafe ? ri(globalThis.Buffer.allocUnsafe(e)) : new Uint8Array(e)
                    }((e = e.substring(1)).length);
                    for (let r = 0; r < e.length; r++) t[r] = e.charCodeAt(r);
                    return t
                }),
                rc = {
                    utf8: rs,
                    "utf-8": rs,
                    hex: rn.base16,
                    latin1: ra,
                    ascii: ra,
                    binary: ra,
                    ...rn
                },
                ru = "core",
                rl = `wc@2:${ru}:`,
                rd = {
                    logger: "error"
                },
                rh = {
                    database: ":memory:"
                },
                rf = "client_ed25519_seed",
                rp = h.ONE_DAY,
                rg = h.SIX_HOURS,
                rm = "wss://relay.walletconnect.com",
                rb = "wss://relay.walletconnect.org",
                ry = {
                    message: "relayer_message",
                    message_ack: "relayer_message_ack",
                    connect: "relayer_connect",
                    disconnect: "relayer_disconnect",
                    error: "relayer_error",
                    connection_stalled: "relayer_connection_stalled",
                    publish: "relayer_publish"
                },
                rv = {
                    payload: "payload",
                    connect: "connect",
                    disconnect: "disconnect",
                    error: "error"
                },
                rw = h.ONE_SECOND,
                rE = {
                    created: "subscription_created",
                    deleted: "subscription_deleted",
                    sync: "subscription_sync",
                    resubscribed: "subscription_resubscribed"
                },
                r_ = 1e3 * h.FIVE_SECONDS,
                rP = {
                    wc_pairingDelete: {
                        req: {
                            ttl: h.ONE_DAY,
                            prompt: !1,
                            tag: 1e3
                        },
                        res: {
                            ttl: h.ONE_DAY,
                            prompt: !1,
                            tag: 1001
                        }
                    },
                    wc_pairingPing: {
                        req: {
                            ttl: h.THIRTY_SECONDS,
                            prompt: !1,
                            tag: 1002
                        },
                        res: {
                            ttl: h.THIRTY_SECONDS,
                            prompt: !1,
                            tag: 1003
                        }
                    },
                    unregistered_method: {
                        req: {
                            ttl: h.ONE_DAY,
                            prompt: !1,
                            tag: 0
                        },
                        res: {
                            ttl: h.ONE_DAY,
                            prompt: !1,
                            tag: 0
                        }
                    }
                },
                rx = {
                    create: "pairing_create",
                    expire: "pairing_expire",
                    delete: "pairing_delete",
                    ping: "pairing_ping"
                },
                rI = {
                    created: "history_created",
                    updated: "history_updated",
                    deleted: "history_deleted",
                    sync: "history_sync"
                },
                rO = {
                    created: "expirer_created",
                    deleted: "expirer_deleted",
                    expired: "expirer_expired",
                    sync: "expirer_sync"
                },
                rT = "verify-api",
                rA = "https://verify.walletconnect.com",
                rS = "https://verify.walletconnect.org",
                rj = [rA, rS],
                rR = class {
                    get context() {
                        return (0, eX.getLoggerContext)(this.logger)
                    }
                    get storageKey() {
                        return this.storagePrefix + this.version + this.core.customStoragePrefix + "//" + this.name
                    }
                    async setKeyChain(e) {
                        await this.core.storage.setItem(this.storageKey, q(e))
                    }
                    async getKeyChain() {
                        let e = await this.core.storage.getItem(this.storageKey);
                        return "u" > typeof e ? H(e) : void 0
                    }
                    async persist() {
                        await this.setKeyChain(this.keychain)
                    }
                    isInitialized() {
                        if (!this.initialized) {
                            let {
                                message: e
                            } = ew("NOT_INITIALIZED", this.name);
                            throw Error(e)
                        }
                    }
                    constructor(e, t) {
                        this.core = e, this.logger = t, this.keychain = new Map, this.name = "keychain", this.version = "0.3", this.initialized = !1, this.storagePrefix = rl, this.init = async () => {
                            if (!this.initialized) {
                                let e = await this.getKeyChain();
                                "u" > typeof e && (this.keychain = e), this.initialized = !0
                            }
                        }, this.has = e => (this.isInitialized(), this.keychain.has(e)), this.set = async (e, t) => {
                            this.isInitialized(), this.keychain.set(e, t), await this.persist()
                        }, this.get = e => {
                            this.isInitialized();
                            let t = this.keychain.get(e);
                            if (typeof t > "u") {
                                let {
                                    message: t
                                } = ew("NO_MATCHING_KEY", `${this.name}: ${e}`);
                                throw Error(t)
                            }
                            return t
                        }, this.del = async e => {
                            this.isInitialized(), this.keychain.delete(e), await this.persist()
                        }, this.core = e, this.logger = (0, eX.generateChildLogger)(t, this.name)
                    }
                },
                rC = class {
                    get context() {
                        return (0, eX.getLoggerContext)(this.logger)
                    }
                    async setPrivateKey(e, t) {
                        return await this.keychain.set(e, t), e
                    }
                    getPrivateKey(e) {
                        return this.keychain.get(e)
                    }
                    async getClientSeed() {
                        let e = "";
                        try {
                            e = this.keychain.get(rf)
                        } catch {
                            e = P(), await this.keychain.set(rf, e)
                        }
                        return function(e, t = "utf8") {
                            let r = rc[t];
                            if (!r) throw Error(`Unsupported encoding "${t}"`);
                            return ("utf8" === t || "utf-8" === t) && null != globalThis.Buffer && null != globalThis.Buffer.from ? ri(globalThis.Buffer.from(e, "utf-8")) : r.decoder.decode(`${r.prefix}${e}`)
                        }(e, "base16")
                    }
                    getSymKey(e) {
                        return this.keychain.get(e)
                    }
                    isInitialized() {
                        if (!this.initialized) {
                            let {
                                message: e
                            } = ew("NOT_INITIALIZED", this.name);
                            throw Error(e)
                        }
                    }
                    constructor(e, t, r) {
                        this.core = e, this.logger = t, this.name = "crypto", this.initialized = !1, this.init = async () => {
                            this.initialized || (await this.keychain.init(), this.initialized = !0)
                        }, this.hasKeys = e => (this.isInitialized(), this.keychain.has(e)), this.getClientId = async () => (this.isInitialized(), tl(td(await this.getClientSeed()).publicKey)), this.generateKeyPair = () => {
                            this.isInitialized();
                            let e = function() {
                                let e = u.Au();
                                return {
                                    privateKey: (0, l.BB)(e.secretKey, w),
                                    publicKey: (0, l.BB)(e.publicKey, w)
                                }
                            }();
                            return this.setPrivateKey(e.publicKey, e.privateKey)
                        }, this.signJWT = async e => {
                            this.isInitialized();
                            let t = td(await this.getClientSeed()),
                                r = P();
                            return await th(r, e, rp, t)
                        }, this.generateSharedKey = (e, t, r) => {
                            this.isInitialized();
                            let n = function(e, t) {
                                let r = u.gi((0, l.mL)(e, w), (0, l.mL)(t, w), !0),
                                    n = new s.t(c.mE, r).expand(32);
                                return (0, l.BB)(n, w)
                            }(this.getPrivateKey(e), t);
                            return this.setSymKey(n, r)
                        }, this.setSymKey = async (e, t) => {
                            this.isInitialized();
                            let r = t || function(e) {
                                let t = (0, c.vp)((0, l.mL)(e, w));
                                return (0, l.BB)(t, w)
                            }(e);
                            return await this.keychain.set(r, e), r
                        }, this.deleteKeyPair = async e => {
                            this.isInitialized(), await this.keychain.del(e)
                        }, this.deleteSymKey = async e => {
                            this.isInitialized(), await this.keychain.del(e)
                        }, this.encode = async (e, t, r) => {
                            this.isInitialized();
                            let n = T(r),
                                i = (0, eH.u)(t);
                            if (A(n)) {
                                let t = n.senderPublicKey,
                                    r = n.receiverPublicKey;
                                e = await this.generateSharedKey(t, r)
                            }
                            let s = this.getSymKey(e),
                                {
                                    type: c,
                                    senderPublicKey: u
                                } = n;
                            return function(e) {
                                var t;
                                let r = (t = "u" > typeof e.type ? e.type : 0, (0, l.mL)(`${t}`, v));
                                if (1 === I(r) && typeof e.senderPublicKey > "u") throw Error("Missing sender public key for type 1 envelope");
                                let n = "u" > typeof e.senderPublicKey ? (0, l.mL)(e.senderPublicKey, w) : void 0,
                                    i = "u" > typeof e.iv ? (0, l.mL)(e.iv, w) : (0, a.randomBytes)(12);
                                return function(e) {
                                    if (1 === I(e.type)) {
                                        if (typeof e.senderPublicKey > "u") throw Error("Missing sender public key for type 1 envelope");
                                        return (0, l.BB)((0, l.zo)([e.type, e.senderPublicKey, e.iv, e.sealed]), E)
                                    }
                                    return (0, l.BB)((0, l.zo)([e.type, e.iv, e.sealed]), E)
                                }({
                                    type: r,
                                    sealed: new o.OK((0, l.mL)(e.symKey, w)).seal(i, (0, l.mL)(e.message, _)),
                                    iv: i,
                                    senderPublicKey: n
                                })
                            }({
                                type: c,
                                symKey: s,
                                message: i,
                                senderPublicKey: u
                            })
                        }, this.decode = async (e, t, r) => {
                            this.isInitialized();
                            let n = function(e, t) {
                                let r = O(e);
                                return T({
                                    type: I(r.type),
                                    senderPublicKey: "u" > typeof r.senderPublicKey ? (0, l.BB)(r.senderPublicKey, w) : void 0,
                                    receiverPublicKey: t ? .receiverPublicKey
                                })
                            }(t, r);
                            if (A(n)) {
                                let t = n.receiverPublicKey,
                                    r = n.senderPublicKey;
                                e = await this.generateSharedKey(t, r)
                            }
                            try {
                                let r = this.getSymKey(e),
                                    n = function(e) {
                                        let t = new o.OK((0, l.mL)(e.symKey, w)),
                                            {
                                                sealed: r,
                                                iv: n
                                            } = O(e.encoded),
                                            i = t.open(n, r);
                                        if (null === i) throw Error("Failed to decrypt");
                                        return (0, l.BB)(i, _)
                                    }({
                                        symKey: r,
                                        encoded: t
                                    });
                                return (0, eH.D)(n)
                            } catch (t) {
                                this.logger.error(`Failed to decode message from topic: '${e}', clientId: '${await this.getClientId()}'`), this.logger.error(t)
                            }
                        }, this.getPayloadType = e => I(O(e).type), this.getPayloadSenderPublicKey = e => {
                            let t = O(e);
                            return t.senderPublicKey ? (0, l.BB)(t.senderPublicKey, w) : void 0
                        }, this.core = e, this.logger = (0, eX.generateChildLogger)(t, this.name), this.keychain = r || new rR(this.core, this.logger)
                    }
                },
                rN = class extends e6 {
                    get context() {
                        return (0, eX.getLoggerContext)(this.logger)
                    }
                    get storageKey() {
                        return this.storagePrefix + this.version + this.core.customStoragePrefix + "//" + this.name
                    }
                    async setRelayerMessages(e) {
                        await this.core.storage.setItem(this.storageKey, q(e))
                    }
                    async getRelayerMessages() {
                        let e = await this.core.storage.getItem(this.storageKey);
                        return "u" > typeof e ? H(e) : void 0
                    }
                    async persist() {
                        await this.setRelayerMessages(this.messages)
                    }
                    isInitialized() {
                        if (!this.initialized) {
                            let {
                                message: e
                            } = ew("NOT_INITIALIZED", this.name);
                            throw Error(e)
                        }
                    }
                    constructor(e, t) {
                        super(e, t), this.logger = e, this.core = t, this.messages = new Map, this.name = "messages", this.version = "0.3", this.initialized = !1, this.storagePrefix = rl, this.init = async () => {
                            if (!this.initialized) {
                                this.logger.trace("Initialized");
                                try {
                                    let e = await this.getRelayerMessages();
                                    "u" > typeof e && (this.messages = e), this.logger.debug(`Successfully Restored records for ${this.name}`), this.logger.trace({
                                        type: "method",
                                        method: "restore",
                                        size: this.messages.size
                                    })
                                } catch (e) {
                                    this.logger.debug(`Failed to Restore records for ${this.name}`), this.logger.error(e)
                                } finally {
                                    this.initialized = !0
                                }
                            }
                        }, this.set = async (e, t) => {
                            this.isInitialized();
                            let r = x(t),
                                n = this.messages.get(e);
                            return typeof n > "u" && (n = {}), "u" > typeof n[r] || (n[r] = t, this.messages.set(e, n), await this.persist()), r
                        }, this.get = e => {
                            this.isInitialized();
                            let t = this.messages.get(e);
                            return typeof t > "u" && (t = {}), t
                        }, this.has = (e, t) => (this.isInitialized(), "u" > typeof this.get(e)[x(t)]), this.del = async e => {
                            this.isInitialized(), this.messages.delete(e), await this.persist()
                        }, this.logger = (0, eX.generateChildLogger)(e, this.name), this.core = t
                    }
                },
                rM = class extends e5 {
                    get context() {
                        return (0, eX.getLoggerContext)(this.logger)
                    }
                    rpcPublish(e, t, r, n, i, o, s) {
                        var a, c, u, l;
                        let d = {
                            method: ee(n.protocol).publish,
                            params: {
                                topic: e,
                                message: t,
                                ttl: r,
                                prompt: i,
                                tag: o
                            },
                            id: s
                        };
                        return ex(null == (a = d.params) ? void 0 : a.prompt) && (null == (c = d.params) || delete c.prompt), ex(null == (u = d.params) ? void 0 : u.tag) && (null == (l = d.params) || delete l.tag), this.logger.debug("Outgoing Relay Payload"), this.logger.trace({
                            type: "message",
                            direction: "outgoing",
                            request: d
                        }), this.relayer.request(d)
                    }
                    removeRequestFromQueue(e) {
                        this.queue.delete(e)
                    }
                    checkQueue() {
                        this.queue.forEach(async e => {
                            let {
                                topic: t,
                                message: r,
                                opts: n
                            } = e;
                            await this.publish(t, r, n)
                        })
                    }
                    registerEventListeners() {
                        this.relayer.core.heartbeat.on(eQ.HEARTBEAT_EVENTS.pulse, () => {
                            if (this.needsTransportRestart) {
                                this.needsTransportRestart = !1, this.relayer.events.emit(ry.connection_stalled);
                                return
                            }
                            this.checkQueue()
                        }), this.relayer.on(ry.message_ack, e => {
                            this.removeRequestFromQueue(e.id.toString())
                        })
                    }
                    constructor(e, t) {
                        super(e, t), this.relayer = e, this.logger = t, this.events = new n.EventEmitter, this.name = "publisher", this.queue = new Map, this.publishTimeout = (0, h.toMiliseconds)(h.TEN_SECONDS), this.needsTransportRestart = !1, this.publish = async (e, t, r) => {
                            var n;
                            this.logger.debug("Publishing Payload"), this.logger.trace({
                                type: "method",
                                method: "publish",
                                params: {
                                    topic: e,
                                    message: t,
                                    opts: r
                                }
                            });
                            try {
                                let i = r ? .ttl || rg,
                                    o = X(r),
                                    s = r ? .prompt || !1,
                                    a = r ? .tag || 0,
                                    c = r ? .id || (0, tp.getBigIntRpcId)().toString(),
                                    u = {
                                        topic: e,
                                        message: t,
                                        opts: {
                                            ttl: i,
                                            relay: o,
                                            prompt: s,
                                            tag: a,
                                            id: c
                                        }
                                    },
                                    l = setTimeout(() => this.queue.set(c, u), this.publishTimeout);
                                try {
                                    await await z(this.rpcPublish(e, t, i, o, s, a, c), this.publishTimeout, "Failed to publish payload, please try again."), this.removeRequestFromQueue(c), this.relayer.events.emit(ry.publish, u)
                                } catch (e) {
                                    if (this.logger.debug("Publishing Payload stalled"), this.needsTransportRestart = !0, null != (n = r ? .internal) && n.throwOnFailedPublish) throw this.removeRequestFromQueue(c), e;
                                    return
                                } finally {
                                    clearTimeout(l)
                                }
                                this.logger.debug("Successfully Published Payload"), this.logger.trace({
                                    type: "method",
                                    method: "publish",
                                    params: {
                                        topic: e,
                                        message: t,
                                        opts: r
                                    }
                                })
                            } catch (e) {
                                throw this.logger.debug("Failed to Publish Payload"), this.logger.error(e), e
                            }
                        }, this.on = (e, t) => {
                            this.events.on(e, t)
                        }, this.once = (e, t) => {
                            this.events.once(e, t)
                        }, this.off = (e, t) => {
                            this.events.off(e, t)
                        }, this.removeListener = (e, t) => {
                            this.events.removeListener(e, t)
                        }, this.relayer = e, this.logger = (0, eX.generateChildLogger)(t, this.name), this.registerEventListeners()
                    }
                },
                rB = class {
                    get topics() {
                        return Array.from(this.map.keys())
                    }
                    constructor() {
                        this.map = new Map, this.set = (e, t) => {
                            let r = this.get(e);
                            this.exists(e, t) || this.map.set(e, [...r, t])
                        }, this.get = e => this.map.get(e) || [], this.exists = (e, t) => this.get(e).includes(t), this.delete = (e, t) => {
                            if (typeof t > "u") {
                                this.map.delete(e);
                                return
                            }
                            if (!this.map.has(e)) return;
                            let r = this.get(e);
                            if (!this.exists(e, t)) return;
                            let n = r.filter(e => e !== t);
                            if (!n.length) {
                                this.map.delete(e);
                                return
                            }
                            this.map.set(e, n)
                        }, this.clear = () => {
                            this.map.clear()
                        }
                    }
                };
            var rk = Object.defineProperty,
                rD = Object.defineProperties,
                rU = Object.getOwnPropertyDescriptors,
                rL = Object.getOwnPropertySymbols,
                rF = Object.prototype.hasOwnProperty,
                rq = Object.prototype.propertyIsEnumerable,
                rH = (e, t, r) => t in e ? rk(e, t, {
                    enumerable: !0,
                    configurable: !0,
                    writable: !0,
                    value: r
                }) : e[t] = r,
                r$ = (e, t) => {
                    for (var r in t || (t = {})) rF.call(t, r) && rH(e, r, t[r]);
                    if (rL)
                        for (var r of rL(t)) rq.call(t, r) && rH(e, r, t[r]);
                    return e
                },
                rz = (e, t) => rD(e, rU(t));
            let rV = class extends e4 {
                get context() {
                    return (0, eX.getLoggerContext)(this.logger)
                }
                get storageKey() {
                    return this.storagePrefix + this.version + this.relayer.core.customStoragePrefix + "//" + this.name
                }
                get length() {
                    return this.subscriptions.size
                }
                get ids() {
                    return Array.from(this.subscriptions.keys())
                }
                get values() {
                    return Array.from(this.subscriptions.values())
                }
                get topics() {
                    return this.topicMap.topics
                }
                hasSubscription(e, t) {
                    let r = !1;
                    try {
                        r = this.getSubscription(e).topic === t
                    } catch {}
                    return r
                }
                onEnable() {
                    this.cached = [], this.initialized = !0
                }
                onDisable() {
                    this.cached = this.values, this.subscriptions.clear(), this.topicMap.clear()
                }
                async unsubscribeByTopic(e, t) {
                    let r = this.topicMap.get(e);
                    await Promise.all(r.map(async r => await this.unsubscribeById(e, r, t)))
                }
                async unsubscribeById(e, t, r) {
                    this.logger.debug("Unsubscribing Topic"), this.logger.trace({
                        type: "method",
                        method: "unsubscribe",
                        params: {
                            topic: e,
                            id: t,
                            opts: r
                        }
                    });
                    try {
                        let n = X(r);
                        await this.rpcUnsubscribe(e, t, n);
                        let i = eE("USER_DISCONNECTED", `${this.name}, ${e}`);
                        await this.onUnsubscribe(e, t, i), this.logger.debug("Successfully Unsubscribed Topic"), this.logger.trace({
                            type: "method",
                            method: "unsubscribe",
                            params: {
                                topic: e,
                                id: t,
                                opts: r
                            }
                        })
                    } catch (e) {
                        throw this.logger.debug("Failed to Unsubscribe Topic"), this.logger.error(e), e
                    }
                }
                async rpcSubscribe(e, t) {
                    let r = {
                        method: ee(t.protocol).subscribe,
                        params: {
                            topic: e
                        }
                    };
                    this.logger.debug("Outgoing Relay Payload"), this.logger.trace({
                        type: "payload",
                        direction: "outgoing",
                        request: r
                    });
                    try {
                        await await z(this.relayer.request(r), this.subscribeTimeout)
                    } catch {
                        this.logger.debug("Outgoing Relay Subscribe Payload stalled"), this.relayer.events.emit(ry.connection_stalled)
                    }
                    return x(e + this.clientId)
                }
                async rpcBatchSubscribe(e) {
                    if (!e.length) return;
                    let t = {
                        method: ee(e[0].relay.protocol).batchSubscribe,
                        params: {
                            topics: e.map(e => e.topic)
                        }
                    };
                    this.logger.debug("Outgoing Relay Payload"), this.logger.trace({
                        type: "payload",
                        direction: "outgoing",
                        request: t
                    });
                    try {
                        return await await z(this.relayer.request(t), this.subscribeTimeout)
                    } catch {
                        this.logger.debug("Outgoing Relay Payload stalled"), this.relayer.events.emit(ry.connection_stalled)
                    }
                }
                rpcUnsubscribe(e, t, r) {
                    let n = {
                        method: ee(r.protocol).unsubscribe,
                        params: {
                            topic: e,
                            id: t
                        }
                    };
                    return this.logger.debug("Outgoing Relay Payload"), this.logger.trace({
                        type: "payload",
                        direction: "outgoing",
                        request: n
                    }), this.relayer.request(n)
                }
                onSubscribe(e, t) {
                    this.setSubscription(e, rz(r$({}, t), {
                        id: e
                    })), this.pending.delete(t.topic)
                }
                onBatchSubscribe(e) {
                    e.length && e.forEach(e => {
                        this.setSubscription(e.id, r$({}, e)), this.pending.delete(e.topic)
                    })
                }
                async onUnsubscribe(e, t, r) {
                    this.events.removeAllListeners(t), this.hasSubscription(t, e) && this.deleteSubscription(t, r), await this.relayer.messages.del(e)
                }
                async setRelayerSubscriptions(e) {
                    await this.relayer.core.storage.setItem(this.storageKey, e)
                }
                async getRelayerSubscriptions() {
                    return await this.relayer.core.storage.getItem(this.storageKey)
                }
                setSubscription(e, t) {
                    this.subscriptions.has(e) || (this.logger.debug("Setting subscription"), this.logger.trace({
                        type: "method",
                        method: "setSubscription",
                        id: e,
                        subscription: t
                    }), this.addSubscription(e, t))
                }
                addSubscription(e, t) {
                    this.subscriptions.set(e, r$({}, t)), this.topicMap.set(t.topic, e), this.events.emit(rE.created, t)
                }
                getSubscription(e) {
                    this.logger.debug("Getting subscription"), this.logger.trace({
                        type: "method",
                        method: "getSubscription",
                        id: e
                    });
                    let t = this.subscriptions.get(e);
                    if (!t) {
                        let {
                            message: t
                        } = ew("NO_MATCHING_KEY", `${this.name}: ${e}`);
                        throw Error(t)
                    }
                    return t
                }
                deleteSubscription(e, t) {
                    this.logger.debug("Deleting subscription"), this.logger.trace({
                        type: "method",
                        method: "deleteSubscription",
                        id: e,
                        reason: t
                    });
                    let r = this.getSubscription(e);
                    this.subscriptions.delete(e), this.topicMap.delete(r.topic, e), this.events.emit(rE.deleted, rz(r$({}, r), {
                        reason: t
                    }))
                }
                async persist() {
                    await this.setRelayerSubscriptions(this.values), this.events.emit(rE.sync)
                }
                async reset() {
                    if (this.cached.length) {
                        let e = Math.ceil(this.cached.length / this.batchSubscribeTopicsLimit);
                        for (let t = 0; t < e; t++) {
                            let e = this.cached.splice(0, this.batchSubscribeTopicsLimit);
                            await this.batchSubscribe(e)
                        }
                    }
                    this.events.emit(rE.resubscribed)
                }
                async restore() {
                    try {
                        let e = await this.getRelayerSubscriptions();
                        if (typeof e > "u" || !e.length) return;
                        if (this.subscriptions.size) {
                            let {
                                message: e
                            } = ew("RESTORE_WILL_OVERRIDE", this.name);
                            throw this.logger.error(e), this.logger.error(`${this.name}: ${JSON.stringify(this.values)}`), Error(e)
                        }
                        this.cached = e, this.logger.debug(`Successfully Restored subscriptions for ${this.name}`), this.logger.trace({
                            type: "method",
                            method: "restore",
                            subscriptions: this.values
                        })
                    } catch (e) {
                        this.logger.debug(`Failed to Restore subscriptions for ${this.name}`), this.logger.error(e)
                    }
                }
                async batchSubscribe(e) {
                    if (!e.length) return;
                    let t = await this.rpcBatchSubscribe(e);
                    e_(t) && this.onBatchSubscribe(t.map((t, r) => rz(r$({}, e[r]), {
                        id: t
                    })))
                }
                async onConnect() {
                    this.restartInProgress || (await this.restart(), this.onEnable())
                }
                onDisconnect() {
                    this.onDisable()
                }
                async checkPending() {
                    if (!this.initialized || this.relayer.transportExplicitlyClosed) return;
                    let e = [];
                    this.pending.forEach(t => {
                        e.push(t)
                    }), await this.batchSubscribe(e)
                }
                registerEventListeners() {
                    this.relayer.core.heartbeat.on(eQ.HEARTBEAT_EVENTS.pulse, async () => {
                        await this.checkPending()
                    }), this.relayer.on(ry.connect, async () => {
                        await this.onConnect()
                    }), this.relayer.on(ry.disconnect, () => {
                        this.onDisconnect()
                    }), this.events.on(rE.created, async e => {
                        let t = rE.created;
                        this.logger.info(`Emitting ${t}`), this.logger.debug({
                            type: "event",
                            event: t,
                            data: e
                        }), await this.persist()
                    }), this.events.on(rE.deleted, async e => {
                        let t = rE.deleted;
                        this.logger.info(`Emitting ${t}`), this.logger.debug({
                            type: "event",
                            event: t,
                            data: e
                        }), await this.persist()
                    })
                }
                isInitialized() {
                    if (!this.initialized) {
                        let {
                            message: e
                        } = ew("NOT_INITIALIZED", this.name);
                        throw Error(e)
                    }
                }
                async restartToComplete() {
                    this.restartInProgress && await new Promise(e => {
                        let t = setInterval(() => {
                            this.restartInProgress || (clearInterval(t), e())
                        }, this.pollingInterval)
                    })
                }
                constructor(e, t) {
                    super(e, t), this.relayer = e, this.logger = t, this.subscriptions = new Map, this.topicMap = new rB, this.events = new n.EventEmitter, this.name = "subscription", this.version = "0.3", this.pending = new Map, this.cached = [], this.initialized = !1, this.pendingSubscriptionWatchLabel = "pending_sub_watch_label", this.pollingInterval = 20, this.storagePrefix = rl, this.subscribeTimeout = 1e4, this.restartInProgress = !1, this.batchSubscribeTopicsLimit = 500, this.init = async () => {
                        this.initialized || (this.logger.trace("Initialized"), this.registerEventListeners(), this.clientId = await this.relayer.core.crypto.getClientId())
                    }, this.subscribe = async (e, t) => {
                        await this.restartToComplete(), this.isInitialized(), this.logger.debug("Subscribing Topic"), this.logger.trace({
                            type: "method",
                            method: "subscribe",
                            params: {
                                topic: e,
                                opts: t
                            }
                        });
                        try {
                            let r = X(t),
                                n = {
                                    topic: e,
                                    relay: r
                                };
                            this.pending.set(e, n);
                            let i = await this.rpcSubscribe(e, r);
                            return this.onSubscribe(i, n), this.logger.debug("Successfully Subscribed Topic"), this.logger.trace({
                                type: "method",
                                method: "subscribe",
                                params: {
                                    topic: e,
                                    opts: t
                                }
                            }), i
                        } catch (e) {
                            throw this.logger.debug("Failed to Subscribe Topic"), this.logger.error(e), e
                        }
                    }, this.unsubscribe = async (e, t) => {
                        await this.restartToComplete(), this.isInitialized(), "u" > typeof t ? .id ? await this.unsubscribeById(e, t.id, t) : await this.unsubscribeByTopic(e, t)
                    }, this.isSubscribed = async e => !!this.topics.includes(e) || await new Promise((t, r) => {
                        let n = new h.Watch;
                        n.start(this.pendingSubscriptionWatchLabel);
                        let i = setInterval(() => {
                            !this.pending.has(e) && this.topics.includes(e) && (clearInterval(i), n.stop(this.pendingSubscriptionWatchLabel), t(!0)), n.elapsed(this.pendingSubscriptionWatchLabel) >= r_ && (clearInterval(i), n.stop(this.pendingSubscriptionWatchLabel), r(Error("Subscription resolution timeout")))
                        }, this.pollingInterval)
                    }).catch(() => !1), this.on = (e, t) => {
                        this.events.on(e, t)
                    }, this.once = (e, t) => {
                        this.events.once(e, t)
                    }, this.off = (e, t) => {
                        this.events.off(e, t)
                    }, this.removeListener = (e, t) => {
                        this.events.removeListener(e, t)
                    }, this.restart = async () => {
                        this.restartInProgress = !0, await this.restore(), await this.reset(), this.restartInProgress = !1
                    }, this.relayer = e, this.logger = (0, eX.generateChildLogger)(t, this.name), this.clientId = ""
                }
            };
            var rG = Object.defineProperty,
                rW = Object.getOwnPropertySymbols,
                rK = Object.prototype.hasOwnProperty,
                rJ = Object.prototype.propertyIsEnumerable,
                rY = (e, t, r) => t in e ? rG(e, t, {
                    enumerable: !0,
                    configurable: !0,
                    writable: !0,
                    value: r
                }) : e[t] = r,
                rZ = (e, t) => {
                    for (var r in t || (t = {})) rK.call(t, r) && rY(e, r, t[r]);
                    if (rW)
                        for (var r of rW(t)) rJ.call(t, r) && rY(e, r, t[r]);
                    return e
                };
            let rQ = class extends e3 {
                async init() {
                    this.logger.trace("Initialized"), this.registerEventListeners(), await this.createProvider(), await Promise.all([this.messages.init(), this.subscriber.init()]);
                    try {
                        await this.transportOpen()
                    } catch {
                        this.logger.warn(`Connection via ${this.relayUrl} failed, attempting to connect via failover domain ${rb}...`), await this.restartTransport(rb)
                    }
                    this.initialized = !0, setTimeout(async () => {
                        0 === this.subscriber.topics.length && (this.logger.info("No topics subscribed to after init, closing transport"), await this.transportClose(), this.transportExplicitlyClosed = !1)
                    }, 1e4)
                }
                get context() {
                    return (0, eX.getLoggerContext)(this.logger)
                }
                get connected() {
                    return this.provider.connection.connected
                }
                get connecting() {
                    return this.provider.connection.connecting
                }
                async publish(e, t, r) {
                    this.isInitialized(), await this.publisher.publish(e, t, r), await this.recordMessageEvent({
                        topic: e,
                        message: t,
                        publishedAt: Date.now()
                    })
                }
                async subscribe(e, t) {
                    var r;
                    let n;
                    this.isInitialized();
                    let i = (null == (r = this.subscriber.topicMap.get(e)) ? void 0 : r[0]) || "";
                    if (i) return i;
                    let o = t => {
                        t.topic === e && (this.subscriber.off(rE.created, o), n())
                    };
                    return await Promise.all([new Promise(e => {
                        n = e, this.subscriber.on(rE.created, o)
                    }), new Promise(async r => {
                        i = await this.subscriber.subscribe(e, t), r()
                    })]), i
                }
                async unsubscribe(e, t) {
                    this.isInitialized(), await this.subscriber.unsubscribe(e, t)
                }
                on(e, t) {
                    this.events.on(e, t)
                }
                once(e, t) {
                    this.events.once(e, t)
                }
                off(e, t) {
                    this.events.off(e, t)
                }
                removeListener(e, t) {
                    this.events.removeListener(e, t)
                }
                async transportClose() {
                    this.transportExplicitlyClosed = !0, this.hasExperiencedNetworkDisruption && this.connected ? await z(this.provider.disconnect(), 1e3, "provider.disconnect()").catch(() => this.onProviderDisconnect()) : this.connected && await this.provider.disconnect()
                }
                async transportOpen(e) {
                    if (this.transportExplicitlyClosed = !1, await this.confirmOnlineStateOrThrow(), !this.connectionAttemptInProgress) {
                        e && e !== this.relayUrl && (this.relayUrl = e, await this.transportClose(), await this.createProvider()), this.connectionAttemptInProgress = !0;
                        try {
                            await Promise.all([new Promise(e => {
                                if (!this.initialized) return e();
                                this.subscriber.once(rE.resubscribed, () => {
                                    e()
                                })
                            }), new Promise(async (e, t) => {
                                try {
                                    await z(this.provider.connect(), 1e4, `Socket stalled when trying to connect to ${this.relayUrl}`)
                                } catch (e) {
                                    t(e);
                                    return
                                }
                                e()
                            })])
                        } catch (e) {
                            if (this.logger.error(e), !this.isConnectionStalled(e.message)) throw e;
                            this.provider.events.emit(rv.disconnect)
                        } finally {
                            this.connectionAttemptInProgress = !1, this.hasExperiencedNetworkDisruption = !1
                        }
                    }
                }
                async restartTransport(e) {
                    await this.confirmOnlineStateOrThrow(), this.connectionAttemptInProgress || (this.relayUrl = e || this.relayUrl, await this.transportClose(), await this.createProvider(), await this.transportOpen())
                }
                async confirmOnlineStateOrThrow() {
                    if (!await ek()) throw Error("No internet connection detected. Please restart your network and try again.")
                }
                isConnectionStalled(e) {
                    return this.staleConnectionErrors.some(t => e.includes(t))
                }
                async createProvider() {
                    this.provider.connection && this.unregisterProviderListeners();
                    let e = await this.core.crypto.signJWT(this.relayUrl);
                    this.provider = new tf.JsonRpcProvider(new ty(function({
                        protocol: e,
                        version: t,
                        relayUrl: n,
                        sdkVersion: i,
                        auth: o,
                        projectId: s,
                        useOnCloseEvent: a,
                        bundleId: c
                    }) {
                        var u;
                        let l;
                        let h = n.split("?"),
                            p = function(e, t, n) {
                                let i = function() {
                                        if (L() === B.reactNative && "u" > typeof r.g && "u" > typeof(null == r.g ? void 0 : r.g.Platform)) {
                                            let {
                                                OS: e,
                                                Version: t
                                            } = r.g.Platform;
                                            return [e, t].join("-")
                                        }
                                        let e = (0, d.qY)();
                                        if (null === e) return "unknown";
                                        let t = e.os ? e.os.replace(" ", "").toLowerCase() : "unknown";
                                        return "browser" === e.type ? [t, e.name, e.version].join("-") : [t, e.version].join("-")
                                    }(),
                                    o = function() {
                                        var e;
                                        let t = L();
                                        return t === B.browser ? [t, (null == (e = (0, f.getLocation)()) ? void 0 : e.host) || "unknown"].join(":") : t
                                    }();
                                return [
                                    [e, t].join("-"), ["js", n].join("-"), i, o
                                ].join("/")
                            }(e, t, i),
                            m = (u = h[1] || "", l = M(M({}, l = g.parse(u)), {
                                auth: o,
                                ua: p,
                                projectId: s,
                                useOnCloseEvent: a || void 0,
                                origin: c || void 0
                            }), u = g.stringify(l));
                        return h[0] + "?" + m
                    }({
                        sdkVersion: "2.11.0",
                        protocol: this.protocol,
                        version: this.version,
                        relayUrl: this.relayUrl,
                        projectId: this.projectId,
                        auth: e,
                        useOnCloseEvent: !0,
                        bundleId: this.bundleId
                    }))), this.registerProviderListeners()
                }
                async recordMessageEvent(e) {
                    let {
                        topic: t,
                        message: r
                    } = e;
                    await this.messages.set(t, r)
                }
                async shouldIgnoreMessageEvent(e) {
                    let {
                        topic: t,
                        message: r
                    } = e;
                    if (!r || 0 === r.length) return this.logger.debug(`Ignoring invalid/empty message: ${r}`), !0;
                    if (!await this.subscriber.isSubscribed(t)) return this.logger.debug(`Ignoring message for non-subscribed topic ${t}`), !0;
                    let n = this.messages.has(t, r);
                    return n && this.logger.debug(`Ignoring duplicate message: ${r}`), n
                }
                async onProviderPayload(e) {
                    if (this.logger.debug("Incoming Relay Payload"), this.logger.trace({
                            type: "payload",
                            direction: "incoming",
                            payload: e
                        }), (0, tp.isJsonRpcRequest)(e)) {
                        if (!e.method.endsWith("_subscription")) return;
                        let t = e.params,
                            {
                                topic: r,
                                message: n,
                                publishedAt: i
                            } = t.data,
                            o = {
                                topic: r,
                                message: n,
                                publishedAt: i
                            };
                        this.logger.debug("Emitting Relayer Payload"), this.logger.trace(rZ({
                            type: "event",
                            event: t.id
                        }, o)), this.events.emit(t.id, o), await this.acknowledgePayload(e), await this.onMessageEvent(o)
                    } else(0, tp.isJsonRpcResponse)(e) && this.events.emit(ry.message_ack, e)
                }
                async onMessageEvent(e) {
                    await this.shouldIgnoreMessageEvent(e) || (this.events.emit(ry.message, e), await this.recordMessageEvent(e))
                }
                async acknowledgePayload(e) {
                    let t = (0, tp.formatJsonRpcResult)(e.id, !0);
                    await this.provider.connection.send(t)
                }
                unregisterProviderListeners() {
                    this.provider.off(rv.payload, this.onPayloadHandler), this.provider.off(rv.connect, this.onConnectHandler), this.provider.off(rv.disconnect, this.onDisconnectHandler), this.provider.off(rv.error, this.onProviderErrorHandler)
                }
                async registerEventListeners() {
                    this.events.on(ry.connection_stalled, () => {
                        this.restartTransport().catch(e => this.logger.error(e))
                    });
                    let e = await ek();
                    ! function(e) {
                        switch (L()) {
                            case B.browser:
                                !D() && U() && (window.addEventListener("online", () => e(!0)), window.addEventListener("offline", () => e(!1)));
                                break;
                            case B.reactNative:
                                D() && "u" > typeof r.g && null != r.g && r.g.NetInfo && r.g ? .NetInfo.addEventListener(t => e(t ? .isConnected));
                            case B.node:
                        }
                    }(async t => {
                        this.initialized && e !== t && (e = t, t ? await this.restartTransport().catch(e => this.logger.error(e)) : (this.hasExperiencedNetworkDisruption = !0, await this.transportClose().catch(e => this.logger.error(e))))
                    })
                }
                onProviderDisconnect() {
                    this.events.emit(ry.disconnect), this.attemptToReconnect()
                }
                attemptToReconnect() {
                    this.transportExplicitlyClosed || (this.logger.info("attemptToReconnect called. Connecting..."), setTimeout(async () => {
                        await this.restartTransport().catch(e => this.logger.error(e))
                    }, (0, h.toMiliseconds)(rw)))
                }
                isInitialized() {
                    if (!this.initialized) {
                        let {
                            message: e
                        } = ew("NOT_INITIALIZED", this.name);
                        throw Error(e)
                    }
                }
                async toEstablishConnection() {
                    if (await this.confirmOnlineStateOrThrow(), !this.connected) {
                        if (this.connectionAttemptInProgress) return await new Promise(e => {
                            let t = setInterval(() => {
                                this.connected && (clearInterval(t), e())
                            }, this.connectionStatusPollingInterval)
                        });
                        await this.restartTransport()
                    }
                }
                constructor(e) {
                    super(e), this.protocol = "wc", this.version = 2, this.events = new n.EventEmitter, this.name = "relayer", this.transportExplicitlyClosed = !1, this.initialized = !1, this.connectionAttemptInProgress = !1, this.connectionStatusPollingInterval = 20, this.staleConnectionErrors = ["socket hang up", "socket stalled"], this.hasExperiencedNetworkDisruption = !1, this.request = async e => {
                        this.logger.debug("Publishing Request Payload");
                        try {
                            return await this.toEstablishConnection(), await this.provider.request(e)
                        } catch (e) {
                            throw this.logger.debug("Failed to Publish Request"), this.logger.error(e), e
                        }
                    }, this.onPayloadHandler = e => {
                        this.onProviderPayload(e)
                    }, this.onConnectHandler = () => {
                        this.events.emit(ry.connect)
                    }, this.onDisconnectHandler = () => {
                        this.onProviderDisconnect()
                    }, this.onProviderErrorHandler = e => {
                        this.logger.error(e), this.events.emit(ry.error, e), this.logger.info("Fatal socket error received, closing transport"), this.transportClose()
                    }, this.registerProviderListeners = () => {
                        this.provider.on(rv.payload, this.onPayloadHandler), this.provider.on(rv.connect, this.onConnectHandler), this.provider.on(rv.disconnect, this.onDisconnectHandler), this.provider.on(rv.error, this.onProviderErrorHandler)
                    }, this.core = e.core, this.logger = "u" > typeof e.logger && "string" != typeof e.logger ? (0, eX.generateChildLogger)(e.logger, this.name) : (0, eX.pino)((0, eX.getDefaultLoggerOptions)({
                        level: e.logger || "error"
                    })), this.messages = new rN(this.logger, e.core), this.subscriber = new rV(this, this.logger), this.publisher = new rM(this, this.logger), this.relayUrl = e ? .relayUrl || rm, this.projectId = e.projectId, this.bundleId = function() {
                        var e;
                        try {
                            return D() && "u" > typeof r.g && "u" > typeof(null == r.g ? void 0 : r.g.Application) ? null == (e = r.g.Application) ? void 0 : e.applicationId : void 0
                        } catch {
                            return
                        }
                    }(), this.provider = {}
                }
            };
            var rX = Object.defineProperty,
                r0 = Object.getOwnPropertySymbols,
                r1 = Object.prototype.hasOwnProperty,
                r2 = Object.prototype.propertyIsEnumerable,
                r6 = (e, t, r) => t in e ? rX(e, t, {
                    enumerable: !0,
                    configurable: !0,
                    writable: !0,
                    value: r
                }) : e[t] = r,
                r5 = (e, t) => {
                    for (var r in t || (t = {})) r1.call(t, r) && r6(e, r, t[r]);
                    if (r0)
                        for (var r of r0(t)) r2.call(t, r) && r6(e, r, t[r]);
                    return e
                };
            let r3 = class extends e8 {
                    get context() {
                        return (0, eX.getLoggerContext)(this.logger)
                    }
                    get storageKey() {
                        return this.storagePrefix + this.version + this.core.customStoragePrefix + "//" + this.name
                    }
                    get length() {
                        return this.map.size
                    }
                    get keys() {
                        return Array.from(this.map.keys())
                    }
                    get values() {
                        return Array.from(this.map.values())
                    }
                    async setDataStore(e) {
                        await this.core.storage.setItem(this.storageKey, e)
                    }
                    async getDataStore() {
                        return await this.core.storage.getItem(this.storageKey)
                    }
                    getData(e) {
                        let t = this.map.get(e);
                        if (!t) {
                            let {
                                message: t
                            } = ew("NO_MATCHING_KEY", `${this.name}: ${e}`);
                            throw this.logger.error(t), Error(t)
                        }
                        return t
                    }
                    async persist() {
                        await this.setDataStore(this.values)
                    }
                    async restore() {
                        try {
                            let e = await this.getDataStore();
                            if (typeof e > "u" || !e.length) return;
                            if (this.map.size) {
                                let {
                                    message: e
                                } = ew("RESTORE_WILL_OVERRIDE", this.name);
                                throw this.logger.error(e), Error(e)
                            }
                            this.cached = e, this.logger.debug(`Successfully Restored value for ${this.name}`), this.logger.trace({
                                type: "method",
                                method: "restore",
                                value: this.values
                            })
                        } catch (e) {
                            this.logger.debug(`Failed to Restore value for ${this.name}`), this.logger.error(e)
                        }
                    }
                    isInitialized() {
                        if (!this.initialized) {
                            let {
                                message: e
                            } = ew("NOT_INITIALIZED", this.name);
                            throw Error(e)
                        }
                    }
                    constructor(e, t, r, n = rl, i) {
                        super(e, t, r, n), this.core = e, this.logger = t, this.name = r, this.map = new Map, this.version = "0.3", this.cached = [], this.initialized = !1, this.storagePrefix = rl, this.init = async () => {
                            this.initialized || (this.logger.trace("Initialized"), await this.restore(), this.cached.forEach(e => {
                                this.getKey && null !== e && !ex(e) ? this.map.set(this.getKey(e), e) : function(e) {
                                    var t;
                                    return null == (t = e ? .proposer) ? void 0 : t.publicKey
                                }(e) ? this.map.set(e.id, e) : e ? .topic && this.map.set(e.topic, e)
                            }), this.cached = [], this.initialized = !0)
                        }, this.set = async (e, t) => {
                            this.isInitialized(), this.map.has(e) ? await this.update(e, t) : (this.logger.debug("Setting value"), this.logger.trace({
                                type: "method",
                                method: "set",
                                key: e,
                                value: t
                            }), this.map.set(e, t), await this.persist())
                        }, this.get = e => (this.isInitialized(), this.logger.debug("Getting value"), this.logger.trace({
                            type: "method",
                            method: "get",
                            key: e
                        }), this.getData(e)), this.getAll = e => (this.isInitialized(), e ? this.values.filter(t => Object.keys(e).every(r => tw()(t[r], e[r]))) : this.values), this.update = async (e, t) => {
                            this.isInitialized(), this.logger.debug("Updating value"), this.logger.trace({
                                type: "method",
                                method: "update",
                                key: e,
                                update: t
                            });
                            let r = r5(r5({}, this.getData(e)), t);
                            this.map.set(e, r), await this.persist()
                        }, this.delete = async (e, t) => {
                            this.isInitialized(), this.map.has(e) && (this.logger.debug("Deleting value"), this.logger.trace({
                                type: "method",
                                method: "delete",
                                key: e,
                                reason: t
                            }), this.map.delete(e), await this.persist())
                        }, this.logger = (0, eX.generateChildLogger)(t, this.name), this.storagePrefix = n, this.getKey = i
                    }
                },
                r8 = class {
                    get context() {
                        return (0, eX.getLoggerContext)(this.logger)
                    }
                    isInitialized() {
                        if (!this.initialized) {
                            let {
                                message: e
                            } = ew("NOT_INITIALIZED", this.name);
                            throw Error(e)
                        }
                    }
                    registerRelayerEvents() {
                        this.core.relayer.on(ry.message, async e => {
                            let {
                                topic: t,
                                message: r
                            } = e;
                            if (!this.pairings.keys.includes(t) || this.ignoredPayloadTypes.includes(this.core.crypto.getPayloadType(r))) return;
                            let n = await this.core.crypto.decode(t, r);
                            try {
                                (0, tp.isJsonRpcRequest)(n) ? (this.core.history.set(t, n), this.onRelayEventRequest({
                                    topic: t,
                                    payload: n
                                })) : (0, tp.isJsonRpcResponse)(n) && (await this.core.history.resolve(n), await this.onRelayEventResponse({
                                    topic: t,
                                    payload: n
                                }), this.core.history.delete(t, n.id))
                            } catch (e) {
                                this.logger.error(e)
                            }
                        })
                    }
                    registerExpirerEvents() {
                        this.core.expirer.on(rO.expired, async e => {
                            let {
                                topic: t
                            } = G(e.target);
                            t && this.pairings.keys.includes(t) && (await this.deletePairing(t, !0), this.events.emit(rx.expire, {
                                topic: t
                            }))
                        })
                    }
                    constructor(e, t) {
                        this.core = e, this.logger = t, this.name = "pairing", this.version = "0.3", this.events = new(i()), this.initialized = !1, this.storagePrefix = rl, this.ignoredPayloadTypes = [1], this.registeredMethods = [], this.init = async () => {
                            this.initialized || (await this.pairings.init(), await this.cleanup(), this.registerRelayerEvents(), this.registerExpirerEvents(), this.initialized = !0, this.logger.trace("Initialized"))
                        }, this.register = ({
                            methods: e
                        }) => {
                            this.isInitialized(), this.registeredMethods = [...new Set([...this.registeredMethods, ...e])]
                        }, this.create = async () => {
                            this.isInitialized();
                            let e = P(),
                                t = await this.core.crypto.setSymKey(e),
                                r = W(h.FIVE_MINUTES),
                                n = {
                                    protocol: "irn"
                                },
                                i = function(e) {
                                    return `${e.protocol}:${e.topic}@${e.version}?` + g.stringify(es({
                                        symKey: e.symKey
                                    }, function(e, t = "-") {
                                        let r = {};
                                        return Object.keys(e).forEach(n => {
                                            e[n] && (r["relay" + t + n] = e[n])
                                        }), r
                                    }(e.relay)))
                                }({
                                    protocol: this.core.protocol,
                                    version: this.core.version,
                                    topic: t,
                                    symKey: e,
                                    relay: n
                                });
                            return await this.pairings.set(t, {
                                topic: t,
                                expiry: r,
                                relay: n,
                                active: !1
                            }), await this.core.relayer.subscribe(t), this.core.expirer.set(t, r), {
                                topic: t,
                                uri: i
                            }
                        }, this.pair = async e => {
                            this.isInitialized(), this.isValidPair(e);
                            let {
                                topic: t,
                                symKey: r,
                                relay: n
                            } = ea(e.uri);
                            if (this.pairings.keys.includes(t) && this.pairings.get(t).active) throw Error(`Pairing already exists: ${t}. Please try again with a new connection URI.`);
                            let i = W(h.FIVE_MINUTES),
                                o = {
                                    topic: t,
                                    relay: n,
                                    expiry: i,
                                    active: !1
                                };
                            return await this.pairings.set(t, o), this.core.expirer.set(t, i), e.activatePairing && await this.activate({
                                topic: t
                            }), this.events.emit(rx.create, o), this.core.crypto.keychain.has(t) || (await this.core.crypto.setSymKey(r, t), await this.core.relayer.subscribe(t, {
                                relay: n
                            })), o
                        }, this.activate = async ({
                            topic: e
                        }) => {
                            this.isInitialized();
                            let t = W(h.THIRTY_DAYS);
                            await this.pairings.update(e, {
                                active: !0,
                                expiry: t
                            }), this.core.expirer.set(e, t)
                        }, this.ping = async e => {
                            this.isInitialized(), await this.isValidPing(e);
                            let {
                                topic: t
                            } = e;
                            if (this.pairings.keys.includes(t)) {
                                let e = await this.sendRequest(t, "wc_pairingPing", {}),
                                    {
                                        done: r,
                                        resolve: n,
                                        reject: i
                                    } = $();
                                this.events.once(J("pairing_ping", e), ({
                                    error: e
                                }) => {
                                    e ? i(e) : n()
                                }), await r()
                            }
                        }, this.updateExpiry = async ({
                            topic: e,
                            expiry: t
                        }) => {
                            this.isInitialized(), await this.pairings.update(e, {
                                expiry: t
                            })
                        }, this.updateMetadata = async ({
                            topic: e,
                            metadata: t
                        }) => {
                            this.isInitialized(), await this.pairings.update(e, {
                                peerMetadata: t
                            })
                        }, this.getPairings = () => (this.isInitialized(), this.pairings.values), this.disconnect = async e => {
                            this.isInitialized(), await this.isValidDisconnect(e);
                            let {
                                topic: t
                            } = e;
                            this.pairings.keys.includes(t) && (await this.sendRequest(t, "wc_pairingDelete", eE("USER_DISCONNECTED")), await this.deletePairing(t))
                        }, this.sendRequest = async (e, t, r) => {
                            let n = (0, tp.formatJsonRpcRequest)(t, r),
                                i = await this.core.crypto.encode(e, n),
                                o = rP[t].req;
                            return this.core.history.set(e, n), this.core.relayer.publish(e, i, o), n.id
                        }, this.sendResult = async (e, t, r) => {
                            let n = (0, tp.formatJsonRpcResult)(e, r),
                                i = await this.core.crypto.encode(t, n),
                                o = rP[(await this.core.history.get(t, e)).request.method].res;
                            await this.core.relayer.publish(t, i, o), await this.core.history.resolve(n)
                        }, this.sendError = async (e, t, r) => {
                            let n = (0, tp.formatJsonRpcError)(e, r),
                                i = await this.core.crypto.encode(t, n),
                                o = await this.core.history.get(t, e),
                                s = rP[o.request.method] ? rP[o.request.method].res : rP.unregistered_method.res;
                            await this.core.relayer.publish(t, i, s), await this.core.history.resolve(n)
                        }, this.deletePairing = async (e, t) => {
                            await this.core.relayer.unsubscribe(e), await Promise.all([this.pairings.delete(e, eE("USER_DISCONNECTED")), this.core.crypto.deleteSymKey(e), t ? Promise.resolve() : this.core.expirer.del(e)])
                        }, this.cleanup = async () => {
                            let e = this.pairings.getAll().filter(e => K(e.expiry));
                            await Promise.all(e.map(e => this.deletePairing(e.topic)))
                        }, this.onRelayEventRequest = e => {
                            let {
                                topic: t,
                                payload: r
                            } = e;
                            switch (r.method) {
                                case "wc_pairingPing":
                                    return this.onPairingPingRequest(t, r);
                                case "wc_pairingDelete":
                                    return this.onPairingDeleteRequest(t, r);
                                default:
                                    return this.onUnknownRpcMethodRequest(t, r)
                            }
                        }, this.onRelayEventResponse = async e => {
                            let {
                                topic: t,
                                payload: r
                            } = e, n = (await this.core.history.get(t, r.id)).request.method;
                            return "wc_pairingPing" === n ? this.onPairingPingResponse(t, r) : this.onUnknownRpcMethodResponse(n)
                        }, this.onPairingPingRequest = async (e, t) => {
                            let {
                                id: r
                            } = t;
                            try {
                                this.isValidPing({
                                    topic: e
                                }), await this.sendResult(r, e, !0), this.events.emit(rx.ping, {
                                    id: r,
                                    topic: e
                                })
                            } catch (t) {
                                await this.sendError(r, e, t), this.logger.error(t)
                            }
                        }, this.onPairingPingResponse = (e, t) => {
                            let {
                                id: r
                            } = t;
                            setTimeout(() => {
                                (0, tp.isJsonRpcResult)(t) ? this.events.emit(J("pairing_ping", r), {}): (0, tp.isJsonRpcError)(t) && this.events.emit(J("pairing_ping", r), {
                                    error: t.error
                                })
                            }, 500)
                        }, this.onPairingDeleteRequest = async (e, t) => {
                            let {
                                id: r
                            } = t;
                            try {
                                this.isValidDisconnect({
                                    topic: e
                                }), await this.deletePairing(e), this.events.emit(rx.delete, {
                                    id: r,
                                    topic: e
                                })
                            } catch (t) {
                                await this.sendError(r, e, t), this.logger.error(t)
                            }
                        }, this.onUnknownRpcMethodRequest = async (e, t) => {
                            let {
                                id: r,
                                method: n
                            } = t;
                            try {
                                if (this.registeredMethods.includes(n)) return;
                                let t = eE("WC_METHOD_UNSUPPORTED", n);
                                await this.sendError(r, e, t), this.logger.error(t)
                            } catch (t) {
                                await this.sendError(r, e, t), this.logger.error(t)
                            }
                        }, this.onUnknownRpcMethodResponse = e => {
                            this.registeredMethods.includes(e) || this.logger.error(eE("WC_METHOD_UNSUPPORTED", e))
                        }, this.isValidPair = e => {
                            var t;
                            if (!eC(e)) {
                                let {
                                    message: t
                                } = ew("MISSING_OR_INVALID", `pair() params: ${e}`);
                                throw Error(t)
                            }
                            if (! function(e) {
                                    if (eI(e, !1)) try {
                                        return "u" > typeof new URL(e)
                                    } catch {}
                                    return !1
                                }(e.uri)) {
                                let {
                                    message: t
                                } = ew("MISSING_OR_INVALID", `pair() uri: ${e.uri}`);
                                throw Error(t)
                            }
                            let r = ea(e.uri);
                            if (!(null != (t = r ? .relay) && t.protocol)) {
                                let {
                                    message: e
                                } = ew("MISSING_OR_INVALID", "pair() uri#relay-protocol");
                                throw Error(e)
                            }
                            if (!(null != r && r.symKey)) {
                                let {
                                    message: e
                                } = ew("MISSING_OR_INVALID", "pair() uri#symKey");
                                throw Error(e)
                            }
                        }, this.isValidPing = async e => {
                            if (!eC(e)) {
                                let {
                                    message: t
                                } = ew("MISSING_OR_INVALID", `ping() params: ${e}`);
                                throw Error(t)
                            }
                            let {
                                topic: t
                            } = e;
                            await this.isValidPairingTopic(t)
                        }, this.isValidDisconnect = async e => {
                            if (!eC(e)) {
                                let {
                                    message: t
                                } = ew("MISSING_OR_INVALID", `disconnect() params: ${e}`);
                                throw Error(t)
                            }
                            let {
                                topic: t
                            } = e;
                            await this.isValidPairingTopic(t)
                        }, this.isValidPairingTopic = async e => {
                            if (!eI(e, !1)) {
                                let {
                                    message: t
                                } = ew("MISSING_OR_INVALID", `pairing topic should be a string: ${e}`);
                                throw Error(t)
                            }
                            if (!this.pairings.keys.includes(e)) {
                                let {
                                    message: t
                                } = ew("NO_MATCHING_KEY", `pairing topic doesn't exist: ${e}`);
                                throw Error(t)
                            }
                            if (K(this.pairings.get(e).expiry)) {
                                await this.deletePairing(e);
                                let {
                                    message: t
                                } = ew("EXPIRED", `pairing topic: ${e}`);
                                throw Error(t)
                            }
                        }, this.core = e, this.logger = (0, eX.generateChildLogger)(t, this.name), this.pairings = new r3(this.core, this.logger, this.name, this.storagePrefix)
                    }
                },
                r4 = class extends e2 {
                    get context() {
                        return (0, eX.getLoggerContext)(this.logger)
                    }
                    get storageKey() {
                        return this.storagePrefix + this.version + this.core.customStoragePrefix + "//" + this.name
                    }
                    get size() {
                        return this.records.size
                    }
                    get keys() {
                        return Array.from(this.records.keys())
                    }
                    get values() {
                        return Array.from(this.records.values())
                    }
                    get pending() {
                        let e = [];
                        return this.values.forEach(t => {
                            if ("u" > typeof t.response) return;
                            let r = {
                                topic: t.topic,
                                request: (0, tp.formatJsonRpcRequest)(t.request.method, t.request.params, t.id),
                                chainId: t.chainId
                            };
                            return e.push(r)
                        }), e
                    }
                    async setJsonRpcRecords(e) {
                        await this.core.storage.setItem(this.storageKey, e)
                    }
                    async getJsonRpcRecords() {
                        return await this.core.storage.getItem(this.storageKey)
                    }
                    getRecord(e) {
                        this.isInitialized();
                        let t = this.records.get(e);
                        if (!t) {
                            let {
                                message: t
                            } = ew("NO_MATCHING_KEY", `${this.name}: ${e}`);
                            throw Error(t)
                        }
                        return t
                    }
                    async persist() {
                        await this.setJsonRpcRecords(this.values), this.events.emit(rI.sync)
                    }
                    async restore() {
                        try {
                            let e = await this.getJsonRpcRecords();
                            if (typeof e > "u" || !e.length) return;
                            if (this.records.size) {
                                let {
                                    message: e
                                } = ew("RESTORE_WILL_OVERRIDE", this.name);
                                throw this.logger.error(e), Error(e)
                            }
                            this.cached = e, this.logger.debug(`Successfully Restored records for ${this.name}`), this.logger.trace({
                                type: "method",
                                method: "restore",
                                records: this.values
                            })
                        } catch (e) {
                            this.logger.debug(`Failed to Restore records for ${this.name}`), this.logger.error(e)
                        }
                    }
                    registerEventListeners() {
                        this.events.on(rI.created, e => {
                            let t = rI.created;
                            this.logger.info(`Emitting ${t}`), this.logger.debug({
                                type: "event",
                                event: t,
                                record: e
                            }), this.persist()
                        }), this.events.on(rI.updated, e => {
                            let t = rI.updated;
                            this.logger.info(`Emitting ${t}`), this.logger.debug({
                                type: "event",
                                event: t,
                                record: e
                            }), this.persist()
                        }), this.events.on(rI.deleted, e => {
                            let t = rI.deleted;
                            this.logger.info(`Emitting ${t}`), this.logger.debug({
                                type: "event",
                                event: t,
                                record: e
                            }), this.persist()
                        }), this.core.heartbeat.on(eQ.HEARTBEAT_EVENTS.pulse, () => {
                            this.cleanup()
                        })
                    }
                    cleanup() {
                        try {
                            this.records.forEach(e => {
                                (0, h.toMiliseconds)(e.expiry || 0) - Date.now() <= 0 && (this.logger.info(`Deleting expired history log: ${e.id}`), this.delete(e.topic, e.id))
                            })
                        } catch (e) {
                            this.logger.warn(e)
                        }
                    }
                    isInitialized() {
                        if (!this.initialized) {
                            let {
                                message: e
                            } = ew("NOT_INITIALIZED", this.name);
                            throw Error(e)
                        }
                    }
                    constructor(e, t) {
                        super(e, t), this.core = e, this.logger = t, this.records = new Map, this.events = new n.EventEmitter, this.name = "history", this.version = "0.3", this.cached = [], this.initialized = !1, this.storagePrefix = rl, this.init = async () => {
                            this.initialized || (this.logger.trace("Initialized"), await this.restore(), this.cached.forEach(e => this.records.set(e.id, e)), this.cached = [], this.registerEventListeners(), this.initialized = !0)
                        }, this.set = (e, t, r) => {
                            if (this.isInitialized(), this.logger.debug("Setting JSON-RPC request history record"), this.logger.trace({
                                    type: "method",
                                    method: "set",
                                    topic: e,
                                    request: t,
                                    chainId: r
                                }), this.records.has(t.id)) return;
                            let n = {
                                id: t.id,
                                topic: e,
                                request: {
                                    method: t.method,
                                    params: t.params || null
                                },
                                chainId: r,
                                expiry: W(h.THIRTY_DAYS)
                            };
                            this.records.set(n.id, n), this.events.emit(rI.created, n)
                        }, this.resolve = async e => {
                            if (this.isInitialized(), this.logger.debug("Updating JSON-RPC response history record"), this.logger.trace({
                                    type: "method",
                                    method: "update",
                                    response: e
                                }), !this.records.has(e.id)) return;
                            let t = await this.getRecord(e.id);
                            typeof t.response > "u" && (t.response = (0, tp.isJsonRpcError)(e) ? {
                                error: e.error
                            } : {
                                result: e.result
                            }, this.records.set(t.id, t), this.events.emit(rI.updated, t))
                        }, this.get = async (e, t) => (this.isInitialized(), this.logger.debug("Getting record"), this.logger.trace({
                            type: "method",
                            method: "get",
                            topic: e,
                            id: t
                        }), await this.getRecord(t)), this.delete = (e, t) => {
                            this.isInitialized(), this.logger.debug("Deleting record"), this.logger.trace({
                                type: "method",
                                method: "delete",
                                id: t
                            }), this.values.forEach(r => {
                                r.topic !== e || "u" > typeof t && r.id !== t || (this.records.delete(r.id), this.events.emit(rI.deleted, r))
                            })
                        }, this.exists = async (e, t) => (this.isInitialized(), !!this.records.has(t) && (await this.getRecord(t)).topic === e), this.on = (e, t) => {
                            this.events.on(e, t)
                        }, this.once = (e, t) => {
                            this.events.once(e, t)
                        }, this.off = (e, t) => {
                            this.events.off(e, t)
                        }, this.removeListener = (e, t) => {
                            this.events.removeListener(e, t)
                        }, this.logger = (0, eX.generateChildLogger)(t, this.name)
                    }
                },
                r9 = class extends e9 {
                    get context() {
                        return (0, eX.getLoggerContext)(this.logger)
                    }
                    get storageKey() {
                        return this.storagePrefix + this.version + this.core.customStoragePrefix + "//" + this.name
                    }
                    get length() {
                        return this.expirations.size
                    }
                    get keys() {
                        return Array.from(this.expirations.keys())
                    }
                    get values() {
                        return Array.from(this.expirations.values())
                    }
                    formatTarget(e) {
                        if ("string" == typeof e) return V("topic", e);
                        if ("number" == typeof e) return V("id", e);
                        let {
                            message: t
                        } = ew("UNKNOWN_TYPE", `Target type: ${typeof e}`);
                        throw Error(t)
                    }
                    async setExpirations(e) {
                        await this.core.storage.setItem(this.storageKey, e)
                    }
                    async getExpirations() {
                        return await this.core.storage.getItem(this.storageKey)
                    }
                    async persist() {
                        await this.setExpirations(this.values), this.events.emit(rO.sync)
                    }
                    async restore() {
                        try {
                            let e = await this.getExpirations();
                            if (typeof e > "u" || !e.length) return;
                            if (this.expirations.size) {
                                let {
                                    message: e
                                } = ew("RESTORE_WILL_OVERRIDE", this.name);
                                throw this.logger.error(e), Error(e)
                            }
                            this.cached = e, this.logger.debug(`Successfully Restored expirations for ${this.name}`), this.logger.trace({
                                type: "method",
                                method: "restore",
                                expirations: this.values
                            })
                        } catch (e) {
                            this.logger.debug(`Failed to Restore expirations for ${this.name}`), this.logger.error(e)
                        }
                    }
                    getExpiration(e) {
                        let t = this.expirations.get(e);
                        if (!t) {
                            let {
                                message: t
                            } = ew("NO_MATCHING_KEY", `${this.name}: ${e}`);
                            throw this.logger.error(t), Error(t)
                        }
                        return t
                    }
                    checkExpiry(e, t) {
                        let {
                            expiry: r
                        } = t;
                        (0, h.toMiliseconds)(r) - Date.now() <= 0 && this.expire(e, t)
                    }
                    expire(e, t) {
                        this.expirations.delete(e), this.events.emit(rO.expired, {
                            target: e,
                            expiration: t
                        })
                    }
                    checkExpirations() {
                        this.core.relayer.connected && this.expirations.forEach((e, t) => this.checkExpiry(t, e))
                    }
                    registerEventListeners() {
                        this.core.heartbeat.on(eQ.HEARTBEAT_EVENTS.pulse, () => this.checkExpirations()), this.events.on(rO.created, e => {
                            let t = rO.created;
                            this.logger.info(`Emitting ${t}`), this.logger.debug({
                                type: "event",
                                event: t,
                                data: e
                            }), this.persist()
                        }), this.events.on(rO.expired, e => {
                            let t = rO.expired;
                            this.logger.info(`Emitting ${t}`), this.logger.debug({
                                type: "event",
                                event: t,
                                data: e
                            }), this.persist()
                        }), this.events.on(rO.deleted, e => {
                            let t = rO.deleted;
                            this.logger.info(`Emitting ${t}`), this.logger.debug({
                                type: "event",
                                event: t,
                                data: e
                            }), this.persist()
                        })
                    }
                    isInitialized() {
                        if (!this.initialized) {
                            let {
                                message: e
                            } = ew("NOT_INITIALIZED", this.name);
                            throw Error(e)
                        }
                    }
                    constructor(e, t) {
                        super(e, t), this.core = e, this.logger = t, this.expirations = new Map, this.events = new n.EventEmitter, this.name = "expirer", this.version = "0.3", this.cached = [], this.initialized = !1, this.storagePrefix = rl, this.init = async () => {
                            this.initialized || (this.logger.trace("Initialized"), await this.restore(), this.cached.forEach(e => this.expirations.set(e.target, e)), this.cached = [], this.registerEventListeners(), this.initialized = !0)
                        }, this.has = e => {
                            try {
                                let t = this.formatTarget(e);
                                return "u" > typeof this.getExpiration(t)
                            } catch {
                                return !1
                            }
                        }, this.set = (e, t) => {
                            this.isInitialized();
                            let r = this.formatTarget(e),
                                n = {
                                    target: r,
                                    expiry: t
                                };
                            this.expirations.set(r, n), this.checkExpiry(r, n), this.events.emit(rO.created, {
                                target: r,
                                expiration: n
                            })
                        }, this.get = e => {
                            this.isInitialized();
                            let t = this.formatTarget(e);
                            return this.getExpiration(t)
                        }, this.del = e => {
                            if (this.isInitialized(), this.has(e)) {
                                let t = this.formatTarget(e),
                                    r = this.getExpiration(t);
                                this.expirations.delete(t), this.events.emit(rO.deleted, {
                                    target: t,
                                    expiration: r
                                })
                            }
                        }, this.on = (e, t) => {
                            this.events.on(e, t)
                        }, this.once = (e, t) => {
                            this.events.once(e, t)
                        }, this.off = (e, t) => {
                            this.events.off(e, t)
                        }, this.removeListener = (e, t) => {
                            this.events.removeListener(e, t)
                        }, this.logger = (0, eX.generateChildLogger)(t, this.name)
                    }
                },
                r7 = class extends e7 {
                    get context() {
                        return (0, eX.getLoggerContext)(this.logger)
                    }
                    startAbortTimer(e) {
                        return this.abortController = new AbortController, setTimeout(() => this.abortController.abort(), (0, h.toMiliseconds)(e))
                    }
                    constructor(e, t) {
                        super(e, t), this.projectId = e, this.logger = t, this.name = rT, this.initialized = !1, this.queue = [], this.verifyDisabled = !1, this.init = async e => {
                            if (this.verifyDisabled || D() || !U()) return;
                            let t = this.getVerifyUrl(e ? .verifyUrl);
                            this.verifyUrl !== t && this.removeIframe(), this.verifyUrl = t;
                            try {
                                await this.createIframe()
                            } catch (e) {
                                this.logger.info(`Verify iframe failed to load: ${this.verifyUrl}`), this.logger.info(e)
                            }
                            if (!this.initialized) {
                                this.removeIframe(), this.verifyUrl = rS;
                                try {
                                    await this.createIframe()
                                } catch (e) {
                                    this.logger.info(`Verify iframe failed to load: ${this.verifyUrl}`), this.logger.info(e), this.verifyDisabled = !0
                                }
                            }
                        }, this.register = async e => {
                            this.initialized ? this.sendPost(e.attestationId) : (this.addToQueue(e.attestationId), await this.init())
                        }, this.resolve = async e => {
                            let t;
                            if (this.isDevEnv) return "";
                            let r = this.getVerifyUrl(e ? .verifyUrl);
                            try {
                                t = await this.fetchAttestation(e.attestationId, r)
                            } catch (n) {
                                this.logger.info(`failed to resolve attestation: ${e.attestationId} from url: ${r}`), this.logger.info(n), t = await this.fetchAttestation(e.attestationId, rS)
                            }
                            return t
                        }, this.fetchAttestation = async (e, t) => {
                            this.logger.info(`resolving attestation: ${e} from url: ${t}`);
                            let r = this.startAbortTimer(2 * h.ONE_SECOND),
                                n = await fetch(`${t}/attestation/${e}`, {
                                    signal: this.abortController.signal
                                });
                            return clearTimeout(r), 200 === n.status ? await n.json() : void 0
                        }, this.addToQueue = e => {
                            this.queue.push(e)
                        }, this.processQueue = () => {
                            0 !== this.queue.length && (this.queue.forEach(e => this.sendPost(e)), this.queue = [])
                        }, this.sendPost = e => {
                            var t;
                            try {
                                if (!this.iframe) return;
                                null == (t = this.iframe.contentWindow) || t.postMessage(e, "*"), this.logger.info(`postMessage sent: ${e} ${this.verifyUrl}`)
                            } catch {}
                        }, this.createIframe = async () => {
                            let e;
                            let t = r => {
                                "verify_ready" === r.data && (this.initialized = !0, this.processQueue(), window.removeEventListener("message", t), e())
                            };
                            await Promise.race([new Promise(r => {
                                if (document.getElementById(rT)) return r();
                                window.addEventListener("message", t);
                                let n = document.createElement("iframe");
                                n.id = rT, n.src = `${this.verifyUrl}/${this.projectId}`, n.style.display = "none", document.body.append(n), this.iframe = n, e = r
                            }), new Promise((e, r) => setTimeout(() => {
                                window.removeEventListener("message", t), r("verify iframe load timeout")
                            }, (0, h.toMiliseconds)(h.FIVE_SECONDS)))])
                        }, this.removeIframe = () => {
                            this.iframe && (this.iframe.remove(), this.iframe = void 0, this.initialized = !1)
                        }, this.getVerifyUrl = e => {
                            let t = e || rA;
                            return rj.includes(t) || (this.logger.info(`verify url: ${t}, not included in trusted list, assigning default: ${rA}`), t = rA), t
                        }, this.logger = (0, eX.generateChildLogger)(t, this.name), this.verifyUrl = rA, this.abortController = new AbortController, this.isDevEnv = k() && ({
                            NODE_ENV: "production",
                            PUBLIC_URL: "",
                            WDS_SOCKET_HOST: void 0,
                            WDS_SOCKET_PATH: void 0,
                            WDS_SOCKET_PORT: void 0,
                            FAST_REFRESH: !0,
                            REACT_APP_GIT_COMMIT_HASH: "8cc45eaf0fcbd3883e5fccf29a0db497322a623b",
                            REACT_APP_BNB_RPC_URL: "https://old-wispy-arrow.bsc.quiknode.pro/f5c060177236065c1058531a0615ab4f7a34a2fd",
                            REACT_APP_FIREBASE_KEY: "AIzaSyBcZWwTcTJHj_R6ipZcrJkXdq05PuX0Rs0",
                            REACT_APP_FORTMATIC_KEY: "pk_live_F937DF033A1666BF",
                            REACT_APP_GOOGLE_ANALYTICS_ID: "G-KDP9B6W4H8",
                            REACT_APP_INFURA_KEY: "7c531c4e4a994da4b617ec7396c2d3e2",
                            REACT_APP_MOONPAY_PUBLISHABLE_KEY: "pk_live_uQG4BJC4w3cxnqpcSqAfohdBFDTsY6E",
                            REACT_APP_SENTRY_ENABLED: "true",
                            REACT_APP_SENTRY_TRACES_SAMPLE_RATE: "0.00003",
                            REACT_APP_STATSIG_PROXY_URL: "https://api.uniswap.org/v1/statsig-proxy",
                            REACT_APP_AWS_API_REGION: "us-east-2",
                            REACT_APP_BASE_MAINNET_RPC_URL: "https://cool-white-diagram.base-mainnet.quiknode.pro/d8f036f35dfab2c68f32dfa822cd971e7a25a117/",
                            REACT_APP_SENTRY_DSN: "https://a3c62e400b8748b5a8d007150e2f38b7@o1037921.ingest.sentry.io/4504255148851200",
                            REACT_APP_UNISWAP_API_URL: "https://x8lsvli63i.execute-api.us-east-1.amazonaws.com/prod1",
                            REACT_APP_WALLET_CONNECT_PROJECT_ID: "c6c9bacd35afa3eb9e6cccf6d8464395",
                            REACT_APP_CHAIN_BASE_API: "2Ws7W4zVBrNKMb1iy85UlH8myLH"
                        }).IS_VITEST
                    }
                },
                ne = class extends te {
                    constructor(e, t) {
                        super(e, t), this.projectId = e, this.logger = t, this.context = "echo", this.registerDeviceToken = async e => {
                            let {
                                clientId: t,
                                token: r,
                                notificationType: n,
                                enableEncrypted: i = !1
                            } = e, o = `https://echo.walletconnect.com/${this.projectId}/clients`;
                            await t_()(o, {
                                method: "POST",
                                headers: {
                                    "Content-Type": "application/json"
                                },
                                body: JSON.stringify({
                                    client_id: t,
                                    type: n,
                                    token: r,
                                    always_raw: i
                                })
                            })
                        }, this.logger = (0, eX.generateChildLogger)(t, this.context)
                    }
                };
            var nt = Object.defineProperty,
                nr = Object.getOwnPropertySymbols,
                nn = Object.prototype.hasOwnProperty,
                ni = Object.prototype.propertyIsEnumerable,
                no = (e, t, r) => t in e ? nt(e, t, {
                    enumerable: !0,
                    configurable: !0,
                    writable: !0,
                    value: r
                }) : e[t] = r,
                ns = (e, t) => {
                    for (var r in t || (t = {})) nn.call(t, r) && no(e, r, t[r]);
                    if (nr)
                        for (var r of nr(t)) ni.call(t, r) && no(e, r, t[r]);
                    return e
                };
            let na = class e extends e1 {
                    static async init(t) {
                        let r = new e(t);
                        await r.initialize();
                        let n = await r.crypto.getClientId();
                        return await r.storage.setItem("WALLETCONNECT_CLIENT_ID", n), r
                    }
                    get context() {
                        return (0, eX.getLoggerContext)(this.logger)
                    }
                    async start() {
                        this.initialized || await this.initialize()
                    }
                    async initialize() {
                        this.logger.trace("Initialized");
                        try {
                            await this.crypto.init(), await this.history.init(), await this.expirer.init(), await this.relayer.init(), await this.heartbeat.init(), await this.pairing.init(), this.initialized = !0, this.logger.info("Core Initialization Success")
                        } catch (e) {
                            throw this.logger.warn(`Core Initialization Failure at epoch ${Date.now()}`, e), this.logger.error(e.message), e
                        }
                    }
                    constructor(e) {
                        super(e), this.protocol = "wc", this.version = 2, this.name = ru, this.events = new n.EventEmitter, this.initialized = !1, this.on = (e, t) => this.events.on(e, t), this.once = (e, t) => this.events.once(e, t), this.off = (e, t) => this.events.off(e, t), this.removeListener = (e, t) => this.events.removeListener(e, t), this.projectId = e ? .projectId, this.relayUrl = e ? .relayUrl || rm, this.customStoragePrefix = null != e && e.customStoragePrefix ? `:${e.customStoragePrefix}` : "";
                        let t = "u" > typeof e ? .logger && "string" != typeof e ? .logger ? e.logger : (0, eX.pino)((0, eX.getDefaultLoggerOptions)({
                            level: e ? .logger || rd.logger
                        }));
                        this.logger = (0, eX.generateChildLogger)(t, this.name), this.heartbeat = new eQ.HeartBeat, this.crypto = new rC(this, this.logger, e ? .keychain), this.history = new r4(this, this.logger), this.expirer = new r9(this, this.logger), this.storage = null != e && e.storage ? e.storage : new eZ(ns(ns({}, rh), e ? .storageOptions)), this.relayer = new rQ({
                            core: this,
                            logger: this.logger,
                            relayUrl: this.relayUrl,
                            projectId: this.projectId
                        }), this.pairing = new r8(this, this.logger), this.verify = new r7(this.projectId || "", this.logger), this.echoClient = new ne(this.projectId || "", this.logger)
                    }
                },
                nc = "client",
                nu = `wc@2:${nc}:`,
                nl = {
                    name: nc,
                    logger: "error"
                },
                nd = "WALLETCONNECT_DEEPLINK_CHOICE",
                nh = "Proposal expired",
                nf = h.SEVEN_DAYS,
                np = {
                    wc_sessionPropose: {
                        req: {
                            ttl: h.FIVE_MINUTES,
                            prompt: !0,
                            tag: 1100
                        },
                        res: {
                            ttl: h.FIVE_MINUTES,
                            prompt: !1,
                            tag: 1101
                        }
                    },
                    wc_sessionSettle: {
                        req: {
                            ttl: h.FIVE_MINUTES,
                            prompt: !1,
                            tag: 1102
                        },
                        res: {
                            ttl: h.FIVE_MINUTES,
                            prompt: !1,
                            tag: 1103
                        }
                    },
                    wc_sessionUpdate: {
                        req: {
                            ttl: h.ONE_DAY,
                            prompt: !1,
                            tag: 1104
                        },
                        res: {
                            ttl: h.ONE_DAY,
                            prompt: !1,
                            tag: 1105
                        }
                    },
                    wc_sessionExtend: {
                        req: {
                            ttl: h.ONE_DAY,
                            prompt: !1,
                            tag: 1106
                        },
                        res: {
                            ttl: h.ONE_DAY,
                            prompt: !1,
                            tag: 1107
                        }
                    },
                    wc_sessionRequest: {
                        req: {
                            ttl: h.FIVE_MINUTES,
                            prompt: !0,
                            tag: 1108
                        },
                        res: {
                            ttl: h.FIVE_MINUTES,
                            prompt: !1,
                            tag: 1109
                        }
                    },
                    wc_sessionEvent: {
                        req: {
                            ttl: h.FIVE_MINUTES,
                            prompt: !0,
                            tag: 1110
                        },
                        res: {
                            ttl: h.FIVE_MINUTES,
                            prompt: !1,
                            tag: 1111
                        }
                    },
                    wc_sessionDelete: {
                        req: {
                            ttl: h.ONE_DAY,
                            prompt: !1,
                            tag: 1112
                        },
                        res: {
                            ttl: h.ONE_DAY,
                            prompt: !1,
                            tag: 1113
                        }
                    },
                    wc_sessionPing: {
                        req: {
                            ttl: h.THIRTY_SECONDS,
                            prompt: !1,
                            tag: 1114
                        },
                        res: {
                            ttl: h.THIRTY_SECONDS,
                            prompt: !1,
                            tag: 1115
                        }
                    }
                },
                ng = {
                    min: h.FIVE_MINUTES,
                    max: h.SEVEN_DAYS
                },
                nm = {
                    idle: "IDLE",
                    active: "ACTIVE"
                },
                nb = ["wc_sessionPropose", "wc_sessionRequest", "wc_authRequest"];
            var ny = Object.defineProperty,
                nv = Object.defineProperties,
                nw = Object.getOwnPropertyDescriptors,
                nE = Object.getOwnPropertySymbols,
                n_ = Object.prototype.hasOwnProperty,
                nP = Object.prototype.propertyIsEnumerable,
                nx = (e, t, r) => t in e ? ny(e, t, {
                    enumerable: !0,
                    configurable: !0,
                    writable: !0,
                    value: r
                }) : e[t] = r,
                nI = (e, t) => {
                    for (var r in t || (t = {})) n_.call(t, r) && nx(e, r, t[r]);
                    if (nE)
                        for (var r of nE(t)) nP.call(t, r) && nx(e, r, t[r]);
                    return e
                },
                nO = (e, t) => nv(e, nw(t));
            let nT = class extends tr {
                    async isInitialized() {
                        if (!this.initialized) {
                            let {
                                message: e
                            } = ew("NOT_INITIALIZED", this.name);
                            throw Error(e)
                        }
                        await this.client.core.relayer.confirmOnlineStateOrThrow()
                    }
                    registerRelayerEvents() {
                        this.client.core.relayer.on(ry.message, async e => {
                            let {
                                topic: t,
                                message: r
                            } = e;
                            if (this.ignoredPayloadTypes.includes(this.client.core.crypto.getPayloadType(r))) return;
                            let n = await this.client.core.crypto.decode(t, r);
                            try {
                                (0, tp.isJsonRpcRequest)(n) ? (this.client.core.history.set(t, n), this.onRelayEventRequest({
                                    topic: t,
                                    payload: n
                                })) : (0, tp.isJsonRpcResponse)(n) ? (await this.client.core.history.resolve(n), await this.onRelayEventResponse({
                                    topic: t,
                                    payload: n
                                }), this.client.core.history.delete(t, n.id)) : this.onRelayEventUnknownPayload({
                                    topic: t,
                                    payload: n
                                })
                            } catch (e) {
                                this.client.logger.error(e)
                            }
                        })
                    }
                    registerExpirerEvents() {
                        this.client.core.expirer.on(rO.expired, async e => {
                            let {
                                topic: t,
                                id: r
                            } = G(e.target);
                            if (r && this.client.pendingRequest.keys.includes(r)) return await this.deletePendingSessionRequest(r, ew("EXPIRED"), !0);
                            t ? this.client.session.keys.includes(t) && (await this.deleteSession(t, !0), this.client.events.emit("session_expire", {
                                topic: t
                            })) : r && (await this.deleteProposal(r, !0), this.client.events.emit("proposal_expire", {
                                id: r
                            }))
                        })
                    }
                    registerPairingEvents() {
                        this.client.core.pairing.events.on(rx.create, e => this.onPairingCreated(e))
                    }
                    isValidPairingTopic(e) {
                        if (!eI(e, !1)) {
                            let {
                                message: t
                            } = ew("MISSING_OR_INVALID", `pairing topic should be a string: ${e}`);
                            throw Error(t)
                        }
                        if (!this.client.core.pairing.pairings.keys.includes(e)) {
                            let {
                                message: t
                            } = ew("NO_MATCHING_KEY", `pairing topic doesn't exist: ${e}`);
                            throw Error(t)
                        }
                        if (K(this.client.core.pairing.pairings.get(e).expiry)) {
                            let {
                                message: t
                            } = ew("EXPIRED", `pairing topic: ${e}`);
                            throw Error(t)
                        }
                    }
                    async isValidSessionTopic(e) {
                        if (!eI(e, !1)) {
                            let {
                                message: t
                            } = ew("MISSING_OR_INVALID", `session topic should be a string: ${e}`);
                            throw Error(t)
                        }
                        if (!this.client.session.keys.includes(e)) {
                            let {
                                message: t
                            } = ew("NO_MATCHING_KEY", `session topic doesn't exist: ${e}`);
                            throw Error(t)
                        }
                        if (K(this.client.session.get(e).expiry)) {
                            await this.deleteSession(e);
                            let {
                                message: t
                            } = ew("EXPIRED", `session topic: ${e}`);
                            throw Error(t)
                        }
                    }
                    async isValidSessionOrPairingTopic(e) {
                        if (this.client.session.keys.includes(e)) await this.isValidSessionTopic(e);
                        else if (this.client.core.pairing.pairings.keys.includes(e)) this.isValidPairingTopic(e);
                        else if (eI(e, !1)) {
                            let {
                                message: t
                            } = ew("NO_MATCHING_KEY", `session or pairing topic doesn't exist: ${e}`);
                            throw Error(t)
                        } else {
                            let {
                                message: t
                            } = ew("MISSING_OR_INVALID", `session or pairing topic should be a string: ${e}`);
                            throw Error(t)
                        }
                    }
                    async isValidProposalId(e) {
                        if ("number" != typeof e) {
                            let {
                                message: t
                            } = ew("MISSING_OR_INVALID", `proposal id should be a number: ${e}`);
                            throw Error(t)
                        }
                        if (!this.client.proposal.keys.includes(e)) {
                            let {
                                message: t
                            } = ew("NO_MATCHING_KEY", `proposal id doesn't exist: ${e}`);
                            throw Error(t)
                        }
                        if (K(this.client.proposal.get(e).expiry)) {
                            await this.deleteProposal(e);
                            let {
                                message: t
                            } = ew("EXPIRED", `proposal id: ${e}`);
                            throw Error(t)
                        }
                    }
                    constructor(e) {
                        super(e), this.name = "engine", this.events = new(i()), this.initialized = !1, this.ignoredPayloadTypes = [1], this.requestQueue = {
                            state: nm.idle,
                            queue: []
                        }, this.sessionRequestQueue = {
                            state: nm.idle,
                            queue: []
                        }, this.requestQueueDelay = h.ONE_SECOND, this.init = async () => {
                            this.initialized || (await this.cleanup(), this.registerRelayerEvents(), this.registerExpirerEvents(), this.registerPairingEvents(), this.client.core.pairing.register({
                                methods: Object.keys(np)
                            }), this.initialized = !0, setTimeout(() => {
                                this.sessionRequestQueue.queue = this.getPendingSessionRequests(), this.processSessionRequestQueue()
                            }, (0, h.toMiliseconds)(this.requestQueueDelay)))
                        }, this.connect = async e => {
                            await this.isInitialized();
                            let t = nO(nI({}, e), {
                                requiredNamespaces: e.requiredNamespaces || {},
                                optionalNamespaces: e.optionalNamespaces || {}
                            });
                            await this.isValidConnect(t);
                            let {
                                pairingTopic: r,
                                requiredNamespaces: n,
                                optionalNamespaces: i,
                                sessionProperties: o,
                                relays: s
                            } = t, a = r, c, u = !1;
                            if (a && (u = this.client.core.pairing.pairings.get(a).active), !a || !u) {
                                let {
                                    topic: e,
                                    uri: t
                                } = await this.client.core.pairing.create();
                                a = e, c = t
                            }
                            let l = await this.client.core.crypto.generateKeyPair(),
                                d = nI({
                                    requiredNamespaces: n,
                                    optionalNamespaces: i,
                                    relays: s ? ? [{
                                        protocol: "irn"
                                    }],
                                    proposer: {
                                        publicKey: l,
                                        metadata: this.client.metadata
                                    }
                                }, o && {
                                    sessionProperties: o
                                }),
                                {
                                    reject: f,
                                    resolve: p,
                                    done: g
                                } = $(h.FIVE_MINUTES, nh);
                            if (this.events.once(J("session_connect"), async ({
                                    error: e,
                                    session: t
                                }) => {
                                    if (e) f(e);
                                    else if (t) {
                                        t.self.publicKey = l;
                                        let e = nO(nI({}, t), {
                                            requiredNamespaces: t.requiredNamespaces,
                                            optionalNamespaces: t.optionalNamespaces
                                        });
                                        await this.client.session.set(t.topic, e), await this.setExpiry(t.topic, t.expiry), a && await this.client.core.pairing.updateMetadata({
                                            topic: a,
                                            metadata: t.peer.metadata
                                        }), p(e)
                                    }
                                }), !a) {
                                let {
                                    message: e
                                } = ew("NO_MATCHING_KEY", `connect() pairing topic: ${a}`);
                                throw Error(e)
                            }
                            let m = await this.sendRequest({
                                    topic: a,
                                    method: "wc_sessionPropose",
                                    params: d
                                }),
                                b = W(h.FIVE_MINUTES);
                            return await this.setProposal(m, nI({
                                id: m,
                                expiry: b
                            }, d)), {
                                uri: c,
                                approval: g
                            }
                        }, this.pair = async e => (await this.isInitialized(), await this.client.core.pairing.pair(e)), this.approve = async e => {
                            await this.isInitialized(), await this.isValidApprove(e);
                            let {
                                id: t,
                                relayProtocol: r,
                                namespaces: n,
                                sessionProperties: i
                            } = e, {
                                pairingTopic: o,
                                proposer: s,
                                requiredNamespaces: a,
                                optionalNamespaces: c
                            } = this.client.proposal.get(t);
                            o = o || "", eP(a) || (a = function(e, t) {
                                let r = ej(e, t);
                                if (r) throw Error(r.message);
                                let n = {};
                                for (let [t, r] of Object.entries(e)) n[t] = {
                                    methods: r.methods,
                                    events: r.events,
                                    chains: r.accounts.map(e => `${e.split(":")[0]}:${e.split(":")[1]}`)
                                };
                                return n
                            }(n, "approve()"));
                            let u = await this.client.core.crypto.generateKeyPair(),
                                l = s.publicKey,
                                d = await this.client.core.crypto.generateSharedKey(u, l);
                            o && t && (await this.client.core.pairing.updateMetadata({
                                topic: o,
                                metadata: s.metadata
                            }), await this.sendResult({
                                id: t,
                                topic: o,
                                result: {
                                    relay: {
                                        protocol: r ? ? "irn"
                                    },
                                    responderPublicKey: u
                                }
                            }), await this.client.proposal.delete(t, eE("USER_DISCONNECTED")), await this.client.core.pairing.activate({
                                topic: o
                            }));
                            let h = nI({
                                relay: {
                                    protocol: r ? ? "irn"
                                },
                                namespaces: n,
                                requiredNamespaces: a,
                                optionalNamespaces: c,
                                pairingTopic: o,
                                controller: {
                                    publicKey: u,
                                    metadata: this.client.metadata
                                },
                                expiry: W(nf)
                            }, i && {
                                sessionProperties: i
                            });
                            await this.client.core.relayer.subscribe(d), await this.sendRequest({
                                topic: d,
                                method: "wc_sessionSettle",
                                params: h,
                                throwOnFailedPublish: !0
                            });
                            let f = nO(nI({}, h), {
                                topic: d,
                                pairingTopic: o,
                                acknowledged: !1,
                                self: h.controller,
                                peer: {
                                    publicKey: s.publicKey,
                                    metadata: s.metadata
                                },
                                controller: u
                            });
                            return await this.client.session.set(d, f), await this.setExpiry(d, W(nf)), {
                                topic: d,
                                acknowledged: () => new Promise(e => setTimeout(() => e(this.client.session.get(d)), 500))
                            }
                        }, this.reject = async e => {
                            await this.isInitialized(), await this.isValidReject(e);
                            let {
                                id: t,
                                reason: r
                            } = e, {
                                pairingTopic: n
                            } = this.client.proposal.get(t);
                            n && (await this.sendError(t, n, r), await this.client.proposal.delete(t, eE("USER_DISCONNECTED")))
                        }, this.update = async e => {
                            await this.isInitialized(), await this.isValidUpdate(e);
                            let {
                                topic: t,
                                namespaces: r
                            } = e, n = await this.sendRequest({
                                topic: t,
                                method: "wc_sessionUpdate",
                                params: {
                                    namespaces: r
                                }
                            }), {
                                done: i,
                                resolve: o,
                                reject: s
                            } = $();
                            return this.events.once(J("session_update", n), ({
                                error: e
                            }) => {
                                e ? s(e) : o()
                            }), await this.client.session.update(t, {
                                namespaces: r
                            }), {
                                acknowledged: i
                            }
                        }, this.extend = async e => {
                            await this.isInitialized(), await this.isValidExtend(e);
                            let {
                                topic: t
                            } = e, r = await this.sendRequest({
                                topic: t,
                                method: "wc_sessionExtend",
                                params: {}
                            }), {
                                done: n,
                                resolve: i,
                                reject: o
                            } = $();
                            return this.events.once(J("session_extend", r), ({
                                error: e
                            }) => {
                                e ? o(e) : i()
                            }), await this.setExpiry(t, W(nf)), {
                                acknowledged: n
                            }
                        }, this.request = async e => {
                            await this.isInitialized(), await this.isValidRequest(e);
                            let {
                                chainId: t,
                                request: r,
                                topic: n,
                                expiry: i
                            } = e, o = (0, tp.payloadId)(), {
                                done: s,
                                resolve: a,
                                reject: c
                            } = $(i, "Request expired. Please try again.");
                            return this.events.once(J("session_request", o), ({
                                error: e,
                                result: t
                            }) => {
                                e ? c(e) : a(t)
                            }), await Promise.all([new Promise(async e => {
                                await this.sendRequest({
                                    clientRpcId: o,
                                    topic: n,
                                    method: "wc_sessionRequest",
                                    params: {
                                        request: r,
                                        chainId: t
                                    },
                                    expiry: i,
                                    throwOnFailedPublish: !0
                                }).catch(e => c(e)), this.client.events.emit("session_request_sent", {
                                    topic: n,
                                    request: r,
                                    chainId: t,
                                    id: o
                                }), e()
                            }), new Promise(async e => {
                                Z({
                                    id: o,
                                    topic: n,
                                    wcDeepLink: await Q(this.client.core.storage, nd)
                                }), e()
                            }), s()]).then(e => e[2])
                        }, this.respond = async e => {
                            await this.isInitialized(), await this.isValidRespond(e);
                            let {
                                topic: t,
                                response: r
                            } = e, {
                                id: n
                            } = r;
                            (0, tp.isJsonRpcResult)(r) ? await this.sendResult({
                                id: n,
                                topic: t,
                                result: r.result,
                                throwOnFailedPublish: !0
                            }): (0, tp.isJsonRpcError)(r) && await this.sendError(n, t, r.error), this.cleanupAfterResponse(e)
                        }, this.ping = async e => {
                            await this.isInitialized(), await this.isValidPing(e);
                            let {
                                topic: t
                            } = e;
                            if (this.client.session.keys.includes(t)) {
                                let e = await this.sendRequest({
                                        topic: t,
                                        method: "wc_sessionPing",
                                        params: {}
                                    }),
                                    {
                                        done: r,
                                        resolve: n,
                                        reject: i
                                    } = $();
                                this.events.once(J("session_ping", e), ({
                                    error: e
                                }) => {
                                    e ? i(e) : n()
                                }), await r()
                            } else this.client.core.pairing.pairings.keys.includes(t) && await this.client.core.pairing.ping({
                                topic: t
                            })
                        }, this.emit = async e => {
                            await this.isInitialized(), await this.isValidEmit(e);
                            let {
                                topic: t,
                                event: r,
                                chainId: n
                            } = e;
                            await this.sendRequest({
                                topic: t,
                                method: "wc_sessionEvent",
                                params: {
                                    event: r,
                                    chainId: n
                                }
                            })
                        }, this.disconnect = async e => {
                            await this.isInitialized(), await this.isValidDisconnect(e);
                            let {
                                topic: t
                            } = e;
                            this.client.session.keys.includes(t) ? (await this.sendRequest({
                                topic: t,
                                method: "wc_sessionDelete",
                                params: eE("USER_DISCONNECTED"),
                                throwOnFailedPublish: !0
                            }), await this.deleteSession(t)) : await this.client.core.pairing.disconnect({
                                topic: t
                            })
                        }, this.find = e => (this.isInitialized(), this.client.session.getAll().filter(t => (function(e, t) {
                            let {
                                requiredNamespaces: r
                            } = t, n = Object.keys(e.namespaces), i = Object.keys(r), o = !0;
                            return !!F(i, n) && (n.forEach(t => {
                                let {
                                    accounts: n,
                                    methods: i,
                                    events: s
                                } = e.namespaces[t], a = eg(n), c = r[t];
                                F(y(t, c), a) && F(c.methods, i) && F(c.events, s) || (o = !1)
                            }), o)
                        })(t, e))), this.getPendingSessionRequests = () => (this.isInitialized(), this.client.pendingRequest.getAll()), this.cleanupDuplicatePairings = async e => {
                            if (e.pairingTopic) try {
                                let t = this.client.core.pairing.pairings.get(e.pairingTopic),
                                    r = this.client.core.pairing.pairings.getAll().filter(r => {
                                        var n, i;
                                        return (null == (n = r.peerMetadata) ? void 0 : n.url) && (null == (i = r.peerMetadata) ? void 0 : i.url) === e.peer.metadata.url && r.topic && r.topic !== t.topic
                                    });
                                if (0 === r.length) return;
                                this.client.logger.info(`Cleaning up ${r.length} duplicate pairing(s)`), await Promise.all(r.map(e => this.client.core.pairing.disconnect({
                                    topic: e.topic
                                }))), this.client.logger.info("Duplicate pairings clean up finished")
                            } catch (e) {
                                this.client.logger.error(e)
                            }
                        }, this.deleteSession = async (e, t) => {
                            let {
                                self: r
                            } = this.client.session.get(e);
                            await this.client.core.relayer.unsubscribe(e), this.client.session.delete(e, eE("USER_DISCONNECTED")), this.client.core.crypto.keychain.has(r.publicKey) && await this.client.core.crypto.deleteKeyPair(r.publicKey), this.client.core.crypto.keychain.has(e) && await this.client.core.crypto.deleteSymKey(e), t || this.client.core.expirer.del(e), this.client.core.storage.removeItem(nd).catch(e => this.client.logger.warn(e)), this.getPendingSessionRequests().forEach(t => {
                                t.topic === e && this.deletePendingSessionRequest(t.id, eE("USER_DISCONNECTED"))
                            })
                        }, this.deleteProposal = async (e, t) => {
                            await Promise.all([this.client.proposal.delete(e, eE("USER_DISCONNECTED")), t ? Promise.resolve() : this.client.core.expirer.del(e)])
                        }, this.deletePendingSessionRequest = async (e, t, r = !1) => {
                            await Promise.all([this.client.pendingRequest.delete(e, t), r ? Promise.resolve() : this.client.core.expirer.del(e)]), this.sessionRequestQueue.queue = this.sessionRequestQueue.queue.filter(t => t.id !== e), r && (this.sessionRequestQueue.state = nm.idle)
                        }, this.setExpiry = async (e, t) => {
                            this.client.session.keys.includes(e) && await this.client.session.update(e, {
                                expiry: t
                            }), this.client.core.expirer.set(e, t)
                        }, this.setProposal = async (e, t) => {
                            await this.client.proposal.set(e, t), this.client.core.expirer.set(e, t.expiry)
                        }, this.setPendingSessionRequest = async e => {
                            let t = np.wc_sessionRequest.req.ttl,
                                {
                                    id: r,
                                    topic: n,
                                    params: i,
                                    verifyContext: o
                                } = e;
                            await this.client.pendingRequest.set(r, {
                                id: r,
                                topic: n,
                                params: i,
                                verifyContext: o
                            }), t && this.client.core.expirer.set(r, W(t))
                        }, this.sendRequest = async e => {
                            let {
                                topic: t,
                                method: r,
                                params: n,
                                expiry: i,
                                relayRpcId: o,
                                clientRpcId: s,
                                throwOnFailedPublish: a
                            } = e, c = (0, tp.formatJsonRpcRequest)(r, n, s);
                            if (U() && nb.includes(r)) {
                                let e = x(JSON.stringify(c));
                                this.client.core.verify.register({
                                    attestationId: e
                                })
                            }
                            let u = await this.client.core.crypto.encode(t, c),
                                l = np[r].req;
                            return i && (l.ttl = i), o && (l.id = o), this.client.core.history.set(t, c), a ? (l.internal = nO(nI({}, l.internal), {
                                throwOnFailedPublish: !0
                            }), await this.client.core.relayer.publish(t, u, l)) : this.client.core.relayer.publish(t, u, l).catch(e => this.client.logger.error(e)), c.id
                        }, this.sendResult = async e => {
                            let {
                                id: t,
                                topic: r,
                                result: n,
                                throwOnFailedPublish: i
                            } = e, o = (0, tp.formatJsonRpcResult)(t, n), s = await this.client.core.crypto.encode(r, o), a = np[(await this.client.core.history.get(r, t)).request.method].res;
                            i ? (a.internal = nO(nI({}, a.internal), {
                                throwOnFailedPublish: !0
                            }), await this.client.core.relayer.publish(r, s, a)) : this.client.core.relayer.publish(r, s, a).catch(e => this.client.logger.error(e)), await this.client.core.history.resolve(o)
                        }, this.sendError = async (e, t, r) => {
                            let n = (0, tp.formatJsonRpcError)(e, r),
                                i = await this.client.core.crypto.encode(t, n),
                                o = np[(await this.client.core.history.get(t, e)).request.method].res;
                            this.client.core.relayer.publish(t, i, o), await this.client.core.history.resolve(n)
                        }, this.cleanup = async () => {
                            let e = [],
                                t = [];
                            this.client.session.getAll().forEach(t => {
                                K(t.expiry) && e.push(t.topic)
                            }), this.client.proposal.getAll().forEach(e => {
                                K(e.expiry) && t.push(e.id)
                            }), await Promise.all([...e.map(e => this.deleteSession(e)), ...t.map(e => this.deleteProposal(e))])
                        }, this.onRelayEventRequest = async e => {
                            this.requestQueue.queue.push(e), await this.processRequestsQueue()
                        }, this.processRequestsQueue = async () => {
                            if (this.requestQueue.state === nm.active) {
                                this.client.logger.info("Request queue already active, skipping...");
                                return
                            }
                            for (this.client.logger.info(`Request queue starting with ${this.requestQueue.queue.length} requests`); this.requestQueue.queue.length > 0;) {
                                this.requestQueue.state = nm.active;
                                let e = this.requestQueue.queue.shift();
                                if (e) try {
                                    this.processRequest(e), await new Promise(e => setTimeout(e, 300))
                                } catch (e) {
                                    this.client.logger.warn(e)
                                }
                            }
                            this.requestQueue.state = nm.idle
                        }, this.processRequest = e => {
                            let {
                                topic: t,
                                payload: r
                            } = e, n = r.method;
                            switch (n) {
                                case "wc_sessionPropose":
                                    return this.onSessionProposeRequest(t, r);
                                case "wc_sessionSettle":
                                    return this.onSessionSettleRequest(t, r);
                                case "wc_sessionUpdate":
                                    return this.onSessionUpdateRequest(t, r);
                                case "wc_sessionExtend":
                                    return this.onSessionExtendRequest(t, r);
                                case "wc_sessionPing":
                                    return this.onSessionPingRequest(t, r);
                                case "wc_sessionDelete":
                                    return this.onSessionDeleteRequest(t, r);
                                case "wc_sessionRequest":
                                    return this.onSessionRequest(t, r);
                                case "wc_sessionEvent":
                                    return this.onSessionEventRequest(t, r);
                                default:
                                    return this.client.logger.info(`Unsupported request method ${n}`)
                            }
                        }, this.onRelayEventResponse = async e => {
                            let {
                                topic: t,
                                payload: r
                            } = e, n = (await this.client.core.history.get(t, r.id)).request.method;
                            switch (n) {
                                case "wc_sessionPropose":
                                    return this.onSessionProposeResponse(t, r);
                                case "wc_sessionSettle":
                                    return this.onSessionSettleResponse(t, r);
                                case "wc_sessionUpdate":
                                    return this.onSessionUpdateResponse(t, r);
                                case "wc_sessionExtend":
                                    return this.onSessionExtendResponse(t, r);
                                case "wc_sessionPing":
                                    return this.onSessionPingResponse(t, r);
                                case "wc_sessionRequest":
                                    return this.onSessionRequestResponse(t, r);
                                default:
                                    return this.client.logger.info(`Unsupported response method ${n}`)
                            }
                        }, this.onRelayEventUnknownPayload = e => {
                            let {
                                topic: t
                            } = e, {
                                message: r
                            } = ew("MISSING_OR_INVALID", `Decoded payload on topic ${t} is not identifiable as a JSON-RPC request or a response.`);
                            throw Error(r)
                        }, this.onSessionProposeRequest = async (e, t) => {
                            let {
                                params: r,
                                id: n
                            } = t;
                            try {
                                this.isValidConnect(nI({}, t.params));
                                let i = W(h.FIVE_MINUTES),
                                    o = nI({
                                        id: n,
                                        pairingTopic: e,
                                        expiry: i
                                    }, r);
                                await this.setProposal(n, o);
                                let s = x(JSON.stringify(t)),
                                    a = await this.getVerifyContext(s, o.proposer.metadata);
                                this.client.events.emit("session_proposal", {
                                    id: n,
                                    params: o,
                                    verifyContext: a
                                })
                            } catch (t) {
                                await this.sendError(n, e, t), this.client.logger.error(t)
                            }
                        }, this.onSessionProposeResponse = async (e, t) => {
                            let {
                                id: r
                            } = t;
                            if ((0, tp.isJsonRpcResult)(t)) {
                                let {
                                    result: n
                                } = t;
                                this.client.logger.trace({
                                    type: "method",
                                    method: "onSessionProposeResponse",
                                    result: n
                                });
                                let i = this.client.proposal.get(r);
                                this.client.logger.trace({
                                    type: "method",
                                    method: "onSessionProposeResponse",
                                    proposal: i
                                });
                                let o = i.proposer.publicKey;
                                this.client.logger.trace({
                                    type: "method",
                                    method: "onSessionProposeResponse",
                                    selfPublicKey: o
                                });
                                let s = n.responderPublicKey;
                                this.client.logger.trace({
                                    type: "method",
                                    method: "onSessionProposeResponse",
                                    peerPublicKey: s
                                });
                                let a = await this.client.core.crypto.generateSharedKey(o, s);
                                this.client.logger.trace({
                                    type: "method",
                                    method: "onSessionProposeResponse",
                                    sessionTopic: a
                                });
                                let c = await this.client.core.relayer.subscribe(a);
                                this.client.logger.trace({
                                    type: "method",
                                    method: "onSessionProposeResponse",
                                    subscriptionId: c
                                }), await this.client.core.pairing.activate({
                                    topic: e
                                })
                            } else(0, tp.isJsonRpcError)(t) && (await this.client.proposal.delete(r, eE("USER_DISCONNECTED")), this.events.emit(J("session_connect"), {
                                error: t.error
                            }))
                        }, this.onSessionSettleRequest = async (e, t) => {
                            let {
                                id: r,
                                params: n
                            } = t;
                            try {
                                this.isValidSessionSettleRequest(n);
                                let {
                                    relay: r,
                                    controller: i,
                                    expiry: o,
                                    namespaces: s,
                                    requiredNamespaces: a,
                                    optionalNamespaces: c,
                                    sessionProperties: u,
                                    pairingTopic: l
                                } = t.params, d = nI({
                                    topic: e,
                                    relay: r,
                                    expiry: o,
                                    namespaces: s,
                                    acknowledged: !0,
                                    pairingTopic: l,
                                    requiredNamespaces: a,
                                    optionalNamespaces: c,
                                    controller: i.publicKey,
                                    self: {
                                        publicKey: "",
                                        metadata: this.client.metadata
                                    },
                                    peer: {
                                        publicKey: i.publicKey,
                                        metadata: i.metadata
                                    }
                                }, u && {
                                    sessionProperties: u
                                });
                                await this.sendResult({
                                    id: t.id,
                                    topic: e,
                                    result: !0
                                }), this.events.emit(J("session_connect"), {
                                    session: d
                                }), this.cleanupDuplicatePairings(d)
                            } catch (t) {
                                await this.sendError(r, e, t), this.client.logger.error(t)
                            }
                        }, this.onSessionSettleResponse = async (e, t) => {
                            let {
                                id: r
                            } = t;
                            (0, tp.isJsonRpcResult)(t) ? (await this.client.session.update(e, {
                                acknowledged: !0
                            }), this.events.emit(J("session_approve", r), {})) : (0, tp.isJsonRpcError)(t) && (await this.client.session.delete(e, eE("USER_DISCONNECTED")), this.events.emit(J("session_approve", r), {
                                error: t.error
                            }))
                        }, this.onSessionUpdateRequest = async (e, t) => {
                            let {
                                params: r,
                                id: n
                            } = t;
                            try {
                                let t = `${e}_session_update`,
                                    i = eL.get(t);
                                if (i && this.isRequestOutOfSync(i, n)) {
                                    this.client.logger.info(`Discarding out of sync request - ${n}`);
                                    return
                                }
                                this.isValidUpdate(nI({
                                    topic: e
                                }, r)), await this.client.session.update(e, {
                                    namespaces: r.namespaces
                                }), await this.sendResult({
                                    id: n,
                                    topic: e,
                                    result: !0
                                }), this.client.events.emit("session_update", {
                                    id: n,
                                    topic: e,
                                    params: r
                                }), eL.set(t, n)
                            } catch (t) {
                                await this.sendError(n, e, t), this.client.logger.error(t)
                            }
                        }, this.isRequestOutOfSync = (e, t) => parseInt(t.toString().slice(0, -3)) <= parseInt(e.toString().slice(0, -3)), this.onSessionUpdateResponse = (e, t) => {
                            let {
                                id: r
                            } = t;
                            (0, tp.isJsonRpcResult)(t) ? this.events.emit(J("session_update", r), {}): (0, tp.isJsonRpcError)(t) && this.events.emit(J("session_update", r), {
                                error: t.error
                            })
                        }, this.onSessionExtendRequest = async (e, t) => {
                            let {
                                id: r
                            } = t;
                            try {
                                this.isValidExtend({
                                    topic: e
                                }), await this.setExpiry(e, W(nf)), await this.sendResult({
                                    id: r,
                                    topic: e,
                                    result: !0
                                }), this.client.events.emit("session_extend", {
                                    id: r,
                                    topic: e
                                })
                            } catch (t) {
                                await this.sendError(r, e, t), this.client.logger.error(t)
                            }
                        }, this.onSessionExtendResponse = (e, t) => {
                            let {
                                id: r
                            } = t;
                            (0, tp.isJsonRpcResult)(t) ? this.events.emit(J("session_extend", r), {}): (0, tp.isJsonRpcError)(t) && this.events.emit(J("session_extend", r), {
                                error: t.error
                            })
                        }, this.onSessionPingRequest = async (e, t) => {
                            let {
                                id: r
                            } = t;
                            try {
                                this.isValidPing({
                                    topic: e
                                }), await this.sendResult({
                                    id: r,
                                    topic: e,
                                    result: !0
                                }), this.client.events.emit("session_ping", {
                                    id: r,
                                    topic: e
                                })
                            } catch (t) {
                                await this.sendError(r, e, t), this.client.logger.error(t)
                            }
                        }, this.onSessionPingResponse = (e, t) => {
                            let {
                                id: r
                            } = t;
                            setTimeout(() => {
                                (0, tp.isJsonRpcResult)(t) ? this.events.emit(J("session_ping", r), {}): (0, tp.isJsonRpcError)(t) && this.events.emit(J("session_ping", r), {
                                    error: t.error
                                })
                            }, 500)
                        }, this.onSessionDeleteRequest = async (e, t) => {
                            let {
                                id: r
                            } = t;
                            try {
                                this.isValidDisconnect({
                                    topic: e,
                                    reason: t.params
                                }), await Promise.all([new Promise(t => {
                                    this.client.core.relayer.once(ry.publish, async () => {
                                        t(await this.deleteSession(e))
                                    })
                                }), this.sendResult({
                                    id: r,
                                    topic: e,
                                    result: !0
                                })]), this.client.events.emit("session_delete", {
                                    id: r,
                                    topic: e
                                })
                            } catch (e) {
                                this.client.logger.error(e)
                            }
                        }, this.onSessionRequest = async (e, t) => {
                            let {
                                id: r,
                                params: n
                            } = t;
                            try {
                                this.isValidRequest(nI({
                                    topic: e
                                }, n));
                                let t = x(JSON.stringify((0, tp.formatJsonRpcRequest)("wc_sessionRequest", n, r))),
                                    i = this.client.session.get(e),
                                    o = await this.getVerifyContext(t, i.peer.metadata),
                                    s = {
                                        id: r,
                                        topic: e,
                                        params: n,
                                        verifyContext: o
                                    };
                                await this.setPendingSessionRequest(s), this.addSessionRequestToSessionRequestQueue(s), this.processSessionRequestQueue()
                            } catch (t) {
                                await this.sendError(r, e, t), this.client.logger.error(t)
                            }
                        }, this.onSessionRequestResponse = (e, t) => {
                            let {
                                id: r
                            } = t;
                            (0, tp.isJsonRpcResult)(t) ? this.events.emit(J("session_request", r), {
                                result: t.result
                            }): (0, tp.isJsonRpcError)(t) && this.events.emit(J("session_request", r), {
                                error: t.error
                            })
                        }, this.onSessionEventRequest = async (e, t) => {
                            let {
                                id: r,
                                params: n
                            } = t;
                            try {
                                let t = `${e}_session_event_${n.event.name}`,
                                    i = eL.get(t);
                                if (i && this.isRequestOutOfSync(i, r)) {
                                    this.client.logger.info(`Discarding out of sync request - ${r}`);
                                    return
                                }
                                this.isValidEmit(nI({
                                    topic: e
                                }, n)), this.client.events.emit("session_event", {
                                    id: r,
                                    topic: e,
                                    params: n
                                }), eL.set(t, r)
                            } catch (t) {
                                await this.sendError(r, e, t), this.client.logger.error(t)
                            }
                        }, this.addSessionRequestToSessionRequestQueue = e => {
                            this.sessionRequestQueue.queue.push(e)
                        }, this.cleanupAfterResponse = e => {
                            this.deletePendingSessionRequest(e.response.id, {
                                message: "fulfilled",
                                code: 0
                            }), setTimeout(() => {
                                this.sessionRequestQueue.state = nm.idle, this.processSessionRequestQueue()
                            }, (0, h.toMiliseconds)(this.requestQueueDelay))
                        }, this.processSessionRequestQueue = () => {
                            if (this.sessionRequestQueue.state === nm.active) {
                                this.client.logger.info("session request queue is already active.");
                                return
                            }
                            let e = this.sessionRequestQueue.queue[0];
                            if (!e) {
                                this.client.logger.info("session request queue is empty.");
                                return
                            }
                            try {
                                this.sessionRequestQueue.state = nm.active, this.client.events.emit("session_request", e)
                            } catch (e) {
                                this.client.logger.error(e)
                            }
                        }, this.onPairingCreated = e => {
                            if (e.active) return;
                            let t = this.client.proposal.getAll().find(t => t.pairingTopic === e.topic);
                            t && this.onSessionProposeRequest(e.topic, (0, tp.formatJsonRpcRequest)("wc_sessionPropose", {
                                requiredNamespaces: t.requiredNamespaces,
                                optionalNamespaces: t.optionalNamespaces,
                                relays: t.relays,
                                proposer: t.proposer,
                                sessionProperties: t.sessionProperties
                            }, t.id))
                        }, this.isValidConnect = async e => {
                            if (!eC(e)) {
                                let {
                                    message: t
                                } = ew("MISSING_OR_INVALID", `connect() params: ${JSON.stringify(e)}`);
                                throw Error(t)
                            }
                            let {
                                pairingTopic: t,
                                requiredNamespaces: r,
                                optionalNamespaces: n,
                                sessionProperties: i,
                                relays: o
                            } = e;
                            if (ex(t) || await this.isValidPairingTopic(t), ! function(e, t) {
                                    let r = !1;
                                    return t && !e ? r = !0 : e && e_(e) && e.length && e.forEach(e => {
                                        r = eR(e)
                                    }), r
                                }(o, !0)) {
                                let {
                                    message: e
                                } = ew("MISSING_OR_INVALID", `connect() relays: ${o}`);
                                throw Error(e)
                            }
                            ex(r) || 0 === eP(r) || this.validateNamespaces(r, "requiredNamespaces"), ex(n) || 0 === eP(n) || this.validateNamespaces(n, "optionalNamespaces"), ex(i) || this.validateSessionProps(i, "sessionProperties")
                        }, this.validateNamespaces = (e, t) => {
                            let r = function(e, t, r) {
                                let n = null;
                                if (e && eP(e)) {
                                    let i;
                                    let o = eS(e, t);
                                    o && (n = o);
                                    let s = (i = null, Object.entries(e).forEach(([e, n]) => {
                                        var o, s;
                                        let a;
                                        if (i) return;
                                        let c = (o = y(e, n), s = `${t} ${r}`, a = null, e_(o) && o.length ? o.forEach(e => {
                                            a || eT(e) || (a = eE("UNSUPPORTED_CHAINS", `${s}, chain ${e} should be a string and conform to "namespace:chainId" format`))
                                        }) : eT(e) || (a = eE("UNSUPPORTED_CHAINS", `${s}, chains must be defined as "namespace:chainId" e.g. "eip155:1": {...} in the namespace key OR as an array of CAIP-2 chainIds e.g. eip155: { chains: ["eip155:1", "eip155:5"] }`)), a);
                                        c && (i = c)
                                    }), i);
                                    s && (n = s)
                                } else n = ew("MISSING_OR_INVALID", `${t}, ${r} should be an object with data`);
                                return n
                            }(e, "connect()", t);
                            if (r) throw Error(r.message)
                        }, this.isValidApprove = async e => {
                            if (!eC(e)) throw Error(ew("MISSING_OR_INVALID", `approve() params: ${e}`).message);
                            let {
                                id: t,
                                namespaces: r,
                                relayProtocol: n,
                                sessionProperties: i
                            } = e;
                            await this.isValidProposalId(t);
                            let o = this.client.proposal.get(t),
                                s = ej(r, "approve()");
                            if (s) throw Error(s.message);
                            let a = eM(o.requiredNamespaces, r, "approve()");
                            if (a) throw Error(a.message);
                            if (!eI(n, !0)) {
                                let {
                                    message: e
                                } = ew("MISSING_OR_INVALID", `approve() relayProtocol: ${n}`);
                                throw Error(e)
                            }
                            ex(i) || this.validateSessionProps(i, "sessionProperties")
                        }, this.isValidReject = async e => {
                            if (!eC(e)) {
                                let {
                                    message: t
                                } = ew("MISSING_OR_INVALID", `reject() params: ${e}`);
                                throw Error(t)
                            }
                            let {
                                id: t,
                                reason: r
                            } = e;
                            if (await this.isValidProposalId(t), ! function(e) {
                                    return !(!e || "object" != typeof e || !e.code || !eO(e.code, !1) || !e.message || !eI(e.message, !1))
                                }(r)) {
                                let {
                                    message: e
                                } = ew("MISSING_OR_INVALID", `reject() reason: ${JSON.stringify(r)}`);
                                throw Error(e)
                            }
                        }, this.isValidSessionSettleRequest = e => {
                            if (!eC(e)) {
                                let {
                                    message: t
                                } = ew("MISSING_OR_INVALID", `onSessionSettleRequest() params: ${e}`);
                                throw Error(t)
                            }
                            let {
                                relay: t,
                                controller: r,
                                namespaces: n,
                                expiry: i
                            } = e;
                            if (!eR(t)) {
                                let {
                                    message: e
                                } = ew("MISSING_OR_INVALID", "onSessionSettleRequest() relay protocol should be a string");
                                throw Error(e)
                            }
                            let o = function(e, t) {
                                let r = null;
                                return eI(e ? .publicKey, !1) || (r = ew("MISSING_OR_INVALID", `${t} controller public key should be a string`)), r
                            }(r, "onSessionSettleRequest()");
                            if (o) throw Error(o.message);
                            let s = ej(n, "onSessionSettleRequest()");
                            if (s) throw Error(s.message);
                            if (K(i)) {
                                let {
                                    message: e
                                } = ew("EXPIRED", "onSessionSettleRequest()");
                                throw Error(e)
                            }
                        }, this.isValidUpdate = async e => {
                            if (!eC(e)) {
                                let {
                                    message: t
                                } = ew("MISSING_OR_INVALID", `update() params: ${e}`);
                                throw Error(t)
                            }
                            let {
                                topic: t,
                                namespaces: r
                            } = e;
                            await this.isValidSessionTopic(t);
                            let n = this.client.session.get(t),
                                i = ej(r, "update()");
                            if (i) throw Error(i.message);
                            let o = eM(n.requiredNamespaces, r, "update()");
                            if (o) throw Error(o.message)
                        }, this.isValidExtend = async e => {
                            if (!eC(e)) {
                                let {
                                    message: t
                                } = ew("MISSING_OR_INVALID", `extend() params: ${e}`);
                                throw Error(t)
                            }
                            let {
                                topic: t
                            } = e;
                            await this.isValidSessionTopic(t)
                        }, this.isValidRequest = async e => {
                            if (!eC(e)) {
                                let {
                                    message: t
                                } = ew("MISSING_OR_INVALID", `request() params: ${e}`);
                                throw Error(t)
                            }
                            let {
                                topic: t,
                                request: r,
                                chainId: n,
                                expiry: i
                            } = e;
                            await this.isValidSessionTopic(t);
                            let {
                                namespaces: o
                            } = this.client.session.get(t);
                            if (!eN(o, n)) {
                                let {
                                    message: e
                                } = ew("MISSING_OR_INVALID", `request() chainId: ${n}`);
                                throw Error(e)
                            }
                            if (! function(e) {
                                    return !(ex(e) || !eI(e.method, !1))
                                }(r)) {
                                let {
                                    message: e
                                } = ew("MISSING_OR_INVALID", `request() ${JSON.stringify(r)}`);
                                throw Error(e)
                            }
                            if (! function(e, t, r) {
                                    return !!eI(r, !1) && (function(e, t) {
                                        let r = [];
                                        return Object.values(e).forEach(e => {
                                            eg(e.accounts).includes(t) && r.push(...e.methods)
                                        }), r
                                    })(e, t).includes(r)
                                }(o, n, r.method)) {
                                let {
                                    message: e
                                } = ew("MISSING_OR_INVALID", `request() method: ${r.method}`);
                                throw Error(e)
                            }
                            if (i && ! function(e, t) {
                                    return eO(e, !1) && e <= t.max && e >= t.min
                                }(i, ng)) {
                                let {
                                    message: e
                                } = ew("MISSING_OR_INVALID", `request() expiry: ${i}. Expiry must be a number (in seconds) between ${ng.min} and ${ng.max}`);
                                throw Error(e)
                            }
                        }, this.isValidRespond = async e => {
                            var t;
                            if (!eC(e)) {
                                let {
                                    message: t
                                } = ew("MISSING_OR_INVALID", `respond() params: ${e}`);
                                throw Error(t)
                            }
                            let {
                                topic: r,
                                response: n
                            } = e;
                            try {
                                await this.isValidSessionTopic(r)
                            } catch (r) {
                                throw null != (t = e ? .response) && t.id && this.cleanupAfterResponse(e), r
                            }
                            if (! function(e) {
                                    return !(ex(e) || ex(e.result) && ex(e.error) || !eO(e.id, !1) || !eI(e.jsonrpc, !1))
                                }(n)) {
                                let {
                                    message: e
                                } = ew("MISSING_OR_INVALID", `respond() response: ${JSON.stringify(n)}`);
                                throw Error(e)
                            }
                        }, this.isValidPing = async e => {
                            if (!eC(e)) {
                                let {
                                    message: t
                                } = ew("MISSING_OR_INVALID", `ping() params: ${e}`);
                                throw Error(t)
                            }
                            let {
                                topic: t
                            } = e;
                            await this.isValidSessionOrPairingTopic(t)
                        }, this.isValidEmit = async e => {
                            if (!eC(e)) {
                                let {
                                    message: t
                                } = ew("MISSING_OR_INVALID", `emit() params: ${e}`);
                                throw Error(t)
                            }
                            let {
                                topic: t,
                                event: r,
                                chainId: n
                            } = e;
                            await this.isValidSessionTopic(t);
                            let {
                                namespaces: i
                            } = this.client.session.get(t);
                            if (!eN(i, n)) {
                                let {
                                    message: e
                                } = ew("MISSING_OR_INVALID", `emit() chainId: ${n}`);
                                throw Error(e)
                            }
                            if (! function(e) {
                                    return !(ex(e) || !eI(e.name, !1))
                                }(r)) {
                                let {
                                    message: e
                                } = ew("MISSING_OR_INVALID", `emit() event: ${JSON.stringify(r)}`);
                                throw Error(e)
                            }
                            if (! function(e, t, r) {
                                    return !!eI(r, !1) && (function(e, t) {
                                        let r = [];
                                        return Object.values(e).forEach(e => {
                                            eg(e.accounts).includes(t) && r.push(...e.events)
                                        }), r
                                    })(e, t).includes(r)
                                }(i, n, r.name)) {
                                let {
                                    message: e
                                } = ew("MISSING_OR_INVALID", `emit() event: ${JSON.stringify(r)}`);
                                throw Error(e)
                            }
                        }, this.isValidDisconnect = async e => {
                            if (!eC(e)) {
                                let {
                                    message: t
                                } = ew("MISSING_OR_INVALID", `disconnect() params: ${e}`);
                                throw Error(t)
                            }
                            let {
                                topic: t
                            } = e;
                            await this.isValidSessionOrPairingTopic(t)
                        }, this.getVerifyContext = async (e, t) => {
                            let r = {
                                verified: {
                                    verifyUrl: t.verifyUrl || rA,
                                    validation: "UNKNOWN",
                                    origin: t.url || ""
                                }
                            };
                            try {
                                let n = await this.client.core.verify.resolve({
                                    attestationId: e,
                                    verifyUrl: t.verifyUrl
                                });
                                n && (r.verified.origin = n.origin, r.verified.isScam = n.isScam, r.verified.validation = n.origin === new URL(t.url).origin ? "VALID" : "INVALID")
                            } catch (e) {
                                this.client.logger.info(e)
                            }
                            return this.client.logger.info(`Verify context: ${JSON.stringify(r)}`), r
                        }, this.validateSessionProps = (e, t) => {
                            Object.values(e).forEach(e => {
                                if (!eI(e, !1)) {
                                    let {
                                        message: r
                                    } = ew("MISSING_OR_INVALID", `${t} must be in Record<string, string> format. Received: ${JSON.stringify(e)}`);
                                    throw Error(r)
                                }
                            })
                        }
                    }
                },
                nA = class extends r3 {
                    constructor(e, t) {
                        super(e, t, "proposal", nu), this.core = e, this.logger = t
                    }
                },
                nS = class extends r3 {
                    constructor(e, t) {
                        super(e, t, "session", nu), this.core = e, this.logger = t
                    }
                },
                nj = class extends r3 {
                    constructor(e, t) {
                        super(e, t, "request", nu, e => e.id), this.core = e, this.logger = t
                    }
                },
                nR = class e extends tt {
                    static async init(t) {
                        let r = new e(t);
                        return await r.initialize(), r
                    }
                    get context() {
                        return (0, eX.getLoggerContext)(this.logger)
                    }
                    get pairing() {
                        return this.core.pairing.pairings
                    }
                    async initialize() {
                        this.logger.trace("Initialized");
                        try {
                            await this.core.start(), await this.session.init(), await this.proposal.init(), await this.pendingRequest.init(), await this.engine.init(), this.core.verify.init({
                                verifyUrl: this.metadata.verifyUrl
                            }), this.logger.info("SignClient Initialization Success")
                        } catch (e) {
                            throw this.logger.info("SignClient Initialization Failure"), this.logger.error(e.message), e
                        }
                    }
                    constructor(e) {
                        super(e), this.protocol = "wc", this.version = 2, this.name = nl.name, this.events = new n.EventEmitter, this.on = (e, t) => this.events.on(e, t), this.once = (e, t) => this.events.once(e, t), this.off = (e, t) => this.events.off(e, t), this.removeListener = (e, t) => this.events.removeListener(e, t), this.removeAllListeners = e => this.events.removeAllListeners(e), this.connect = async e => {
                            try {
                                return await this.engine.connect(e)
                            } catch (e) {
                                throw this.logger.error(e.message), e
                            }
                        }, this.pair = async e => {
                            try {
                                return await this.engine.pair(e)
                            } catch (e) {
                                throw this.logger.error(e.message), e
                            }
                        }, this.approve = async e => {
                            try {
                                return await this.engine.approve(e)
                            } catch (e) {
                                throw this.logger.error(e.message), e
                            }
                        }, this.reject = async e => {
                            try {
                                return await this.engine.reject(e)
                            } catch (e) {
                                throw this.logger.error(e.message), e
                            }
                        }, this.update = async e => {
                            try {
                                return await this.engine.update(e)
                            } catch (e) {
                                throw this.logger.error(e.message), e
                            }
                        }, this.extend = async e => {
                            try {
                                return await this.engine.extend(e)
                            } catch (e) {
                                throw this.logger.error(e.message), e
                            }
                        }, this.request = async e => {
                            try {
                                return await this.engine.request(e)
                            } catch (e) {
                                throw this.logger.error(e.message), e
                            }
                        }, this.respond = async e => {
                            try {
                                return await this.engine.respond(e)
                            } catch (e) {
                                throw this.logger.error(e.message), e
                            }
                        }, this.ping = async e => {
                            try {
                                return await this.engine.ping(e)
                            } catch (e) {
                                throw this.logger.error(e.message), e
                            }
                        }, this.emit = async e => {
                            try {
                                return await this.engine.emit(e)
                            } catch (e) {
                                throw this.logger.error(e.message), e
                            }
                        }, this.disconnect = async e => {
                            try {
                                return await this.engine.disconnect(e)
                            } catch (e) {
                                throw this.logger.error(e.message), e
                            }
                        }, this.find = e => {
                            try {
                                return this.engine.find(e)
                            } catch (e) {
                                throw this.logger.error(e.message), e
                            }
                        }, this.getPendingSessionRequests = () => {
                            try {
                                return this.engine.getPendingSessionRequests()
                            } catch (e) {
                                throw this.logger.error(e.message), e
                            }
                        }, this.name = e ? .name || nl.name, this.metadata = e ? .metadata || (0, p.D)() || {
                            name: "",
                            description: "",
                            url: "",
                            icons: [""]
                        };
                        let t = "u" > typeof e ? .logger && "string" != typeof e ? .logger ? e.logger : (0, eX.pino)((0, eX.getDefaultLoggerOptions)({
                            level: e ? .logger || nl.logger
                        }));
                        this.core = e ? .core || new na(e), this.logger = (0, eX.generateChildLogger)(t, this.name), this.session = new nS(this.core, this.logger), this.proposal = new nA(this.core, this.logger), this.pendingRequest = new nj(this.core, this.logger), this.engine = new nT(this)
                    }
                };
            var nC = r(7660);
            let nN = "error",
                nM = "wc@2:universal_provider:",
                nB = {
                    DEFAULT_CHAIN_CHANGED: "default_chain_changed"
                };
            var nk = "u" > typeof globalThis ? globalThis : "u" > typeof window ? window : "u" > typeof r.g ? r.g : "u" > typeof self ? self : {},
                nD = {
                    exports: {}
                };
            ! function(e, t) {
                (function() {
                    var r, n = "Expected a function",
                        i = "__lodash_hash_undefined__",
                        o = "__lodash_placeholder__",
                        s = 1 / 0,
                        a = 0 / 0,
                        c = [
                            ["ary", 128],
                            ["bind", 1],
                            ["bindKey", 2],
                            ["curry", 8],
                            ["curryRight", 16],
                            ["flip", 512],
                            ["partial", 32],
                            ["partialRight", 64],
                            ["rearg", 256]
                        ],
                        u = "[object Arguments]",
                        l = "[object Array]",
                        d = "[object Boolean]",
                        h = "[object Date]",
                        f = "[object Error]",
                        p = "[object Function]",
                        g = "[object GeneratorFunction]",
                        m = "[object Map]",
                        b = "[object Number]",
                        y = "[object Object]",
                        v = "[object Promise]",
                        w = "[object RegExp]",
                        E = "[object Set]",
                        _ = "[object String]",
                        P = "[object Symbol]",
                        x = "[object WeakMap]",
                        I = "[object ArrayBuffer]",
                        O = "[object DataView]",
                        T = "[object Float32Array]",
                        A = "[object Float64Array]",
                        S = "[object Int8Array]",
                        j = "[object Int16Array]",
                        R = "[object Int32Array]",
                        C = "[object Uint8Array]",
                        N = "[object Uint8ClampedArray]",
                        M = "[object Uint16Array]",
                        B = "[object Uint32Array]",
                        k = /\b__p \+= '';/g,
                        D = /\b(__p \+=) '' \+/g,
                        U = /(__e\(.*?\)|\b__t\)) \+\n'';/g,
                        L = /&(?:amp|lt|gt|quot|#39);/g,
                        F = /[&<>"']/g,
                        q = RegExp(L.source),
                        H = RegExp(F.source),
                        $ = /<%-([\s\S]+?)%>/g,
                        z = /<%([\s\S]+?)%>/g,
                        V = /<%=([\s\S]+?)%>/g,
                        G = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,
                        W = /^\w*$/,
                        K = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g,
                        J = /[\\^$.*+?()[\]{}|]/g,
                        Y = RegExp(J.source),
                        Z = /^\s+/,
                        Q = /\s/,
                        X = /\{(?:\n\/\* \[wrapped with .+\] \*\/)?\n?/,
                        ee = /\{\n\/\* \[wrapped with (.+)\] \*/,
                        et = /,? & /,
                        er = /[^\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\x7f]+/g,
                        en = /[()=,{}\[\]\/\s]/,
                        ei = /\\(\\)?/g,
                        eo = /\$\{([^\\}]*(?:\\.[^\\}]*)*)\}/g,
                        es = /\w*$/,
                        ea = /^[-+]0x[0-9a-f]+$/i,
                        ec = /^0b[01]+$/i,
                        eu = /^\[object .+?Constructor\]$/,
                        el = /^0o[0-7]+$/i,
                        ed = /^(?:0|[1-9]\d*)$/,
                        eh = /[\xc0-\xd6\xd8-\xf6\xf8-\xff\u0100-\u017f]/g,
                        ef = /($^)/,
                        ep = /['\n\r\u2028\u2029\\]/g,
                        eg = "\ud800-\udfff",
                        em = "\\u0300-\\u036f\\ufe20-\\ufe2f\\u20d0-\\u20ff",
                        eb = "\\u2700-\\u27bf",
                        ey = "a-z\\xdf-\\xf6\\xf8-\\xff",
                        ev = "A-Z\\xc0-\\xd6\\xd8-\\xde",
                        ew = "\\ufe0e\\ufe0f",
                        eE = "\\xac\\xb1\\xd7\\xf7\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf\\u2000-\\u206f \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000",
                        e_ = "['’]",
                        eP = "[" + eE + "]",
                        ex = "[" + em + "]",
                        eI = "[" + ey + "]",
                        eO = "[^" + eg + eE + "\\d+" + eb + ey + ev + "]",
                        eT = "\ud83c[\udffb-\udfff]",
                        eA = "[^" + eg + "]",
                        eS = "(?:\ud83c[\udde6-\uddff]){2}",
                        ej = "[\ud800-\udbff][\udc00-\udfff]",
                        eR = "[" + ev + "]",
                        eC = "\\u200d",
                        eN = "(?:" + eI + "|" + eO + ")",
                        eM = "(?:" + e_ + "(?:d|ll|m|re|s|t|ve))?",
                        eB = "(?:" + e_ + "(?:D|LL|M|RE|S|T|VE))?",
                        ek = "(?:" + ex + "|" + eT + ")?",
                        eD = "[" + ew + "]?",
                        eU = "(?:" + eC + "(?:" + [eA, eS, ej].join("|") + ")" + eD + ek + ")*",
                        eL = eD + ek + eU,
                        eF = "(?:" + ["[" + eb + "]", eS, ej].join("|") + ")" + eL,
                        eq = "(?:" + [eA + ex + "?", ex, eS, ej, "[" + eg + "]"].join("|") + ")",
                        eH = RegExp(e_, "g"),
                        e$ = RegExp(ex, "g"),
                        ez = RegExp(eT + "(?=" + eT + ")|" + eq + eL, "g"),
                        eV = RegExp([eR + "?" + eI + "+" + eM + "(?=" + [eP, eR, "$"].join("|") + ")", "(?:" + eR + "|" + eO + ")+" + eB + "(?=" + [eP, eR + eN, "$"].join("|") + ")", eR + "?" + eN + "+" + eM, eR + "+" + eB, "\\d*(?:1ST|2ND|3RD|(?![123])\\dTH)(?=\\b|[a-z_])", "\\d*(?:1st|2nd|3rd|(?![123])\\dth)(?=\\b|[A-Z_])", "\\d+", eF].join("|"), "g"),
                        eG = RegExp("[" + eC + eg + em + ew + "]"),
                        eW = /[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/,
                        eK = ["Array", "Buffer", "DataView", "Date", "Error", "Float32Array", "Float64Array", "Function", "Int8Array", "Int16Array", "Int32Array", "Map", "Math", "Object", "Promise", "RegExp", "Set", "String", "Symbol", "TypeError", "Uint8Array", "Uint8ClampedArray", "Uint16Array", "Uint32Array", "WeakMap", "_", "clearTimeout", "isFinite", "parseInt", "setTimeout"],
                        eJ = -1,
                        eY = {};
                    eY[T] = eY[A] = eY[S] = eY[j] = eY[R] = eY[C] = eY[N] = eY[M] = eY[B] = !0, eY[u] = eY[l] = eY[I] = eY[d] = eY[O] = eY[h] = eY[f] = eY[p] = eY[m] = eY[b] = eY[y] = eY[w] = eY[E] = eY[_] = eY[x] = !1;
                    var eZ = {};
                    eZ[u] = eZ[l] = eZ[I] = eZ[O] = eZ[d] = eZ[h] = eZ[T] = eZ[A] = eZ[S] = eZ[j] = eZ[R] = eZ[m] = eZ[b] = eZ[y] = eZ[w] = eZ[E] = eZ[_] = eZ[P] = eZ[C] = eZ[N] = eZ[M] = eZ[B] = !0, eZ[f] = eZ[p] = eZ[x] = !1;
                    var eQ = {
                            "\\": "\\",
                            "'": "'",
                            "\n": "n",
                            "\r": "r",
                            "\u2028": "u2028",
                            "\u2029": "u2029"
                        },
                        eX = parseFloat,
                        e0 = parseInt,
                        e1 = "object" == typeof nk && nk && nk.Object === Object && nk,
                        e2 = "object" == typeof self && self && self.Object === Object && self,
                        e6 = e1 || e2 || Function("return this")(),
                        e5 = t && !t.nodeType && t,
                        e3 = e5 && e && !e.nodeType && e,
                        e8 = e3 && e3.exports === e5,
                        e4 = e8 && e1.process,
                        e9 = function() {
                            try {
                                return e3 && e3.require && e3.require("util").types || e4 && e4.binding && e4.binding("util")
                            } catch {}
                        }(),
                        e7 = e9 && e9.isArrayBuffer,
                        te = e9 && e9.isDate,
                        tt = e9 && e9.isMap,
                        tr = e9 && e9.isRegExp,
                        tn = e9 && e9.isSet,
                        ti = e9 && e9.isTypedArray;

                    function to(e, t, r) {
                        switch (r.length) {
                            case 0:
                                return e.call(t);
                            case 1:
                                return e.call(t, r[0]);
                            case 2:
                                return e.call(t, r[0], r[1]);
                            case 3:
                                return e.call(t, r[0], r[1], r[2])
                        }
                        return e.apply(t, r)
                    }

                    function ts(e, t, r, n) {
                        for (var i = -1, o = null == e ? 0 : e.length; ++i < o;) {
                            var s = e[i];
                            t(n, s, r(s), e)
                        }
                        return n
                    }

                    function ta(e, t) {
                        for (var r = -1, n = null == e ? 0 : e.length; ++r < n && !1 !== t(e[r], r, e););
                        return e
                    }

                    function tc(e, t) {
                        for (var r = -1, n = null == e ? 0 : e.length; ++r < n;)
                            if (!t(e[r], r, e)) return !1;
                        return !0
                    }

                    function tu(e, t) {
                        for (var r = -1, n = null == e ? 0 : e.length, i = 0, o = []; ++r < n;) {
                            var s = e[r];
                            t(s, r, e) && (o[i++] = s)
                        }
                        return o
                    }

                    function tl(e, t) {
                        return !!(null == e ? 0 : e.length) && tw(e, t, 0) > -1
                    }

                    function td(e, t, r) {
                        for (var n = -1, i = null == e ? 0 : e.length; ++n < i;)
                            if (r(t, e[n])) return !0;
                        return !1
                    }

                    function th(e, t) {
                        for (var r = -1, n = null == e ? 0 : e.length, i = Array(n); ++r < n;) i[r] = t(e[r], r, e);
                        return i
                    }

                    function tf(e, t) {
                        for (var r = -1, n = t.length, i = e.length; ++r < n;) e[i + r] = t[r];
                        return e
                    }

                    function tp(e, t, r, n) {
                        var i = -1,
                            o = null == e ? 0 : e.length;
                        for (n && o && (r = e[++i]); ++i < o;) r = t(r, e[i], i, e);
                        return r
                    }

                    function tg(e, t, r, n) {
                        var i = null == e ? 0 : e.length;
                        for (n && i && (r = e[--i]); i--;) r = t(r, e[i], i, e);
                        return r
                    }

                    function tm(e, t) {
                        for (var r = -1, n = null == e ? 0 : e.length; ++r < n;)
                            if (t(e[r], r, e)) return !0;
                        return !1
                    }
                    var tb = tx("length");

                    function ty(e, t, r) {
                        var n;
                        return r(e, function(e, r, i) {
                            if (t(e, r, i)) return n = r, !1
                        }), n
                    }

                    function tv(e, t, r, n) {
                        for (var i = e.length, o = r + (n ? 1 : -1); n ? o-- : ++o < i;)
                            if (t(e[o], o, e)) return o;
                        return -1
                    }

                    function tw(e, t, r) {
                        return t == t ? function(e, t, r) {
                            for (var n = r - 1, i = e.length; ++n < i;)
                                if (e[n] === t) return n;
                            return -1
                        }(e, t, r) : tv(e, t_, r)
                    }

                    function tE(e, t, r, n) {
                        for (var i = r - 1, o = e.length; ++i < o;)
                            if (n(e[i], t)) return i;
                        return -1
                    }

                    function t_(e) {
                        return e != e
                    }

                    function tP(e, t) {
                        var r = null == e ? 0 : e.length;
                        return r ? tT(e, t) / r : a
                    }

                    function tx(e) {
                        return function(t) {
                            return null == t ? r : t[e]
                        }
                    }

                    function tI(e) {
                        return function(t) {
                            return null == e ? r : e[t]
                        }
                    }

                    function tO(e, t, r, n, i) {
                        return i(e, function(e, i, o) {
                            r = n ? (n = !1, e) : t(r, e, i, o)
                        }), r
                    }

                    function tT(e, t) {
                        for (var n, i = -1, o = e.length; ++i < o;) {
                            var s = t(e[i]);
                            s !== r && (n = n === r ? s : n + s)
                        }
                        return n
                    }

                    function tA(e, t) {
                        for (var r = -1, n = Array(e); ++r < e;) n[r] = t(r);
                        return n
                    }

                    function tS(e) {
                        return e && e.slice(0, tV(e) + 1).replace(Z, "")
                    }

                    function tj(e) {
                        return function(t) {
                            return e(t)
                        }
                    }

                    function tR(e, t) {
                        return th(t, function(t) {
                            return e[t]
                        })
                    }

                    function tC(e, t) {
                        return e.has(t)
                    }

                    function tN(e, t) {
                        for (var r = -1, n = e.length; ++r < n && tw(t, e[r], 0) > -1;);
                        return r
                    }

                    function tM(e, t) {
                        for (var r = e.length; r-- && tw(t, e[r], 0) > -1;);
                        return r
                    }
                    var tB = tI({
                            À: "A",
                            Á: "A",
                            Â: "A",
                            Ã: "A",
                            Ä: "A",
                            Å: "A",
                            à: "a",
                            á: "a",
                            â: "a",
                            ã: "a",
                            ä: "a",
                            å: "a",
                            Ç: "C",
                            ç: "c",
                            Ð: "D",
                            ð: "d",
                            È: "E",
                            É: "E",
                            Ê: "E",
                            Ë: "E",
                            è: "e",
                            é: "e",
                            ê: "e",
                            ë: "e",
                            Ì: "I",
                            Í: "I",
                            Î: "I",
                            Ï: "I",
                            ì: "i",
                            í: "i",
                            î: "i",
                            ï: "i",
                            Ñ: "N",
                            ñ: "n",
                            Ò: "O",
                            Ó: "O",
                            Ô: "O",
                            Õ: "O",
                            Ö: "O",
                            Ø: "O",
                            ò: "o",
                            ó: "o",
                            ô: "o",
                            õ: "o",
                            ö: "o",
                            ø: "o",
                            Ù: "U",
                            Ú: "U",
                            Û: "U",
                            Ü: "U",
                            ù: "u",
                            ú: "u",
                            û: "u",
                            ü: "u",
                            Ý: "Y",
                            ý: "y",
                            ÿ: "y",
                            Æ: "Ae",
                            æ: "ae",
                            Þ: "Th",
                            þ: "th",
                            ß: "ss",
                            Ā: "A",
                            Ă: "A",
                            Ą: "A",
                            ā: "a",
                            ă: "a",
                            ą: "a",
                            Ć: "C",
                            Ĉ: "C",
                            Ċ: "C",
                            Č: "C",
                            ć: "c",
                            ĉ: "c",
                            ċ: "c",
                            č: "c",
                            Ď: "D",
                            Đ: "D",
                            ď: "d",
                            đ: "d",
                            Ē: "E",
                            Ĕ: "E",
                            Ė: "E",
                            Ę: "E",
                            Ě: "E",
                            ē: "e",
                            ĕ: "e",
                            ė: "e",
                            ę: "e",
                            ě: "e",
                            Ĝ: "G",
                            Ğ: "G",
                            Ġ: "G",
                            Ģ: "G",
                            ĝ: "g",
                            ğ: "g",
                            ġ: "g",
                            ģ: "g",
                            Ĥ: "H",
                            Ħ: "H",
                            ĥ: "h",
                            ħ: "h",
                            Ĩ: "I",
                            Ī: "I",
                            Ĭ: "I",
                            Į: "I",
                            İ: "I",
                            ĩ: "i",
                            ī: "i",
                            ĭ: "i",
                            į: "i",
                            ı: "i",
                            Ĵ: "J",
                            ĵ: "j",
                            Ķ: "K",
                            ķ: "k",
                            ĸ: "k",
                            Ĺ: "L",
                            Ļ: "L",
                            Ľ: "L",
                            Ŀ: "L",
                            Ł: "L",
                            ĺ: "l",
                            ļ: "l",
                            ľ: "l",
                            ŀ: "l",
                            ł: "l",
                            Ń: "N",
                            Ņ: "N",
                            Ň: "N",
                            Ŋ: "N",
                            ń: "n",
                            ņ: "n",
                            ň: "n",
                            ŋ: "n",
                            Ō: "O",
                            Ŏ: "O",
                            Ő: "O",
                            ō: "o",
                            ŏ: "o",
                            ő: "o",
                            Ŕ: "R",
                            Ŗ: "R",
                            Ř: "R",
                            ŕ: "r",
                            ŗ: "r",
                            ř: "r",
                            Ś: "S",
                            Ŝ: "S",
                            Ş: "S",
                            Š: "S",
                            ś: "s",
                            ŝ: "s",
                            ş: "s",
                            š: "s",
                            Ţ: "T",
                            Ť: "T",
                            Ŧ: "T",
                            ţ: "t",
                            ť: "t",
                            ŧ: "t",
                            Ũ: "U",
                            Ū: "U",
                            Ŭ: "U",
                            Ů: "U",
                            Ű: "U",
                            Ų: "U",
                            ũ: "u",
                            ū: "u",
                            ŭ: "u",
                            ů: "u",
                            ű: "u",
                            ų: "u",
                            Ŵ: "W",
                            ŵ: "w",
                            Ŷ: "Y",
                            ŷ: "y",
                            Ÿ: "Y",
                            Ź: "Z",
                            Ż: "Z",
                            Ž: "Z",
                            ź: "z",
                            ż: "z",
                            ž: "z",
                            Ĳ: "IJ",
                            ĳ: "ij",
                            Œ: "Oe",
                            œ: "oe",
                            ŉ: "'n",
                            ſ: "s"
                        }),
                        tk = tI({
                            "&": "&amp;",
                            "<": "&lt;",
                            ">": "&gt;",
                            '"': "&quot;",
                            "'": "&#39;"
                        });

                    function tD(e) {
                        return "\\" + eQ[e]
                    }

                    function tU(e) {
                        return eG.test(e)
                    }

                    function tL(e) {
                        var t = -1,
                            r = Array(e.size);
                        return e.forEach(function(e, n) {
                            r[++t] = [n, e]
                        }), r
                    }

                    function tF(e, t) {
                        return function(r) {
                            return e(t(r))
                        }
                    }

                    function tq(e, t) {
                        for (var r = -1, n = e.length, i = 0, s = []; ++r < n;) {
                            var a = e[r];
                            (a === t || a === o) && (e[r] = o, s[i++] = r)
                        }
                        return s
                    }

                    function tH(e) {
                        var t = -1,
                            r = Array(e.size);
                        return e.forEach(function(e) {
                            r[++t] = e
                        }), r
                    }

                    function t$(e) {
                        return tU(e) ? function(e) {
                            for (var t = ez.lastIndex = 0; ez.test(e);) ++t;
                            return t
                        }(e) : tb(e)
                    }

                    function tz(e) {
                        return tU(e) ? e.match(ez) || [] : e.split("")
                    }

                    function tV(e) {
                        for (var t = e.length; t-- && Q.test(e.charAt(t)););
                        return t
                    }
                    var tG = tI({
                            "&amp;": "&",
                            "&lt;": "<",
                            "&gt;": ">",
                            "&quot;": '"',
                            "&#39;": "'"
                        }),
                        tW = function e(t) {
                            var Q, eg, em, eb, ey = (t = null == t ? e6 : tW.defaults(e6.Object(), t, tW.pick(e6, eK))).Array,
                                ev = t.Date,
                                ew = t.Error,
                                eE = t.Function,
                                e_ = t.Math,
                                eP = t.Object,
                                ex = t.RegExp,
                                eI = t.String,
                                eO = t.TypeError,
                                eT = ey.prototype,
                                eA = eE.prototype,
                                eS = eP.prototype,
                                ej = t["__core-js_shared__"],
                                eR = eA.toString,
                                eC = eS.hasOwnProperty,
                                eN = 0,
                                eM = (Q = /[^.]+$/.exec(ej && ej.keys && ej.keys.IE_PROTO || "")) ? "Symbol(src)_1." + Q : "",
                                eB = eS.toString,
                                ek = eR.call(eP),
                                eD = e6._,
                                eU = ex("^" + eR.call(eC).replace(J, "\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, "$1.*?") + "$"),
                                eL = e8 ? t.Buffer : r,
                                eF = t.Symbol,
                                eq = t.Uint8Array,
                                ez = eL ? eL.allocUnsafe : r,
                                eG = tF(eP.getPrototypeOf, eP),
                                eQ = eP.create,
                                e1 = eS.propertyIsEnumerable,
                                e2 = eT.splice,
                                e5 = eF ? eF.isConcatSpreadable : r,
                                e3 = eF ? eF.iterator : r,
                                e4 = eF ? eF.toStringTag : r,
                                e9 = function() {
                                    try {
                                        var e = ip(eP, "defineProperty");
                                        return e({}, "", {}), e
                                    } catch {}
                                }(),
                                tb = t.clearTimeout !== e6.clearTimeout && t.clearTimeout,
                                tI = ev && ev.now !== e6.Date.now && ev.now,
                                tK = t.setTimeout !== e6.setTimeout && t.setTimeout,
                                tJ = e_.ceil,
                                tY = e_.floor,
                                tZ = eP.getOwnPropertySymbols,
                                tQ = eL ? eL.isBuffer : r,
                                tX = t.isFinite,
                                t0 = eT.join,
                                t1 = tF(eP.keys, eP),
                                t2 = e_.max,
                                t6 = e_.min,
                                t5 = ev.now,
                                t3 = t.parseInt,
                                t8 = e_.random,
                                t4 = eT.reverse,
                                t9 = ip(t, "DataView"),
                                t7 = ip(t, "Map"),
                                re = ip(t, "Promise"),
                                rt = ip(t, "Set"),
                                rr = ip(t, "WeakMap"),
                                rn = ip(eP, "create"),
                                ri = rr && new rr,
                                ro = {},
                                rs = iL(t9),
                                ra = iL(t7),
                                rc = iL(re),
                                ru = iL(rt),
                                rl = iL(rr),
                                rd = eF ? eF.prototype : r,
                                rh = rd ? rd.valueOf : r,
                                rf = rd ? rd.toString : r;

                            function rp(e) {
                                if (oG(e) && !oB(e) && !(e instanceof ry)) {
                                    if (e instanceof rb) return e;
                                    if (eC.call(e, "__wrapped__")) return iF(e)
                                }
                                return new rb(e)
                            }
                            var rg = function() {
                                function e() {}
                                return function(t) {
                                    if (!oV(t)) return {};
                                    if (eQ) return eQ(t);
                                    e.prototype = t;
                                    var n = new e;
                                    return e.prototype = r, n
                                }
                            }();

                            function rm() {}

                            function rb(e, t) {
                                this.__wrapped__ = e, this.__actions__ = [], this.__chain__ = !!t, this.__index__ = 0, this.__values__ = r
                            }

                            function ry(e) {
                                this.__wrapped__ = e, this.__actions__ = [], this.__dir__ = 1, this.__filtered__ = !1, this.__iteratees__ = [], this.__takeCount__ = 4294967295, this.__views__ = []
                            }

                            function rv(e) {
                                var t = -1,
                                    r = null == e ? 0 : e.length;
                                for (this.clear(); ++t < r;) {
                                    var n = e[t];
                                    this.set(n[0], n[1])
                                }
                            }

                            function rw(e) {
                                var t = -1,
                                    r = null == e ? 0 : e.length;
                                for (this.clear(); ++t < r;) {
                                    var n = e[t];
                                    this.set(n[0], n[1])
                                }
                            }

                            function rE(e) {
                                var t = -1,
                                    r = null == e ? 0 : e.length;
                                for (this.clear(); ++t < r;) {
                                    var n = e[t];
                                    this.set(n[0], n[1])
                                }
                            }

                            function r_(e) {
                                var t = -1,
                                    r = null == e ? 0 : e.length;
                                for (this.__data__ = new rE; ++t < r;) this.add(e[t])
                            }

                            function rP(e) {
                                var t = this.__data__ = new rw(e);
                                this.size = t.size
                            }

                            function rx(e, t) {
                                var r = oB(e),
                                    n = !r && oM(e),
                                    i = !r && !n && oL(e),
                                    o = !r && !n && !i && o0(e),
                                    s = r || n || i || o,
                                    a = s ? tA(e.length, eI) : [],
                                    c = a.length;
                                for (var u in e)(t || eC.call(e, u)) && !(s && ("length" == u || i && ("offset" == u || "parent" == u) || o && ("buffer" == u || "byteLength" == u || "byteOffset" == u) || iE(u, c))) && a.push(u);
                                return a
                            }

                            function rI(e) {
                                var t = e.length;
                                return t ? e[nu(0, t - 1)] : r
                            }

                            function rO(e, t, n) {
                                (n === r || oR(e[t], n)) && (n !== r || t in e) || rR(e, t, n)
                            }

                            function rT(e, t, n) {
                                var i = e[t];
                                eC.call(e, t) && oR(i, n) && (n !== r || t in e) || rR(e, t, n)
                            }

                            function rA(e, t) {
                                for (var r = e.length; r--;)
                                    if (oR(e[r][0], t)) return r;
                                return -1
                            }

                            function rS(e, t, r, n) {
                                return rU(e, function(e, i, o) {
                                    t(n, e, r(e), o)
                                }), n
                            }

                            function rj(e, t) {
                                return e && nq(t, sh(t), e)
                            }

                            function rR(e, t, r) {
                                "__proto__" == t && e9 ? e9(e, t, {
                                    configurable: !0,
                                    enumerable: !0,
                                    value: r,
                                    writable: !0
                                }) : e[t] = r
                            }

                            function rC(e, t) {
                                for (var n = -1, i = t.length, o = ey(i), s = null == e; ++n < i;) o[n] = s ? r : sa(e, t[n]);
                                return o
                            }

                            function rN(e, t, n) {
                                return e == e && (n !== r && (e = e <= n ? e : n), t !== r && (e = e >= t ? e : t)), e
                            }

                            function rM(e, t, n, i, o, s) {
                                var a, c = 1 & t,
                                    l = 2 & t,
                                    f = 4 & t;
                                if (n && (a = o ? n(e, i, o, s) : n(e)), a !== r) return a;
                                if (!oV(e)) return e;
                                var v = oB(e);
                                if (v) {
                                    if (x = e.length, k = new e.constructor(x), x && "string" == typeof e[0] && eC.call(e, "index") && (k.index = e.index, k.input = e.input), a = k, !c) return nF(e, a)
                                } else {
                                    var x, k, D, U, L, F = ib(e),
                                        q = F == p || F == g;
                                    if (oL(e)) return nM(e, c);
                                    if (F == y || F == u || q && !o) {
                                        if (a = l || q ? {} : iv(e), !c) return l ? (D = (L = a) && nq(e, sf(e), L), nq(e, im(e), D)) : (U = rj(a, e), nq(e, ig(e), U))
                                    } else {
                                        if (!eZ[F]) return o ? e : {};
                                        a = function(e, t, r) {
                                            var n, i, o = e.constructor;
                                            switch (t) {
                                                case I:
                                                    return nB(e);
                                                case d:
                                                case h:
                                                    return new o(+e);
                                                case O:
                                                    return n = r ? nB(e.buffer) : e.buffer, new e.constructor(n, e.byteOffset, e.byteLength);
                                                case T:
                                                case A:
                                                case S:
                                                case j:
                                                case R:
                                                case C:
                                                case N:
                                                case M:
                                                case B:
                                                    return nk(e, r);
                                                case m:
                                                    return new o;
                                                case b:
                                                case _:
                                                    return new o(e);
                                                case w:
                                                    return (i = new e.constructor(e.source, es.exec(e))).lastIndex = e.lastIndex, i;
                                                case E:
                                                    return new o;
                                                case P:
                                                    return rh ? eP(rh.call(e)) : {}
                                            }
                                        }(e, F, c)
                                    }
                                }
                                s || (s = new rP);
                                var H = s.get(e);
                                if (H) return H;
                                s.set(e, a), oZ(e) ? e.forEach(function(r) {
                                    a.add(rM(r, t, n, r, e, s))
                                }) : oW(e) && e.forEach(function(r, i) {
                                    a.set(i, rM(r, t, n, i, e, s))
                                });
                                var $ = f ? l ? is : io : l ? sf : sh,
                                    z = v ? r : $(e);
                                return ta(z || e, function(r, i) {
                                    z && (r = e[i = r]), rT(a, i, rM(r, t, n, i, e, s))
                                }), a
                            }

                            function rB(e, t, n) {
                                var i = n.length;
                                if (null == e) return !i;
                                for (e = eP(e); i--;) {
                                    var o = n[i],
                                        s = t[o],
                                        a = e[o];
                                    if (a === r && !(o in e) || !s(a)) return !1
                                }
                                return !0
                            }

                            function rk(e, t, i) {
                                if ("function" != typeof e) throw new eO(n);
                                return iC(function() {
                                    e.apply(r, i)
                                }, t)
                            }

                            function rD(e, t, r, n) {
                                var i = -1,
                                    o = tl,
                                    s = !0,
                                    a = e.length,
                                    c = [],
                                    u = t.length;
                                if (!a) return c;
                                r && (t = th(t, tj(r))), n ? (o = td, s = !1) : t.length >= 200 && (o = tC, s = !1, t = new r_(t));
                                e: for (; ++i < a;) {
                                    var l = e[i],
                                        d = null == r ? l : r(l);
                                    if (l = n || 0 !== l ? l : 0, s && d == d) {
                                        for (var h = u; h--;)
                                            if (t[h] === d) continue e;
                                        c.push(l)
                                    } else o(t, d, n) || c.push(l)
                                }
                                return c
                            }
                            rp.templateSettings = {
                                escape: $,
                                evaluate: z,
                                interpolate: V,
                                variable: "",
                                imports: {
                                    _: rp
                                }
                            }, rp.prototype = rm.prototype, rp.prototype.constructor = rp, rb.prototype = rg(rm.prototype), rb.prototype.constructor = rb, ry.prototype = rg(rm.prototype), ry.prototype.constructor = ry, rv.prototype.clear = function() {
                                this.__data__ = rn ? rn(null) : {}, this.size = 0
                            }, rv.prototype.delete = function(e) {
                                var t = this.has(e) && delete this.__data__[e];
                                return this.size -= t ? 1 : 0, t
                            }, rv.prototype.get = function(e) {
                                var t = this.__data__;
                                if (rn) {
                                    var n = t[e];
                                    return n === i ? r : n
                                }
                                return eC.call(t, e) ? t[e] : r
                            }, rv.prototype.has = function(e) {
                                var t = this.__data__;
                                return rn ? t[e] !== r : eC.call(t, e)
                            }, rv.prototype.set = function(e, t) {
                                var n = this.__data__;
                                return this.size += this.has(e) ? 0 : 1, n[e] = rn && t === r ? i : t, this
                            }, rw.prototype.clear = function() {
                                this.__data__ = [], this.size = 0
                            }, rw.prototype.delete = function(e) {
                                var t = this.__data__,
                                    r = rA(t, e);
                                return !(r < 0) && (r == t.length - 1 ? t.pop() : e2.call(t, r, 1), --this.size, !0)
                            }, rw.prototype.get = function(e) {
                                var t = this.__data__,
                                    n = rA(t, e);
                                return n < 0 ? r : t[n][1]
                            }, rw.prototype.has = function(e) {
                                return rA(this.__data__, e) > -1
                            }, rw.prototype.set = function(e, t) {
                                var r = this.__data__,
                                    n = rA(r, e);
                                return n < 0 ? (++this.size, r.push([e, t])) : r[n][1] = t, this
                            }, rE.prototype.clear = function() {
                                this.size = 0, this.__data__ = {
                                    hash: new rv,
                                    map: new(t7 || rw),
                                    string: new rv
                                }
                            }, rE.prototype.delete = function(e) {
                                var t = id(this, e).delete(e);
                                return this.size -= t ? 1 : 0, t
                            }, rE.prototype.get = function(e) {
                                return id(this, e).get(e)
                            }, rE.prototype.has = function(e) {
                                return id(this, e).has(e)
                            }, rE.prototype.set = function(e, t) {
                                var r = id(this, e),
                                    n = r.size;
                                return r.set(e, t), this.size += r.size == n ? 0 : 1, this
                            }, r_.prototype.add = r_.prototype.push = function(e) {
                                return this.__data__.set(e, i), this
                            }, r_.prototype.has = function(e) {
                                return this.__data__.has(e)
                            }, rP.prototype.clear = function() {
                                this.__data__ = new rw, this.size = 0
                            }, rP.prototype.delete = function(e) {
                                var t = this.__data__,
                                    r = t.delete(e);
                                return this.size = t.size, r
                            }, rP.prototype.get = function(e) {
                                return this.__data__.get(e)
                            }, rP.prototype.has = function(e) {
                                return this.__data__.has(e)
                            }, rP.prototype.set = function(e, t) {
                                var r = this.__data__;
                                if (r instanceof rw) {
                                    var n = r.__data__;
                                    if (!t7 || n.length < 199) return n.push([e, t]), this.size = ++r.size, this;
                                    r = this.__data__ = new rE(n)
                                }
                                return r.set(e, t), this.size = r.size, this
                            };
                            var rU = nz(rG),
                                rL = nz(rW, !0);

                            function rF(e, t) {
                                var r = !0;
                                return rU(e, function(e, n, i) {
                                    return r = !!t(e, n, i)
                                }), r
                            }

                            function rq(e, t, n) {
                                for (var i = -1, o = e.length; ++i < o;) {
                                    var s = e[i],
                                        a = t(s);
                                    if (null != a && (c === r ? a == a && !oX(a) : n(a, c))) var c = a,
                                        u = s
                                }
                                return u
                            }

                            function rH(e, t) {
                                var r = [];
                                return rU(e, function(e, n, i) {
                                    t(e, n, i) && r.push(e)
                                }), r
                            }

                            function r$(e, t, r, n, i) {
                                var o = -1,
                                    s = e.length;
                                for (r || (r = iw), i || (i = []); ++o < s;) {
                                    var a = e[o];
                                    t > 0 && r(a) ? t > 1 ? r$(a, t - 1, r, n, i) : tf(i, a) : n || (i[i.length] = a)
                                }
                                return i
                            }
                            var rz = nV(),
                                rV = nV(!0);

                            function rG(e, t) {
                                return e && rz(e, t, sh)
                            }

                            function rW(e, t) {
                                return e && rV(e, t, sh)
                            }

                            function rK(e, t) {
                                return tu(t, function(t) {
                                    return oH(e[t])
                                })
                            }

                            function rJ(e, t) {
                                t = nR(t, e);
                                for (var n = 0, i = t.length; null != e && n < i;) e = e[iU(t[n++])];
                                return n && n == i ? e : r
                            }

                            function rY(e, t, r) {
                                var n = t(e);
                                return oB(e) ? n : tf(n, r(e))
                            }

                            function rZ(e) {
                                return null == e ? e === r ? "[object Undefined]" : "[object Null]" : e4 && e4 in eP(e) ? function(e) {
                                    var t = eC.call(e, e4),
                                        n = e[e4];
                                    try {
                                        e[e4] = r;
                                        var i = !0
                                    } catch {}
                                    var o = eB.call(e);
                                    return i && (t ? e[e4] = n : delete e[e4]), o
                                }(e) : eB.call(e)
                            }

                            function rQ(e, t) {
                                return e > t
                            }

                            function rX(e, t) {
                                return null != e && eC.call(e, t)
                            }

                            function r0(e, t) {
                                return null != e && t in eP(e)
                            }

                            function r1(e, t, n) {
                                for (var i = n ? td : tl, o = e[0].length, s = e.length, a = s, c = ey(s), u = 1 / 0, l = []; a--;) {
                                    var d = e[a];
                                    a && t && (d = th(d, tj(t))), u = t6(d.length, u), c[a] = !n && (t || o >= 120 && d.length >= 120) ? new r_(a && d) : r
                                }
                                d = e[0];
                                var h = -1,
                                    f = c[0];
                                e: for (; ++h < o && l.length < u;) {
                                    var p = d[h],
                                        g = t ? t(p) : p;
                                    if (p = n || 0 !== p ? p : 0, !(f ? tC(f, g) : i(l, g, n))) {
                                        for (a = s; --a;) {
                                            var m = c[a];
                                            if (!(m ? tC(m, g) : i(e[a], g, n))) continue e
                                        }
                                        f && f.push(g), l.push(p)
                                    }
                                }
                                return l
                            }

                            function r2(e, t, n) {
                                t = nR(t, e);
                                var i = null == (e = iS(e, t)) ? e : e[iU(iZ(t))];
                                return null == i ? r : to(i, e, n)
                            }

                            function r6(e) {
                                return oG(e) && rZ(e) == u
                            }

                            function r5(e, t, n, i, o) {
                                return e === t || (null != e && null != t && (oG(e) || oG(t)) ? function(e, t, n, i, o, s) {
                                    var a = oB(e),
                                        c = oB(t),
                                        p = a ? l : ib(e),
                                        g = c ? l : ib(t);
                                    p = p == u ? y : p, g = g == u ? y : g;
                                    var v = p == y,
                                        x = g == y,
                                        T = p == g;
                                    if (T && oL(e)) {
                                        if (!oL(t)) return !1;
                                        a = !0, v = !1
                                    }
                                    if (T && !v) return s || (s = new rP), a || o0(e) ? ir(e, t, n, i, o, s) : function(e, t, r, n, i, o, s) {
                                        switch (r) {
                                            case O:
                                                if (e.byteLength != t.byteLength || e.byteOffset != t.byteOffset) break;
                                                e = e.buffer, t = t.buffer;
                                            case I:
                                                return !(e.byteLength != t.byteLength || !o(new eq(e), new eq(t)));
                                            case d:
                                            case h:
                                            case b:
                                                return oR(+e, +t);
                                            case f:
                                                return e.name == t.name && e.message == t.message;
                                            case w:
                                            case _:
                                                return e == t + "";
                                            case m:
                                                var a = tL;
                                            case E:
                                                var c = 1 & n;
                                                if (a || (a = tH), e.size != t.size && !c) break;
                                                var u = s.get(e);
                                                if (u) return u == t;
                                                n |= 2, s.set(e, t);
                                                var l = ir(a(e), a(t), n, i, o, s);
                                                return s.delete(e), l;
                                            case P:
                                                if (rh) return rh.call(e) == rh.call(t)
                                        }
                                        return !1
                                    }(e, t, p, n, i, o, s);
                                    if (!(1 & n)) {
                                        var A = v && eC.call(e, "__wrapped__"),
                                            S = x && eC.call(t, "__wrapped__");
                                        if (A || S) {
                                            var j = A ? e.value() : e,
                                                R = S ? t.value() : t;
                                            return s || (s = new rP), o(j, R, n, i, s)
                                        }
                                    }
                                    return !!T && (s || (s = new rP), function(e, t, n, i, o, s) {
                                        var a = 1 & n,
                                            c = io(e),
                                            u = c.length;
                                        if (u != io(t).length && !a) return !1;
                                        for (var l = u; l--;) {
                                            var d = c[l];
                                            if (!(a ? d in t : eC.call(t, d))) return !1
                                        }
                                        var h = s.get(e),
                                            f = s.get(t);
                                        if (h && f) return h == t && f == e;
                                        var p = !0;
                                        s.set(e, t), s.set(t, e);
                                        for (var g = a; ++l < u;) {
                                            var m = e[d = c[l]],
                                                b = t[d];
                                            if (i) var y = a ? i(b, m, d, t, e, s) : i(m, b, d, e, t, s);
                                            if (!(y === r ? m === b || o(m, b, n, i, s) : y)) {
                                                p = !1;
                                                break
                                            }
                                            g || (g = "constructor" == d)
                                        }
                                        if (p && !g) {
                                            var v = e.constructor,
                                                w = t.constructor;
                                            v != w && "constructor" in e && "constructor" in t && !("function" == typeof v && v instanceof v && "function" == typeof w && w instanceof w) && (p = !1)
                                        }
                                        return s.delete(e), s.delete(t), p
                                    }(e, t, n, i, o, s))
                                }(e, t, n, i, r5, o) : e != e && t != t)
                            }

                            function r3(e, t, n, i) {
                                var o = n.length,
                                    s = o,
                                    a = !i;
                                if (null == e) return !s;
                                for (e = eP(e); o--;) {
                                    var c = n[o];
                                    if (a && c[2] ? c[1] !== e[c[0]] : !(c[0] in e)) return !1
                                }
                                for (; ++o < s;) {
                                    var u = (c = n[o])[0],
                                        l = e[u],
                                        d = c[1];
                                    if (a && c[2]) {
                                        if (l === r && !(u in e)) return !1
                                    } else {
                                        var h = new rP;
                                        if (i) var f = i(l, d, u, e, t, h);
                                        if (!(f === r ? r5(d, l, 3, i, h) : f)) return !1
                                    }
                                }
                                return !0
                            }

                            function r8(e) {
                                return !(!oV(e) || eM && eM in e) && (oH(e) ? eU : eu).test(iL(e))
                            }

                            function r4(e) {
                                return "function" == typeof e ? e : null == e ? sU : "object" == typeof e ? oB(e) ? nr(e[0], e[1]) : nt(e) : sW(e)
                            }

                            function r9(e) {
                                if (!iO(e)) return t1(e);
                                var t = [];
                                for (var r in eP(e)) eC.call(e, r) && "constructor" != r && t.push(r);
                                return t
                            }

                            function r7(e, t) {
                                return e < t
                            }

                            function ne(e, t) {
                                var r = -1,
                                    n = oD(e) ? ey(e.length) : [];
                                return rU(e, function(e, i, o) {
                                    n[++r] = t(e, i, o)
                                }), n
                            }

                            function nt(e) {
                                var t = ih(e);
                                return 1 == t.length && t[0][2] ? iT(t[0][0], t[0][1]) : function(r) {
                                    return r === e || r3(r, e, t)
                                }
                            }

                            function nr(e, t) {
                                var n;
                                return iP(e) && (n = t) == n && !oV(n) ? iT(iU(e), t) : function(n) {
                                    var i = sa(n, e);
                                    return i === r && i === t ? sc(n, e) : r5(t, i, 3)
                                }
                            }

                            function nn(e, t, n, i, o) {
                                e !== t && rz(t, function(s, a) {
                                    if (o || (o = new rP), oV(s)) ! function(e, t, n, i, o, s, a) {
                                        var c = ij(e, n),
                                            u = ij(t, n),
                                            l = a.get(u);
                                        if (l) {
                                            rO(e, n, l);
                                            return
                                        }
                                        var d = s ? s(c, u, n + "", e, t, a) : r,
                                            h = d === r;
                                        if (h) {
                                            var f = oB(u),
                                                p = !f && oL(u),
                                                g = !f && !p && o0(u);
                                            d = u, f || p || g ? oB(c) ? d = c : oU(c) ? d = nF(c) : p ? (h = !1, d = nM(u, !0)) : g ? (h = !1, d = nk(u, !0)) : d = [] : oJ(u) || oM(u) ? (d = c, oM(c) ? d = o9(c) : (!oV(c) || oH(c)) && (d = iv(u))) : h = !1
                                        }
                                        h && (a.set(u, d), o(d, u, i, s, a), a.delete(u)), rO(e, n, d)
                                    }(e, t, a, n, nn, i, o);
                                    else {
                                        var c = i ? i(ij(e, a), s, a + "", e, t, o) : r;
                                        c === r && (c = s), rO(e, a, c)
                                    }
                                }, sf)
                            }

                            function ni(e, t) {
                                var n = e.length;
                                if (n) return iE(t += t < 0 ? n : 0, n) ? e[t] : r
                            }

                            function no(e, t, r) {
                                t = t.length ? th(t, function(e) {
                                    return oB(e) ? function(t) {
                                        return rJ(t, 1 === e.length ? e[0] : e)
                                    } : e
                                }) : [sU];
                                var n = -1;
                                return t = th(t, tj(il())),
                                    function(e, t) {
                                        var r = e.length;
                                        for (e.sort(t); r--;) e[r] = e[r].value;
                                        return e
                                    }(ne(e, function(e, r, i) {
                                        return {
                                            criteria: th(t, function(t) {
                                                return t(e)
                                            }),
                                            index: ++n,
                                            value: e
                                        }
                                    }), function(e, t) {
                                        return function(e, t, r) {
                                            for (var n = -1, i = e.criteria, o = t.criteria, s = i.length, a = r.length; ++n < s;) {
                                                var c = nD(i[n], o[n]);
                                                if (c) {
                                                    if (n >= a) return c;
                                                    return c * ("desc" == r[n] ? -1 : 1)
                                                }
                                            }
                                            return e.index - t.index
                                        }(e, t, r)
                                    })
                            }

                            function ns(e, t, r) {
                                for (var n = -1, i = t.length, o = {}; ++n < i;) {
                                    var s = t[n],
                                        a = rJ(e, s);
                                    r(a, s) && nh(o, nR(s, e), a)
                                }
                                return o
                            }

                            function na(e, t, r, n) {
                                var i = n ? tE : tw,
                                    o = -1,
                                    s = t.length,
                                    a = e;
                                for (e === t && (t = nF(t)), r && (a = th(e, tj(r))); ++o < s;)
                                    for (var c = 0, u = t[o], l = r ? r(u) : u;
                                        (c = i(a, l, c, n)) > -1;) a !== e && e2.call(a, c, 1), e2.call(e, c, 1);
                                return e
                            }

                            function nc(e, t) {
                                for (var r = e ? t.length : 0, n = r - 1; r--;) {
                                    var i = t[r];
                                    if (r == n || i !== o) {
                                        var o = i;
                                        iE(i) ? e2.call(e, i, 1) : nP(e, i)
                                    }
                                }
                                return e
                            }

                            function nu(e, t) {
                                return e + tY(t8() * (t - e + 1))
                            }

                            function nl(e, t) {
                                var r = "";
                                if (!e || t < 1 || t > 9007199254740991) return r;
                                do t % 2 && (r += e), (t = tY(t / 2)) && (e += e); while (t) return r
                            }

                            function nd(e, t) {
                                return iN(iA(e, t, sU), e + "")
                            }

                            function nh(e, t, n, i) {
                                if (!oV(e)) return e;
                                t = nR(t, e);
                                for (var o = -1, s = t.length, a = s - 1, c = e; null != c && ++o < s;) {
                                    var u = iU(t[o]),
                                        l = n;
                                    if ("__proto__" === u || "constructor" === u || "prototype" === u) break;
                                    if (o != a) {
                                        var d = c[u];
                                        (l = i ? i(d, u, c) : r) === r && (l = oV(d) ? d : iE(t[o + 1]) ? [] : {})
                                    }
                                    rT(c, u, l), c = c[u]
                                }
                                return e
                            }
                            var nf = ri ? function(e, t) {
                                    return ri.set(e, t), e
                                } : sU,
                                np = e9 ? function(e, t) {
                                    return e9(e, "toString", {
                                        configurable: !0,
                                        enumerable: !1,
                                        value: sB(t),
                                        writable: !0
                                    })
                                } : sU;

                            function ng(e, t, r) {
                                var n = -1,
                                    i = e.length;
                                t < 0 && (t = -t > i ? 0 : i + t), (r = r > i ? i : r) < 0 && (r += i), i = t > r ? 0 : r - t >>> 0, t >>>= 0;
                                for (var o = ey(i); ++n < i;) o[n] = e[n + t];
                                return o
                            }

                            function nm(e, t) {
                                var r;
                                return rU(e, function(e, n, i) {
                                    return !(r = t(e, n, i))
                                }), !!r
                            }

                            function nb(e, t, r) {
                                var n = 0,
                                    i = null == e ? n : e.length;
                                if ("number" == typeof t && t == t && i <= 2147483647) {
                                    for (; n < i;) {
                                        var o = n + i >>> 1,
                                            s = e[o];
                                        null !== s && !oX(s) && (r ? s <= t : s < t) ? n = o + 1 : i = o
                                    }
                                    return i
                                }
                                return ny(e, t, sU, r)
                            }

                            function ny(e, t, n, i) {
                                var o = 0,
                                    s = null == e ? 0 : e.length;
                                if (0 === s) return 0;
                                t = n(t);
                                for (var a = t != t, c = null === t, u = oX(t), l = t === r; o < s;) {
                                    var d = tY((o + s) / 2),
                                        h = n(e[d]),
                                        f = h !== r,
                                        p = null === h,
                                        g = h == h,
                                        m = oX(h);
                                    if (a) var b = i || g;
                                    else b = l ? g && (i || f) : c ? g && f && (i || !p) : u ? g && f && !p && (i || !m) : !p && !m && (i ? h <= t : h < t);
                                    b ? o = d + 1 : s = d
                                }
                                return t6(s, 4294967294)
                            }

                            function nv(e, t) {
                                for (var r = -1, n = e.length, i = 0, o = []; ++r < n;) {
                                    var s = e[r],
                                        a = t ? t(s) : s;
                                    if (!r || !oR(a, c)) {
                                        var c = a;
                                        o[i++] = 0 === s ? 0 : s
                                    }
                                }
                                return o
                            }

                            function nw(e) {
                                return "number" == typeof e ? e : oX(e) ? a : +e
                            }

                            function nE(e) {
                                if ("string" == typeof e) return e;
                                if (oB(e)) return th(e, nE) + "";
                                if (oX(e)) return rf ? rf.call(e) : "";
                                var t = e + "";
                                return "0" == t && 1 / e == -s ? "-0" : t
                            }

                            function n_(e, t, r) {
                                var n = -1,
                                    i = tl,
                                    o = e.length,
                                    s = !0,
                                    a = [],
                                    c = a;
                                if (r) s = !1, i = td;
                                else if (o >= 200) {
                                    var u = t ? null : n8(e);
                                    if (u) return tH(u);
                                    s = !1, i = tC, c = new r_
                                } else c = t ? [] : a;
                                e: for (; ++n < o;) {
                                    var l = e[n],
                                        d = t ? t(l) : l;
                                    if (l = r || 0 !== l ? l : 0, s && d == d) {
                                        for (var h = c.length; h--;)
                                            if (c[h] === d) continue e;
                                        t && c.push(d), a.push(l)
                                    } else i(c, d, r) || (c !== a && c.push(d), a.push(l))
                                }
                                return a
                            }

                            function nP(e, t) {
                                return t = nR(t, e), null == (e = iS(e, t)) || delete e[iU(iZ(t))]
                            }

                            function nx(e, t, r, n) {
                                return nh(e, t, r(rJ(e, t)), n)
                            }

                            function nI(e, t, r, n) {
                                for (var i = e.length, o = n ? i : -1;
                                    (n ? o-- : ++o < i) && t(e[o], o, e););
                                return r ? ng(e, n ? 0 : o, n ? o + 1 : i) : ng(e, n ? o + 1 : 0, n ? i : o)
                            }

                            function nO(e, t) {
                                var r = e;
                                return r instanceof ry && (r = r.value()), tp(t, function(e, t) {
                                    return t.func.apply(t.thisArg, tf([e], t.args))
                                }, r)
                            }

                            function nT(e, t, r) {
                                var n = e.length;
                                if (n < 2) return n ? n_(e[0]) : [];
                                for (var i = -1, o = ey(n); ++i < n;)
                                    for (var s = e[i], a = -1; ++a < n;) a != i && (o[i] = rD(o[i] || s, e[a], t, r));
                                return n_(r$(o, 1), t, r)
                            }

                            function nA(e, t, n) {
                                for (var i = -1, o = e.length, s = t.length, a = {}; ++i < o;) {
                                    var c = i < s ? t[i] : r;
                                    n(a, e[i], c)
                                }
                                return a
                            }

                            function nS(e) {
                                return oU(e) ? e : []
                            }

                            function nj(e) {
                                return "function" == typeof e ? e : sU
                            }

                            function nR(e, t) {
                                return oB(e) ? e : iP(e, t) ? [e] : iD(o7(e))
                            }

                            function nC(e, t, n) {
                                var i = e.length;
                                return n = n === r ? i : n, !t && n >= i ? e : ng(e, t, n)
                            }
                            var nN = tb || function(e) {
                                return e6.clearTimeout(e)
                            };

                            function nM(e, t) {
                                if (t) return e.slice();
                                var r = e.length,
                                    n = ez ? ez(r) : new e.constructor(r);
                                return e.copy(n), n
                            }

                            function nB(e) {
                                var t = new e.constructor(e.byteLength);
                                return new eq(t).set(new eq(e)), t
                            }

                            function nk(e, t) {
                                var r = t ? nB(e.buffer) : e.buffer;
                                return new e.constructor(r, e.byteOffset, e.length)
                            }

                            function nD(e, t) {
                                if (e !== t) {
                                    var n = e !== r,
                                        i = null === e,
                                        o = e == e,
                                        s = oX(e),
                                        a = t !== r,
                                        c = null === t,
                                        u = t == t,
                                        l = oX(t);
                                    if (!c && !l && !s && e > t || s && a && u && !c && !l || i && a && u || !n && u || !o) return 1;
                                    if (!i && !s && !l && e < t || l && n && o && !i && !s || c && n && o || !a && o || !u) return -1
                                }
                                return 0
                            }

                            function nU(e, t, r, n) {
                                for (var i = -1, o = e.length, s = r.length, a = -1, c = t.length, u = t2(o - s, 0), l = ey(c + u), d = !n; ++a < c;) l[a] = t[a];
                                for (; ++i < s;)(d || i < o) && (l[r[i]] = e[i]);
                                for (; u--;) l[a++] = e[i++];
                                return l
                            }

                            function nL(e, t, r, n) {
                                for (var i = -1, o = e.length, s = -1, a = r.length, c = -1, u = t.length, l = t2(o - a, 0), d = ey(l + u), h = !n; ++i < l;) d[i] = e[i];
                                for (var f = i; ++c < u;) d[f + c] = t[c];
                                for (; ++s < a;)(h || i < o) && (d[f + r[s]] = e[i++]);
                                return d
                            }

                            function nF(e, t) {
                                var r = -1,
                                    n = e.length;
                                for (t || (t = ey(n)); ++r < n;) t[r] = e[r];
                                return t
                            }

                            function nq(e, t, n, i) {
                                var o = !n;
                                n || (n = {});
                                for (var s = -1, a = t.length; ++s < a;) {
                                    var c = t[s],
                                        u = i ? i(n[c], e[c], c, n, e) : r;
                                    u === r && (u = e[c]), o ? rR(n, c, u) : rT(n, c, u)
                                }
                                return n
                            }

                            function nH(e, t) {
                                return function(r, n) {
                                    var i = oB(r) ? ts : rS,
                                        o = t ? t() : {};
                                    return i(r, e, il(n, 2), o)
                                }
                            }

                            function n$(e) {
                                return nd(function(t, n) {
                                    var i = -1,
                                        o = n.length,
                                        s = o > 1 ? n[o - 1] : r,
                                        a = o > 2 ? n[2] : r;
                                    for (s = e.length > 3 && "function" == typeof s ? (o--, s) : r, a && i_(n[0], n[1], a) && (s = o < 3 ? r : s, o = 1), t = eP(t); ++i < o;) {
                                        var c = n[i];
                                        c && e(t, c, i, s)
                                    }
                                    return t
                                })
                            }

                            function nz(e, t) {
                                return function(r, n) {
                                    if (null == r) return r;
                                    if (!oD(r)) return e(r, n);
                                    for (var i = r.length, o = t ? i : -1, s = eP(r);
                                        (t ? o-- : ++o < i) && !1 !== n(s[o], o, s););
                                    return r
                                }
                            }

                            function nV(e) {
                                return function(t, r, n) {
                                    for (var i = -1, o = eP(t), s = n(t), a = s.length; a--;) {
                                        var c = s[e ? a : ++i];
                                        if (!1 === r(o[c], c, o)) break
                                    }
                                    return t
                                }
                            }

                            function nG(e) {
                                return function(t) {
                                    var n = tU(t = o7(t)) ? tz(t) : r,
                                        i = n ? n[0] : t.charAt(0),
                                        o = n ? nC(n, 1).join("") : t.slice(1);
                                    return i[e]() + o
                                }
                            }

                            function nW(e) {
                                return function(t) {
                                    return tp(sC(sx(t).replace(eH, "")), e, "")
                                }
                            }

                            function nK(e) {
                                return function() {
                                    var t = arguments;
                                    switch (t.length) {
                                        case 0:
                                            return new e;
                                        case 1:
                                            return new e(t[0]);
                                        case 2:
                                            return new e(t[0], t[1]);
                                        case 3:
                                            return new e(t[0], t[1], t[2]);
                                        case 4:
                                            return new e(t[0], t[1], t[2], t[3]);
                                        case 5:
                                            return new e(t[0], t[1], t[2], t[3], t[4]);
                                        case 6:
                                            return new e(t[0], t[1], t[2], t[3], t[4], t[5]);
                                        case 7:
                                            return new e(t[0], t[1], t[2], t[3], t[4], t[5], t[6])
                                    }
                                    var r = rg(e.prototype),
                                        n = e.apply(r, t);
                                    return oV(n) ? n : r
                                }
                            }

                            function nJ(e) {
                                return function(t, n, i) {
                                    var o = eP(t);
                                    if (!oD(t)) {
                                        var s = il(n, 3);
                                        t = sh(t), n = function(e) {
                                            return s(o[e], e, o)
                                        }
                                    }
                                    var a = e(t, n, i);
                                    return a > -1 ? o[s ? t[a] : a] : r
                                }
                            }

                            function nY(e) {
                                return ii(function(t) {
                                    var i = t.length,
                                        o = i,
                                        s = rb.prototype.thru;
                                    for (e && t.reverse(); o--;) {
                                        var a = t[o];
                                        if ("function" != typeof a) throw new eO(n);
                                        if (s && !c && "wrapper" == ic(a)) var c = new rb([], !0)
                                    }
                                    for (o = c ? o : i; ++o < i;) {
                                        var u = ic(a = t[o]),
                                            l = "wrapper" == u ? ia(a) : r;
                                        c = l && ix(l[0]) && 424 == l[1] && !l[4].length && 1 == l[9] ? c[ic(l[0])].apply(c, l[3]) : 1 == a.length && ix(a) ? c[u]() : c.thru(a)
                                    }
                                    return function() {
                                        var e = arguments,
                                            r = e[0];
                                        if (c && 1 == e.length && oB(r)) return c.plant(r).value();
                                        for (var n = 0, o = i ? t[n].apply(this, e) : r; ++n < i;) o = t[n].call(this, o);
                                        return o
                                    }
                                })
                            }

                            function nZ(e, t, n, i, o, s, a, c, u, l) {
                                var d = 128 & t,
                                    h = 1 & t,
                                    f = 2 & t,
                                    p = 24 & t,
                                    g = 512 & t,
                                    m = f ? r : nK(e);
                                return function b() {
                                    for (var y = arguments.length, v = ey(y), w = y; w--;) v[w] = arguments[w];
                                    if (p) var E = iu(b),
                                        _ = function(e, t) {
                                            for (var r = e.length, n = 0; r--;) e[r] === t && ++n;
                                            return n
                                        }(v, E);
                                    if (i && (v = nU(v, i, o, p)), s && (v = nL(v, s, a, p)), y -= _, p && y < l) {
                                        var P = tq(v, E);
                                        return n5(e, t, nZ, b.placeholder, n, v, P, c, u, l - y)
                                    }
                                    var x = h ? n : this,
                                        I = f ? x[e] : e;
                                    return y = v.length, c ? v = function(e, t) {
                                        for (var n = e.length, i = t6(t.length, n), o = nF(e); i--;) {
                                            var s = t[i];
                                            e[i] = iE(s, n) ? o[s] : r
                                        }
                                        return e
                                    }(v, c) : g && y > 1 && v.reverse(), d && u < y && (v.length = u), this && this !== e6 && this instanceof b && (I = m || nK(I)), I.apply(x, v)
                                }
                            }

                            function nQ(e, t) {
                                return function(r, n) {
                                    var i, o;
                                    return i = t(n), o = {}, rG(r, function(t, r, n) {
                                        e(o, i(t), r, n)
                                    }), o
                                }
                            }

                            function nX(e, t) {
                                return function(n, i) {
                                    var o;
                                    if (n === r && i === r) return t;
                                    if (n !== r && (o = n), i !== r) {
                                        if (o === r) return i;
                                        "string" == typeof n || "string" == typeof i ? (n = nE(n), i = nE(i)) : (n = nw(n), i = nw(i)), o = e(n, i)
                                    }
                                    return o
                                }
                            }

                            function n0(e) {
                                return ii(function(t) {
                                    return t = th(t, tj(il())), nd(function(r) {
                                        var n = this;
                                        return e(t, function(e) {
                                            return to(e, n, r)
                                        })
                                    })
                                })
                            }

                            function n1(e, t) {
                                var n = (t = t === r ? " " : nE(t)).length;
                                if (n < 2) return n ? nl(t, e) : t;
                                var i = nl(t, tJ(e / t$(t)));
                                return tU(t) ? nC(tz(i), 0, e).join("") : i.slice(0, e)
                            }

                            function n2(e) {
                                return function(t, n, i) {
                                    return i && "number" != typeof i && i_(t, n, i) && (n = i = r), t = o5(t), n === r ? (n = t, t = 0) : n = o5(n), i = i === r ? t < n ? 1 : -1 : o5(i),
                                        function(e, t, r, n) {
                                            for (var i = -1, o = t2(tJ((t - e) / (r || 1)), 0), s = ey(o); o--;) s[n ? o : ++i] = e, e += r;
                                            return s
                                        }(t, n, i, e)
                                }
                            }

                            function n6(e) {
                                return function(t, r) {
                                    return "string" == typeof t && "string" == typeof r || (t = o4(t), r = o4(r)), e(t, r)
                                }
                            }

                            function n5(e, t, n, i, o, s, a, c, u, l) {
                                var d = 8 & t,
                                    h = d ? a : r,
                                    f = d ? r : a,
                                    p = d ? s : r,
                                    g = d ? r : s;
                                t |= d ? 32 : 64, 4 & (t &= ~(d ? 64 : 32)) || (t &= -4);
                                var m = [e, t, o, p, h, g, f, c, u, l],
                                    b = n.apply(r, m);
                                return ix(e) && iR(b, m), b.placeholder = i, iM(b, e, t)
                            }

                            function n3(e) {
                                var t = e_[e];
                                return function(e, r) {
                                    if (e = o4(e), (r = null == r ? 0 : t6(o3(r), 292)) && tX(e)) {
                                        var n = (o7(e) + "e").split("e");
                                        return +((n = (o7(t(n[0] + "e" + (+n[1] + r))) + "e").split("e"))[0] + "e" + (+n[1] - r))
                                    }
                                    return t(e)
                                }
                            }
                            var n8 = rt && 1 / tH(new rt([, -0]))[1] == s ? function(e) {
                                return new rt(e)
                            } : s$;

                            function n4(e) {
                                return function(t) {
                                    var r, n, i = ib(t);
                                    return i == m ? tL(t) : i == E ? (r = -1, n = Array(t.size), t.forEach(function(e) {
                                        n[++r] = [e, e]
                                    }), n) : th(e(t), function(e) {
                                        return [e, t[e]]
                                    })
                                }
                            }

                            function n9(e, t, i, s, a, c, u, l) {
                                var d = 2 & t;
                                if (!d && "function" != typeof e) throw new eO(n);
                                var h = s ? s.length : 0;
                                if (h || (t &= -97, s = a = r), u = u === r ? u : t2(o3(u), 0), l = l === r ? l : o3(l), h -= a ? a.length : 0, 64 & t) {
                                    var f = s,
                                        p = a;
                                    s = a = r
                                }
                                var g = d ? r : ia(e),
                                    m = [e, t, i, s, a, f, p, c, u, l];
                                if (g && function(e, t) {
                                        var r = e[1],
                                            n = t[1],
                                            i = r | n,
                                            s = i < 131,
                                            a = 128 == n && 8 == r || 128 == n && 256 == r && e[7].length <= t[8] || 384 == n && t[7].length <= t[8] && 8 == r;
                                        if (s || a) {
                                            1 & n && (e[2] = t[2], i |= 1 & r ? 0 : 4);
                                            var c = t[3];
                                            if (c) {
                                                var u = e[3];
                                                e[3] = u ? nU(u, c, t[4]) : c, e[4] = u ? tq(e[3], o) : t[4]
                                            }(c = t[5]) && (u = e[5], e[5] = u ? nL(u, c, t[6]) : c, e[6] = u ? tq(e[5], o) : t[6]), (c = t[7]) && (e[7] = c), 128 & n && (e[8] = null == e[8] ? t[8] : t6(e[8], t[8])), null == e[9] && (e[9] = t[9]), e[0] = t[0], e[1] = i
                                        }
                                    }(m, g), e = m[0], t = m[1], i = m[2], s = m[3], a = m[4], (l = m[9] = m[9] === r ? d ? 0 : e.length : t2(m[9] - h, 0)) || !(24 & t) || (t &= -25), t && 1 != t) 8 == t || 16 == t ? (b = e, y = t, v = l, w = nK(b), C = function e() {
                                    for (var t = arguments.length, n = ey(t), i = t, o = iu(e); i--;) n[i] = arguments[i];
                                    var s = t < 3 && n[0] !== o && n[t - 1] !== o ? [] : tq(n, o);
                                    return (t -= s.length) < v ? n5(b, y, nZ, e.placeholder, r, n, s, r, r, v - t) : to(this && this !== e6 && this instanceof e ? w : b, this, n)
                                }) : 32 != t && 33 != t || a.length ? C = nZ.apply(r, m) : (E = e, _ = t, P = i, x = s, I = 1 & _, O = nK(E), C = function e() {
                                    for (var t = -1, r = arguments.length, n = -1, i = x.length, o = ey(i + r), s = this && this !== e6 && this instanceof e ? O : E; ++n < i;) o[n] = x[n];
                                    for (; r--;) o[n++] = arguments[++t];
                                    return to(s, I ? P : this, o)
                                });
                                else var b, y, v, w, E, _, P, x, I, O, T, A, S, j, R, C = (T = e, A = t, S = i, j = 1 & A, R = nK(T), function e() {
                                    return (this && this !== e6 && this instanceof e ? R : T).apply(j ? S : this, arguments)
                                });
                                return iM((g ? nf : iR)(C, m), e, t)
                            }

                            function n7(e, t, n, i) {
                                return e === r || oR(e, eS[n]) && !eC.call(i, n) ? t : e
                            }

                            function ie(e, t, n, i, o, s) {
                                return oV(e) && oV(t) && (s.set(t, e), nn(e, t, r, ie, s), s.delete(t)), e
                            }

                            function it(e) {
                                return oJ(e) ? r : e
                            }

                            function ir(e, t, n, i, o, s) {
                                var a = 1 & n,
                                    c = e.length,
                                    u = t.length;
                                if (c != u && !(a && u > c)) return !1;
                                var l = s.get(e),
                                    d = s.get(t);
                                if (l && d) return l == t && d == e;
                                var h = -1,
                                    f = !0,
                                    p = 2 & n ? new r_ : r;
                                for (s.set(e, t), s.set(t, e); ++h < c;) {
                                    var g = e[h],
                                        m = t[h];
                                    if (i) var b = a ? i(m, g, h, t, e, s) : i(g, m, h, e, t, s);
                                    if (b !== r) {
                                        if (b) continue;
                                        f = !1;
                                        break
                                    }
                                    if (p) {
                                        if (!tm(t, function(e, t) {
                                                if (!tC(p, t) && (g === e || o(g, e, n, i, s))) return p.push(t)
                                            })) {
                                            f = !1;
                                            break
                                        }
                                    } else if (!(g === m || o(g, m, n, i, s))) {
                                        f = !1;
                                        break
                                    }
                                }
                                return s.delete(e), s.delete(t), f
                            }

                            function ii(e) {
                                return iN(iA(e, r, iG), e + "")
                            }

                            function io(e) {
                                return rY(e, sh, ig)
                            }

                            function is(e) {
                                return rY(e, sf, im)
                            }
                            var ia = ri ? function(e) {
                                return ri.get(e)
                            } : s$;

                            function ic(e) {
                                for (var t = e.name + "", r = ro[t], n = eC.call(ro, t) ? r.length : 0; n--;) {
                                    var i = r[n],
                                        o = i.func;
                                    if (null == o || o == e) return i.name
                                }
                                return t
                            }

                            function iu(e) {
                                return (eC.call(rp, "placeholder") ? rp : e).placeholder
                            }

                            function il() {
                                var e = rp.iteratee || sL;
                                return e = e === sL ? r4 : e, arguments.length ? e(arguments[0], arguments[1]) : e
                            }

                            function id(e, t) {
                                var r, n = e.__data__;
                                return ("string" == (r = typeof t) || "number" == r || "symbol" == r || "boolean" == r ? "__proto__" !== t : null === t) ? n["string" == typeof t ? "string" : "hash"] : n.map
                            }

                            function ih(e) {
                                for (var t = sh(e), r = t.length; r--;) {
                                    var n = t[r],
                                        i = e[n];
                                    t[r] = [n, i, i == i && !oV(i)]
                                }
                                return t
                            }

                            function ip(e, t) {
                                var n = null == e ? r : e[t];
                                return r8(n) ? n : r
                            }
                            var ig = tZ ? function(e) {
                                    return null == e ? [] : tu(tZ(e = eP(e)), function(t) {
                                        return e1.call(e, t)
                                    })
                                } : sY,
                                im = tZ ? function(e) {
                                    for (var t = []; e;) tf(t, ig(e)), e = eG(e);
                                    return t
                                } : sY,
                                ib = rZ;

                            function iy(e, t, r) {
                                t = nR(t, e);
                                for (var n = -1, i = t.length, o = !1; ++n < i;) {
                                    var s = iU(t[n]);
                                    if (!(o = null != e && r(e, s))) break;
                                    e = e[s]
                                }
                                return o || ++n != i ? o : !!(i = null == e ? 0 : e.length) && oz(i) && iE(s, i) && (oB(e) || oM(e))
                            }

                            function iv(e) {
                                return "function" != typeof e.constructor || iO(e) ? {} : rg(eG(e))
                            }

                            function iw(e) {
                                return oB(e) || oM(e) || !!(e5 && e && e[e5])
                            }

                            function iE(e, t) {
                                var r = typeof e;
                                return !!(t = t ? ? 9007199254740991) && ("number" == r || "symbol" != r && ed.test(e)) && e > -1 && e % 1 == 0 && e < t
                            }

                            function i_(e, t, r) {
                                if (!oV(r)) return !1;
                                var n = typeof t;
                                return ("number" == n ? !!(oD(r) && iE(t, r.length)) : "string" == n && t in r) && oR(r[t], e)
                            }

                            function iP(e, t) {
                                if (oB(e)) return !1;
                                var r = typeof e;
                                return !!("number" == r || "symbol" == r || "boolean" == r || null == e || oX(e)) || W.test(e) || !G.test(e) || null != t && e in eP(t)
                            }

                            function ix(e) {
                                var t = ic(e),
                                    r = rp[t];
                                if ("function" != typeof r || !(t in ry.prototype)) return !1;
                                if (e === r) return !0;
                                var n = ia(r);
                                return !!n && e === n[0]
                            }(t9 && ib(new t9(new ArrayBuffer(1))) != O || t7 && ib(new t7) != m || re && ib(re.resolve()) != v || rt && ib(new rt) != E || rr && ib(new rr) != x) && (ib = function(e) {
                                var t = rZ(e),
                                    n = t == y ? e.constructor : r,
                                    i = n ? iL(n) : "";
                                if (i) switch (i) {
                                    case rs:
                                        return O;
                                    case ra:
                                        return m;
                                    case rc:
                                        return v;
                                    case ru:
                                        return E;
                                    case rl:
                                        return x
                                }
                                return t
                            });
                            var iI = ej ? oH : sZ;

                            function iO(e) {
                                var t = e && e.constructor;
                                return e === ("function" == typeof t && t.prototype || eS)
                            }

                            function iT(e, t) {
                                return function(n) {
                                    return null != n && n[e] === t && (t !== r || e in eP(n))
                                }
                            }

                            function iA(e, t, n) {
                                return t = t2(t === r ? e.length - 1 : t, 0),
                                    function() {
                                        for (var r = arguments, i = -1, o = t2(r.length - t, 0), s = ey(o); ++i < o;) s[i] = r[t + i];
                                        i = -1;
                                        for (var a = ey(t + 1); ++i < t;) a[i] = r[i];
                                        return a[t] = n(s), to(e, this, a)
                                    }
                            }

                            function iS(e, t) {
                                return t.length < 2 ? e : rJ(e, ng(t, 0, -1))
                            }

                            function ij(e, t) {
                                if (!("constructor" === t && "function" == typeof e[t]) && "__proto__" != t) return e[t]
                            }
                            var iR = iB(nf),
                                iC = tK || function(e, t) {
                                    return e6.setTimeout(e, t)
                                },
                                iN = iB(np);

                            function iM(e, t, r) {
                                var n, i, o = t + "";
                                return iN(e, function(e, t) {
                                    var r = t.length;
                                    if (!r) return e;
                                    var n = r - 1;
                                    return t[n] = (r > 1 ? "& " : "") + t[n], t = t.join(r > 2 ? ", " : " "), e.replace(X, `{
/* [wrapped with ` + t + `] */
`)
                                }(o, (n = (i = o.match(ee)) ? i[1].split(et) : [], ta(c, function(e) {
                                    var t = "_." + e[0];
                                    r & e[1] && !tl(n, t) && n.push(t)
                                }), n.sort())))
                            }

                            function iB(e) {
                                var t = 0,
                                    n = 0;
                                return function() {
                                    var i = t5(),
                                        o = 16 - (i - n);
                                    if (n = i, o > 0) {
                                        if (++t >= 800) return arguments[0]
                                    } else t = 0;
                                    return e.apply(r, arguments)
                                }
                            }

                            function ik(e, t) {
                                var n = -1,
                                    i = e.length,
                                    o = i - 1;
                                for (t = t === r ? i : t; ++n < t;) {
                                    var s = nu(n, o),
                                        a = e[s];
                                    e[s] = e[n], e[n] = a
                                }
                                return e.length = t, e
                            }
                            var iD = (em = (eg = oI(function(e) {
                                var t = [];
                                return 46 === e.charCodeAt(0) && t.push(""), e.replace(K, function(e, r, n, i) {
                                    t.push(n ? i.replace(ei, "$1") : r || e)
                                }), t
                            }, function(e) {
                                return 500 === em.size && em.clear(), e
                            })).cache, eg);

                            function iU(e) {
                                if ("string" == typeof e || oX(e)) return e;
                                var t = e + "";
                                return "0" == t && 1 / e == -s ? "-0" : t
                            }

                            function iL(e) {
                                if (null != e) {
                                    try {
                                        return eR.call(e)
                                    } catch {}
                                    try {
                                        return e + ""
                                    } catch {}
                                }
                                return ""
                            }

                            function iF(e) {
                                if (e instanceof ry) return e.clone();
                                var t = new rb(e.__wrapped__, e.__chain__);
                                return t.__actions__ = nF(e.__actions__), t.__index__ = e.__index__, t.__values__ = e.__values__, t
                            }
                            var iq = nd(function(e, t) {
                                    return oU(e) ? rD(e, r$(t, 1, oU, !0)) : []
                                }),
                                iH = nd(function(e, t) {
                                    var n = iZ(t);
                                    return oU(n) && (n = r), oU(e) ? rD(e, r$(t, 1, oU, !0), il(n, 2)) : []
                                }),
                                i$ = nd(function(e, t) {
                                    var n = iZ(t);
                                    return oU(n) && (n = r), oU(e) ? rD(e, r$(t, 1, oU, !0), r, n) : []
                                });

                            function iz(e, t, r) {
                                var n = null == e ? 0 : e.length;
                                if (!n) return -1;
                                var i = null == r ? 0 : o3(r);
                                return i < 0 && (i = t2(n + i, 0)), tv(e, il(t, 3), i)
                            }

                            function iV(e, t, n) {
                                var i = null == e ? 0 : e.length;
                                if (!i) return -1;
                                var o = i - 1;
                                return n !== r && (o = o3(n), o = n < 0 ? t2(i + o, 0) : t6(o, i - 1)), tv(e, il(t, 3), o, !0)
                            }

                            function iG(e) {
                                return (null == e ? 0 : e.length) ? r$(e, 1) : []
                            }

                            function iW(e) {
                                return e && e.length ? e[0] : r
                            }
                            var iK = nd(function(e) {
                                    var t = th(e, nS);
                                    return t.length && t[0] === e[0] ? r1(t) : []
                                }),
                                iJ = nd(function(e) {
                                    var t = iZ(e),
                                        n = th(e, nS);
                                    return t === iZ(n) ? t = r : n.pop(), n.length && n[0] === e[0] ? r1(n, il(t, 2)) : []
                                }),
                                iY = nd(function(e) {
                                    var t = iZ(e),
                                        n = th(e, nS);
                                    return (t = "function" == typeof t ? t : r) && n.pop(), n.length && n[0] === e[0] ? r1(n, r, t) : []
                                });

                            function iZ(e) {
                                var t = null == e ? 0 : e.length;
                                return t ? e[t - 1] : r
                            }
                            var iQ = nd(iX);

                            function iX(e, t) {
                                return e && e.length && t && t.length ? na(e, t) : e
                            }
                            var i0 = ii(function(e, t) {
                                var r = null == e ? 0 : e.length,
                                    n = rC(e, t);
                                return nc(e, th(t, function(e) {
                                    return iE(e, r) ? +e : e
                                }).sort(nD)), n
                            });

                            function i1(e) {
                                return null == e ? e : t4.call(e)
                            }
                            var i2 = nd(function(e) {
                                    return n_(r$(e, 1, oU, !0))
                                }),
                                i6 = nd(function(e) {
                                    var t = iZ(e);
                                    return oU(t) && (t = r), n_(r$(e, 1, oU, !0), il(t, 2))
                                }),
                                i5 = nd(function(e) {
                                    var t = iZ(e);
                                    return t = "function" == typeof t ? t : r, n_(r$(e, 1, oU, !0), r, t)
                                });

                            function i3(e) {
                                if (!(e && e.length)) return [];
                                var t = 0;
                                return e = tu(e, function(e) {
                                    if (oU(e)) return t = t2(e.length, t), !0
                                }), tA(t, function(t) {
                                    return th(e, tx(t))
                                })
                            }

                            function i8(e, t) {
                                if (!(e && e.length)) return [];
                                var n = i3(e);
                                return null == t ? n : th(n, function(e) {
                                    return to(t, r, e)
                                })
                            }
                            var i4 = nd(function(e, t) {
                                    return oU(e) ? rD(e, t) : []
                                }),
                                i9 = nd(function(e) {
                                    return nT(tu(e, oU))
                                }),
                                i7 = nd(function(e) {
                                    var t = iZ(e);
                                    return oU(t) && (t = r), nT(tu(e, oU), il(t, 2))
                                }),
                                oe = nd(function(e) {
                                    var t = iZ(e);
                                    return t = "function" == typeof t ? t : r, nT(tu(e, oU), r, t)
                                }),
                                ot = nd(i3),
                                or = nd(function(e) {
                                    var t = e.length,
                                        n = t > 1 ? e[t - 1] : r;
                                    return n = "function" == typeof n ? (e.pop(), n) : r, i8(e, n)
                                });

                            function on(e) {
                                var t = rp(e);
                                return t.__chain__ = !0, t
                            }

                            function oi(e, t) {
                                return t(e)
                            }
                            var oo = ii(function(e) {
                                    var t = e.length,
                                        n = t ? e[0] : 0,
                                        i = this.__wrapped__,
                                        o = function(t) {
                                            return rC(t, e)
                                        };
                                    return !(t > 1) && !this.__actions__.length && i instanceof ry && iE(n) ? ((i = i.slice(n, +n + (t ? 1 : 0))).__actions__.push({
                                        func: oi,
                                        args: [o],
                                        thisArg: r
                                    }), new rb(i, this.__chain__).thru(function(e) {
                                        return t && !e.length && e.push(r), e
                                    })) : this.thru(o)
                                }),
                                os = nH(function(e, t, r) {
                                    eC.call(e, r) ? ++e[r] : rR(e, r, 1)
                                }),
                                oa = nJ(iz),
                                oc = nJ(iV);

                            function ou(e, t) {
                                return (oB(e) ? ta : rU)(e, il(t, 3))
                            }

                            function ol(e, t) {
                                return (oB(e) ? function(e, t) {
                                    for (var r = null == e ? 0 : e.length; r-- && !1 !== t(e[r], r, e););
                                    return e
                                } : rL)(e, il(t, 3))
                            }
                            var od = nH(function(e, t, r) {
                                    eC.call(e, r) ? e[r].push(t) : rR(e, r, [t])
                                }),
                                oh = nd(function(e, t, r) {
                                    var n = -1,
                                        i = "function" == typeof t,
                                        o = oD(e) ? ey(e.length) : [];
                                    return rU(e, function(e) {
                                        o[++n] = i ? to(t, e, r) : r2(e, t, r)
                                    }), o
                                }),
                                of = nH(function(e, t, r) {
                                    rR(e, r, t)
                                });

                            function op(e, t) {
                                return (oB(e) ? th : ne)(e, il(t, 3))
                            }
                            var og = nH(function(e, t, r) {
                                    e[r ? 0 : 1].push(t)
                                }, function() {
                                    return [
                                        [],
                                        []
                                    ]
                                }),
                                om = nd(function(e, t) {
                                    if (null == e) return [];
                                    var r = t.length;
                                    return r > 1 && i_(e, t[0], t[1]) ? t = [] : r > 2 && i_(t[0], t[1], t[2]) && (t = [t[0]]), no(e, r$(t, 1), [])
                                }),
                                ob = tI || function() {
                                    return e6.Date.now()
                                };

                            function oy(e, t, n) {
                                return t = n ? r : t, t = e && null == t ? e.length : t, n9(e, 128, r, r, r, r, t)
                            }

                            function ov(e, t) {
                                var i;
                                if ("function" != typeof t) throw new eO(n);
                                return e = o3(e),
                                    function() {
                                        return --e > 0 && (i = t.apply(this, arguments)), e <= 1 && (t = r), i
                                    }
                            }
                            var ow = nd(function(e, t, r) {
                                    var n = 1;
                                    if (r.length) {
                                        var i = tq(r, iu(ow));
                                        n |= 32
                                    }
                                    return n9(e, n, t, r, i)
                                }),
                                oE = nd(function(e, t, r) {
                                    var n = 3;
                                    if (r.length) {
                                        var i = tq(r, iu(oE));
                                        n |= 32
                                    }
                                    return n9(t, n, e, r, i)
                                });

                            function o_(e, t, i) {
                                var o, s, a, c, u, l, d = 0,
                                    h = !1,
                                    f = !1,
                                    p = !0;
                                if ("function" != typeof e) throw new eO(n);

                                function g(t) {
                                    var n = o,
                                        i = s;
                                    return o = s = r, d = t, c = e.apply(i, n)
                                }

                                function m(e) {
                                    var n = e - l,
                                        i = e - d;
                                    return l === r || n >= t || n < 0 || f && i >= a
                                }

                                function b() {
                                    var e, r, n, i = ob();
                                    if (m(i)) return y(i);
                                    u = iC(b, (e = i - l, r = i - d, n = t - e, f ? t6(n, a - r) : n))
                                }

                                function y(e) {
                                    return u = r, p && o ? g(e) : (o = s = r, c)
                                }

                                function v() {
                                    var e, n = ob(),
                                        i = m(n);
                                    if (o = arguments, s = this, l = n, i) {
                                        if (u === r) return d = e = l, u = iC(b, t), h ? g(e) : c;
                                        if (f) return nN(u), u = iC(b, t), g(l)
                                    }
                                    return u === r && (u = iC(b, t)), c
                                }
                                return t = o4(t) || 0, oV(i) && (h = !!i.leading, a = (f = "maxWait" in i) ? t2(o4(i.maxWait) || 0, t) : a, p = "trailing" in i ? !!i.trailing : p), v.cancel = function() {
                                    u !== r && nN(u), d = 0, o = l = s = u = r
                                }, v.flush = function() {
                                    return u === r ? c : y(ob())
                                }, v
                            }
                            var oP = nd(function(e, t) {
                                    return rk(e, 1, t)
                                }),
                                ox = nd(function(e, t, r) {
                                    return rk(e, o4(t) || 0, r)
                                });

                            function oI(e, t) {
                                if ("function" != typeof e || null != t && "function" != typeof t) throw new eO(n);
                                var r = function() {
                                    var n = arguments,
                                        i = t ? t.apply(this, n) : n[0],
                                        o = r.cache;
                                    if (o.has(i)) return o.get(i);
                                    var s = e.apply(this, n);
                                    return r.cache = o.set(i, s) || o, s
                                };
                                return r.cache = new(oI.Cache || rE), r
                            }

                            function oO(e) {
                                if ("function" != typeof e) throw new eO(n);
                                return function() {
                                    var t = arguments;
                                    switch (t.length) {
                                        case 0:
                                            return !e.call(this);
                                        case 1:
                                            return !e.call(this, t[0]);
                                        case 2:
                                            return !e.call(this, t[0], t[1]);
                                        case 3:
                                            return !e.call(this, t[0], t[1], t[2])
                                    }
                                    return !e.apply(this, t)
                                }
                            }
                            oI.Cache = rE;
                            var oT = nd(function(e, t) {
                                    var r = (t = 1 == t.length && oB(t[0]) ? th(t[0], tj(il())) : th(r$(t, 1), tj(il()))).length;
                                    return nd(function(n) {
                                        for (var i = -1, o = t6(n.length, r); ++i < o;) n[i] = t[i].call(this, n[i]);
                                        return to(e, this, n)
                                    })
                                }),
                                oA = nd(function(e, t) {
                                    var n = tq(t, iu(oA));
                                    return n9(e, 32, r, t, n)
                                }),
                                oS = nd(function(e, t) {
                                    var n = tq(t, iu(oS));
                                    return n9(e, 64, r, t, n)
                                }),
                                oj = ii(function(e, t) {
                                    return n9(e, 256, r, r, r, t)
                                });

                            function oR(e, t) {
                                return e === t || e != e && t != t
                            }
                            var oC = n6(rQ),
                                oN = n6(function(e, t) {
                                    return e >= t
                                }),
                                oM = r6(function() {
                                    return arguments
                                }()) ? r6 : function(e) {
                                    return oG(e) && eC.call(e, "callee") && !e1.call(e, "callee")
                                },
                                oB = ey.isArray,
                                ok = e7 ? tj(e7) : function(e) {
                                    return oG(e) && rZ(e) == I
                                };

                            function oD(e) {
                                return null != e && oz(e.length) && !oH(e)
                            }

                            function oU(e) {
                                return oG(e) && oD(e)
                            }
                            var oL = tQ || sZ,
                                oF = te ? tj(te) : function(e) {
                                    return oG(e) && rZ(e) == h
                                };

                            function oq(e) {
                                if (!oG(e)) return !1;
                                var t = rZ(e);
                                return t == f || "[object DOMException]" == t || "string" == typeof e.message && "string" == typeof e.name && !oJ(e)
                            }

                            function oH(e) {
                                if (!oV(e)) return !1;
                                var t = rZ(e);
                                return t == p || t == g || "[object AsyncFunction]" == t || "[object Proxy]" == t
                            }

                            function o$(e) {
                                return "number" == typeof e && e == o3(e)
                            }

                            function oz(e) {
                                return "number" == typeof e && e > -1 && e % 1 == 0 && e <= 9007199254740991
                            }

                            function oV(e) {
                                var t = typeof e;
                                return null != e && ("object" == t || "function" == t)
                            }

                            function oG(e) {
                                return null != e && "object" == typeof e
                            }
                            var oW = tt ? tj(tt) : function(e) {
                                return oG(e) && ib(e) == m
                            };

                            function oK(e) {
                                return "number" == typeof e || oG(e) && rZ(e) == b
                            }

                            function oJ(e) {
                                if (!oG(e) || rZ(e) != y) return !1;
                                var t = eG(e);
                                if (null === t) return !0;
                                var r = eC.call(t, "constructor") && t.constructor;
                                return "function" == typeof r && r instanceof r && eR.call(r) == ek
                            }
                            var oY = tr ? tj(tr) : function(e) {
                                    return oG(e) && rZ(e) == w
                                },
                                oZ = tn ? tj(tn) : function(e) {
                                    return oG(e) && ib(e) == E
                                };

                            function oQ(e) {
                                return "string" == typeof e || !oB(e) && oG(e) && rZ(e) == _
                            }

                            function oX(e) {
                                return "symbol" == typeof e || oG(e) && rZ(e) == P
                            }
                            var o0 = ti ? tj(ti) : function(e) {
                                    return oG(e) && oz(e.length) && !!eY[rZ(e)]
                                },
                                o1 = n6(r7),
                                o2 = n6(function(e, t) {
                                    return e <= t
                                });

                            function o6(e) {
                                if (!e) return [];
                                if (oD(e)) return oQ(e) ? tz(e) : nF(e);
                                if (e3 && e[e3]) return function(e) {
                                    for (var t, r = []; !(t = e.next()).done;) r.push(t.value);
                                    return r
                                }(e[e3]());
                                var t = ib(e);
                                return (t == m ? tL : t == E ? tH : sE)(e)
                            }

                            function o5(e) {
                                return e ? (e = o4(e)) === s || e === -s ? (e < 0 ? -1 : 1) * 17976931348623157e292 : e == e ? e : 0 : 0 === e ? e : 0
                            }

                            function o3(e) {
                                var t = o5(e),
                                    r = t % 1;
                                return t == t ? r ? t - r : t : 0
                            }

                            function o8(e) {
                                return e ? rN(o3(e), 0, 4294967295) : 0
                            }

                            function o4(e) {
                                if ("number" == typeof e) return e;
                                if (oX(e)) return a;
                                if (oV(e)) {
                                    var t = "function" == typeof e.valueOf ? e.valueOf() : e;
                                    e = oV(t) ? t + "" : t
                                }
                                if ("string" != typeof e) return 0 === e ? e : +e;
                                e = tS(e);
                                var r = ec.test(e);
                                return r || el.test(e) ? e0(e.slice(2), r ? 2 : 8) : ea.test(e) ? a : +e
                            }

                            function o9(e) {
                                return nq(e, sf(e))
                            }

                            function o7(e) {
                                return null == e ? "" : nE(e)
                            }
                            var se = n$(function(e, t) {
                                    if (iO(t) || oD(t)) {
                                        nq(t, sh(t), e);
                                        return
                                    }
                                    for (var r in t) eC.call(t, r) && rT(e, r, t[r])
                                }),
                                st = n$(function(e, t) {
                                    nq(t, sf(t), e)
                                }),
                                sr = n$(function(e, t, r, n) {
                                    nq(t, sf(t), e, n)
                                }),
                                sn = n$(function(e, t, r, n) {
                                    nq(t, sh(t), e, n)
                                }),
                                si = ii(rC),
                                so = nd(function(e, t) {
                                    e = eP(e);
                                    var n = -1,
                                        i = t.length,
                                        o = i > 2 ? t[2] : r;
                                    for (o && i_(t[0], t[1], o) && (i = 1); ++n < i;)
                                        for (var s = t[n], a = sf(s), c = -1, u = a.length; ++c < u;) {
                                            var l = a[c],
                                                d = e[l];
                                            (d === r || oR(d, eS[l]) && !eC.call(e, l)) && (e[l] = s[l])
                                        }
                                    return e
                                }),
                                ss = nd(function(e) {
                                    return e.push(r, ie), to(sg, r, e)
                                });

                            function sa(e, t, n) {
                                var i = null == e ? r : rJ(e, t);
                                return i === r ? n : i
                            }

                            function sc(e, t) {
                                return null != e && iy(e, t, r0)
                            }
                            var su = nQ(function(e, t, r) {
                                    null != t && "function" != typeof t.toString && (t = eB.call(t)), e[t] = r
                                }, sB(sU)),
                                sl = nQ(function(e, t, r) {
                                    null != t && "function" != typeof t.toString && (t = eB.call(t)), eC.call(e, t) ? e[t].push(r) : e[t] = [r]
                                }, il),
                                sd = nd(r2);

                            function sh(e) {
                                return oD(e) ? rx(e) : r9(e)
                            }

                            function sf(e) {
                                return oD(e) ? rx(e, !0) : function(e) {
                                    if (!oV(e)) return function(e) {
                                        var t = [];
                                        if (null != e)
                                            for (var r in eP(e)) t.push(r);
                                        return t
                                    }(e);
                                    var t = iO(e),
                                        r = [];
                                    for (var n in e) "constructor" == n && (t || !eC.call(e, n)) || r.push(n);
                                    return r
                                }(e)
                            }
                            var sp = n$(function(e, t, r) {
                                    nn(e, t, r)
                                }),
                                sg = n$(function(e, t, r, n) {
                                    nn(e, t, r, n)
                                }),
                                sm = ii(function(e, t) {
                                    var r = {};
                                    if (null == e) return r;
                                    var n = !1;
                                    t = th(t, function(t) {
                                        return t = nR(t, e), n || (n = t.length > 1), t
                                    }), nq(e, is(e), r), n && (r = rM(r, 7, it));
                                    for (var i = t.length; i--;) nP(r, t[i]);
                                    return r
                                }),
                                sb = ii(function(e, t) {
                                    return null == e ? {} : ns(e, t, function(t, r) {
                                        return sc(e, r)
                                    })
                                });

                            function sy(e, t) {
                                if (null == e) return {};
                                var r = th(is(e), function(e) {
                                    return [e]
                                });
                                return t = il(t), ns(e, r, function(e, r) {
                                    return t(e, r[0])
                                })
                            }
                            var sv = n4(sh),
                                sw = n4(sf);

                            function sE(e) {
                                return null == e ? [] : tR(e, sh(e))
                            }
                            var s_ = nW(function(e, t, r) {
                                return t = t.toLowerCase(), e + (r ? sP(t) : t)
                            });

                            function sP(e) {
                                return sR(o7(e).toLowerCase())
                            }

                            function sx(e) {
                                return (e = o7(e)) && e.replace(eh, tB).replace(e$, "")
                            }
                            var sI = nW(function(e, t, r) {
                                    return e + (r ? "-" : "") + t.toLowerCase()
                                }),
                                sO = nW(function(e, t, r) {
                                    return e + (r ? " " : "") + t.toLowerCase()
                                }),
                                sT = nG("toLowerCase"),
                                sA = nW(function(e, t, r) {
                                    return e + (r ? "_" : "") + t.toLowerCase()
                                }),
                                sS = nW(function(e, t, r) {
                                    return e + (r ? " " : "") + sR(t)
                                }),
                                sj = nW(function(e, t, r) {
                                    return e + (r ? " " : "") + t.toUpperCase()
                                }),
                                sR = nG("toUpperCase");

                            function sC(e, t, n) {
                                var i;
                                return e = o7(e), (t = n ? r : t) === r ? (i = e, eW.test(i)) ? e.match(eV) || [] : e.match(er) || [] : e.match(t) || []
                            }
                            var sN = nd(function(e, t) {
                                    try {
                                        return to(e, r, t)
                                    } catch (e) {
                                        return oq(e) ? e : new ew(e)
                                    }
                                }),
                                sM = ii(function(e, t) {
                                    return ta(t, function(t) {
                                        rR(e, t = iU(t), ow(e[t], e))
                                    }), e
                                });

                            function sB(e) {
                                return function() {
                                    return e
                                }
                            }
                            var sk = nY(),
                                sD = nY(!0);

                            function sU(e) {
                                return e
                            }

                            function sL(e) {
                                return r4("function" == typeof e ? e : rM(e, 1))
                            }
                            var sF = nd(function(e, t) {
                                    return function(r) {
                                        return r2(r, e, t)
                                    }
                                }),
                                sq = nd(function(e, t) {
                                    return function(r) {
                                        return r2(e, r, t)
                                    }
                                });

                            function sH(e, t, r) {
                                var n = sh(t),
                                    i = rK(t, n);
                                null != r || oV(t) && (i.length || !n.length) || (r = t, t = e, e = this, i = rK(t, sh(t)));
                                var o = !(oV(r) && "chain" in r) || !!r.chain,
                                    s = oH(e);
                                return ta(i, function(r) {
                                    var n = t[r];
                                    e[r] = n, s && (e.prototype[r] = function() {
                                        var t = this.__chain__;
                                        if (o || t) {
                                            var r = e(this.__wrapped__);
                                            return (r.__actions__ = nF(this.__actions__)).push({
                                                func: n,
                                                args: arguments,
                                                thisArg: e
                                            }), r.__chain__ = t, r
                                        }
                                        return n.apply(e, tf([this.value()], arguments))
                                    })
                                }), e
                            }

                            function s$() {}
                            var sz = n0(th),
                                sV = n0(tc),
                                sG = n0(tm);

                            function sW(e) {
                                return iP(e) ? tx(iU(e)) : function(t) {
                                    return rJ(t, e)
                                }
                            }
                            var sK = n2(),
                                sJ = n2(!0);

                            function sY() {
                                return []
                            }

                            function sZ() {
                                return !1
                            }
                            var sQ = nX(function(e, t) {
                                    return e + t
                                }, 0),
                                sX = n3("ceil"),
                                s0 = nX(function(e, t) {
                                    return e / t
                                }, 1),
                                s1 = n3("floor"),
                                s2 = nX(function(e, t) {
                                    return e * t
                                }, 1),
                                s6 = n3("round"),
                                s5 = nX(function(e, t) {
                                    return e - t
                                }, 0);
                            return rp.after = function(e, t) {
                                if ("function" != typeof t) throw new eO(n);
                                return e = o3(e),
                                    function() {
                                        if (--e < 1) return t.apply(this, arguments)
                                    }
                            }, rp.ary = oy, rp.assign = se, rp.assignIn = st, rp.assignInWith = sr, rp.assignWith = sn, rp.at = si, rp.before = ov, rp.bind = ow, rp.bindAll = sM, rp.bindKey = oE, rp.castArray = function() {
                                if (!arguments.length) return [];
                                var e = arguments[0];
                                return oB(e) ? e : [e]
                            }, rp.chain = on, rp.chunk = function(e, t, n) {
                                t = (n ? i_(e, t, n) : t === r) ? 1 : t2(o3(t), 0);
                                var i = null == e ? 0 : e.length;
                                if (!i || t < 1) return [];
                                for (var o = 0, s = 0, a = ey(tJ(i / t)); o < i;) a[s++] = ng(e, o, o += t);
                                return a
                            }, rp.compact = function(e) {
                                for (var t = -1, r = null == e ? 0 : e.length, n = 0, i = []; ++t < r;) {
                                    var o = e[t];
                                    o && (i[n++] = o)
                                }
                                return i
                            }, rp.concat = function() {
                                var e = arguments.length;
                                if (!e) return [];
                                for (var t = ey(e - 1), r = arguments[0], n = e; n--;) t[n - 1] = arguments[n];
                                return tf(oB(r) ? nF(r) : [r], r$(t, 1))
                            }, rp.cond = function(e) {
                                var t = null == e ? 0 : e.length,
                                    r = il();
                                return e = t ? th(e, function(e) {
                                    if ("function" != typeof e[1]) throw new eO(n);
                                    return [r(e[0]), e[1]]
                                }) : [], nd(function(r) {
                                    for (var n = -1; ++n < t;) {
                                        var i = e[n];
                                        if (to(i[0], this, r)) return to(i[1], this, r)
                                    }
                                })
                            }, rp.conforms = function(e) {
                                var t, r;
                                return r = sh(t = rM(e, 1)),
                                    function(e) {
                                        return rB(e, t, r)
                                    }
                            }, rp.constant = sB, rp.countBy = os, rp.create = function(e, t) {
                                var r = rg(e);
                                return null == t ? r : rj(r, t)
                            }, rp.curry = function e(t, n, i) {
                                n = i ? r : n;
                                var o = n9(t, 8, r, r, r, r, r, n);
                                return o.placeholder = e.placeholder, o
                            }, rp.curryRight = function e(t, n, i) {
                                n = i ? r : n;
                                var o = n9(t, 16, r, r, r, r, r, n);
                                return o.placeholder = e.placeholder, o
                            }, rp.debounce = o_, rp.defaults = so, rp.defaultsDeep = ss, rp.defer = oP, rp.delay = ox, rp.difference = iq, rp.differenceBy = iH, rp.differenceWith = i$, rp.drop = function(e, t, n) {
                                var i = null == e ? 0 : e.length;
                                return i ? ng(e, (t = n || t === r ? 1 : o3(t)) < 0 ? 0 : t, i) : []
                            }, rp.dropRight = function(e, t, n) {
                                var i = null == e ? 0 : e.length;
                                return i ? ng(e, 0, (t = i - (t = n || t === r ? 1 : o3(t))) < 0 ? 0 : t) : []
                            }, rp.dropRightWhile = function(e, t) {
                                return e && e.length ? nI(e, il(t, 3), !0, !0) : []
                            }, rp.dropWhile = function(e, t) {
                                return e && e.length ? nI(e, il(t, 3), !0) : []
                            }, rp.fill = function(e, t, n, i) {
                                var o = null == e ? 0 : e.length;
                                return o ? (n && "number" != typeof n && i_(e, t, n) && (n = 0, i = o), function(e, t, n, i) {
                                    var o = e.length;
                                    for ((n = o3(n)) < 0 && (n = -n > o ? 0 : o + n), (i = i === r || i > o ? o : o3(i)) < 0 && (i += o), i = n > i ? 0 : o8(i); n < i;) e[n++] = t;
                                    return e
                                }(e, t, n, i)) : []
                            }, rp.filter = function(e, t) {
                                return (oB(e) ? tu : rH)(e, il(t, 3))
                            }, rp.flatMap = function(e, t) {
                                return r$(op(e, t), 1)
                            }, rp.flatMapDeep = function(e, t) {
                                return r$(op(e, t), s)
                            }, rp.flatMapDepth = function(e, t, n) {
                                return n = n === r ? 1 : o3(n), r$(op(e, t), n)
                            }, rp.flatten = iG, rp.flattenDeep = function(e) {
                                return (null == e ? 0 : e.length) ? r$(e, s) : []
                            }, rp.flattenDepth = function(e, t) {
                                return (null == e ? 0 : e.length) ? r$(e, t = t === r ? 1 : o3(t)) : []
                            }, rp.flip = function(e) {
                                return n9(e, 512)
                            }, rp.flow = sk, rp.flowRight = sD, rp.fromPairs = function(e) {
                                for (var t = -1, r = null == e ? 0 : e.length, n = {}; ++t < r;) {
                                    var i = e[t];
                                    n[i[0]] = i[1]
                                }
                                return n
                            }, rp.functions = function(e) {
                                return null == e ? [] : rK(e, sh(e))
                            }, rp.functionsIn = function(e) {
                                return null == e ? [] : rK(e, sf(e))
                            }, rp.groupBy = od, rp.initial = function(e) {
                                return (null == e ? 0 : e.length) ? ng(e, 0, -1) : []
                            }, rp.intersection = iK, rp.intersectionBy = iJ, rp.intersectionWith = iY, rp.invert = su, rp.invertBy = sl, rp.invokeMap = oh, rp.iteratee = sL, rp.keyBy = of , rp.keys = sh, rp.keysIn = sf, rp.map = op, rp.mapKeys = function(e, t) {
                                var r = {};
                                return t = il(t, 3), rG(e, function(e, n, i) {
                                    rR(r, t(e, n, i), e)
                                }), r
                            }, rp.mapValues = function(e, t) {
                                var r = {};
                                return t = il(t, 3), rG(e, function(e, n, i) {
                                    rR(r, n, t(e, n, i))
                                }), r
                            }, rp.matches = function(e) {
                                return nt(rM(e, 1))
                            }, rp.matchesProperty = function(e, t) {
                                return nr(e, rM(t, 1))
                            }, rp.memoize = oI, rp.merge = sp, rp.mergeWith = sg, rp.method = sF, rp.methodOf = sq, rp.mixin = sH, rp.negate = oO, rp.nthArg = function(e) {
                                return e = o3(e), nd(function(t) {
                                    return ni(t, e)
                                })
                            }, rp.omit = sm, rp.omitBy = function(e, t) {
                                return sy(e, oO(il(t)))
                            }, rp.once = function(e) {
                                return ov(2, e)
                            }, rp.orderBy = function(e, t, n, i) {
                                return null == e ? [] : (oB(t) || (t = null == t ? [] : [t]), oB(n = i ? r : n) || (n = null == n ? [] : [n]), no(e, t, n))
                            }, rp.over = sz, rp.overArgs = oT, rp.overEvery = sV, rp.overSome = sG, rp.partial = oA, rp.partialRight = oS, rp.partition = og, rp.pick = sb, rp.pickBy = sy, rp.property = sW, rp.propertyOf = function(e) {
                                return function(t) {
                                    return null == e ? r : rJ(e, t)
                                }
                            }, rp.pull = iQ, rp.pullAll = iX, rp.pullAllBy = function(e, t, r) {
                                return e && e.length && t && t.length ? na(e, t, il(r, 2)) : e
                            }, rp.pullAllWith = function(e, t, n) {
                                return e && e.length && t && t.length ? na(e, t, r, n) : e
                            }, rp.pullAt = i0, rp.range = sK, rp.rangeRight = sJ, rp.rearg = oj, rp.reject = function(e, t) {
                                return (oB(e) ? tu : rH)(e, oO(il(t, 3)))
                            }, rp.remove = function(e, t) {
                                var r = [];
                                if (!(e && e.length)) return r;
                                var n = -1,
                                    i = [],
                                    o = e.length;
                                for (t = il(t, 3); ++n < o;) {
                                    var s = e[n];
                                    t(s, n, e) && (r.push(s), i.push(n))
                                }
                                return nc(e, i), r
                            }, rp.rest = function(e, t) {
                                if ("function" != typeof e) throw new eO(n);
                                return nd(e, t = t === r ? t : o3(t))
                            }, rp.reverse = i1, rp.sampleSize = function(e, t, n) {
                                return t = (n ? i_(e, t, n) : t === r) ? 1 : o3(t), (oB(e) ? function(e, t) {
                                    return ik(nF(e), rN(t, 0, e.length))
                                } : function(e, t) {
                                    var r = sE(e);
                                    return ik(r, rN(t, 0, r.length))
                                })(e, t)
                            }, rp.set = function(e, t, r) {
                                return null == e ? e : nh(e, t, r)
                            }, rp.setWith = function(e, t, n, i) {
                                return i = "function" == typeof i ? i : r, null == e ? e : nh(e, t, n, i)
                            }, rp.shuffle = function(e) {
                                return (oB(e) ? function(e) {
                                    return ik(nF(e))
                                } : function(e) {
                                    return ik(sE(e))
                                })(e)
                            }, rp.slice = function(e, t, n) {
                                var i = null == e ? 0 : e.length;
                                return i ? (n && "number" != typeof n && i_(e, t, n) ? (t = 0, n = i) : (t = null == t ? 0 : o3(t), n = n === r ? i : o3(n)), ng(e, t, n)) : []
                            }, rp.sortBy = om, rp.sortedUniq = function(e) {
                                return e && e.length ? nv(e) : []
                            }, rp.sortedUniqBy = function(e, t) {
                                return e && e.length ? nv(e, il(t, 2)) : []
                            }, rp.split = function(e, t, n) {
                                return n && "number" != typeof n && i_(e, t, n) && (t = n = r), (n = n === r ? 4294967295 : n >>> 0) ? (e = o7(e)) && ("string" == typeof t || null != t && !oY(t)) && !(t = nE(t)) && tU(e) ? nC(tz(e), 0, n) : e.split(t, n) : []
                            }, rp.spread = function(e, t) {
                                if ("function" != typeof e) throw new eO(n);
                                return t = null == t ? 0 : t2(o3(t), 0), nd(function(r) {
                                    var n = r[t],
                                        i = nC(r, 0, t);
                                    return n && tf(i, n), to(e, this, i)
                                })
                            }, rp.tail = function(e) {
                                var t = null == e ? 0 : e.length;
                                return t ? ng(e, 1, t) : []
                            }, rp.take = function(e, t, n) {
                                return e && e.length ? ng(e, 0, (t = n || t === r ? 1 : o3(t)) < 0 ? 0 : t) : []
                            }, rp.takeRight = function(e, t, n) {
                                var i = null == e ? 0 : e.length;
                                return i ? ng(e, (t = i - (t = n || t === r ? 1 : o3(t))) < 0 ? 0 : t, i) : []
                            }, rp.takeRightWhile = function(e, t) {
                                return e && e.length ? nI(e, il(t, 3), !1, !0) : []
                            }, rp.takeWhile = function(e, t) {
                                return e && e.length ? nI(e, il(t, 3)) : []
                            }, rp.tap = function(e, t) {
                                return t(e), e
                            }, rp.throttle = function(e, t, r) {
                                var i = !0,
                                    o = !0;
                                if ("function" != typeof e) throw new eO(n);
                                return oV(r) && (i = "leading" in r ? !!r.leading : i, o = "trailing" in r ? !!r.trailing : o), o_(e, t, {
                                    leading: i,
                                    maxWait: t,
                                    trailing: o
                                })
                            }, rp.thru = oi, rp.toArray = o6, rp.toPairs = sv, rp.toPairsIn = sw, rp.toPath = function(e) {
                                return oB(e) ? th(e, iU) : oX(e) ? [e] : nF(iD(o7(e)))
                            }, rp.toPlainObject = o9, rp.transform = function(e, t, r) {
                                var n = oB(e),
                                    i = n || oL(e) || o0(e);
                                if (t = il(t, 4), null == r) {
                                    var o = e && e.constructor;
                                    r = i ? n ? new o : [] : oV(e) && oH(o) ? rg(eG(e)) : {}
                                }
                                return (i ? ta : rG)(e, function(e, n, i) {
                                    return t(r, e, n, i)
                                }), r
                            }, rp.unary = function(e) {
                                return oy(e, 1)
                            }, rp.union = i2, rp.unionBy = i6, rp.unionWith = i5, rp.uniq = function(e) {
                                return e && e.length ? n_(e) : []
                            }, rp.uniqBy = function(e, t) {
                                return e && e.length ? n_(e, il(t, 2)) : []
                            }, rp.uniqWith = function(e, t) {
                                return t = "function" == typeof t ? t : r, e && e.length ? n_(e, r, t) : []
                            }, rp.unset = function(e, t) {
                                return null == e || nP(e, t)
                            }, rp.unzip = i3, rp.unzipWith = i8, rp.update = function(e, t, r) {
                                return null == e ? e : nx(e, t, nj(r))
                            }, rp.updateWith = function(e, t, n, i) {
                                return i = "function" == typeof i ? i : r, null == e ? e : nx(e, t, nj(n), i)
                            }, rp.values = sE, rp.valuesIn = function(e) {
                                return null == e ? [] : tR(e, sf(e))
                            }, rp.without = i4, rp.words = sC, rp.wrap = function(e, t) {
                                return oA(nj(t), e)
                            }, rp.xor = i9, rp.xorBy = i7, rp.xorWith = oe, rp.zip = ot, rp.zipObject = function(e, t) {
                                return nA(e || [], t || [], rT)
                            }, rp.zipObjectDeep = function(e, t) {
                                return nA(e || [], t || [], nh)
                            }, rp.zipWith = or, rp.entries = sv, rp.entriesIn = sw, rp.extend = st, rp.extendWith = sr, sH(rp, rp), rp.add = sQ, rp.attempt = sN, rp.camelCase = s_, rp.capitalize = sP, rp.ceil = sX, rp.clamp = function(e, t, n) {
                                return n === r && (n = t, t = r), n !== r && (n = (n = o4(n)) == n ? n : 0), t !== r && (t = (t = o4(t)) == t ? t : 0), rN(o4(e), t, n)
                            }, rp.clone = function(e) {
                                return rM(e, 4)
                            }, rp.cloneDeep = function(e) {
                                return rM(e, 5)
                            }, rp.cloneDeepWith = function(e, t) {
                                return rM(e, 5, t = "function" == typeof t ? t : r)
                            }, rp.cloneWith = function(e, t) {
                                return rM(e, 4, t = "function" == typeof t ? t : r)
                            }, rp.conformsTo = function(e, t) {
                                return null == t || rB(e, t, sh(t))
                            }, rp.deburr = sx, rp.defaultTo = function(e, t) {
                                return null == e || e != e ? t : e
                            }, rp.divide = s0, rp.endsWith = function(e, t, n) {
                                e = o7(e), t = nE(t);
                                var i = e.length,
                                    o = n = n === r ? i : rN(o3(n), 0, i);
                                return (n -= t.length) >= 0 && e.slice(n, o) == t
                            }, rp.eq = oR, rp.escape = function(e) {
                                return (e = o7(e)) && H.test(e) ? e.replace(F, tk) : e
                            }, rp.escapeRegExp = function(e) {
                                return (e = o7(e)) && Y.test(e) ? e.replace(J, "\\$&") : e
                            }, rp.every = function(e, t, n) {
                                var i = oB(e) ? tc : rF;
                                return n && i_(e, t, n) && (t = r), i(e, il(t, 3))
                            }, rp.find = oa, rp.findIndex = iz, rp.findKey = function(e, t) {
                                return ty(e, il(t, 3), rG)
                            }, rp.findLast = oc, rp.findLastIndex = iV, rp.findLastKey = function(e, t) {
                                return ty(e, il(t, 3), rW)
                            }, rp.floor = s1, rp.forEach = ou, rp.forEachRight = ol, rp.forIn = function(e, t) {
                                return null == e ? e : rz(e, il(t, 3), sf)
                            }, rp.forInRight = function(e, t) {
                                return null == e ? e : rV(e, il(t, 3), sf)
                            }, rp.forOwn = function(e, t) {
                                return e && rG(e, il(t, 3))
                            }, rp.forOwnRight = function(e, t) {
                                return e && rW(e, il(t, 3))
                            }, rp.get = sa, rp.gt = oC, rp.gte = oN, rp.has = function(e, t) {
                                return null != e && iy(e, t, rX)
                            }, rp.hasIn = sc, rp.head = iW, rp.identity = sU, rp.includes = function(e, t, r, n) {
                                e = oD(e) ? e : sE(e), r = r && !n ? o3(r) : 0;
                                var i = e.length;
                                return r < 0 && (r = t2(i + r, 0)), oQ(e) ? r <= i && e.indexOf(t, r) > -1 : !!i && tw(e, t, r) > -1
                            }, rp.indexOf = function(e, t, r) {
                                var n = null == e ? 0 : e.length;
                                if (!n) return -1;
                                var i = null == r ? 0 : o3(r);
                                return i < 0 && (i = t2(n + i, 0)), tw(e, t, i)
                            }, rp.inRange = function(e, t, n) {
                                var i, o, s;
                                return t = o5(t), n === r ? (n = t, t = 0) : n = o5(n), (i = e = o4(e)) >= t6(o = t, s = n) && i < t2(o, s)
                            }, rp.invoke = sd, rp.isArguments = oM, rp.isArray = oB, rp.isArrayBuffer = ok, rp.isArrayLike = oD, rp.isArrayLikeObject = oU, rp.isBoolean = function(e) {
                                return !0 === e || !1 === e || oG(e) && rZ(e) == d
                            }, rp.isBuffer = oL, rp.isDate = oF, rp.isElement = function(e) {
                                return oG(e) && 1 === e.nodeType && !oJ(e)
                            }, rp.isEmpty = function(e) {
                                if (null == e) return !0;
                                if (oD(e) && (oB(e) || "string" == typeof e || "function" == typeof e.splice || oL(e) || o0(e) || oM(e))) return !e.length;
                                var t = ib(e);
                                if (t == m || t == E) return !e.size;
                                if (iO(e)) return !r9(e).length;
                                for (var r in e)
                                    if (eC.call(e, r)) return !1;
                                return !0
                            }, rp.isEqual = function(e, t) {
                                return r5(e, t)
                            }, rp.isEqualWith = function(e, t, n) {
                                var i = (n = "function" == typeof n ? n : r) ? n(e, t) : r;
                                return i === r ? r5(e, t, r, n) : !!i
                            }, rp.isError = oq, rp.isFinite = function(e) {
                                return "number" == typeof e && tX(e)
                            }, rp.isFunction = oH, rp.isInteger = o$, rp.isLength = oz, rp.isMap = oW, rp.isMatch = function(e, t) {
                                return e === t || r3(e, t, ih(t))
                            }, rp.isMatchWith = function(e, t, n) {
                                return n = "function" == typeof n ? n : r, r3(e, t, ih(t), n)
                            }, rp.isNaN = function(e) {
                                return oK(e) && e != +e
                            }, rp.isNative = function(e) {
                                if (iI(e)) throw new ew("Unsupported core-js use. Try https://npms.io/search?q=ponyfill.");
                                return r8(e)
                            }, rp.isNil = function(e) {
                                return null == e
                            }, rp.isNull = function(e) {
                                return null === e
                            }, rp.isNumber = oK, rp.isObject = oV, rp.isObjectLike = oG, rp.isPlainObject = oJ, rp.isRegExp = oY, rp.isSafeInteger = function(e) {
                                return o$(e) && e >= -9007199254740991 && e <= 9007199254740991
                            }, rp.isSet = oZ, rp.isString = oQ, rp.isSymbol = oX, rp.isTypedArray = o0, rp.isUndefined = function(e) {
                                return e === r
                            }, rp.isWeakMap = function(e) {
                                return oG(e) && ib(e) == x
                            }, rp.isWeakSet = function(e) {
                                return oG(e) && "[object WeakSet]" == rZ(e)
                            }, rp.join = function(e, t) {
                                return null == e ? "" : t0.call(e, t)
                            }, rp.kebabCase = sI, rp.last = iZ, rp.lastIndexOf = function(e, t, n) {
                                var i = null == e ? 0 : e.length;
                                if (!i) return -1;
                                var o = i;
                                return n !== r && (o = (o = o3(n)) < 0 ? t2(i + o, 0) : t6(o, i - 1)), t == t ? function(e, t, r) {
                                    for (var n = r + 1; n-- && e[n] !== t;);
                                    return n
                                }(e, t, o) : tv(e, t_, o, !0)
                            }, rp.lowerCase = sO, rp.lowerFirst = sT, rp.lt = o1, rp.lte = o2, rp.max = function(e) {
                                return e && e.length ? rq(e, sU, rQ) : r
                            }, rp.maxBy = function(e, t) {
                                return e && e.length ? rq(e, il(t, 2), rQ) : r
                            }, rp.mean = function(e) {
                                return tP(e, sU)
                            }, rp.meanBy = function(e, t) {
                                return tP(e, il(t, 2))
                            }, rp.min = function(e) {
                                return e && e.length ? rq(e, sU, r7) : r
                            }, rp.minBy = function(e, t) {
                                return e && e.length ? rq(e, il(t, 2), r7) : r
                            }, rp.stubArray = sY, rp.stubFalse = sZ, rp.stubObject = function() {
                                return {}
                            }, rp.stubString = function() {
                                return ""
                            }, rp.stubTrue = function() {
                                return !0
                            }, rp.multiply = s2, rp.nth = function(e, t) {
                                return e && e.length ? ni(e, o3(t)) : r
                            }, rp.noConflict = function() {
                                return e6._ === this && (e6._ = eD), this
                            }, rp.noop = s$, rp.now = ob, rp.pad = function(e, t, r) {
                                e = o7(e);
                                var n = (t = o3(t)) ? t$(e) : 0;
                                if (!t || n >= t) return e;
                                var i = (t - n) / 2;
                                return n1(tY(i), r) + e + n1(tJ(i), r)
                            }, rp.padEnd = function(e, t, r) {
                                e = o7(e);
                                var n = (t = o3(t)) ? t$(e) : 0;
                                return t && n < t ? e + n1(t - n, r) : e
                            }, rp.padStart = function(e, t, r) {
                                e = o7(e);
                                var n = (t = o3(t)) ? t$(e) : 0;
                                return t && n < t ? n1(t - n, r) + e : e
                            }, rp.parseInt = function(e, t, r) {
                                return r || null == t ? t = 0 : t && (t = +t), t3(o7(e).replace(Z, ""), t || 0)
                            }, rp.random = function(e, t, n) {
                                if (n && "boolean" != typeof n && i_(e, t, n) && (t = n = r), n === r && ("boolean" == typeof t ? (n = t, t = r) : "boolean" == typeof e && (n = e, e = r)), e === r && t === r ? (e = 0, t = 1) : (e = o5(e), t === r ? (t = e, e = 0) : t = o5(t)), e > t) {
                                    var i = e;
                                    e = t, t = i
                                }
                                if (n || e % 1 || t % 1) {
                                    var o = t8();
                                    return t6(e + o * (t - e + eX("1e-" + ((o + "").length - 1))), t)
                                }
                                return nu(e, t)
                            }, rp.reduce = function(e, t, r) {
                                var n = oB(e) ? tp : tO,
                                    i = arguments.length < 3;
                                return n(e, il(t, 4), r, i, rU)
                            }, rp.reduceRight = function(e, t, r) {
                                var n = oB(e) ? tg : tO,
                                    i = arguments.length < 3;
                                return n(e, il(t, 4), r, i, rL)
                            }, rp.repeat = function(e, t, n) {
                                return t = (n ? i_(e, t, n) : t === r) ? 1 : o3(t), nl(o7(e), t)
                            }, rp.replace = function() {
                                var e = arguments,
                                    t = o7(e[0]);
                                return e.length < 3 ? t : t.replace(e[1], e[2])
                            }, rp.result = function(e, t, n) {
                                t = nR(t, e);
                                var i = -1,
                                    o = t.length;
                                for (o || (o = 1, e = r); ++i < o;) {
                                    var s = null == e ? r : e[iU(t[i])];
                                    s === r && (i = o, s = n), e = oH(s) ? s.call(e) : s
                                }
                                return e
                            }, rp.round = s6, rp.runInContext = e, rp.sample = function(e) {
                                return (oB(e) ? rI : function(e) {
                                    return rI(sE(e))
                                })(e)
                            }, rp.size = function(e) {
                                if (null == e) return 0;
                                if (oD(e)) return oQ(e) ? t$(e) : e.length;
                                var t = ib(e);
                                return t == m || t == E ? e.size : r9(e).length
                            }, rp.snakeCase = sA, rp.some = function(e, t, n) {
                                var i = oB(e) ? tm : nm;
                                return n && i_(e, t, n) && (t = r), i(e, il(t, 3))
                            }, rp.sortedIndex = function(e, t) {
                                return nb(e, t)
                            }, rp.sortedIndexBy = function(e, t, r) {
                                return ny(e, t, il(r, 2))
                            }, rp.sortedIndexOf = function(e, t) {
                                var r = null == e ? 0 : e.length;
                                if (r) {
                                    var n = nb(e, t);
                                    if (n < r && oR(e[n], t)) return n
                                }
                                return -1
                            }, rp.sortedLastIndex = function(e, t) {
                                return nb(e, t, !0)
                            }, rp.sortedLastIndexBy = function(e, t, r) {
                                return ny(e, t, il(r, 2), !0)
                            }, rp.sortedLastIndexOf = function(e, t) {
                                if (null == e ? 0 : e.length) {
                                    var r = nb(e, t, !0) - 1;
                                    if (oR(e[r], t)) return r
                                }
                                return -1
                            }, rp.startCase = sS, rp.startsWith = function(e, t, r) {
                                return e = o7(e), r = null == r ? 0 : rN(o3(r), 0, e.length), t = nE(t), e.slice(r, r + t.length) == t
                            }, rp.subtract = s5, rp.sum = function(e) {
                                return e && e.length ? tT(e, sU) : 0
                            }, rp.sumBy = function(e, t) {
                                return e && e.length ? tT(e, il(t, 2)) : 0
                            }, rp.template = function(e, t, n) {
                                var i = rp.templateSettings;
                                n && i_(e, t, n) && (t = r), e = o7(e), t = sr({}, t, i, n7);
                                var o, s, a = sr({}, t.imports, i.imports, n7),
                                    c = sh(a),
                                    u = tR(a, c),
                                    l = 0,
                                    d = t.interpolate || ef,
                                    h = "__p += '",
                                    f = ex((t.escape || ef).source + "|" + d.source + "|" + (d === V ? eo : ef).source + "|" + (t.evaluate || ef).source + "|$", "g"),
                                    p = "//# sourceURL=" + (eC.call(t, "sourceURL") ? (t.sourceURL + "").replace(/\s/g, " ") : "lodash.templateSources[" + ++eJ + "]") + `
`;
                                e.replace(f, function(t, r, n, i, a, c) {
                                    return n || (n = i), h += e.slice(l, c).replace(ep, tD), r && (o = !0, h += `' +
__e(` + r + `) +
'`), a && (s = !0, h += `';
` + a + `;
__p += '`), n && (h += `' +
((__t = (` + n + `)) == null ? '' : __t) +
'`), l = c + t.length, t
                                }), h += `';
`;
                                var g = eC.call(t, "variable") && t.variable;
                                if (g) {
                                    if (en.test(g)) throw new ew("Invalid `variable` option passed into `_.template`")
                                } else h = `with (obj) {
` + h + `
}
`;
                                h = (s ? h.replace(k, "") : h).replace(D, "$1").replace(U, "$1;"), h = "function(" + (g || "obj") + `) {
` + (g ? "" : `obj || (obj = {});
`) + "var __t, __p = ''" + (o ? ", __e = _.escape" : "") + (s ? `, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
` : `;
`) + h + `return __p
}`;
                                var m = sN(function() {
                                    return eE(c, p + "return " + h).apply(r, u)
                                });
                                if (m.source = h, oq(m)) throw m;
                                return m
                            }, rp.times = function(e, t) {
                                if ((e = o3(e)) < 1 || e > 9007199254740991) return [];
                                var r = 4294967295,
                                    n = t6(e, 4294967295);
                                t = il(t), e -= 4294967295;
                                for (var i = tA(n, t); ++r < e;) t(r);
                                return i
                            }, rp.toFinite = o5, rp.toInteger = o3, rp.toLength = o8, rp.toLower = function(e) {
                                return o7(e).toLowerCase()
                            }, rp.toNumber = o4, rp.toSafeInteger = function(e) {
                                return e ? rN(o3(e), -9007199254740991, 9007199254740991) : 0 === e ? e : 0
                            }, rp.toString = o7, rp.toUpper = function(e) {
                                return o7(e).toUpperCase()
                            }, rp.trim = function(e, t, n) {
                                if ((e = o7(e)) && (n || t === r)) return tS(e);
                                if (!e || !(t = nE(t))) return e;
                                var i = tz(e),
                                    o = tz(t),
                                    s = tN(i, o),
                                    a = tM(i, o) + 1;
                                return nC(i, s, a).join("")
                            }, rp.trimEnd = function(e, t, n) {
                                if ((e = o7(e)) && (n || t === r)) return e.slice(0, tV(e) + 1);
                                if (!e || !(t = nE(t))) return e;
                                var i = tz(e),
                                    o = tM(i, tz(t)) + 1;
                                return nC(i, 0, o).join("")
                            }, rp.trimStart = function(e, t, n) {
                                if ((e = o7(e)) && (n || t === r)) return e.replace(Z, "");
                                if (!e || !(t = nE(t))) return e;
                                var i = tz(e),
                                    o = tN(i, tz(t));
                                return nC(i, o).join("")
                            }, rp.truncate = function(e, t) {
                                var n = 30,
                                    i = "...";
                                if (oV(t)) {
                                    var o = "separator" in t ? t.separator : o;
                                    n = "length" in t ? o3(t.length) : n, i = "omission" in t ? nE(t.omission) : i
                                }
                                var s = (e = o7(e)).length;
                                if (tU(e)) {
                                    var a = tz(e);
                                    s = a.length
                                }
                                if (n >= s) return e;
                                var c = n - t$(i);
                                if (c < 1) return i;
                                var u = a ? nC(a, 0, c).join("") : e.slice(0, c);
                                if (o === r) return u + i;
                                if (a && (c += u.length - c), oY(o)) {
                                    if (e.slice(c).search(o)) {
                                        var l, d = u;
                                        for (o.global || (o = ex(o.source, o7(es.exec(o)) + "g")), o.lastIndex = 0; l = o.exec(d);) var h = l.index;
                                        u = u.slice(0, h === r ? c : h)
                                    }
                                } else if (e.indexOf(nE(o), c) != c) {
                                    var f = u.lastIndexOf(o);
                                    f > -1 && (u = u.slice(0, f))
                                }
                                return u + i
                            }, rp.unescape = function(e) {
                                return (e = o7(e)) && q.test(e) ? e.replace(L, tG) : e
                            }, rp.uniqueId = function(e) {
                                var t = ++eN;
                                return o7(e) + t
                            }, rp.upperCase = sj, rp.upperFirst = sR, rp.each = ou, rp.eachRight = ol, rp.first = iW, sH(rp, (eb = {}, rG(rp, function(e, t) {
                                eC.call(rp.prototype, t) || (eb[t] = e)
                            }), eb), {
                                chain: !1
                            }), rp.VERSION = "4.17.21", ta(["bind", "bindKey", "curry", "curryRight", "partial", "partialRight"], function(e) {
                                rp[e].placeholder = rp
                            }), ta(["drop", "take"], function(e, t) {
                                ry.prototype[e] = function(n) {
                                    n = n === r ? 1 : t2(o3(n), 0);
                                    var i = this.__filtered__ && !t ? new ry(this) : this.clone();
                                    return i.__filtered__ ? i.__takeCount__ = t6(n, i.__takeCount__) : i.__views__.push({
                                        size: t6(n, 4294967295),
                                        type: e + (i.__dir__ < 0 ? "Right" : "")
                                    }), i
                                }, ry.prototype[e + "Right"] = function(t) {
                                    return this.reverse()[e](t).reverse()
                                }
                            }), ta(["filter", "map", "takeWhile"], function(e, t) {
                                var r = t + 1,
                                    n = 1 == r || 3 == r;
                                ry.prototype[e] = function(e) {
                                    var t = this.clone();
                                    return t.__iteratees__.push({
                                        iteratee: il(e, 3),
                                        type: r
                                    }), t.__filtered__ = t.__filtered__ || n, t
                                }
                            }), ta(["head", "last"], function(e, t) {
                                var r = "take" + (t ? "Right" : "");
                                ry.prototype[e] = function() {
                                    return this[r](1).value()[0]
                                }
                            }), ta(["initial", "tail"], function(e, t) {
                                var r = "drop" + (t ? "" : "Right");
                                ry.prototype[e] = function() {
                                    return this.__filtered__ ? new ry(this) : this[r](1)
                                }
                            }), ry.prototype.compact = function() {
                                return this.filter(sU)
                            }, ry.prototype.find = function(e) {
                                return this.filter(e).head()
                            }, ry.prototype.findLast = function(e) {
                                return this.reverse().find(e)
                            }, ry.prototype.invokeMap = nd(function(e, t) {
                                return "function" == typeof e ? new ry(this) : this.map(function(r) {
                                    return r2(r, e, t)
                                })
                            }), ry.prototype.reject = function(e) {
                                return this.filter(oO(il(e)))
                            }, ry.prototype.slice = function(e, t) {
                                e = o3(e);
                                var n = this;
                                return n.__filtered__ && (e > 0 || t < 0) ? new ry(n) : (e < 0 ? n = n.takeRight(-e) : e && (n = n.drop(e)), t !== r && (n = (t = o3(t)) < 0 ? n.dropRight(-t) : n.take(t - e)), n)
                            }, ry.prototype.takeRightWhile = function(e) {
                                return this.reverse().takeWhile(e).reverse()
                            }, ry.prototype.toArray = function() {
                                return this.take(4294967295)
                            }, rG(ry.prototype, function(e, t) {
                                var n = /^(?:filter|find|map|reject)|While$/.test(t),
                                    i = /^(?:head|last)$/.test(t),
                                    o = rp[i ? "take" + ("last" == t ? "Right" : "") : t],
                                    s = i || /^find/.test(t);
                                o && (rp.prototype[t] = function() {
                                    var t = this.__wrapped__,
                                        a = i ? [1] : arguments,
                                        c = t instanceof ry,
                                        u = a[0],
                                        l = c || oB(t),
                                        d = function(e) {
                                            var t = o.apply(rp, tf([e], a));
                                            return i && h ? t[0] : t
                                        };
                                    l && n && "function" == typeof u && 1 != u.length && (c = l = !1);
                                    var h = this.__chain__,
                                        f = !!this.__actions__.length,
                                        p = s && !h,
                                        g = c && !f;
                                    if (!s && l) {
                                        t = g ? t : new ry(this);
                                        var m = e.apply(t, a);
                                        return m.__actions__.push({
                                            func: oi,
                                            args: [d],
                                            thisArg: r
                                        }), new rb(m, h)
                                    }
                                    return p && g ? e.apply(this, a) : (m = this.thru(d), p ? i ? m.value()[0] : m.value() : m)
                                })
                            }), ta(["pop", "push", "shift", "sort", "splice", "unshift"], function(e) {
                                var t = eT[e],
                                    r = /^(?:push|sort|unshift)$/.test(e) ? "tap" : "thru",
                                    n = /^(?:pop|shift)$/.test(e);
                                rp.prototype[e] = function() {
                                    var e = arguments;
                                    if (n && !this.__chain__) {
                                        var i = this.value();
                                        return t.apply(oB(i) ? i : [], e)
                                    }
                                    return this[r](function(r) {
                                        return t.apply(oB(r) ? r : [], e)
                                    })
                                }
                            }), rG(ry.prototype, function(e, t) {
                                var r = rp[t];
                                if (r) {
                                    var n = r.name + "";
                                    eC.call(ro, n) || (ro[n] = []), ro[n].push({
                                        name: t,
                                        func: r
                                    })
                                }
                            }), ro[nZ(r, 2).name] = [{
                                name: "wrapper",
                                func: r
                            }], ry.prototype.clone = function() {
                                var e = new ry(this.__wrapped__);
                                return e.__actions__ = nF(this.__actions__), e.__dir__ = this.__dir__, e.__filtered__ = this.__filtered__, e.__iteratees__ = nF(this.__iteratees__), e.__takeCount__ = this.__takeCount__, e.__views__ = nF(this.__views__), e
                            }, ry.prototype.reverse = function() {
                                if (this.__filtered__) {
                                    var e = new ry(this);
                                    e.__dir__ = -1, e.__filtered__ = !0
                                } else e = this.clone(), e.__dir__ *= -1;
                                return e
                            }, ry.prototype.value = function() {
                                var e = this.__wrapped__.value(),
                                    t = this.__dir__,
                                    r = oB(e),
                                    n = t < 0,
                                    i = r ? e.length : 0,
                                    o = function(e, t, r) {
                                        for (var n = -1, i = r.length; ++n < i;) {
                                            var o = r[n],
                                                s = o.size;
                                            switch (o.type) {
                                                case "drop":
                                                    e += s;
                                                    break;
                                                case "dropRight":
                                                    t -= s;
                                                    break;
                                                case "take":
                                                    t = t6(t, e + s);
                                                    break;
                                                case "takeRight":
                                                    e = t2(e, t - s)
                                            }
                                        }
                                        return {
                                            start: e,
                                            end: t
                                        }
                                    }(0, i, this.__views__),
                                    s = o.start,
                                    a = o.end,
                                    c = a - s,
                                    u = n ? a : s - 1,
                                    l = this.__iteratees__,
                                    d = l.length,
                                    h = 0,
                                    f = t6(c, this.__takeCount__);
                                if (!r || !n && i == c && f == c) return nO(e, this.__actions__);
                                var p = [];
                                e: for (; c-- && h < f;) {
                                    u += t;
                                    for (var g = -1, m = e[u]; ++g < d;) {
                                        var b = l[g],
                                            y = b.iteratee,
                                            v = b.type,
                                            w = y(m);
                                        if (2 == v) m = w;
                                        else if (!w) {
                                            if (1 == v) continue e;
                                            break e
                                        }
                                    }
                                    p[h++] = m
                                }
                                return p
                            }, rp.prototype.at = oo, rp.prototype.chain = function() {
                                return on(this)
                            }, rp.prototype.commit = function() {
                                return new rb(this.value(), this.__chain__)
                            }, rp.prototype.next = function() {
                                this.__values__ === r && (this.__values__ = o6(this.value()));
                                var e = this.__index__ >= this.__values__.length,
                                    t = e ? r : this.__values__[this.__index__++];
                                return {
                                    done: e,
                                    value: t
                                }
                            }, rp.prototype.plant = function(e) {
                                for (var t, n = this; n instanceof rm;) {
                                    var i = iF(n);
                                    i.__index__ = 0, i.__values__ = r, t ? o.__wrapped__ = i : t = i;
                                    var o = i;
                                    n = n.__wrapped__
                                }
                                return o.__wrapped__ = e, t
                            }, rp.prototype.reverse = function() {
                                var e = this.__wrapped__;
                                if (e instanceof ry) {
                                    var t = e;
                                    return this.__actions__.length && (t = new ry(this)), (t = t.reverse()).__actions__.push({
                                        func: oi,
                                        args: [i1],
                                        thisArg: r
                                    }), new rb(t, this.__chain__)
                                }
                                return this.thru(i1)
                            }, rp.prototype.toJSON = rp.prototype.valueOf = rp.prototype.value = function() {
                                return nO(this.__wrapped__, this.__actions__)
                            }, rp.prototype.first = rp.prototype.head, e3 && (rp.prototype[e3] = function() {
                                return this
                            }), rp
                        }();
                    e3 ? ((e3.exports = tW)._ = tW, e5._ = tW) : e6._ = tW
                }).call(nk)
            }(nD, nD.exports);
            var nU = Object.defineProperty,
                nL = Object.defineProperties,
                nF = Object.getOwnPropertyDescriptors,
                nq = Object.getOwnPropertySymbols,
                nH = Object.prototype.hasOwnProperty,
                n$ = Object.prototype.propertyIsEnumerable,
                nz = (e, t, r) => t in e ? nU(e, t, {
                    enumerable: !0,
                    configurable: !0,
                    writable: !0,
                    value: r
                }) : e[t] = r,
                nV = (e, t) => {
                    for (var r in t || (t = {})) nH.call(t, r) && nz(e, r, t[r]);
                    if (nq)
                        for (var r of nq(t)) n$.call(t, r) && nz(e, r, t[r]);
                    return e
                },
                nG = (e, t) => nL(e, nF(t));

            function nW(e, t, r) {
                var n;
                let i = function(e) {
                    let [t, r] = e.split(":");
                    return {
                        namespace: t,
                        reference: r
                    }
                }(e);
                return (null == (n = t.rpcMap) ? void 0 : n[i.reference]) || `https://rpc.walletconnect.com/v1/?chainId=${i.namespace}:${i.reference}&projectId=${r}`
            }

            function nK(e) {
                return e.includes(":") ? e.split(":")[1] : e
            }

            function nJ(e) {
                return e.map(e => `${e.split(":")[0]}:${e.split(":")[1]}`)
            }

            function nY(e) {
                var t, r, n, i;
                let o = {};
                if (!eP(e)) return o;
                for (let [s, a] of Object.entries(e)) {
                    let e = em(s) ? [s] : a.chains,
                        c = a.methods || [],
                        u = a.events || [],
                        l = a.rpcMap || {},
                        d = eb(s);
                    o[d] = nG(nV(nV({}, o[d]), a), {
                        chains: Y(e, null == (t = o[d]) ? void 0 : t.chains),
                        methods: Y(c, null == (r = o[d]) ? void 0 : r.methods),
                        events: Y(u, null == (n = o[d]) ? void 0 : n.events),
                        rpcMap: nV(nV({}, l), null == (i = o[d]) ? void 0 : i.rpcMap)
                    })
                }
                return o
            }

            function nZ(e) {
                return e.includes(":") ? e.split(":")[2] : e
            }

            function nQ(e) {
                return "number" == typeof e ? e : e.includes("0x") ? parseInt(e, 16) : e.includes(":") ? Number(e.split(":")[1]) : Number(e)
            }
            let nX = {},
                n0 = e => nX[e],
                n1 = (e, t) => {
                    nX[e] = t
                },
                n2 = class {
                    updateNamespace(e) {
                        this.namespace = Object.assign(this.namespace, e)
                    }
                    requestAccounts() {
                        return this.getAccounts()
                    }
                    getDefaultChain() {
                        if (this.chainId) return this.chainId;
                        if (this.namespace.defaultChain) return this.namespace.defaultChain;
                        let e = this.namespace.chains[0];
                        if (!e) throw Error("ChainId not found");
                        return e.split(":")[1]
                    }
                    request(e) {
                        return this.namespace.methods.includes(e.request.method) ? this.client.request(e) : this.getHttpProvider().request(e.request)
                    }
                    setDefaultChain(e, t) {
                        this.httpProviders[e] || this.setHttpProvider(e, t), this.chainId = e, this.events.emit(nB.DEFAULT_CHAIN_CHANGED, `${this.name}:${e}`)
                    }
                    getAccounts() {
                        let e = this.namespace.accounts;
                        return e && e.filter(e => e.split(":")[1] === this.chainId.toString()).map(e => e.split(":")[2]) || []
                    }
                    createHttpProviders() {
                        let e = {};
                        return this.namespace.chains.forEach(t => {
                            var r;
                            let n = nK(t);
                            e[n] = this.createHttpProvider(n, null == (r = this.namespace.rpcMap) ? void 0 : r[t])
                        }), e
                    }
                    getHttpProvider() {
                        let e = `${this.name}:${this.chainId}`,
                            t = this.httpProviders[e];
                        if (typeof t > "u") throw Error(`JSON-RPC provider for ${e} not found`);
                        return t
                    }
                    setHttpProvider(e, t) {
                        let r = this.createHttpProvider(e, t);
                        r && (this.httpProviders[e] = r)
                    }
                    createHttpProvider(e, t) {
                        let r = t || nW(e, this.namespace, this.client.core.projectId);
                        if (!r) throw Error(`No RPC url provided for chainId: ${e}`);
                        return new tf.JsonRpcProvider(new nC.default(r, n0("disableProviderPing")))
                    }
                    constructor(e) {
                        this.name = "polkadot", this.namespace = e.namespace, this.events = n0("events"), this.client = n0("client"), this.chainId = this.getDefaultChain(), this.httpProviders = this.createHttpProviders()
                    }
                },
                n6 = class {
                    async request(e) {
                        switch (e.request.method) {
                            case "eth_requestAccounts":
                            case "eth_accounts":
                                return this.getAccounts();
                            case "wallet_switchEthereumChain":
                                return await this.handleSwitchChain(e);
                            case "eth_chainId":
                                return parseInt(this.getDefaultChain())
                        }
                        return this.namespace.methods.includes(e.request.method) ? await this.client.request(e) : this.getHttpProvider().request(e.request)
                    }
                    updateNamespace(e) {
                        this.namespace = Object.assign(this.namespace, e)
                    }
                    setDefaultChain(e, t) {
                        this.httpProviders[e] || this.setHttpProvider(parseInt(e), t), this.chainId = parseInt(e), this.events.emit(nB.DEFAULT_CHAIN_CHANGED, `${this.name}:${e}`)
                    }
                    requestAccounts() {
                        return this.getAccounts()
                    }
                    getDefaultChain() {
                        if (this.chainId) return this.chainId.toString();
                        if (this.namespace.defaultChain) return this.namespace.defaultChain;
                        let e = this.namespace.chains[0];
                        if (!e) throw Error("ChainId not found");
                        return e.split(":")[1]
                    }
                    createHttpProvider(e, t) {
                        let r = t || nW(`${this.name}:${e}`, this.namespace, this.client.core.projectId);
                        if (!r) throw Error(`No RPC url provided for chainId: ${e}`);
                        return new tf.JsonRpcProvider(new nC.HttpConnection(r, n0("disableProviderPing")))
                    }
                    setHttpProvider(e, t) {
                        let r = this.createHttpProvider(e, t);
                        r && (this.httpProviders[e] = r)
                    }
                    createHttpProviders() {
                        let e = {};
                        return this.namespace.chains.forEach(t => {
                            var r;
                            let n = parseInt(nK(t));
                            e[n] = this.createHttpProvider(n, null == (r = this.namespace.rpcMap) ? void 0 : r[t])
                        }), e
                    }
                    getAccounts() {
                        let e = this.namespace.accounts;
                        return e ? [...new Set(e.filter(e => e.split(":")[1] === this.chainId.toString()).map(e => e.split(":")[2]))] : []
                    }
                    getHttpProvider() {
                        let e = this.chainId,
                            t = this.httpProviders[e];
                        if (typeof t > "u") throw Error(`JSON-RPC provider for ${e} not found`);
                        return t
                    }
                    async handleSwitchChain(e) {
                        var t, r;
                        let n = e.request.params ? null == (t = e.request.params[0]) ? void 0 : t.chainId : "0x0",
                            i = parseInt(n = n.startsWith("0x") ? n : `0x${n}`, 16);
                        if (this.isChainApproved(i)) this.setDefaultChain(`${i}`);
                        else if (this.namespace.methods.includes("wallet_switchEthereumChain")) await this.client.request({
                            topic: e.topic,
                            request: {
                                method: e.request.method,
                                params: [{
                                    chainId: n
                                }]
                            },
                            chainId: null == (r = this.namespace.chains) ? void 0 : r[0]
                        }), this.setDefaultChain(`${i}`);
                        else throw Error(`Failed to switch to chain 'eip155:${i}'. The chain is not approved or the wallet does not support 'wallet_switchEthereumChain' method.`);
                        return null
                    }
                    isChainApproved(e) {
                        return this.namespace.chains.includes(`${this.name}:${e}`)
                    }
                    constructor(e) {
                        this.name = "eip155", this.namespace = e.namespace, this.events = n0("events"), this.client = n0("client"), this.httpProviders = this.createHttpProviders(), this.chainId = parseInt(this.getDefaultChain())
                    }
                },
                n5 = class {
                    updateNamespace(e) {
                        this.namespace = Object.assign(this.namespace, e)
                    }
                    requestAccounts() {
                        return this.getAccounts()
                    }
                    request(e) {
                        return this.namespace.methods.includes(e.request.method) ? this.client.request(e) : this.getHttpProvider().request(e.request)
                    }
                    setDefaultChain(e, t) {
                        this.httpProviders[e] || this.setHttpProvider(e, t), this.chainId = e, this.events.emit(nB.DEFAULT_CHAIN_CHANGED, `${this.name}:${e}`)
                    }
                    getDefaultChain() {
                        if (this.chainId) return this.chainId;
                        if (this.namespace.defaultChain) return this.namespace.defaultChain;
                        let e = this.namespace.chains[0];
                        if (!e) throw Error("ChainId not found");
                        return e.split(":")[1]
                    }
                    getAccounts() {
                        let e = this.namespace.accounts;
                        return e ? [...new Set(e.filter(e => e.split(":")[1] === this.chainId.toString()).map(e => e.split(":")[2]))] : []
                    }
                    createHttpProviders() {
                        let e = {};
                        return this.namespace.chains.forEach(t => {
                            var r;
                            let n = nK(t);
                            e[n] = this.createHttpProvider(n, null == (r = this.namespace.rpcMap) ? void 0 : r[t])
                        }), e
                    }
                    getHttpProvider() {
                        let e = `${this.name}:${this.chainId}`,
                            t = this.httpProviders[e];
                        if (typeof t > "u") throw Error(`JSON-RPC provider for ${e} not found`);
                        return t
                    }
                    setHttpProvider(e, t) {
                        let r = this.createHttpProvider(e, t);
                        r && (this.httpProviders[e] = r)
                    }
                    createHttpProvider(e, t) {
                        let r = t || nW(e, this.namespace, this.client.core.projectId);
                        if (!r) throw Error(`No RPC url provided for chainId: ${e}`);
                        return new tf.JsonRpcProvider(new nC.default(r, n0("disableProviderPing")))
                    }
                    constructor(e) {
                        this.name = "solana", this.namespace = e.namespace, this.events = n0("events"), this.client = n0("client"), this.chainId = this.getDefaultChain(), this.httpProviders = this.createHttpProviders()
                    }
                },
                n3 = class {
                    updateNamespace(e) {
                        this.namespace = Object.assign(this.namespace, e)
                    }
                    requestAccounts() {
                        return this.getAccounts()
                    }
                    getDefaultChain() {
                        if (this.chainId) return this.chainId;
                        if (this.namespace.defaultChain) return this.namespace.defaultChain;
                        let e = this.namespace.chains[0];
                        if (!e) throw Error("ChainId not found");
                        return e.split(":")[1]
                    }
                    request(e) {
                        return this.namespace.methods.includes(e.request.method) ? this.client.request(e) : this.getHttpProvider().request(e.request)
                    }
                    setDefaultChain(e, t) {
                        this.httpProviders[e] || this.setHttpProvider(e, t), this.chainId = e, this.events.emit(nB.DEFAULT_CHAIN_CHANGED, `${this.name}:${this.chainId}`)
                    }
                    getAccounts() {
                        let e = this.namespace.accounts;
                        return e ? [...new Set(e.filter(e => e.split(":")[1] === this.chainId.toString()).map(e => e.split(":")[2]))] : []
                    }
                    createHttpProviders() {
                        let e = {};
                        return this.namespace.chains.forEach(t => {
                            var r;
                            let n = nK(t);
                            e[n] = this.createHttpProvider(n, null == (r = this.namespace.rpcMap) ? void 0 : r[t])
                        }), e
                    }
                    getHttpProvider() {
                        let e = `${this.name}:${this.chainId}`,
                            t = this.httpProviders[e];
                        if (typeof t > "u") throw Error(`JSON-RPC provider for ${e} not found`);
                        return t
                    }
                    setHttpProvider(e, t) {
                        let r = this.createHttpProvider(e, t);
                        r && (this.httpProviders[e] = r)
                    }
                    createHttpProvider(e, t) {
                        let r = t || nW(e, this.namespace, this.client.core.projectId);
                        if (!r) throw Error(`No RPC url provided for chainId: ${e}`);
                        return new tf.JsonRpcProvider(new nC.default(r, n0("disableProviderPing")))
                    }
                    constructor(e) {
                        this.name = "cosmos", this.namespace = e.namespace, this.events = n0("events"), this.client = n0("client"), this.chainId = this.getDefaultChain(), this.httpProviders = this.createHttpProviders()
                    }
                },
                n8 = class {
                    updateNamespace(e) {
                        this.namespace = Object.assign(this.namespace, e)
                    }
                    requestAccounts() {
                        return this.getAccounts()
                    }
                    getDefaultChain() {
                        if (this.chainId) return this.chainId;
                        if (this.namespace.defaultChain) return this.namespace.defaultChain;
                        let e = this.namespace.chains[0];
                        if (!e) throw Error("ChainId not found");
                        return e.split(":")[1]
                    }
                    request(e) {
                        return this.namespace.methods.includes(e.request.method) ? this.client.request(e) : this.getHttpProvider().request(e.request)
                    }
                    setDefaultChain(e, t) {
                        this.httpProviders[e] || this.setHttpProvider(e, t), this.chainId = e, this.events.emit(nB.DEFAULT_CHAIN_CHANGED, `${this.name}:${this.chainId}`)
                    }
                    getAccounts() {
                        let e = this.namespace.accounts;
                        return e ? [...new Set(e.filter(e => e.split(":")[1] === this.chainId.toString()).map(e => e.split(":")[2]))] : []
                    }
                    createHttpProviders() {
                        let e = {};
                        return this.namespace.chains.forEach(t => {
                            let r = this.getCardanoRPCUrl(t),
                                n = nK(t);
                            e[n] = this.createHttpProvider(n, r)
                        }), e
                    }
                    getHttpProvider() {
                        let e = `${this.name}:${this.chainId}`,
                            t = this.httpProviders[e];
                        if (typeof t > "u") throw Error(`JSON-RPC provider for ${e} not found`);
                        return t
                    }
                    getCardanoRPCUrl(e) {
                        let t = this.namespace.rpcMap;
                        if (t) return t[e]
                    }
                    setHttpProvider(e, t) {
                        let r = this.createHttpProvider(e, t);
                        r && (this.httpProviders[e] = r)
                    }
                    createHttpProvider(e, t) {
                        let r = t || this.getCardanoRPCUrl(e);
                        if (!r) throw Error(`No RPC url provided for chainId: ${e}`);
                        return new tf.JsonRpcProvider(new nC.default(r, n0("disableProviderPing")))
                    }
                    constructor(e) {
                        this.name = "cip34", this.namespace = e.namespace, this.events = n0("events"), this.client = n0("client"), this.chainId = this.getDefaultChain(), this.httpProviders = this.createHttpProviders()
                    }
                },
                n4 = class {
                    updateNamespace(e) {
                        this.namespace = Object.assign(this.namespace, e)
                    }
                    requestAccounts() {
                        return this.getAccounts()
                    }
                    request(e) {
                        return this.namespace.methods.includes(e.request.method) ? this.client.request(e) : this.getHttpProvider().request(e.request)
                    }
                    setDefaultChain(e, t) {
                        this.httpProviders[e] || this.setHttpProvider(e, t), this.chainId = e, this.events.emit(nB.DEFAULT_CHAIN_CHANGED, `${this.name}:${e}`)
                    }
                    getDefaultChain() {
                        if (this.chainId) return this.chainId;
                        if (this.namespace.defaultChain) return this.namespace.defaultChain;
                        let e = this.namespace.chains[0];
                        if (!e) throw Error("ChainId not found");
                        return e.split(":")[1]
                    }
                    getAccounts() {
                        let e = this.namespace.accounts;
                        return e ? [...new Set(e.filter(e => e.split(":")[1] === this.chainId.toString()).map(e => e.split(":")[2]))] : []
                    }
                    createHttpProviders() {
                        let e = {};
                        return this.namespace.chains.forEach(t => {
                            var r;
                            let n = nK(t);
                            e[n] = this.createHttpProvider(n, null == (r = this.namespace.rpcMap) ? void 0 : r[t])
                        }), e
                    }
                    getHttpProvider() {
                        let e = `${this.name}:${this.chainId}`,
                            t = this.httpProviders[e];
                        if (typeof t > "u") throw Error(`JSON-RPC provider for ${e} not found`);
                        return t
                    }
                    setHttpProvider(e, t) {
                        let r = this.createHttpProvider(e, t);
                        r && (this.httpProviders[e] = r)
                    }
                    createHttpProvider(e, t) {
                        let r = t || nW(e, this.namespace, this.client.core.projectId);
                        if (!r) throw Error(`No RPC url provided for chainId: ${e}`);
                        return new tf.JsonRpcProvider(new nC.default(r, n0("disableProviderPing")))
                    }
                    constructor(e) {
                        this.name = "elrond", this.namespace = e.namespace, this.events = n0("events"), this.client = n0("client"), this.chainId = this.getDefaultChain(), this.httpProviders = this.createHttpProviders()
                    }
                },
                n9 = class {
                    updateNamespace(e) {
                        this.namespace = Object.assign(this.namespace, e)
                    }
                    requestAccounts() {
                        return this.getAccounts()
                    }
                    request(e) {
                        return this.namespace.methods.includes(e.request.method) ? this.client.request(e) : this.getHttpProvider().request(e.request)
                    }
                    setDefaultChain(e, t) {
                        this.httpProviders[e] || this.setHttpProvider(e, t), this.chainId = e, this.events.emit(nB.DEFAULT_CHAIN_CHANGED, `${this.name}:${e}`)
                    }
                    getDefaultChain() {
                        if (this.chainId) return this.chainId;
                        if (this.namespace.defaultChain) return this.namespace.defaultChain;
                        let e = this.namespace.chains[0];
                        if (!e) throw Error("ChainId not found");
                        return e.split(":")[1]
                    }
                    getAccounts() {
                        let e = this.namespace.accounts;
                        return e ? [...new Set(e.filter(e => e.split(":")[1] === this.chainId.toString()).map(e => e.split(":")[2]))] : []
                    }
                    createHttpProviders() {
                        let e = {};
                        return this.namespace.chains.forEach(t => {
                            var r;
                            let n = nK(t);
                            e[n] = this.createHttpProvider(n, null == (r = this.namespace.rpcMap) ? void 0 : r[t])
                        }), e
                    }
                    getHttpProvider() {
                        let e = `${this.name}:${this.chainId}`,
                            t = this.httpProviders[e];
                        if (typeof t > "u") throw Error(`JSON-RPC provider for ${e} not found`);
                        return t
                    }
                    setHttpProvider(e, t) {
                        let r = this.createHttpProvider(e, t);
                        r && (this.httpProviders[e] = r)
                    }
                    createHttpProvider(e, t) {
                        let r = t || nW(e, this.namespace, this.client.core.projectId);
                        if (!r) throw Error(`No RPC url provided for chainId: ${e}`);
                        return new tf.JsonRpcProvider(new nC.default(r, n0("disableProviderPing")))
                    }
                    constructor(e) {
                        this.name = "multiversx", this.namespace = e.namespace, this.events = n0("events"), this.client = n0("client"), this.chainId = this.getDefaultChain(), this.httpProviders = this.createHttpProviders()
                    }
                },
                n7 = class {
                    updateNamespace(e) {
                        this.namespace = Object.assign(this.namespace, e)
                    }
                    requestAccounts() {
                        return this.getAccounts()
                    }
                    getDefaultChain() {
                        if (this.chainId) return this.chainId;
                        if (this.namespace.defaultChain) return this.namespace.defaultChain;
                        let e = this.namespace.chains[0];
                        if (!e) throw Error("ChainId not found");
                        return e.split(":")[1]
                    }
                    request(e) {
                        return this.namespace.methods.includes(e.request.method) ? this.client.request(e) : this.getHttpProvider().request(e.request)
                    }
                    setDefaultChain(e, t) {
                        if (this.chainId = e, !this.httpProviders[e]) {
                            let r = t || nW(`${this.name}:${e}`, this.namespace);
                            if (!r) throw Error(`No RPC url provided for chainId: ${e}`);
                            this.setHttpProvider(e, r)
                        }
                        this.events.emit(nB.DEFAULT_CHAIN_CHANGED, `${this.name}:${this.chainId}`)
                    }
                    getAccounts() {
                        let e = this.namespace.accounts;
                        return e && e.filter(e => e.split(":")[1] === this.chainId.toString()).map(e => e.split(":")[2]) || []
                    }
                    createHttpProviders() {
                        let e = {};
                        return this.namespace.chains.forEach(t => {
                            var r;
                            e[t] = this.createHttpProvider(t, null == (r = this.namespace.rpcMap) ? void 0 : r[t])
                        }), e
                    }
                    getHttpProvider() {
                        let e = `${this.name}:${this.chainId}`,
                            t = this.httpProviders[e];
                        if (typeof t > "u") throw Error(`JSON-RPC provider for ${e} not found`);
                        return t
                    }
                    setHttpProvider(e, t) {
                        let r = this.createHttpProvider(e, t);
                        r && (this.httpProviders[e] = r)
                    }
                    createHttpProvider(e, t) {
                        let r = t || nW(e, this.namespace);
                        return typeof r > "u" ? void 0 : new tf.JsonRpcProvider(new nC.default(r, n0("disableProviderPing")))
                    }
                    constructor(e) {
                        this.name = "near", this.namespace = e.namespace, this.events = n0("events"), this.client = n0("client"), this.chainId = this.getDefaultChain(), this.httpProviders = this.createHttpProviders()
                    }
                };
            var ie = Object.defineProperty,
                it = Object.defineProperties,
                ir = Object.getOwnPropertyDescriptors,
                ii = Object.getOwnPropertySymbols,
                io = Object.prototype.hasOwnProperty,
                is = Object.prototype.propertyIsEnumerable,
                ia = (e, t, r) => t in e ? ie(e, t, {
                    enumerable: !0,
                    configurable: !0,
                    writable: !0,
                    value: r
                }) : e[t] = r,
                ic = (e, t) => {
                    for (var r in t || (t = {})) io.call(t, r) && ia(e, r, t[r]);
                    if (ii)
                        for (var r of ii(t)) is.call(t, r) && ia(e, r, t[r]);
                    return e
                },
                iu = (e, t) => it(e, ir(t));
            let il = class e {
                    static async init(t) {
                        let r = new e(t);
                        return await r.initialize(), r
                    }
                    async request(e, t) {
                        let [r, n] = this.validateChain(t);
                        if (!this.session) throw Error("Please call connect() before request()");
                        return await this.getProvider(r).request({
                            request: ic({}, e),
                            chainId: `${r}:${n}`,
                            topic: this.session.topic
                        })
                    }
                    sendAsync(e, t, r) {
                        let n = new Date().getTime();
                        this.request(e, r).then(e => t(null, (0, tp.formatJsonRpcResult)(n, e))).catch(e => t(e, void 0))
                    }
                    async enable() {
                        if (!this.client) throw Error("Sign Client not initialized");
                        return this.session || await this.connect({
                            namespaces: this.namespaces,
                            optionalNamespaces: this.optionalNamespaces,
                            sessionProperties: this.sessionProperties
                        }), await this.requestAccounts()
                    }
                    async disconnect() {
                        var e;
                        if (!this.session) throw Error("Please call connect() before enable()");
                        await this.client.disconnect({
                            topic: null == (e = this.session) ? void 0 : e.topic,
                            reason: eE("USER_DISCONNECTED")
                        }), await this.cleanup()
                    }
                    async connect(e) {
                        if (!this.client) throw Error("Sign Client not initialized");
                        if (this.setNamespaces(e), await this.cleanupPendingPairings(), !e.skipPairing) return await this.pair(e.pairingTopic)
                    }
                    on(e, t) {
                        this.events.on(e, t)
                    }
                    once(e, t) {
                        this.events.once(e, t)
                    }
                    removeListener(e, t) {
                        this.events.removeListener(e, t)
                    }
                    off(e, t) {
                        this.events.off(e, t)
                    }
                    get isWalletConnect() {
                        return !0
                    }
                    async pair(e) {
                        this.shouldAbortPairingAttempt = !1;
                        let t = 0;
                        do {
                            if (this.shouldAbortPairingAttempt) throw Error("Pairing aborted");
                            if (t >= this.maxPairingAttempts) throw Error("Max auto pairing attempts reached");
                            let {
                                uri: r,
                                approval: n
                            } = await this.client.connect({
                                pairingTopic: e,
                                requiredNamespaces: this.namespaces,
                                optionalNamespaces: this.optionalNamespaces,
                                sessionProperties: this.sessionProperties
                            });
                            r && (this.uri = r, this.events.emit("display_uri", r)), await n().then(e => {
                                this.session = e, this.namespaces || (this.namespaces = function(e) {
                                    let t = {};
                                    for (let [r, n] of Object.entries(e)) {
                                        let e = n.methods || [],
                                            i = n.events || [],
                                            o = n.accounts || [],
                                            s = em(r) ? [r] : n.chains ? n.chains : nJ(n.accounts);
                                        t[r] = {
                                            chains: s,
                                            methods: e,
                                            events: i,
                                            accounts: o
                                        }
                                    }
                                    return t
                                }(e.namespaces), this.persist("namespaces", this.namespaces))
                            }).catch(e => {
                                if (e.message !== nh) throw e;
                                t++
                            })
                        } while (!this.session) return this.onConnect(), this.session
                    }
                    setDefaultChain(e, t) {
                        try {
                            if (!this.session) return;
                            let [r, n] = this.validateChain(e);
                            this.getProvider(r).setDefaultChain(n, t)
                        } catch (e) {
                            if (!/Please call connect/.test(e.message)) throw e
                        }
                    }
                    async cleanupPendingPairings(e = {}) {
                        this.logger.info("Cleaning up inactive pairings...");
                        let t = this.client.pairing.getAll();
                        if (e_(t)) {
                            for (let r of t) e.deletePairings ? this.client.core.expirer.set(r.topic, 0) : await this.client.core.relayer.subscriber.unsubscribe(r.topic);
                            this.logger.info(`Inactive pairings cleared: ${t.length}`)
                        }
                    }
                    abortPairingAttempt() {
                        this.shouldAbortPairingAttempt = !0
                    }
                    async checkStorage() {
                        if (this.namespaces = await this.getFromStore("namespaces"), this.optionalNamespaces = await this.getFromStore("optionalNamespaces") || {}, this.client.session.length) {
                            let e = this.client.session.keys.length - 1;
                            this.session = this.client.session.get(this.client.session.keys[e]), this.createProviders()
                        }
                    }
                    async initialize() {
                        this.logger.trace("Initialized"), await this.createClient(), await this.checkStorage(), this.registerEventListeners()
                    }
                    async createClient() {
                        this.client = this.providerOpts.client || await nR.init({
                            logger: this.providerOpts.logger || nN,
                            relayUrl: this.providerOpts.relayUrl || "wss://relay.walletconnect.com",
                            projectId: this.providerOpts.projectId,
                            metadata: this.providerOpts.metadata,
                            storageOptions: this.providerOpts.storageOptions,
                            storage: this.providerOpts.storage,
                            name: this.providerOpts.name
                        }), this.logger.trace("SignClient Initialized")
                    }
                    createProviders() {
                        if (!this.client) throw Error("Sign Client not initialized");
                        if (!this.session) throw Error("Session not initialized. Please call connect() before enable()");
                        let e = [...new Set(Object.keys(this.session.namespaces).map(e => eb(e)))];
                        n1("client", this.client), n1("events", this.events), n1("disableProviderPing", this.disableProviderPing), e.forEach(e => {
                            if (!this.session) return;
                            let t = function(e, t) {
                                    let r = Object.keys(t.namespaces).filter(t => t.includes(e));
                                    if (!r.length) return [];
                                    let n = [];
                                    return r.forEach(e => {
                                        let r = t.namespaces[e].accounts;
                                        n.push(...r)
                                    }), n
                                }(e, this.session),
                                r = nJ(t),
                                n = iu(ic({}, function(e = {}, t = {}) {
                                    let r = nY(e),
                                        n = nY(t);
                                    return nD.exports.merge(r, n)
                                }(this.namespaces, this.optionalNamespaces)[e]), {
                                    accounts: t,
                                    chains: r
                                });
                            switch (e) {
                                case "eip155":
                                    this.rpcProviders[e] = new n6({
                                        namespace: n
                                    });
                                    break;
                                case "solana":
                                    this.rpcProviders[e] = new n5({
                                        namespace: n
                                    });
                                    break;
                                case "cosmos":
                                    this.rpcProviders[e] = new n3({
                                        namespace: n
                                    });
                                    break;
                                case "polkadot":
                                    this.rpcProviders[e] = new n2({
                                        namespace: n
                                    });
                                    break;
                                case "cip34":
                                    this.rpcProviders[e] = new n8({
                                        namespace: n
                                    });
                                    break;
                                case "elrond":
                                    this.rpcProviders[e] = new n4({
                                        namespace: n
                                    });
                                    break;
                                case "multiversx":
                                    this.rpcProviders[e] = new n9({
                                        namespace: n
                                    });
                                    break;
                                case "near":
                                    this.rpcProviders[e] = new n7({
                                        namespace: n
                                    })
                            }
                        })
                    }
                    registerEventListeners() {
                        if (typeof this.client > "u") throw Error("Sign Client is not initialized");
                        this.client.on("session_ping", e => {
                            this.events.emit("session_ping", e)
                        }), this.client.on("session_event", e => {
                            let {
                                params: t
                            } = e, {
                                event: r
                            } = t;
                            if ("accountsChanged" === r.name) {
                                let e = r.data;
                                e && e_(e) && this.events.emit("accountsChanged", e.map(nZ))
                            } else if ("chainChanged" === r.name) {
                                let e = t.chainId,
                                    r = t.event.data,
                                    n = eb(e),
                                    i = nQ(e) !== nQ(r) ? `${n}:${nQ(r)}` : e;
                                this.onChainChanged(i)
                            } else this.events.emit(r.name, r.data);
                            this.events.emit("session_event", e)
                        }), this.client.on("session_update", ({
                            topic: e,
                            params: t
                        }) => {
                            var r;
                            let {
                                namespaces: n
                            } = t, i = null == (r = this.client) ? void 0 : r.session.get(e);
                            this.session = iu(ic({}, i), {
                                namespaces: n
                            }), this.onSessionUpdate(), this.events.emit("session_update", {
                                topic: e,
                                params: t
                            })
                        }), this.client.on("session_delete", async e => {
                            await this.cleanup(), this.events.emit("session_delete", e), this.events.emit("disconnect", iu(ic({}, eE("USER_DISCONNECTED")), {
                                data: e.topic
                            }))
                        }), this.on(nB.DEFAULT_CHAIN_CHANGED, e => {
                            this.onChainChanged(e, !0)
                        })
                    }
                    getProvider(e) {
                        if (!this.rpcProviders[e]) throw Error(`Provider not found: ${e}`);
                        return this.rpcProviders[e]
                    }
                    onSessionUpdate() {
                        Object.keys(this.rpcProviders).forEach(e => {
                            var t;
                            this.getProvider(e).updateNamespace(null == (t = this.session) ? void 0 : t.namespaces[e])
                        })
                    }
                    setNamespaces(e) {
                        let {
                            namespaces: t,
                            optionalNamespaces: r,
                            sessionProperties: n
                        } = e;
                        t && Object.keys(t).length && (this.namespaces = t), r && Object.keys(r).length && (this.optionalNamespaces = r), this.sessionProperties = n, this.persist("namespaces", t), this.persist("optionalNamespaces", r)
                    }
                    validateChain(e) {
                        let [t, r] = e ? .split(":") || ["", ""];
                        if (!this.namespaces || !Object.keys(this.namespaces).length) return [t, r];
                        if (t && !Object.keys(this.namespaces || {}).map(e => eb(e)).includes(t)) throw Error(`Namespace '${t}' is not configured. Please call connect() first with namespace config.`);
                        if (t && r) return [t, r];
                        let n = eb(Object.keys(this.namespaces)[0]),
                            i = this.rpcProviders[n].getDefaultChain();
                        return [n, i]
                    }
                    async requestAccounts() {
                        let [e] = this.validateChain();
                        return await this.getProvider(e).requestAccounts()
                    }
                    onChainChanged(e, t = !1) {
                        var r;
                        if (!this.namespaces) return;
                        let [n, i] = this.validateChain(e);
                        t || this.getProvider(n).setDefaultChain(i), (null != (r = this.namespaces[n]) ? r : this.namespaces[`${n}:${i}`]).defaultChain = i, this.persist("namespaces", this.namespaces), this.events.emit("chainChanged", i)
                    }
                    onConnect() {
                        this.createProviders(), this.events.emit("connect", {
                            session: this.session
                        })
                    }
                    async cleanup() {
                        this.session = void 0, this.namespaces = void 0, this.optionalNamespaces = void 0, this.sessionProperties = void 0, this.persist("namespaces", void 0), this.persist("optionalNamespaces", void 0), this.persist("sessionProperties", void 0), await this.cleanupPendingPairings({
                            deletePairings: !0
                        })
                    }
                    persist(e, t) {
                        this.client.core.storage.setItem(`${nM}/${e}`, t)
                    }
                    async getFromStore(e) {
                        return await this.client.core.storage.getItem(`${nM}/${e}`)
                    }
                    constructor(e) {
                        this.events = new(i()), this.rpcProviders = {}, this.shouldAbortPairingAttempt = !1, this.maxPairingAttempts = 10, this.disableProviderPing = !1, this.providerOpts = e, this.logger = "u" > typeof e ? .logger && "string" != typeof e ? .logger ? e.logger : (0, eX.pino)((0, eX.getDefaultLoggerOptions)({
                            level: e ? .logger || nN
                        })), this.disableProviderPing = e ? .disableProviderPing || !1
                    }
                },
                id = ["eth_sendTransaction", "personal_sign"],
                ih = ["eth_accounts", "eth_requestAccounts", "eth_sendRawTransaction", "eth_sign", "eth_signTransaction", "eth_signTypedData", "eth_signTypedData_v3", "eth_signTypedData_v4", "eth_sendTransaction", "personal_sign", "wallet_switchEthereumChain", "wallet_addEthereumChain", "wallet_getPermissions", "wallet_requestPermissions", "wallet_registerOnboarding", "wallet_watchAsset", "wallet_scanQRCode"],
                ip = ["chainChanged", "accountsChanged"],
                ig = ["chainChanged", "accountsChanged", "message", "disconnect", "connect"];
            var im = Object.defineProperty,
                ib = Object.defineProperties,
                iy = Object.getOwnPropertyDescriptors,
                iv = Object.getOwnPropertySymbols,
                iw = Object.prototype.hasOwnProperty,
                iE = Object.prototype.propertyIsEnumerable,
                i_ = (e, t, r) => t in e ? im(e, t, {
                    enumerable: !0,
                    configurable: !0,
                    writable: !0,
                    value: r
                }) : e[t] = r,
                iP = (e, t) => {
                    for (var r in t || (t = {})) iw.call(t, r) && i_(e, r, t[r]);
                    if (iv)
                        for (var r of iv(t)) iE.call(t, r) && i_(e, r, t[r]);
                    return e
                },
                ix = (e, t) => ib(e, iy(t));

            function iI(e) {
                return Number(e[0].split(":")[1])
            }

            function iO(e) {
                return `0x${e.toString(16)}`
            }
            let iT = class e {
                    static async init(t) {
                        let r = new e;
                        return await r.initialize(t), r
                    }
                    async request(e) {
                        return await this.signer.request(e, this.formatChainId(this.chainId))
                    }
                    sendAsync(e, t) {
                        this.signer.sendAsync(e, t, this.formatChainId(this.chainId))
                    }
                    get connected() {
                        return !!this.signer.client && this.signer.client.core.relayer.connected
                    }
                    get connecting() {
                        return !!this.signer.client && this.signer.client.core.relayer.connecting
                    }
                    async enable() {
                        return this.session || await this.connect(), await this.request({
                            method: "eth_requestAccounts"
                        })
                    }
                    async connect(e) {
                        if (!this.signer.client) throw Error("Provider not initialized. Call init() first");
                        this.loadConnectOpts(e);
                        let {
                            required: t,
                            optional: r
                        } = function(e) {
                            let {
                                chains: t,
                                optionalChains: r,
                                methods: n,
                                optionalMethods: i,
                                events: o,
                                optionalEvents: s,
                                rpcMap: a
                            } = e;
                            if (!e_(t)) throw Error("Invalid chains");
                            let c = {
                                    chains: t,
                                    methods: n || id,
                                    events: o || ip,
                                    rpcMap: iP({}, t.length ? {
                                        [iI(t)]: a[iI(t)]
                                    } : {})
                                },
                                u = o ? .filter(e => !ip.includes(e)),
                                l = n ? .filter(e => !id.includes(e));
                            if (!r && !s && !i && !(null != u && u.length) && !(null != l && l.length)) return {
                                required: t.length ? c : void 0
                            };
                            let d = u ? .length && l ? .length || !r,
                                h = {
                                    chains: [...new Set(d ? c.chains.concat(r || []) : r)],
                                    methods: [...new Set(c.methods.concat(null != i && i.length ? i : ih))],
                                    events: [...new Set(c.events.concat(null != s && s.length ? s : ig))],
                                    rpcMap: a
                                };
                            return {
                                required: t.length ? c : void 0,
                                optional: r.length ? h : void 0
                            }
                        }(this.rpc);
                        try {
                            let n = await new Promise(async (n, i) => {
                                var o;
                                this.rpc.showQrModal && (null == (o = this.modal) || o.subscribeModal(e => {
                                    e.open || this.signer.session || (this.signer.abortPairingAttempt(), i(Error("Connection request reset. Please try again.")))
                                })), await this.signer.connect(ix(iP({
                                    namespaces: iP({}, t && {
                                        [this.namespace]: t
                                    })
                                }, r && {
                                    optionalNamespaces: {
                                        [this.namespace]: r
                                    }
                                }), {
                                    pairingTopic: e ? .pairingTopic
                                })).then(e => {
                                    n(e)
                                }).catch(e => {
                                    i(Error(e.message))
                                })
                            });
                            if (!n) return;
                            let i = function(e, t = []) {
                                let r = [];
                                return Object.keys(e).forEach(n => {
                                    if (t.length && !t.includes(n)) return;
                                    let i = e[n];
                                    r.push(...i.accounts)
                                }), r
                            }(n.namespaces, [this.namespace]);
                            this.setChainIds(this.rpc.chains.length ? this.rpc.chains : i), this.setAccounts(i), this.events.emit("connect", {
                                chainId: iO(this.chainId)
                            })
                        } catch (e) {
                            throw this.signer.logger.error(e), e
                        } finally {
                            this.modal && this.modal.closeModal()
                        }
                    }
                    async disconnect() {
                        this.session && await this.signer.disconnect(), this.reset()
                    }
                    get isWalletConnect() {
                        return !0
                    }
                    get session() {
                        return this.signer.session
                    }
                    registerEventListeners() {
                        this.signer.on("session_event", e => {
                            let {
                                params: t
                            } = e, {
                                event: r
                            } = t;
                            "accountsChanged" === r.name ? (this.accounts = this.parseAccounts(r.data), this.events.emit("accountsChanged", this.accounts)) : "chainChanged" === r.name ? this.setChainId(this.formatChainId(r.data)) : this.events.emit(r.name, r.data), this.events.emit("session_event", e)
                        }), this.signer.on("chainChanged", e => {
                            let t = parseInt(e);
                            this.chainId = t, this.events.emit("chainChanged", iO(this.chainId)), this.persist()
                        }), this.signer.on("session_update", e => {
                            this.events.emit("session_update", e)
                        }), this.signer.on("session_delete", e => {
                            this.reset(), this.events.emit("session_delete", e), this.events.emit("disconnect", ix(iP({}, eE("USER_DISCONNECTED")), {
                                data: e.topic,
                                name: "USER_DISCONNECTED"
                            }))
                        }), this.signer.on("display_uri", e => {
                            var t, r;
                            this.rpc.showQrModal && (null == (t = this.modal) || t.closeModal(), null == (r = this.modal) || r.openModal({
                                uri: e
                            })), this.events.emit("display_uri", e)
                        })
                    }
                    switchEthereumChain(e) {
                        this.request({
                            method: "wallet_switchEthereumChain",
                            params: [{
                                chainId: e.toString(16)
                            }]
                        })
                    }
                    isCompatibleChainId(e) {
                        return "string" == typeof e && e.startsWith(`${this.namespace}:`)
                    }
                    formatChainId(e) {
                        return `${this.namespace}:${e}`
                    }
                    parseChainId(e) {
                        return Number(e.split(":")[1])
                    }
                    setChainIds(e) {
                        let t = e.filter(e => this.isCompatibleChainId(e)).map(e => this.parseChainId(e));
                        t.length && (this.chainId = t[0], this.events.emit("chainChanged", iO(this.chainId)), this.persist())
                    }
                    setChainId(e) {
                        if (this.isCompatibleChainId(e)) {
                            let t = this.parseChainId(e);
                            this.chainId = t, this.switchEthereumChain(t)
                        }
                    }
                    parseAccountId(e) {
                        let [t, r, n] = e.split(":");
                        return {
                            chainId: `${t}:${r}`,
                            address: n
                        }
                    }
                    setAccounts(e) {
                        this.accounts = e.filter(e => this.parseChainId(this.parseAccountId(e).chainId) === this.chainId).map(e => this.parseAccountId(e).address), this.events.emit("accountsChanged", this.accounts)
                    }
                    getRpcConfig(e) {
                        var t, r;
                        let n = null != (t = e ? .chains) ? t : [],
                            i = null != (r = e ? .optionalChains) ? r : [],
                            o = n.concat(i);
                        if (!o.length) throw Error("No chains specified in either `chains` or `optionalChains`");
                        let s = n.length ? e ? .methods || id : [],
                            a = n.length ? e ? .events || ip : [],
                            c = e ? .optionalMethods || [],
                            u = e ? .optionalEvents || [],
                            l = e ? .rpcMap || this.buildRpcMap(o, e.projectId),
                            d = e ? .qrModalOptions || void 0;
                        return {
                            chains: n ? .map(e => this.formatChainId(e)),
                            optionalChains: i.map(e => this.formatChainId(e)),
                            methods: s,
                            events: a,
                            optionalMethods: c,
                            optionalEvents: u,
                            rpcMap: l,
                            showQrModal: !!(null != e && e.showQrModal),
                            qrModalOptions: d,
                            projectId: e.projectId,
                            metadata: e.metadata
                        }
                    }
                    buildRpcMap(e, t) {
                        let r = {};
                        return e.forEach(e => {
                            r[e] = this.getRpcUrl(e, t)
                        }), r
                    }
                    async initialize(e) {
                        if (this.rpc = this.getRpcConfig(e), this.chainId = this.rpc.chains.length ? iI(this.rpc.chains) : iI(this.rpc.optionalChains), this.signer = await il.init({
                                projectId: this.rpc.projectId,
                                metadata: this.rpc.metadata,
                                disableProviderPing: e.disableProviderPing,
                                relayUrl: e.relayUrl,
                                storageOptions: e.storageOptions
                            }), this.registerEventListeners(), await this.loadPersistedSession(), this.rpc.showQrModal) {
                            let e;
                            try {
                                let {
                                    WalletConnectModal: t
                                } = await r.e(585).then(r.bind(r, 57585));
                                e = t
                            } catch {
                                throw Error("To use QR modal, please install @walletconnect/modal package")
                            }
                            if (e) try {
                                this.modal = new e(iP({
                                    projectId: this.rpc.projectId
                                }, this.rpc.qrModalOptions))
                            } catch (e) {
                                throw this.signer.logger.error(e), Error("Could not generate WalletConnectModal Instance")
                            }
                        }
                    }
                    loadConnectOpts(e) {
                        if (!e) return;
                        let {
                            chains: t,
                            optionalChains: r,
                            rpcMap: n
                        } = e;
                        t && e_(t) && (this.rpc.chains = t.map(e => this.formatChainId(e)), t.forEach(e => {
                            this.rpc.rpcMap[e] = n ? .[e] || this.getRpcUrl(e)
                        })), r && e_(r) && (this.rpc.optionalChains = [], this.rpc.optionalChains = r ? .map(e => this.formatChainId(e)), r.forEach(e => {
                            this.rpc.rpcMap[e] = n ? .[e] || this.getRpcUrl(e)
                        }))
                    }
                    getRpcUrl(e, t) {
                        var r;
                        return (null == (r = this.rpc.rpcMap) ? void 0 : r[e]) || `https://rpc.walletconnect.com/v1/?chainId=eip155:${e}&projectId=${t||this.rpc.projectId}`
                    }
                    async loadPersistedSession() {
                        if (!this.session) return;
                        let e = await this.signer.client.core.storage.getItem(`${this.STORAGE_KEY}/chainId`),
                            t = this.session.namespaces[`${this.namespace}:${e}`] ? this.session.namespaces[`${this.namespace}:${e}`] : this.session.namespaces[this.namespace];
                        this.setChainIds(e ? [this.formatChainId(e)] : t ? .accounts), this.setAccounts(t ? .accounts)
                    }
                    reset() {
                        this.chainId = 1, this.accounts = []
                    }
                    persist() {
                        this.session && this.signer.client.core.storage.setItem(`${this.STORAGE_KEY}/chainId`, this.chainId)
                    }
                    parseAccounts(e) {
                        return "string" == typeof e || e instanceof String ? [this.parseAccount(e)] : e.map(e => this.parseAccount(e))
                    }
                    constructor() {
                        this.events = new n.EventEmitter, this.namespace = "eip155", this.accounts = [], this.chainId = 1, this.STORAGE_KEY = "wc@2:ethereum_provider:", this.on = (e, t) => (this.events.on(e, t), this), this.once = (e, t) => (this.events.once(e, t), this), this.removeListener = (e, t) => (this.events.removeListener(e, t), this), this.off = (e, t) => (this.events.off(e, t), this), this.parseAccount = e => this.isCompatibleChainId(e) ? this.parseAccountId(e).address : e, this.signer = {}, this.rpc = {}
                    }
                },
                iA = iT
        },
        58976: (e, t, r) => {
            "use strict";
            r.d(t, {
                q: () => n
            });
            class n {}
        },
        29043: (e, t, r) => {
            "use strict";
            r.r(t), r.d(t, {
                IEvents: () => n.q
            });
            var n = r(58976)
        },
        90519: (e, t, r) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.HEARTBEAT_EVENTS = t.HEARTBEAT_INTERVAL = void 0;
            let n = r(62057);
            t.HEARTBEAT_INTERVAL = n.FIVE_SECONDS, t.HEARTBEAT_EVENTS = {
                pulse: "heartbeat_pulse"
            }
        },
        24825: (e, t, r) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), r(5815).__exportStar(r(90519), t)
        },
        12821: (e, t, r) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.HeartBeat = void 0;
            let n = r(5815),
                i = r(32821),
                o = r(62057),
                s = r(56696),
                a = r(24825),
                c = class e extends s.IHeartBeat {
                    static init(t) {
                        return n.__awaiter(this, void 0, void 0, function*() {
                            let r = new e(t);
                            return yield r.init(), r
                        })
                    }
                    init() {
                        return n.__awaiter(this, void 0, void 0, function*() {
                            yield this.initialize()
                        })
                    }
                    stop() {
                        clearInterval(this.intervalRef)
                    }
                    on(e, t) {
                        this.events.on(e, t)
                    }
                    once(e, t) {
                        this.events.once(e, t)
                    }
                    off(e, t) {
                        this.events.off(e, t)
                    }
                    removeListener(e, t) {
                        this.events.removeListener(e, t)
                    }
                    initialize() {
                        return n.__awaiter(this, void 0, void 0, function*() {
                            this.intervalRef = setInterval(() => this.pulse(), o.toMiliseconds(this.interval))
                        })
                    }
                    pulse() {
                        this.events.emit(a.HEARTBEAT_EVENTS.pulse)
                    }
                    constructor(e) {
                        super(e), this.events = new i.EventEmitter, this.interval = a.HEARTBEAT_INTERVAL, this.interval = (null == e ? void 0 : e.interval) || a.HEARTBEAT_INTERVAL
                    }
                };
            t.HeartBeat = c
        },
        46229: (e, t, r) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            });
            let n = r(5815);
            n.__exportStar(r(12821), t), n.__exportStar(r(56696), t), n.__exportStar(r(24825), t)
        },
        77838: (e, t, r) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.IHeartBeat = void 0;
            let n = r(29043),
                i = class extends n.IEvents {
                    constructor(e) {
                        super()
                    }
                };
            t.IHeartBeat = i
        },
        56696: (e, t, r) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), r(5815).__exportStar(r(77838), t)
        },
        5815: (e, t, r) => {
            "use strict";
            r.r(t), r.d(t, {
                __assign: () => o,
                __asyncDelegator: () => w,
                __asyncGenerator: () => v,
                __asyncValues: () => E,
                __await: () => y,
                __awaiter: () => l,
                __classPrivateFieldGet: () => I,
                __classPrivateFieldSet: () => O,
                __createBinding: () => h,
                __decorate: () => a,
                __exportStar: () => f,
                __extends: () => i,
                __generator: () => d,
                __importDefault: () => x,
                __importStar: () => P,
                __makeTemplateObject: () => _,
                __metadata: () => u,
                __param: () => c,
                __read: () => g,
                __rest: () => s,
                __spread: () => m,
                __spreadArrays: () => b,
                __values: () => p
            });
            /*! *****************************************************************************
            Copyright (c) Microsoft Corporation.
            Permission to use, copy, modify, and/or distribute this software for any
            purpose with or without fee is hereby granted.
            THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
            REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
            AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
            INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
            LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
            OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
            PERFORMANCE OF THIS SOFTWARE.
            ***************************************************************************** */
            var n = function(e, t) {
                return (n = Object.setPrototypeOf || ({
                    __proto__: []
                }) instanceof Array && function(e, t) {
                    e.__proto__ = t
                } || function(e, t) {
                    for (var r in t) t.hasOwnProperty(r) && (e[r] = t[r])
                })(e, t)
            };

            function i(e, t) {
                function r() {
                    this.constructor = e
                }
                n(e, t), e.prototype = null === t ? Object.create(t) : (r.prototype = t.prototype, new r)
            }
            var o = function() {
                return (o = Object.assign || function(e) {
                    for (var t, r = 1, n = arguments.length; r < n; r++)
                        for (var i in t = arguments[r]) Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i]);
                    return e
                }).apply(this, arguments)
            };

            function s(e, t) {
                var r = {};
                for (var n in e) Object.prototype.hasOwnProperty.call(e, n) && 0 > t.indexOf(n) && (r[n] = e[n]);
                if (null != e && "function" == typeof Object.getOwnPropertySymbols)
                    for (var i = 0, n = Object.getOwnPropertySymbols(e); i < n.length; i++) 0 > t.indexOf(n[i]) && Object.prototype.propertyIsEnumerable.call(e, n[i]) && (r[n[i]] = e[n[i]]);
                return r
            }

            function a(e, t, r, n) {
                var i, o = arguments.length,
                    s = o < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, r) : n;
                if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, r, n);
                else
                    for (var a = e.length - 1; a >= 0; a--)(i = e[a]) && (s = (o < 3 ? i(s) : o > 3 ? i(t, r, s) : i(t, r)) || s);
                return o > 3 && s && Object.defineProperty(t, r, s), s
            }

            function c(e, t) {
                return function(r, n) {
                    t(r, n, e)
                }
            }

            function u(e, t) {
                if ("object" == typeof Reflect && "function" == typeof Reflect.metadata) return Reflect.metadata(e, t)
            }

            function l(e, t, r, n) {
                return new(r || (r = Promise))(function(i, o) {
                    function s(e) {
                        try {
                            c(n.next(e))
                        } catch (e) {
                            o(e)
                        }
                    }

                    function a(e) {
                        try {
                            c(n.throw(e))
                        } catch (e) {
                            o(e)
                        }
                    }

                    function c(e) {
                        var t;
                        e.done ? i(e.value) : ((t = e.value) instanceof r ? t : new r(function(e) {
                            e(t)
                        })).then(s, a)
                    }
                    c((n = n.apply(e, t || [])).next())
                })
            }

            function d(e, t) {
                var r, n, i, o, s = {
                    label: 0,
                    sent: function() {
                        if (1 & i[0]) throw i[1];
                        return i[1]
                    },
                    trys: [],
                    ops: []
                };
                return o = {
                    next: a(0),
                    throw: a(1),
                    return: a(2)
                }, "function" == typeof Symbol && (o[Symbol.iterator] = function() {
                    return this
                }), o;

                function a(o) {
                    return function(a) {
                        return function(o) {
                            if (r) throw TypeError("Generator is already executing.");
                            for (; s;) try {
                                if (r = 1, n && (i = 2 & o[0] ? n.return : o[0] ? n.throw || ((i = n.return) && i.call(n), 0) : n.next) && !(i = i.call(n, o[1])).done) return i;
                                switch (n = 0, i && (o = [2 & o[0], i.value]), o[0]) {
                                    case 0:
                                    case 1:
                                        i = o;
                                        break;
                                    case 4:
                                        return s.label++, {
                                            value: o[1],
                                            done: !1
                                        };
                                    case 5:
                                        s.label++, n = o[1], o = [0];
                                        continue;
                                    case 7:
                                        o = s.ops.pop(), s.trys.pop();
                                        continue;
                                    default:
                                        if (!(i = (i = s.trys).length > 0 && i[i.length - 1]) && (6 === o[0] || 2 === o[0])) {
                                            s = 0;
                                            continue
                                        }
                                        if (3 === o[0] && (!i || o[1] > i[0] && o[1] < i[3])) {
                                            s.label = o[1];
                                            break
                                        }
                                        if (6 === o[0] && s.label < i[1]) {
                                            s.label = i[1], i = o;
                                            break
                                        }
                                        if (i && s.label < i[2]) {
                                            s.label = i[2], s.ops.push(o);
                                            break
                                        }
                                        i[2] && s.ops.pop(), s.trys.pop();
                                        continue
                                }
                                o = t.call(e, s)
                            } catch (e) {
                                o = [6, e], n = 0
                            } finally {
                                r = i = 0
                            }
                            if (5 & o[0]) throw o[1];
                            return {
                                value: o[0] ? o[1] : void 0,
                                done: !0
                            }
                        }([o, a])
                    }
                }
            }

            function h(e, t, r, n) {
                void 0 === n && (n = r), e[n] = t[r]
            }

            function f(e, t) {
                for (var r in e) "default" === r || t.hasOwnProperty(r) || (t[r] = e[r])
            }

            function p(e) {
                var t = "function" == typeof Symbol && Symbol.iterator,
                    r = t && e[t],
                    n = 0;
                if (r) return r.call(e);
                if (e && "number" == typeof e.length) return {
                    next: function() {
                        return e && n >= e.length && (e = void 0), {
                            value: e && e[n++],
                            done: !e
                        }
                    }
                };
                throw TypeError(t ? "Object is not iterable." : "Symbol.iterator is not defined.")
            }

            function g(e, t) {
                var r = "function" == typeof Symbol && e[Symbol.iterator];
                if (!r) return e;
                var n, i, o = r.call(e),
                    s = [];
                try {
                    for (;
                        (void 0 === t || t-- > 0) && !(n = o.next()).done;) s.push(n.value)
                } catch (e) {
                    i = {
                        error: e
                    }
                } finally {
                    try {
                        n && !n.done && (r = o.return) && r.call(o)
                    } finally {
                        if (i) throw i.error
                    }
                }
                return s
            }

            function m() {
                for (var e = [], t = 0; t < arguments.length; t++) e = e.concat(g(arguments[t]));
                return e
            }

            function b() {
                for (var e = 0, t = 0, r = arguments.length; t < r; t++) e += arguments[t].length;
                for (var n = Array(e), i = 0, t = 0; t < r; t++)
                    for (var o = arguments[t], s = 0, a = o.length; s < a; s++, i++) n[i] = o[s];
                return n
            }

            function y(e) {
                return this instanceof y ? (this.v = e, this) : new y(e)
            }

            function v(e, t, r) {
                if (!Symbol.asyncIterator) throw TypeError("Symbol.asyncIterator is not defined.");
                var n, i = r.apply(e, t || []),
                    o = [];
                return n = {}, s("next"), s("throw"), s("return"), n[Symbol.asyncIterator] = function() {
                    return this
                }, n;

                function s(e) {
                    i[e] && (n[e] = function(t) {
                        return new Promise(function(r, n) {
                            o.push([e, t, r, n]) > 1 || a(e, t)
                        })
                    })
                }

                function a(e, t) {
                    try {
                        var r;
                        (r = i[e](t)).value instanceof y ? Promise.resolve(r.value.v).then(c, u) : l(o[0][2], r)
                    } catch (e) {
                        l(o[0][3], e)
                    }
                }

                function c(e) {
                    a("next", e)
                }

                function u(e) {
                    a("throw", e)
                }

                function l(e, t) {
                    e(t), o.shift(), o.length && a(o[0][0], o[0][1])
                }
            }

            function w(e) {
                var t, r;
                return t = {}, n("next"), n("throw", function(e) {
                    throw e
                }), n("return"), t[Symbol.iterator] = function() {
                    return this
                }, t;

                function n(n, i) {
                    t[n] = e[n] ? function(t) {
                        return (r = !r) ? {
                            value: y(e[n](t)),
                            done: "return" === n
                        } : i ? i(t) : t
                    } : i
                }
            }

            function E(e) {
                if (!Symbol.asyncIterator) throw TypeError("Symbol.asyncIterator is not defined.");
                var t, r = e[Symbol.asyncIterator];
                return r ? r.call(e) : (e = p(e), t = {}, n("next"), n("throw"), n("return"), t[Symbol.asyncIterator] = function() {
                    return this
                }, t);

                function n(r) {
                    t[r] = e[r] && function(t) {
                        return new Promise(function(n, i) {
                            ! function(e, t, r, n) {
                                Promise.resolve(n).then(function(t) {
                                    e({
                                        value: t,
                                        done: r
                                    })
                                }, t)
                            }(n, i, (t = e[r](t)).done, t.value)
                        })
                    }
                }
            }

            function _(e, t) {
                return Object.defineProperty ? Object.defineProperty(e, "raw", {
                    value: t
                }) : e.raw = t, e
            }

            function P(e) {
                if (e && e.__esModule) return e;
                var t = {};
                if (null != e)
                    for (var r in e) Object.hasOwnProperty.call(e, r) && (t[r] = e[r]);
                return t.default = e, t
            }

            function x(e) {
                return e && e.__esModule ? e : {
                    default: e
                }
            }

            function I(e, t) {
                if (!t.has(e)) throw TypeError("attempted to get private field on non-instance");
                return t.get(e)
            }

            function O(e, t, r) {
                if (!t.has(e)) throw TypeError("attempted to set private field on non-instance");
                return t.set(e, r), r
            }
        },
        7660: (e, t, r) => {
            "use strict";
            r.r(t), r.d(t, {
                HttpConnection: () => u,
                default: () => l
            });
            var n = r(32821),
                i = r(31876),
                o = r.n(i),
                s = r(63893),
                a = r(43621);
            let c = {
                headers: {
                    Accept: "application/json",
                    "Content-Type": "application/json"
                },
                method: "POST"
            };
            class u {
                get connected() {
                    return this.isAvailable
                }
                get connecting() {
                    return this.registering
                }
                on(e, t) {
                    this.events.on(e, t)
                }
                once(e, t) {
                    this.events.once(e, t)
                }
                off(e, t) {
                    this.events.off(e, t)
                }
                removeListener(e, t) {
                    this.events.removeListener(e, t)
                }
                async open(e = this.url) {
                    await this.register(e)
                }
                async close() {
                    if (!this.isAvailable) throw Error("Connection already closed");
                    this.onClose()
                }
                async send(e, t) {
                    this.isAvailable || await this.register();
                    try {
                        let t = (0, s.u)(e),
                            r = await o()(this.url, Object.assign(Object.assign({}, c), {
                                body: t
                            })),
                            n = await r.json();
                        this.onPayload({
                            data: n
                        })
                    } catch (t) {
                        this.onError(e.id, t)
                    }
                }
                async register(e = this.url) {
                    if (!(0, a.isHttpUrl)(e)) throw Error(`Provided URL is not compatible with HTTP connection: ${e}`);
                    if (this.registering) {
                        let e = this.events.getMaxListeners();
                        return (this.events.listenerCount("register_error") >= e || this.events.listenerCount("open") >= e) && this.events.setMaxListeners(e + 1), new Promise((e, t) => {
                            this.events.once("register_error", e => {
                                this.resetMaxListeners(), t(e)
                            }), this.events.once("open", () => {
                                if (this.resetMaxListeners(), void 0 === this.isAvailable) return t(Error("HTTP connection is missing or invalid"));
                                e()
                            })
                        })
                    }
                    this.url = e, this.registering = !0;
                    try {
                        if (!this.disableProviderPing) {
                            let t = (0, s.u)({
                                id: 1,
                                jsonrpc: "2.0",
                                method: "test",
                                params: []
                            });
                            await o()(e, Object.assign(Object.assign({}, c), {
                                body: t
                            }))
                        }
                        this.onOpen()
                    } catch (t) {
                        let e = this.parseError(t);
                        throw this.events.emit("register_error", e), this.onClose(), e
                    }
                }
                onOpen() {
                    this.isAvailable = !0, this.registering = !1, this.events.emit("open")
                }
                onClose() {
                    this.isAvailable = !1, this.registering = !1, this.events.emit("close")
                }
                onPayload(e) {
                    if (void 0 === e.data) return;
                    let t = "string" == typeof e.data ? (0, s.D)(e.data) : e.data;
                    this.events.emit("payload", t)
                }
                onError(e, t) {
                    let r = this.parseError(t),
                        n = r.message || r.toString(),
                        i = (0, a.formatJsonRpcError)(e, n);
                    this.events.emit("payload", i)
                }
                parseError(e, t = this.url) {
                    return (0, a.parseConnectionError)(e, t, "HTTP")
                }
                resetMaxListeners() {
                    this.events.getMaxListeners() > 10 && this.events.setMaxListeners(10)
                }
                constructor(e, t = !1) {
                    if (this.url = e, this.disableProviderPing = t, this.events = new n.EventEmitter, this.isAvailable = !1, this.registering = !1, !(0, a.isHttpUrl)(e)) throw Error(`Provided URL is not compatible with HTTP connection: ${e}`);
                    this.url = e, this.disableProviderPing = t
                }
            }
            let l = u
        },
        39468: (e, t, r) => {
            "use strict";
            r.r(t), r.d(t, {
                JsonRpcProvider: () => o,
                default: () => s
            });
            var n = r(32821),
                i = r(43621);
            class o extends i.IJsonRpcProvider {
                async connect(e = this.connection) {
                    await this.open(e)
                }
                async disconnect() {
                    await this.close()
                }
                on(e, t) {
                    this.events.on(e, t)
                }
                once(e, t) {
                    this.events.once(e, t)
                }
                off(e, t) {
                    this.events.off(e, t)
                }
                removeListener(e, t) {
                    this.events.removeListener(e, t)
                }
                async request(e, t) {
                    return this.requestStrict((0, i.formatJsonRpcRequest)(e.method, e.params || [], e.id || (0, i.getBigIntRpcId)().toString()), t)
                }
                async requestStrict(e, t) {
                    return new Promise(async (r, n) => {
                        if (!this.connection.connected) try {
                            await this.open()
                        } catch (e) {
                            n(e)
                        }
                        this.events.on(`${e.id}`, e => {
                            (0, i.isJsonRpcError)(e) ? n(e.error): r(e.result)
                        });
                        try {
                            await this.connection.send(e, t)
                        } catch (e) {
                            n(e)
                        }
                    })
                }
                setConnection(e = this.connection) {
                    return e
                }
                onPayload(e) {
                    this.events.emit("payload", e), (0, i.isJsonRpcResponse)(e) ? this.events.emit(`${e.id}`, e) : this.events.emit("message", {
                        type: e.method,
                        data: e.params
                    })
                }
                onClose(e) {
                    e && 3e3 === e.code && this.events.emit("error", Error(`WebSocket connection closed abnormally with code: ${e.code} ${e.reason?`(${e.reason})`:""}`)), this.events.emit("disconnect")
                }
                async open(e = this.connection) {
                    this.connection === e && this.connection.connected || (this.connection.connected && this.close(), "string" == typeof e && (await this.connection.open(e), e = this.connection), this.connection = this.setConnection(e), await this.connection.open(), this.registerEventListeners(), this.events.emit("connect"))
                }
                async close() {
                    await this.connection.close()
                }
                registerEventListeners() {
                    this.hasRegisteredEventListeners || (this.connection.on("payload", e => this.onPayload(e)), this.connection.on("close", e => this.onClose(e)), this.connection.on("error", e => this.events.emit("error", e)), this.connection.on("register_error", e => this.onClose()), this.hasRegisteredEventListeners = !0)
                }
                constructor(e) {
                    super(e), this.events = new n.EventEmitter, this.hasRegisteredEventListeners = !1, this.connection = this.setConnection(e), this.connection.connected && this.registerEventListeners()
                }
            }
            let s = o
        },
        83770: (e, t, r) => {
            "use strict";
            r.d(t, {
                CA: () => i,
                JV: () => a,
                O4: () => n,
                dQ: () => o,
                xK: () => s
            });
            let n = "INTERNAL_ERROR",
                i = "SERVER_ERROR",
                o = [-32700, -32600, -32601, -32602, -32603],
                s = {
                    PARSE_ERROR: {
                        code: -32700,
                        message: "Parse error"
                    },
                    INVALID_REQUEST: {
                        code: -32600,
                        message: "Invalid Request"
                    },
                    METHOD_NOT_FOUND: {
                        code: -32601,
                        message: "Method not found"
                    },
                    INVALID_PARAMS: {
                        code: -32602,
                        message: "Invalid params"
                    },
                    [n]: {
                        code: -32603,
                        message: "Internal error"
                    },
                    [i]: {
                        code: -32e3,
                        message: "Server error"
                    }
                },
                a = i
        },
        44738: (e, t, r) => {
            "use strict";
            var n = r(86351);
            r.o(n, "IJsonRpcProvider") && r.d(t, {
                IJsonRpcProvider: function() {
                    return n.IJsonRpcProvider
                }
            }), r.o(n, "formatJsonRpcError") && r.d(t, {
                formatJsonRpcError: function() {
                    return n.formatJsonRpcError
                }
            }), r.o(n, "formatJsonRpcRequest") && r.d(t, {
                formatJsonRpcRequest: function() {
                    return n.formatJsonRpcRequest
                }
            }), r.o(n, "formatJsonRpcResult") && r.d(t, {
                formatJsonRpcResult: function() {
                    return n.formatJsonRpcResult
                }
            }), r.o(n, "getBigIntRpcId") && r.d(t, {
                getBigIntRpcId: function() {
                    return n.getBigIntRpcId
                }
            }), r.o(n, "isHttpUrl") && r.d(t, {
                isHttpUrl: function() {
                    return n.isHttpUrl
                }
            }), r.o(n, "isJsonRpcError") && r.d(t, {
                isJsonRpcError: function() {
                    return n.isJsonRpcError
                }
            }), r.o(n, "isJsonRpcRequest") && r.d(t, {
                isJsonRpcRequest: function() {
                    return n.isJsonRpcRequest
                }
            }), r.o(n, "isJsonRpcResponse") && r.d(t, {
                isJsonRpcResponse: function() {
                    return n.isJsonRpcResponse
                }
            }), r.o(n, "isJsonRpcResult") && r.d(t, {
                isJsonRpcResult: function() {
                    return n.isJsonRpcResult
                }
            }), r.o(n, "isLocalhostUrl") && r.d(t, {
                isLocalhostUrl: function() {
                    return n.isLocalhostUrl
                }
            }), r.o(n, "isReactNative") && r.d(t, {
                isReactNative: function() {
                    return n.isReactNative
                }
            }), r.o(n, "isWsUrl") && r.d(t, {
                isWsUrl: function() {
                    return n.isWsUrl
                }
            }), r.o(n, "payloadId") && r.d(t, {
                payloadId: function() {
                    return n.payloadId
                }
            })
        },
        214: (e, t, r) => {
            "use strict";
            r.d(t, {
                CX: () => a,
                L2: () => s,
                by: () => o,
                i5: () => i
            });
            var n = r(83770);

            function i(e) {
                return n.dQ.includes(e)
            }

            function o(e) {
                return Object.keys(n.xK).includes(e) ? n.xK[e] : n.xK[n.JV]
            }

            function s(e) {
                return Object.values(n.xK).find(t => t.code === e) || n.xK[n.JV]
            }

            function a(e, t, r) {
                return e.message.includes("getaddrinfo ENOTFOUND") || e.message.includes("connect ECONNREFUSED") ? Error(`Unavailable ${r} RPC url at ${t}`) : e
            }
        },
        82611: (e, t, r) => {
            "use strict";
            r.d(t, {
                CS: () => s,
                RI: () => u,
                o0: () => o,
                sT: () => a,
                tm: () => c
            });
            var n = r(214),
                i = r(83770);

            function o(e = 3) {
                return Date.now() * Math.pow(10, e) + Math.floor(Math.random() * Math.pow(10, e))
            }

            function s(e = 6) {
                return BigInt(o(e))
            }

            function a(e, t, r) {
                return {
                    id: r || o(),
                    jsonrpc: "2.0",
                    method: e,
                    params: t
                }
            }

            function c(e, t) {
                return {
                    id: e,
                    jsonrpc: "2.0",
                    result: t
                }
            }

            function u(e, t, r) {
                var o;
                return {
                    id: e,
                    jsonrpc: "2.0",
                    error: void 0 === (o = t) ? (0, n.by)(i.O4) : ("string" == typeof o && (o = Object.assign(Object.assign({}, (0, n.by)(i.CA)), {
                        message: o
                    })), void 0 !== r && (o.data = r), (0, n.i5)(o.code) && (o = (0, n.L2)(o.code)), o)
                }
            }
        },
        43621: (e, t, r) => {
            "use strict";
            r.d(t, {
                IJsonRpcProvider: () => s.x0,
                formatJsonRpcError: () => o.RI,
                formatJsonRpcRequest: () => o.sT,
                formatJsonRpcResult: () => o.tm,
                getBigIntRpcId: () => o.CS,
                isHttpUrl: () => a.jK,
                isJsonRpcError: () => c.jg,
                isJsonRpcRequest: () => c.DW,
                isJsonRpcResponse: () => c.u,
                isJsonRpcResult: () => c.k4,
                isLocalhostUrl: () => a.JF,
                isWsUrl: () => a.UZ,
                parseConnectionError: () => n.CX,
                payloadId: () => o.o0
            }), r(83770);
            var n = r(214),
                i = r(44738);
            r.o(i, "IJsonRpcProvider") && r.d(t, {
                IJsonRpcProvider: function() {
                    return i.IJsonRpcProvider
                }
            }), r.o(i, "formatJsonRpcError") && r.d(t, {
                formatJsonRpcError: function() {
                    return i.formatJsonRpcError
                }
            }), r.o(i, "formatJsonRpcRequest") && r.d(t, {
                formatJsonRpcRequest: function() {
                    return i.formatJsonRpcRequest
                }
            }), r.o(i, "formatJsonRpcResult") && r.d(t, {
                formatJsonRpcResult: function() {
                    return i.formatJsonRpcResult
                }
            }), r.o(i, "getBigIntRpcId") && r.d(t, {
                getBigIntRpcId: function() {
                    return i.getBigIntRpcId
                }
            }), r.o(i, "isHttpUrl") && r.d(t, {
                isHttpUrl: function() {
                    return i.isHttpUrl
                }
            }), r.o(i, "isJsonRpcError") && r.d(t, {
                isJsonRpcError: function() {
                    return i.isJsonRpcError
                }
            }), r.o(i, "isJsonRpcRequest") && r.d(t, {
                isJsonRpcRequest: function() {
                    return i.isJsonRpcRequest
                }
            }), r.o(i, "isJsonRpcResponse") && r.d(t, {
                isJsonRpcResponse: function() {
                    return i.isJsonRpcResponse
                }
            }), r.o(i, "isJsonRpcResult") && r.d(t, {
                isJsonRpcResult: function() {
                    return i.isJsonRpcResult
                }
            }), r.o(i, "isLocalhostUrl") && r.d(t, {
                isLocalhostUrl: function() {
                    return i.isLocalhostUrl
                }
            }), r.o(i, "isReactNative") && r.d(t, {
                isReactNative: function() {
                    return i.isReactNative
                }
            }), r.o(i, "isWsUrl") && r.d(t, {
                isWsUrl: function() {
                    return i.isWsUrl
                }
            }), r.o(i, "payloadId") && r.d(t, {
                payloadId: function() {
                    return i.payloadId
                }
            });
            var o = r(82611),
                s = r(34400),
                a = r(97101),
                c = r(34489)
        },
        34400: (e, t, r) => {
            "use strict";
            r.d(t, {
                x0: () => o
            });
            class n {}
            class i extends n {
                constructor() {
                    super()
                }
            }
            class o extends i {
                constructor(e) {
                    super()
                }
            }
        },
        97101: (e, t, r) => {
            "use strict";

            function n(e, t) {
                let r = function(e) {
                    let t = e.match(RegExp(/^\w+:/, "gi"));
                    if (t && t.length) return t[0]
                }(e);
                return void 0 !== r && new RegExp(t).test(r)
            }

            function i(e) {
                return n(e, "^https?:")
            }

            function o(e) {
                return n(e, "^wss?:")
            }

            function s(e) {
                return RegExp("wss?://localhost(:d{2,5})?").test(e)
            }
            r.d(t, {
                JF: () => s,
                UZ: () => o,
                jK: () => i
            })
        },
        34489: (e, t, r) => {
            "use strict";

            function n(e) {
                return "object" == typeof e && "id" in e && "jsonrpc" in e && "2.0" === e.jsonrpc
            }

            function i(e) {
                return n(e) && "method" in e
            }

            function o(e) {
                return n(e) && (s(e) || a(e))
            }

            function s(e) {
                return "result" in e
            }

            function a(e) {
                return "error" in e
            }
            r.d(t, {
                DW: () => i,
                jg: () => a,
                k4: () => s,
                u: () => o
            })
        },
        60876: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.PINO_CUSTOM_CONTEXT_KEY = t.PINO_LOGGER_DEFAULTS = void 0, t.PINO_LOGGER_DEFAULTS = {
                level: "info"
            }, t.PINO_CUSTOM_CONTEXT_KEY = "custom_context"
        },
        80314: (e, t, r) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.pino = void 0;
            let n = r(91737),
                i = n.__importDefault(r(81541));
            Object.defineProperty(t, "pino", {
                enumerable: !0,
                get: function() {
                    return i.default
                }
            }), n.__exportStar(r(60876), t), n.__exportStar(r(2394), t)
        },
        2394: (e, t, r) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.generateChildLogger = t.formatChildLoggerContext = t.getLoggerContext = t.setBrowserLoggerContext = t.getBrowserLoggerContext = t.getDefaultLoggerOptions = void 0;
            let n = r(60876);

            function i(e, t = n.PINO_CUSTOM_CONTEXT_KEY) {
                return e[t] || ""
            }

            function o(e, t, r = n.PINO_CUSTOM_CONTEXT_KEY) {
                return e[r] = t, e
            }

            function s(e, t = n.PINO_CUSTOM_CONTEXT_KEY) {
                return void 0 === e.bindings ? i(e, t) : e.bindings().context || ""
            }

            function a(e, t, r = n.PINO_CUSTOM_CONTEXT_KEY) {
                let i = s(e, r);
                return i.trim() ? `${i}/${t}` : t
            }
            t.getDefaultLoggerOptions = function(e) {
                return Object.assign(Object.assign({}, e), {
                    level: (null == e ? void 0 : e.level) || n.PINO_LOGGER_DEFAULTS.level
                })
            }, t.getBrowserLoggerContext = i, t.setBrowserLoggerContext = o, t.getLoggerContext = s, t.formatChildLoggerContext = a, t.generateChildLogger = function(e, t, r = n.PINO_CUSTOM_CONTEXT_KEY) {
                let i = a(e, t, r);
                return o(e.child({
                    context: i
                }), i, r)
            }
        },
        91737: (e, t, r) => {
            "use strict";
            r.r(t), r.d(t, {
                __assign: () => o,
                __asyncDelegator: () => w,
                __asyncGenerator: () => v,
                __asyncValues: () => E,
                __await: () => y,
                __awaiter: () => l,
                __classPrivateFieldGet: () => I,
                __classPrivateFieldSet: () => O,
                __createBinding: () => h,
                __decorate: () => a,
                __exportStar: () => f,
                __extends: () => i,
                __generator: () => d,
                __importDefault: () => x,
                __importStar: () => P,
                __makeTemplateObject: () => _,
                __metadata: () => u,
                __param: () => c,
                __read: () => g,
                __rest: () => s,
                __spread: () => m,
                __spreadArrays: () => b,
                __values: () => p
            });
            /*! *****************************************************************************
            Copyright (c) Microsoft Corporation.
            Permission to use, copy, modify, and/or distribute this software for any
            purpose with or without fee is hereby granted.
            THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
            REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
            AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
            INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
            LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
            OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
            PERFORMANCE OF THIS SOFTWARE.
            ***************************************************************************** */
            var n = function(e, t) {
                return (n = Object.setPrototypeOf || ({
                    __proto__: []
                }) instanceof Array && function(e, t) {
                    e.__proto__ = t
                } || function(e, t) {
                    for (var r in t) t.hasOwnProperty(r) && (e[r] = t[r])
                })(e, t)
            };

            function i(e, t) {
                function r() {
                    this.constructor = e
                }
                n(e, t), e.prototype = null === t ? Object.create(t) : (r.prototype = t.prototype, new r)
            }
            var o = function() {
                return (o = Object.assign || function(e) {
                    for (var t, r = 1, n = arguments.length; r < n; r++)
                        for (var i in t = arguments[r]) Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i]);
                    return e
                }).apply(this, arguments)
            };

            function s(e, t) {
                var r = {};
                for (var n in e) Object.prototype.hasOwnProperty.call(e, n) && 0 > t.indexOf(n) && (r[n] = e[n]);
                if (null != e && "function" == typeof Object.getOwnPropertySymbols)
                    for (var i = 0, n = Object.getOwnPropertySymbols(e); i < n.length; i++) 0 > t.indexOf(n[i]) && Object.prototype.propertyIsEnumerable.call(e, n[i]) && (r[n[i]] = e[n[i]]);
                return r
            }

            function a(e, t, r, n) {
                var i, o = arguments.length,
                    s = o < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, r) : n;
                if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, r, n);
                else
                    for (var a = e.length - 1; a >= 0; a--)(i = e[a]) && (s = (o < 3 ? i(s) : o > 3 ? i(t, r, s) : i(t, r)) || s);
                return o > 3 && s && Object.defineProperty(t, r, s), s
            }

            function c(e, t) {
                return function(r, n) {
                    t(r, n, e)
                }
            }

            function u(e, t) {
                if ("object" == typeof Reflect && "function" == typeof Reflect.metadata) return Reflect.metadata(e, t)
            }

            function l(e, t, r, n) {
                return new(r || (r = Promise))(function(i, o) {
                    function s(e) {
                        try {
                            c(n.next(e))
                        } catch (e) {
                            o(e)
                        }
                    }

                    function a(e) {
                        try {
                            c(n.throw(e))
                        } catch (e) {
                            o(e)
                        }
                    }

                    function c(e) {
                        var t;
                        e.done ? i(e.value) : ((t = e.value) instanceof r ? t : new r(function(e) {
                            e(t)
                        })).then(s, a)
                    }
                    c((n = n.apply(e, t || [])).next())
                })
            }

            function d(e, t) {
                var r, n, i, o, s = {
                    label: 0,
                    sent: function() {
                        if (1 & i[0]) throw i[1];
                        return i[1]
                    },
                    trys: [],
                    ops: []
                };
                return o = {
                    next: a(0),
                    throw: a(1),
                    return: a(2)
                }, "function" == typeof Symbol && (o[Symbol.iterator] = function() {
                    return this
                }), o;

                function a(o) {
                    return function(a) {
                        return function(o) {
                            if (r) throw TypeError("Generator is already executing.");
                            for (; s;) try {
                                if (r = 1, n && (i = 2 & o[0] ? n.return : o[0] ? n.throw || ((i = n.return) && i.call(n), 0) : n.next) && !(i = i.call(n, o[1])).done) return i;
                                switch (n = 0, i && (o = [2 & o[0], i.value]), o[0]) {
                                    case 0:
                                    case 1:
                                        i = o;
                                        break;
                                    case 4:
                                        return s.label++, {
                                            value: o[1],
                                            done: !1
                                        };
                                    case 5:
                                        s.label++, n = o[1], o = [0];
                                        continue;
                                    case 7:
                                        o = s.ops.pop(), s.trys.pop();
                                        continue;
                                    default:
                                        if (!(i = (i = s.trys).length > 0 && i[i.length - 1]) && (6 === o[0] || 2 === o[0])) {
                                            s = 0;
                                            continue
                                        }
                                        if (3 === o[0] && (!i || o[1] > i[0] && o[1] < i[3])) {
                                            s.label = o[1];
                                            break
                                        }
                                        if (6 === o[0] && s.label < i[1]) {
                                            s.label = i[1], i = o;
                                            break
                                        }
                                        if (i && s.label < i[2]) {
                                            s.label = i[2], s.ops.push(o);
                                            break
                                        }
                                        i[2] && s.ops.pop(), s.trys.pop();
                                        continue
                                }
                                o = t.call(e, s)
                            } catch (e) {
                                o = [6, e], n = 0
                            } finally {
                                r = i = 0
                            }
                            if (5 & o[0]) throw o[1];
                            return {
                                value: o[0] ? o[1] : void 0,
                                done: !0
                            }
                        }([o, a])
                    }
                }
            }

            function h(e, t, r, n) {
                void 0 === n && (n = r), e[n] = t[r]
            }

            function f(e, t) {
                for (var r in e) "default" === r || t.hasOwnProperty(r) || (t[r] = e[r])
            }

            function p(e) {
                var t = "function" == typeof Symbol && Symbol.iterator,
                    r = t && e[t],
                    n = 0;
                if (r) return r.call(e);
                if (e && "number" == typeof e.length) return {
                    next: function() {
                        return e && n >= e.length && (e = void 0), {
                            value: e && e[n++],
                            done: !e
                        }
                    }
                };
                throw TypeError(t ? "Object is not iterable." : "Symbol.iterator is not defined.")
            }

            function g(e, t) {
                var r = "function" == typeof Symbol && e[Symbol.iterator];
                if (!r) return e;
                var n, i, o = r.call(e),
                    s = [];
                try {
                    for (;
                        (void 0 === t || t-- > 0) && !(n = o.next()).done;) s.push(n.value)
                } catch (e) {
                    i = {
                        error: e
                    }
                } finally {
                    try {
                        n && !n.done && (r = o.return) && r.call(o)
                    } finally {
                        if (i) throw i.error
                    }
                }
                return s
            }

            function m() {
                for (var e = [], t = 0; t < arguments.length; t++) e = e.concat(g(arguments[t]));
                return e
            }

            function b() {
                for (var e = 0, t = 0, r = arguments.length; t < r; t++) e += arguments[t].length;
                for (var n = Array(e), i = 0, t = 0; t < r; t++)
                    for (var o = arguments[t], s = 0, a = o.length; s < a; s++, i++) n[i] = o[s];
                return n
            }

            function y(e) {
                return this instanceof y ? (this.v = e, this) : new y(e)
            }

            function v(e, t, r) {
                if (!Symbol.asyncIterator) throw TypeError("Symbol.asyncIterator is not defined.");
                var n, i = r.apply(e, t || []),
                    o = [];
                return n = {}, s("next"), s("throw"), s("return"), n[Symbol.asyncIterator] = function() {
                    return this
                }, n;

                function s(e) {
                    i[e] && (n[e] = function(t) {
                        return new Promise(function(r, n) {
                            o.push([e, t, r, n]) > 1 || a(e, t)
                        })
                    })
                }

                function a(e, t) {
                    try {
                        var r;
                        (r = i[e](t)).value instanceof y ? Promise.resolve(r.value.v).then(c, u) : l(o[0][2], r)
                    } catch (e) {
                        l(o[0][3], e)
                    }
                }

                function c(e) {
                    a("next", e)
                }

                function u(e) {
                    a("throw", e)
                }

                function l(e, t) {
                    e(t), o.shift(), o.length && a(o[0][0], o[0][1])
                }
            }

            function w(e) {
                var t, r;
                return t = {}, n("next"), n("throw", function(e) {
                    throw e
                }), n("return"), t[Symbol.iterator] = function() {
                    return this
                }, t;

                function n(n, i) {
                    t[n] = e[n] ? function(t) {
                        return (r = !r) ? {
                            value: y(e[n](t)),
                            done: "return" === n
                        } : i ? i(t) : t
                    } : i
                }
            }

            function E(e) {
                if (!Symbol.asyncIterator) throw TypeError("Symbol.asyncIterator is not defined.");
                var t, r = e[Symbol.asyncIterator];
                return r ? r.call(e) : (e = p(e), t = {}, n("next"), n("throw"), n("return"), t[Symbol.asyncIterator] = function() {
                    return this
                }, t);

                function n(r) {
                    t[r] = e[r] && function(t) {
                        return new Promise(function(n, i) {
                            ! function(e, t, r, n) {
                                Promise.resolve(n).then(function(t) {
                                    e({
                                        value: t,
                                        done: r
                                    })
                                }, t)
                            }(n, i, (t = e[r](t)).done, t.value)
                        })
                    }
                }
            }

            function _(e, t) {
                return Object.defineProperty ? Object.defineProperty(e, "raw", {
                    value: t
                }) : e.raw = t, e
            }

            function P(e) {
                if (e && e.__esModule) return e;
                var t = {};
                if (null != e)
                    for (var r in e) Object.hasOwnProperty.call(e, r) && (t[r] = e[r]);
                return t.default = e, t
            }

            function x(e) {
                return e && e.__esModule ? e : {
                    default: e
                }
            }

            function I(e, t) {
                if (!t.has(e)) throw TypeError("attempted to get private field on non-instance");
                return t.get(e)
            }

            function O(e, t, r) {
                if (!t.has(e)) throw TypeError("attempted to set private field on non-instance");
                return t.set(e, r), r
            }
        },
        22841: () => {},
        49152: () => {},
        63893: (e, t, r) => {
            "use strict";
            r.d(t, {
                D: () => o,
                u: () => s
            });
            let n = e => JSON.stringify(e, (e, t) => "bigint" == typeof t ? t.toString() + "n" : t),
                i = e => JSON.parse(e.replace(/([\[:])?(\d{17,}|(?:[9](?:[1-9]07199254740991|0[1-9]7199254740991|00[8-9]199254740991|007[2-9]99254740991|007199[3-9]54740991|0071992[6-9]4740991|00719925[5-9]740991|007199254[8-9]40991|0071992547[5-9]0991|00719925474[1-9]991|00719925474099[2-9])))([,\}\]])/g, '$1"$2n"$3'), (e, t) => "string" == typeof t && t.match(/^\d+n$/) ? BigInt(t.substring(0, t.length - 1)) : t);

            function o(e) {
                if ("string" != typeof e) throw Error(`Cannot safe json parse value of type ${typeof e}`);
                try {
                    return i(e)
                } catch (t) {
                    return e
                }
            }

            function s(e) {
                return "string" == typeof e ? e : n(e) || ""
            }
        },
        16481: (e, t, r) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            });
            let n = r(31209);
            n.__exportStar(r(1786), t), n.__exportStar(r(71609), t)
        },
        1786: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.ONE_THOUSAND = t.ONE_HUNDRED = void 0, t.ONE_HUNDRED = 100, t.ONE_THOUSAND = 1e3
        },
        71609: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.ONE_YEAR = t.FOUR_WEEKS = t.THREE_WEEKS = t.TWO_WEEKS = t.ONE_WEEK = t.THIRTY_DAYS = t.SEVEN_DAYS = t.FIVE_DAYS = t.THREE_DAYS = t.ONE_DAY = t.TWENTY_FOUR_HOURS = t.TWELVE_HOURS = t.SIX_HOURS = t.THREE_HOURS = t.ONE_HOUR = t.SIXTY_MINUTES = t.THIRTY_MINUTES = t.TEN_MINUTES = t.FIVE_MINUTES = t.ONE_MINUTE = t.SIXTY_SECONDS = t.THIRTY_SECONDS = t.TEN_SECONDS = t.FIVE_SECONDS = t.ONE_SECOND = void 0, t.ONE_SECOND = 1, t.FIVE_SECONDS = 5, t.TEN_SECONDS = 10, t.THIRTY_SECONDS = 30, t.SIXTY_SECONDS = 60, t.ONE_MINUTE = t.SIXTY_SECONDS, t.FIVE_MINUTES = 5 * t.ONE_MINUTE, t.TEN_MINUTES = 10 * t.ONE_MINUTE, t.THIRTY_MINUTES = 30 * t.ONE_MINUTE, t.SIXTY_MINUTES = 60 * t.ONE_MINUTE, t.ONE_HOUR = t.SIXTY_MINUTES, t.THREE_HOURS = 3 * t.ONE_HOUR, t.SIX_HOURS = 6 * t.ONE_HOUR, t.TWELVE_HOURS = 12 * t.ONE_HOUR, t.TWENTY_FOUR_HOURS = 24 * t.ONE_HOUR, t.ONE_DAY = t.TWENTY_FOUR_HOURS, t.THREE_DAYS = 3 * t.ONE_DAY, t.FIVE_DAYS = 5 * t.ONE_DAY, t.SEVEN_DAYS = 7 * t.ONE_DAY, t.THIRTY_DAYS = 30 * t.ONE_DAY, t.ONE_WEEK = t.SEVEN_DAYS, t.TWO_WEEKS = 2 * t.ONE_WEEK, t.THREE_WEEKS = 3 * t.ONE_WEEK, t.FOUR_WEEKS = 4 * t.ONE_WEEK, t.ONE_YEAR = 365 * t.ONE_DAY
        },
        62057: (e, t, r) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            });
            let n = r(31209);
            n.__exportStar(r(71141), t), n.__exportStar(r(87932), t), n.__exportStar(r(29497), t), n.__exportStar(r(16481), t)
        },
        29497: (e, t, r) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), r(31209).__exportStar(r(63337), t)
        },
        63337: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.IWatch = void 0, t.IWatch = class {}
        },
        35941: (e, t, r) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.fromMiliseconds = t.toMiliseconds = void 0;
            let n = r(16481);
            t.toMiliseconds = function(e) {
                return e * n.ONE_THOUSAND
            }, t.fromMiliseconds = function(e) {
                return Math.floor(e / n.ONE_THOUSAND)
            }
        },
        7391: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.delay = void 0, t.delay = function(e) {
                return new Promise(t => {
                    setTimeout(() => {
                        t(!0)
                    }, e)
                })
            }
        },
        71141: (e, t, r) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            });
            let n = r(31209);
            n.__exportStar(r(7391), t), n.__exportStar(r(35941), t)
        },
        87932: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.Watch = void 0;
            let r = class {
                start(e) {
                    if (this.timestamps.has(e)) throw Error(`Watch already started for label: ${e}`);
                    this.timestamps.set(e, {
                        started: Date.now()
                    })
                }
                stop(e) {
                    let t = this.get(e);
                    if (void 0 !== t.elapsed) throw Error(`Watch already stopped for label: ${e}`);
                    let r = Date.now() - t.started;
                    this.timestamps.set(e, {
                        started: t.started,
                        elapsed: r
                    })
                }
                get(e) {
                    let t = this.timestamps.get(e);
                    if (void 0 === t) throw Error(`No timestamp found for label: ${e}`);
                    return t
                }
                elapsed(e) {
                    let t = this.get(e);
                    return t.elapsed || Date.now() - t.started
                }
                constructor() {
                    this.timestamps = new Map
                }
            };
            t.Watch = r, t.default = r
        },
        31209: (e, t, r) => {
            "use strict";
            r.r(t), r.d(t, {
                __assign: () => o,
                __asyncDelegator: () => w,
                __asyncGenerator: () => v,
                __asyncValues: () => E,
                __await: () => y,
                __awaiter: () => l,
                __classPrivateFieldGet: () => I,
                __classPrivateFieldSet: () => O,
                __createBinding: () => h,
                __decorate: () => a,
                __exportStar: () => f,
                __extends: () => i,
                __generator: () => d,
                __importDefault: () => x,
                __importStar: () => P,
                __makeTemplateObject: () => _,
                __metadata: () => u,
                __param: () => c,
                __read: () => g,
                __rest: () => s,
                __spread: () => m,
                __spreadArrays: () => b,
                __values: () => p
            });
            /*! *****************************************************************************
            Copyright (c) Microsoft Corporation.
            Permission to use, copy, modify, and/or distribute this software for any
            purpose with or without fee is hereby granted.
            THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
            REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
            AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
            INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
            LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
            OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
            PERFORMANCE OF THIS SOFTWARE.
            ***************************************************************************** */
            var n = function(e, t) {
                return (n = Object.setPrototypeOf || ({
                    __proto__: []
                }) instanceof Array && function(e, t) {
                    e.__proto__ = t
                } || function(e, t) {
                    for (var r in t) t.hasOwnProperty(r) && (e[r] = t[r])
                })(e, t)
            };

            function i(e, t) {
                function r() {
                    this.constructor = e
                }
                n(e, t), e.prototype = null === t ? Object.create(t) : (r.prototype = t.prototype, new r)
            }
            var o = function() {
                return (o = Object.assign || function(e) {
                    for (var t, r = 1, n = arguments.length; r < n; r++)
                        for (var i in t = arguments[r]) Object.prototype.hasOwnProperty.call(t, i) && (e[i] = t[i]);
                    return e
                }).apply(this, arguments)
            };

            function s(e, t) {
                var r = {};
                for (var n in e) Object.prototype.hasOwnProperty.call(e, n) && 0 > t.indexOf(n) && (r[n] = e[n]);
                if (null != e && "function" == typeof Object.getOwnPropertySymbols)
                    for (var i = 0, n = Object.getOwnPropertySymbols(e); i < n.length; i++) 0 > t.indexOf(n[i]) && Object.prototype.propertyIsEnumerable.call(e, n[i]) && (r[n[i]] = e[n[i]]);
                return r
            }

            function a(e, t, r, n) {
                var i, o = arguments.length,
                    s = o < 3 ? t : null === n ? n = Object.getOwnPropertyDescriptor(t, r) : n;
                if ("object" == typeof Reflect && "function" == typeof Reflect.decorate) s = Reflect.decorate(e, t, r, n);
                else
                    for (var a = e.length - 1; a >= 0; a--)(i = e[a]) && (s = (o < 3 ? i(s) : o > 3 ? i(t, r, s) : i(t, r)) || s);
                return o > 3 && s && Object.defineProperty(t, r, s), s
            }

            function c(e, t) {
                return function(r, n) {
                    t(r, n, e)
                }
            }

            function u(e, t) {
                if ("object" == typeof Reflect && "function" == typeof Reflect.metadata) return Reflect.metadata(e, t)
            }

            function l(e, t, r, n) {
                return new(r || (r = Promise))(function(i, o) {
                    function s(e) {
                        try {
                            c(n.next(e))
                        } catch (e) {
                            o(e)
                        }
                    }

                    function a(e) {
                        try {
                            c(n.throw(e))
                        } catch (e) {
                            o(e)
                        }
                    }

                    function c(e) {
                        var t;
                        e.done ? i(e.value) : ((t = e.value) instanceof r ? t : new r(function(e) {
                            e(t)
                        })).then(s, a)
                    }
                    c((n = n.apply(e, t || [])).next())
                })
            }

            function d(e, t) {
                var r, n, i, o, s = {
                    label: 0,
                    sent: function() {
                        if (1 & i[0]) throw i[1];
                        return i[1]
                    },
                    trys: [],
                    ops: []
                };
                return o = {
                    next: a(0),
                    throw: a(1),
                    return: a(2)
                }, "function" == typeof Symbol && (o[Symbol.iterator] = function() {
                    return this
                }), o;

                function a(o) {
                    return function(a) {
                        return function(o) {
                            if (r) throw TypeError("Generator is already executing.");
                            for (; s;) try {
                                if (r = 1, n && (i = 2 & o[0] ? n.return : o[0] ? n.throw || ((i = n.return) && i.call(n), 0) : n.next) && !(i = i.call(n, o[1])).done) return i;
                                switch (n = 0, i && (o = [2 & o[0], i.value]), o[0]) {
                                    case 0:
                                    case 1:
                                        i = o;
                                        break;
                                    case 4:
                                        return s.label++, {
                                            value: o[1],
                                            done: !1
                                        };
                                    case 5:
                                        s.label++, n = o[1], o = [0];
                                        continue;
                                    case 7:
                                        o = s.ops.pop(), s.trys.pop();
                                        continue;
                                    default:
                                        if (!(i = (i = s.trys).length > 0 && i[i.length - 1]) && (6 === o[0] || 2 === o[0])) {
                                            s = 0;
                                            continue
                                        }
                                        if (3 === o[0] && (!i || o[1] > i[0] && o[1] < i[3])) {
                                            s.label = o[1];
                                            break
                                        }
                                        if (6 === o[0] && s.label < i[1]) {
                                            s.label = i[1], i = o;
                                            break
                                        }
                                        if (i && s.label < i[2]) {
                                            s.label = i[2], s.ops.push(o);
                                            break
                                        }
                                        i[2] && s.ops.pop(), s.trys.pop();
                                        continue
                                }
                                o = t.call(e, s)
                            } catch (e) {
                                o = [6, e], n = 0
                            } finally {
                                r = i = 0
                            }
                            if (5 & o[0]) throw o[1];
                            return {
                                value: o[0] ? o[1] : void 0,
                                done: !0
                            }
                        }([o, a])
                    }
                }
            }

            function h(e, t, r, n) {
                void 0 === n && (n = r), e[n] = t[r]
            }

            function f(e, t) {
                for (var r in e) "default" === r || t.hasOwnProperty(r) || (t[r] = e[r])
            }

            function p(e) {
                var t = "function" == typeof Symbol && Symbol.iterator,
                    r = t && e[t],
                    n = 0;
                if (r) return r.call(e);
                if (e && "number" == typeof e.length) return {
                    next: function() {
                        return e && n >= e.length && (e = void 0), {
                            value: e && e[n++],
                            done: !e
                        }
                    }
                };
                throw TypeError(t ? "Object is not iterable." : "Symbol.iterator is not defined.")
            }

            function g(e, t) {
                var r = "function" == typeof Symbol && e[Symbol.iterator];
                if (!r) return e;
                var n, i, o = r.call(e),
                    s = [];
                try {
                    for (;
                        (void 0 === t || t-- > 0) && !(n = o.next()).done;) s.push(n.value)
                } catch (e) {
                    i = {
                        error: e
                    }
                } finally {
                    try {
                        n && !n.done && (r = o.return) && r.call(o)
                    } finally {
                        if (i) throw i.error
                    }
                }
                return s
            }

            function m() {
                for (var e = [], t = 0; t < arguments.length; t++) e = e.concat(g(arguments[t]));
                return e
            }

            function b() {
                for (var e = 0, t = 0, r = arguments.length; t < r; t++) e += arguments[t].length;
                for (var n = Array(e), i = 0, t = 0; t < r; t++)
                    for (var o = arguments[t], s = 0, a = o.length; s < a; s++, i++) n[i] = o[s];
                return n
            }

            function y(e) {
                return this instanceof y ? (this.v = e, this) : new y(e)
            }

            function v(e, t, r) {
                if (!Symbol.asyncIterator) throw TypeError("Symbol.asyncIterator is not defined.");
                var n, i = r.apply(e, t || []),
                    o = [];
                return n = {}, s("next"), s("throw"), s("return"), n[Symbol.asyncIterator] = function() {
                    return this
                }, n;

                function s(e) {
                    i[e] && (n[e] = function(t) {
                        return new Promise(function(r, n) {
                            o.push([e, t, r, n]) > 1 || a(e, t)
                        })
                    })
                }

                function a(e, t) {
                    try {
                        var r;
                        (r = i[e](t)).value instanceof y ? Promise.resolve(r.value.v).then(c, u) : l(o[0][2], r)
                    } catch (e) {
                        l(o[0][3], e)
                    }
                }

                function c(e) {
                    a("next", e)
                }

                function u(e) {
                    a("throw", e)
                }

                function l(e, t) {
                    e(t), o.shift(), o.length && a(o[0][0], o[0][1])
                }
            }

            function w(e) {
                var t, r;
                return t = {}, n("next"), n("throw", function(e) {
                    throw e
                }), n("return"), t[Symbol.iterator] = function() {
                    return this
                }, t;

                function n(n, i) {
                    t[n] = e[n] ? function(t) {
                        return (r = !r) ? {
                            value: y(e[n](t)),
                            done: "return" === n
                        } : i ? i(t) : t
                    } : i
                }
            }

            function E(e) {
                if (!Symbol.asyncIterator) throw TypeError("Symbol.asyncIterator is not defined.");
                var t, r = e[Symbol.asyncIterator];
                return r ? r.call(e) : (e = p(e), t = {}, n("next"), n("throw"), n("return"), t[Symbol.asyncIterator] = function() {
                    return this
                }, t);

                function n(r) {
                    t[r] = e[r] && function(t) {
                        return new Promise(function(n, i) {
                            ! function(e, t, r, n) {
                                Promise.resolve(n).then(function(t) {
                                    e({
                                        value: t,
                                        done: r
                                    })
                                }, t)
                            }(n, i, (t = e[r](t)).done, t.value)
                        })
                    }
                }
            }

            function _(e, t) {
                return Object.defineProperty ? Object.defineProperty(e, "raw", {
                    value: t
                }) : e.raw = t, e
            }

            function P(e) {
                if (e && e.__esModule) return e;
                var t = {};
                if (null != e)
                    for (var r in e) Object.hasOwnProperty.call(e, r) && (t[r] = e[r]);
                return t.default = e, t
            }

            function x(e) {
                return e && e.__esModule ? e : {
                    default: e
                }
            }

            function I(e, t) {
                if (!t.has(e)) throw TypeError("attempted to get private field on non-instance");
                return t.get(e)
            }

            function O(e, t, r) {
                if (!t.has(e)) throw TypeError("attempted to set private field on non-instance");
                return t.set(e, r), r
            }
        },
        62462: (e, t) => {
            "use strict";

            function r(e) {
                let t;
                return "undefined" != typeof window && void 0 !== window[e] && (t = window[e]), t
            }

            function n(e) {
                let t = r(e);
                if (!t) throw Error(`${e} is not defined in Window`);
                return t
            }
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.getLocalStorage = t.getLocalStorageOrThrow = t.getCrypto = t.getCryptoOrThrow = t.getLocation = t.getLocationOrThrow = t.getNavigator = t.getNavigatorOrThrow = t.getDocument = t.getDocumentOrThrow = t.getFromWindowOrThrow = t.getFromWindow = void 0, t.getFromWindow = r, t.getFromWindowOrThrow = n, t.getDocumentOrThrow = function() {
                return n("document")
            }, t.getDocument = function() {
                return r("document")
            }, t.getNavigatorOrThrow = function() {
                return n("navigator")
            }, t.getNavigator = function() {
                return r("navigator")
            }, t.getLocationOrThrow = function() {
                return n("location")
            }, t.getLocation = function() {
                return r("location")
            }, t.getCryptoOrThrow = function() {
                return n("crypto")
            }, t.getCrypto = function() {
                return r("crypto")
            }, t.getLocalStorageOrThrow = function() {
                return n("localStorage")
            }, t.getLocalStorage = function() {
                return r("localStorage")
            }
        },
        78201: (e, t, r) => {
            "use strict";
            t.D = void 0;
            let n = r(62462);
            t.D = function() {
                let e, t, r;
                try {
                    e = n.getDocumentOrThrow(), t = n.getLocationOrThrow()
                } catch (e) {
                    return null
                }

                function i(...t) {
                    let r = e.getElementsByTagName("meta");
                    for (let e = 0; e < r.length; e++) {
                        let n = r[e],
                            i = ["itemprop", "property", "name"].map(e => n.getAttribute(e)).filter(e => !!e && t.includes(e));
                        if (i.length && i) {
                            let e = n.getAttribute("content");
                            if (e) return e
                        }
                    }
                    return ""
                }
                let o = ((r = i("name", "og:site_name", "og:title", "twitter:title")) || (r = e.title), r),
                    s = i("description", "og:description", "twitter:description", "keywords");
                return {
                    description: s,
                    url: t.origin,
                    icons: function() {
                        let r = e.getElementsByTagName("link"),
                            n = [];
                        for (let e = 0; e < r.length; e++) {
                            let i = r[e],
                                o = i.getAttribute("rel");
                            if (o && o.toLowerCase().indexOf("icon") > -1) {
                                let e = i.getAttribute("href");
                                if (e) {
                                    if (-1 === e.toLowerCase().indexOf("https:") && -1 === e.toLowerCase().indexOf("http:") && 0 !== e.indexOf("//")) {
                                        let r = t.protocol + "//" + t.host;
                                        if (0 === e.indexOf("/")) r += e;
                                        else {
                                            let n = t.pathname.split("/");
                                            n.pop(), r += n.join("/") + "/" + e
                                        }
                                        n.push(r)
                                    } else if (0 === e.indexOf("//")) {
                                        let r = t.protocol + e;
                                        n.push(r)
                                    } else n.push(e)
                                }
                            }
                        }
                        return n
                    }(),
                    name: o
                }
            }
        },
        74067: (e, t, r) => {
            "use strict";
            r.r(t), r.d(t, {
                create: () => c,
                createStore: () => n.M,
                default: () => u,
                useStore: () => s
            });
            var n = r(10086),
                i = r(63505);
            let {
                useSyncExternalStoreWithSelector: o
            } = r(15746);

            function s(e, t = e.getState, r) {
                let n = o(e.subscribe, e.getState, e.getServerState || e.getState, t, r);
                return (0, i.useDebugValue)(n), n
            }
            let a = e => {
                    let t = "function" == typeof e ? (0, n.M)(e) : e,
                        r = (e, r) => s(t, e, r);
                    return Object.assign(r, t), r
                },
                c = e => e ? a(e) : a;
            var u = e => c(e)
        },
        79900: (e, t, r) => {
            "use strict";
            r.r(t), r.d(t, {
                createWithEqualityFn: () => u,
                useStoreWithEqualityFn: () => a
            });
            var n = r(63505),
                i = r(15746),
                o = r(10086);
            let {
                useSyncExternalStoreWithSelector: s
            } = i;

            function a(e, t = e.getState, r) {
                let i = s(e.subscribe, e.getState, e.getServerState || e.getState, t, r);
                return (0, n.useDebugValue)(i), i
            }
            let c = (e, t) => {
                    let r = (0, o.M)(e),
                        n = (e, n = t) => a(r, e, n);
                    return Object.assign(n, r), n
                },
                u = (e, t) => e ? c(e, t) : c
        },
        96165: (e, t, r) => {
            "use strict";
            r.r(t), r.d(t, {
                create: () => u,
                createStore: () => i,
                default: () => l,
                useStore: () => a
            });
            let n = e => {
                    let t;
                    let r = new Set,
                        n = (e, n) => {
                            let i = "function" == typeof e ? e(t) : e;
                            if (!Object.is(i, t)) {
                                let e = t;
                                t = (null != n ? n : "object" != typeof i) ? i : Object.assign({}, t, i), r.forEach(r => r(t, e))
                            }
                        },
                        i = () => t,
                        o = {
                            setState: n,
                            getState: i,
                            subscribe: e => (r.add(e), () => r.delete(e)),
                            destroy: () => {
                                console.warn("[DEPRECATED] The `destroy` method will be unsupported in a future version. Instead use unsubscribe function returned by subscribe. Everything will be garbage-collected if store is garbage-collected."), r.clear()
                            }
                        };
                    return t = e(n, i, o), o
                },
                i = e => e ? n(e) : n;
            var o = r(63505);
            let {
                useSyncExternalStoreWithSelector: s
            } = r(15746);

            function a(e, t = e.getState, r) {
                let n = s(e.subscribe, e.getState, e.getServerState || e.getState, t, r);
                return (0, o.useDebugValue)(n), n
            }
            let c = e => {
                    let t = "function" == typeof e ? i(e) : e,
                        r = (e, r) => a(t, e, r);
                    return Object.assign(r, t), r
                },
                u = e => e ? c(e) : c;
            var l = e => u(e)
        },
        56015: (e, t, r) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.createCurve = t.getHash = void 0; /*!noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com)*/
            let n = r(13705),
                i = r(99548),
                o = r(45769);

            function s(e) {
                return {
                    hash: e,
                    hmac: (t, ...r) => (0, n.hmac)(e, t, (0, i.concatBytes)(...r)),
                    randomBytes: i.randomBytes
                }
            }
            t.getHash = s, t.createCurve = function(e, t) {
                let r = t => (0, o.weierstrass)({ ...e,
                    ...s(t)
                });
                return Object.freeze({ ...r(t),
                    create: r
                })
            }
        },
        95262: (e, t, r) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.validateBasic = t.wNAF = void 0; /*!noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com)*/
            let n = r(58813),
                i = r(27341),
                o = BigInt(0),
                s = BigInt(1);
            t.wNAF = function(e, t) {
                let r = (e, t) => {
                        let r = t.negate();
                        return e ? r : t
                    },
                    n = e => ({
                        windows: Math.ceil(t / e) + 1,
                        windowSize: 2 ** (e - 1)
                    });
                return {
                    constTimeNegate: r,
                    unsafeLadder(t, r) {
                        let n = e.ZERO,
                            i = t;
                        for (; r > o;) r & s && (n = n.add(i)), i = i.double(), r >>= s;
                        return n
                    },
                    precomputeWindow(e, t) {
                        let {
                            windows: r,
                            windowSize: i
                        } = n(t), o = [], s = e, a = s;
                        for (let e = 0; e < r; e++) {
                            a = s, o.push(a);
                            for (let e = 1; e < i; e++) a = a.add(s), o.push(a);
                            s = a.double()
                        }
                        return o
                    },
                    wNAF(t, i, o) {
                        let {
                            windows: a,
                            windowSize: c
                        } = n(t), u = e.ZERO, l = e.BASE, d = BigInt(2 ** t - 1), h = 2 ** t, f = BigInt(t);
                        for (let e = 0; e < a; e++) {
                            let t = e * c,
                                n = Number(o & d);
                            o >>= f, n > c && (n -= h, o += s);
                            let a = t + Math.abs(n) - 1,
                                p = e % 2 != 0,
                                g = n < 0;
                            0 === n ? l = l.add(r(p, i[t])) : u = u.add(r(g, i[a]))
                        }
                        return {
                            p: u,
                            f: l
                        }
                    },
                    wNAFCached(e, t, r, n) {
                        let i = e._WINDOW_SIZE || 1,
                            o = t.get(e);
                        return o || (o = this.precomputeWindow(e, i), 1 !== i && t.set(e, n(o))), this.wNAF(i, o, r)
                    }
                }
            }, t.validateBasic = function(e) {
                return (0, n.validateField)(e.Fp), (0, i.validateObject)(e, {
                    n: "bigint",
                    h: "bigint",
                    Gx: "field",
                    Gy: "field"
                }, {
                    nBitLength: "isSafeInteger",
                    nByteLength: "isSafeInteger"
                }), Object.freeze({ ...(0, n.nLength)(e.n, e.nBitLength),
                    ...e,
                    p: e.Fp.ORDER
                })
            }
        },
        96707: (e, t, r) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.createHasher = t.isogenyMap = t.hash_to_field = t.expand_message_xof = t.expand_message_xmd = void 0;
            let n = r(58813),
                i = r(27341),
                o = i.bytesToNumberBE;

            function s(e, t) {
                if (e < 0 || e >= 1 << 8 * t) throw Error(`bad I2OSP call: value=${e} length=${t}`);
                let r = Array.from({
                    length: t
                }).fill(0);
                for (let n = t - 1; n >= 0; n--) r[n] = 255 & e, e >>>= 8;
                return new Uint8Array(r)
            }

            function a(e) {
                if (!(e instanceof Uint8Array)) throw Error("Uint8Array expected")
            }

            function c(e) {
                if (!Number.isSafeInteger(e)) throw Error("number expected")
            }

            function u(e, t, r, n) {
                a(e), a(t), c(r), t.length > 255 && (t = n((0, i.concatBytes)((0, i.utf8ToBytes)("H2C-OVERSIZE-DST-"), t)));
                let {
                    outputLen: o,
                    blockLen: u
                } = n, l = Math.ceil(r / o);
                if (l > 255) throw Error("Invalid xmd length");
                let d = (0, i.concatBytes)(t, s(t.length, 1)),
                    h = s(0, u),
                    f = s(r, 2),
                    p = Array(l),
                    g = n((0, i.concatBytes)(h, e, f, s(0, 1), d));
                p[0] = n((0, i.concatBytes)(g, s(1, 1), d));
                for (let e = 1; e <= l; e++) {
                    let t = [function(e, t) {
                        let r = new Uint8Array(e.length);
                        for (let n = 0; n < e.length; n++) r[n] = e[n] ^ t[n];
                        return r
                    }(g, p[e - 1]), s(e + 1, 1), d];
                    p[e] = n((0, i.concatBytes)(...t))
                }
                return (0, i.concatBytes)(...p).slice(0, r)
            }

            function l(e, t, r, n, o) {
                if (a(e), a(t), c(r), t.length > 255 && (t = o.create({
                        dkLen: Math.ceil(2 * n / 8)
                    }).update((0, i.utf8ToBytes)("H2C-OVERSIZE-DST-")).update(t).digest()), r > 65535 || t.length > 255) throw Error("expand_message_xof: invalid lenInBytes");
                return o.create({
                    dkLen: r
                }).update(e).update(s(r, 2)).update(t).update(s(t.length, 1)).digest()
            }

            function d(e, t, r) {
                let s;
                (0, i.validateObject)(r, {
                    DST: "stringOrUint8Array",
                    p: "bigint",
                    m: "isSafeInteger",
                    k: "isSafeInteger",
                    hash: "hash"
                });
                let {
                    p: d,
                    k: h,
                    m: f,
                    hash: p,
                    expand: g,
                    DST: m
                } = r;
                a(e), c(t);
                let b = function(e) {
                        if (e instanceof Uint8Array) return e;
                        if ("string" == typeof e) return (0, i.utf8ToBytes)(e);
                        throw Error("DST must be Uint8Array or string")
                    }(m),
                    y = Math.ceil((d.toString(2).length + h) / 8),
                    v = t * f * y;
                if ("xmd" === g) s = u(e, b, v, p);
                else if ("xof" === g) s = l(e, b, v, h, p);
                else if ("_internal_pass" === g) s = e;
                else throw Error('expand must be "xmd" or "xof"');
                let w = Array(t);
                for (let e = 0; e < t; e++) {
                    let t = Array(f);
                    for (let r = 0; r < f; r++) {
                        let i = y * (r + e * f),
                            a = s.subarray(i, i + y);
                        t[r] = (0, n.mod)(o(a), d)
                    }
                    w[e] = t
                }
                return w
            }
            t.expand_message_xmd = u, t.expand_message_xof = l, t.hash_to_field = d, t.isogenyMap = function(e, t) {
                let r = t.map(e => Array.from(e).reverse());
                return (t, n) => {
                    let [i, o, s, a] = r.map(r => r.reduce((r, n) => e.add(e.mul(r, t), n)));
                    return t = e.div(i, o), n = e.mul(n, e.div(s, a)), {
                        x: t,
                        y: n
                    }
                }
            }, t.createHasher = function(e, t, r) {
                if ("function" != typeof t) throw Error("mapToCurve() must be defined");
                return {
                    hashToCurve(n, i) {
                        let o = d(n, 2, { ...r,
                                DST: r.DST,
                                ...i
                            }),
                            s = e.fromAffine(t(o[0])),
                            a = e.fromAffine(t(o[1])),
                            c = s.add(a).clearCofactor();
                        return c.assertValidity(), c
                    },
                    encodeToCurve(n, i) {
                        let o = d(n, 1, { ...r,
                                DST: r.encodeDST,
                                ...i
                            }),
                            s = e.fromAffine(t(o[0])).clearCofactor();
                        return s.assertValidity(), s
                    }
                }
            }
        },
        58813: (e, t, r) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.mapHashToField = t.getMinHashLength = t.getFieldBytesLength = t.hashToPrivateScalar = t.FpSqrtEven = t.FpSqrtOdd = t.Field = t.nLength = t.FpIsSquare = t.FpDiv = t.FpInvertBatch = t.FpPow = t.validateField = t.isNegativeLE = t.FpSqrt = t.tonelliShanks = t.invert = t.pow2 = t.pow = t.mod = void 0; /*!noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com)*/
            let n = r(27341),
                i = BigInt(0),
                o = BigInt(1),
                s = BigInt(2),
                a = BigInt(3),
                c = BigInt(4),
                u = BigInt(5),
                l = BigInt(8);

            function d(e, t) {
                let r = e % t;
                return r >= i ? r : t + r
            }

            function h(e, t, r) {
                if (r <= i || t < i) throw Error("Expected power/modulo > 0");
                if (r === o) return i;
                let n = o;
                for (; t > i;) t & o && (n = n * e % r), e = e * e % r, t >>= o;
                return n
            }

            function f(e, t) {
                if (e === i || t <= i) throw Error(`invert: expected positive integers, got n=${e} mod=${t}`);
                let r = d(e, t),
                    n = t,
                    s = i,
                    a = o,
                    c = o,
                    u = i;
                for (; r !== i;) {
                    let e = n / r,
                        t = n % r,
                        i = s - c * e,
                        o = a - u * e;
                    n = r, r = t, s = c, a = u, c = i, u = o
                }
                if (n !== o) throw Error("invert: does not exist");
                return d(s, t)
            }

            function p(e) {
                let t, r, n;
                let a = (e - o) / s;
                for (t = e - o, r = 0; t % s === i; t /= s, r++);
                for (n = s; n < e && h(n, a, e) !== e - o; n++);
                if (1 === r) {
                    let t = (e + o) / c;
                    return function(e, r) {
                        let n = e.pow(r, t);
                        if (!e.eql(e.sqr(n), r)) throw Error("Cannot find square root");
                        return n
                    }
                }
                let u = (t + o) / s;
                return function(e, i) {
                    if (e.pow(i, a) === e.neg(e.ONE)) throw Error("Cannot find square root");
                    let s = r,
                        c = e.pow(e.mul(e.ONE, n), t),
                        l = e.pow(i, u),
                        d = e.pow(i, t);
                    for (; !e.eql(d, e.ONE);) {
                        if (e.eql(d, e.ZERO)) return e.ZERO;
                        let t = 1;
                        for (let r = e.sqr(d); t < s && !e.eql(r, e.ONE); t++) r = e.sqr(r);
                        let r = e.pow(c, o << BigInt(s - t - 1));
                        c = e.sqr(r), l = e.mul(l, r), d = e.mul(d, c), s = t
                    }
                    return l
                }
            }

            function g(e) {
                if (e % c === a) {
                    let t = (e + o) / c;
                    return function(e, r) {
                        let n = e.pow(r, t);
                        if (!e.eql(e.sqr(n), r)) throw Error("Cannot find square root");
                        return n
                    }
                }
                if (e % l === u) {
                    let t = (e - u) / l;
                    return function(e, r) {
                        let n = e.mul(r, s),
                            i = e.pow(n, t),
                            o = e.mul(r, i),
                            a = e.mul(e.mul(o, s), i),
                            c = e.mul(o, e.sub(a, e.ONE));
                        if (!e.eql(e.sqr(c), r)) throw Error("Cannot find square root");
                        return c
                    }
                }
                return p(e)
            }
            BigInt(9), BigInt(16), t.mod = d, t.pow = h, t.pow2 = function(e, t, r) {
                let n = e;
                for (; t-- > i;) n *= n, n %= r;
                return n
            }, t.invert = f, t.tonelliShanks = p, t.FpSqrt = g, t.isNegativeLE = (e, t) => (d(e, t) & o) === o;
            let m = ["create", "isValid", "is0", "neg", "inv", "sqrt", "sqr", "eql", "add", "sub", "mul", "pow", "div", "addN", "subN", "mulN", "sqrN"];

            function b(e, t, r) {
                if (r < i) throw Error("Expected power > 0");
                if (r === i) return e.ONE;
                if (r === o) return t;
                let n = e.ONE,
                    s = t;
                for (; r > i;) r & o && (n = e.mul(n, s)), s = e.sqr(s), r >>= o;
                return n
            }

            function y(e, t) {
                let r = Array(t.length),
                    n = t.reduce((t, n, i) => e.is0(n) ? t : (r[i] = t, e.mul(t, n)), e.ONE),
                    i = e.inv(n);
                return t.reduceRight((t, n, i) => e.is0(n) ? t : (r[i] = e.mul(t, r[i]), e.mul(t, n)), i), r
            }

            function v(e, t) {
                let r = void 0 !== t ? t : e.toString(2).length;
                return {
                    nBitLength: r,
                    nByteLength: Math.ceil(r / 8)
                }
            }

            function w(e) {
                if ("bigint" != typeof e) throw Error("field order must be bigint");
                return Math.ceil(e.toString(2).length / 8)
            }

            function E(e) {
                let t = w(e);
                return t + Math.ceil(t / 2)
            }
            t.validateField = function(e) {
                let t = m.reduce((e, t) => (e[t] = "function", e), {
                    ORDER: "bigint",
                    MASK: "bigint",
                    BYTES: "isSafeInteger",
                    BITS: "isSafeInteger"
                });
                return (0, n.validateObject)(e, t)
            }, t.FpPow = b, t.FpInvertBatch = y, t.FpDiv = function(e, t, r) {
                return e.mul(t, "bigint" == typeof r ? f(r, e.ORDER) : e.inv(r))
            }, t.FpIsSquare = function(e) {
                let t = (e.ORDER - o) / s;
                return r => {
                    let n = e.pow(r, t);
                    return e.eql(n, e.ZERO) || e.eql(n, e.ONE)
                }
            }, t.nLength = v, t.Field = function(e, t, r = !1, s = {}) {
                if (e <= i) throw Error(`Expected Field ORDER > 0, got ${e}`);
                let {
                    nBitLength: a,
                    nByteLength: c
                } = v(e, t);
                if (c > 2048) throw Error("Field lengths over 2048 bytes are not supported");
                let u = g(e),
                    l = Object.freeze({
                        ORDER: e,
                        BITS: a,
                        BYTES: c,
                        MASK: (0, n.bitMask)(a),
                        ZERO: i,
                        ONE: o,
                        create: t => d(t, e),
                        isValid: t => {
                            if ("bigint" != typeof t) throw Error(`Invalid field element: expected bigint, got ${typeof t}`);
                            return i <= t && t < e
                        },
                        is0: e => e === i,
                        isOdd: e => (e & o) === o,
                        neg: t => d(-t, e),
                        eql: (e, t) => e === t,
                        sqr: t => d(t * t, e),
                        add: (t, r) => d(t + r, e),
                        sub: (t, r) => d(t - r, e),
                        mul: (t, r) => d(t * r, e),
                        pow: (e, t) => b(l, e, t),
                        div: (t, r) => d(t * f(r, e), e),
                        sqrN: e => e * e,
                        addN: (e, t) => e + t,
                        subN: (e, t) => e - t,
                        mulN: (e, t) => e * t,
                        inv: t => f(t, e),
                        sqrt: s.sqrt || (e => u(l, e)),
                        invertBatch: e => y(l, e),
                        cmov: (e, t, r) => r ? t : e,
                        toBytes: e => r ? (0, n.numberToBytesLE)(e, c) : (0, n.numberToBytesBE)(e, c),
                        fromBytes: e => {
                            if (e.length !== c) throw Error(`Fp.fromBytes: expected ${c}, got ${e.length}`);
                            return r ? (0, n.bytesToNumberLE)(e) : (0, n.bytesToNumberBE)(e)
                        }
                    });
                return Object.freeze(l)
            }, t.FpSqrtOdd = function(e, t) {
                if (!e.isOdd) throw Error("Field doesn't have isOdd");
                let r = e.sqrt(t);
                return e.isOdd(r) ? r : e.neg(r)
            }, t.FpSqrtEven = function(e, t) {
                if (!e.isOdd) throw Error("Field doesn't have isOdd");
                let r = e.sqrt(t);
                return e.isOdd(r) ? e.neg(r) : r
            }, t.hashToPrivateScalar = function(e, t, r = !1) {
                let i = (e = (0, n.ensureBytes)("privateHash", e)).length,
                    s = v(t).nByteLength + 8;
                if (s < 24 || i < s || i > 1024) throw Error(`hashToPrivateScalar: expected ${s}-1024 bytes of input, got ${i}`);
                return d(r ? (0, n.bytesToNumberLE)(e) : (0, n.bytesToNumberBE)(e), t - o) + o
            }, t.getFieldBytesLength = w, t.getMinHashLength = E, t.mapHashToField = function(e, t, r = !1) {
                let i = e.length,
                    s = w(t),
                    a = E(t);
                if (i < 16 || i < a || i > 1024) throw Error(`expected ${a}-1024 bytes of input, got ${i}`);
                let c = d(r ? (0, n.bytesToNumberBE)(e) : (0, n.bytesToNumberLE)(e), t - o) + o;
                return r ? (0, n.numberToBytesLE)(c, s) : (0, n.numberToBytesBE)(c, s)
            }
        },
        27341: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.validateObject = t.createHmacDrbg = t.bitMask = t.bitSet = t.bitGet = t.bitLen = t.utf8ToBytes = t.equalBytes = t.concatBytes = t.ensureBytes = t.numberToVarBytesBE = t.numberToBytesLE = t.numberToBytesBE = t.bytesToNumberLE = t.bytesToNumberBE = t.hexToBytes = t.hexToNumber = t.numberToHexUnpadded = t.bytesToHex = void 0; /*!noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com)*/
            let r = BigInt(0),
                n = BigInt(1),
                i = BigInt(2),
                o = e => e instanceof Uint8Array,
                s = Array.from({
                    length: 256
                }, (e, t) => t.toString(16).padStart(2, "0"));

            function a(e) {
                if (!o(e)) throw Error("Uint8Array expected");
                let t = "";
                for (let r = 0; r < e.length; r++) t += s[e[r]];
                return t
            }

            function c(e) {
                let t = e.toString(16);
                return 1 & t.length ? `0${t}` : t
            }

            function u(e) {
                if ("string" != typeof e) throw Error("hex string expected, got " + typeof e);
                return BigInt("" === e ? "0" : `0x${e}`)
            }

            function l(e) {
                if ("string" != typeof e) throw Error("hex string expected, got " + typeof e);
                let t = e.length;
                if (t % 2) throw Error("padded hex string expected, got unpadded hex of length " + t);
                let r = new Uint8Array(t / 2);
                for (let t = 0; t < r.length; t++) {
                    let n = 2 * t,
                        i = Number.parseInt(e.slice(n, n + 2), 16);
                    if (Number.isNaN(i) || i < 0) throw Error("Invalid byte sequence");
                    r[t] = i
                }
                return r
            }

            function d(e, t) {
                return l(e.toString(16).padStart(2 * t, "0"))
            }

            function h(...e) {
                let t = new Uint8Array(e.reduce((e, t) => e + t.length, 0)),
                    r = 0;
                return e.forEach(e => {
                    if (!o(e)) throw Error("Uint8Array expected");
                    t.set(e, r), r += e.length
                }), t
            }
            t.bytesToHex = a, t.numberToHexUnpadded = c, t.hexToNumber = u, t.hexToBytes = l, t.bytesToNumberBE = function(e) {
                return u(a(e))
            }, t.bytesToNumberLE = function(e) {
                if (!o(e)) throw Error("Uint8Array expected");
                return u(a(Uint8Array.from(e).reverse()))
            }, t.numberToBytesBE = d, t.numberToBytesLE = function(e, t) {
                return d(e, t).reverse()
            }, t.numberToVarBytesBE = function(e) {
                return l(c(e))
            }, t.ensureBytes = function(e, t, r) {
                let n;
                if ("string" == typeof t) try {
                        n = l(t)
                    } catch (r) {
                        throw Error(`${e} must be valid hex string, got "${t}". Cause: ${r}`)
                    } else if (o(t)) n = Uint8Array.from(t);
                    else throw Error(`${e} must be hex string or Uint8Array`);
                let i = n.length;
                if ("number" == typeof r && i !== r) throw Error(`${e} expected ${r} bytes, got ${i}`);
                return n
            }, t.concatBytes = h, t.equalBytes = function(e, t) {
                if (e.length !== t.length) return !1;
                for (let r = 0; r < e.length; r++)
                    if (e[r] !== t[r]) return !1;
                return !0
            }, t.utf8ToBytes = function(e) {
                if ("string" != typeof e) throw Error(`utf8ToBytes expected string, got ${typeof e}`);
                return new Uint8Array(new TextEncoder().encode(e))
            }, t.bitLen = function(e) {
                let t;
                for (t = 0; e > r; e >>= n, t += 1);
                return t
            }, t.bitGet = function(e, t) {
                return e >> BigInt(t) & n
            }, t.bitSet = (e, t, i) => e | (i ? n : r) << BigInt(t), t.bitMask = e => (i << BigInt(e - 1)) - n;
            let f = e => new Uint8Array(e),
                p = e => Uint8Array.from(e);
            t.createHmacDrbg = function(e, t, r) {
                if ("number" != typeof e || e < 2) throw Error("hashLen must be a number");
                if ("number" != typeof t || t < 2) throw Error("qByteLen must be a number");
                if ("function" != typeof r) throw Error("hmacFn must be a function");
                let n = f(e),
                    i = f(e),
                    o = 0,
                    s = () => {
                        n.fill(1), i.fill(0), o = 0
                    },
                    a = (...e) => r(i, n, ...e),
                    c = (e = f()) => {
                        i = a(p([0]), e), n = a(), 0 !== e.length && (i = a(p([1]), e), n = a())
                    },
                    u = () => {
                        if (o++ >= 1e3) throw Error("drbg: tried 1000 values");
                        let e = 0,
                            r = [];
                        for (; e < t;) {
                            let t = (n = a()).slice();
                            r.push(t), e += n.length
                        }
                        return h(...r)
                    };
                return (e, t) => {
                    let r;
                    for (s(), c(e); !(r = t(u()));) c();
                    return s(), r
                }
            };
            let g = {
                bigint: e => "bigint" == typeof e,
                function: e => "function" == typeof e,
                boolean: e => "boolean" == typeof e,
                string: e => "string" == typeof e,
                stringOrUint8Array: e => "string" == typeof e || e instanceof Uint8Array,
                isSafeInteger: e => Number.isSafeInteger(e),
                array: e => Array.isArray(e),
                field: (e, t) => t.Fp.isValid(e),
                hash: e => "function" == typeof e && Number.isSafeInteger(e.outputLen)
            };
            t.validateObject = function(e, t, r = {}) {
                let n = (t, r, n) => {
                    let i = g[r];
                    if ("function" != typeof i) throw Error(`Invalid validator "${r}", expected function`);
                    let o = e[t];
                    if ((!n || void 0 !== o) && !i(o, e)) throw Error(`Invalid param ${String(t)}=${o} (${typeof o}), expected ${r}`)
                };
                for (let [e, r] of Object.entries(t)) n(e, r, !1);
                for (let [e, t] of Object.entries(r)) n(e, t, !0);
                return e
            }
        },
        45769: (e, t, r) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.mapToCurveSimpleSWU = t.SWUFpSqrtRatio = t.weierstrass = t.weierstrassPoints = t.DER = void 0; /*!noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com)*/
            let n = r(58813),
                i = r(27341),
                o = r(27341),
                s = r(95262),
                {
                    bytesToNumberBE: a,
                    hexToBytes: c
                } = i;
            t.DER = {
                Err: class extends Error {
                    constructor(e = "") {
                        super(e)
                    }
                },
                _parseInt(e) {
                    let {
                        Err: r
                    } = t.DER;
                    if (e.length < 2 || 2 !== e[0]) throw new r("Invalid signature integer tag");
                    let n = e[1],
                        i = e.subarray(2, n + 2);
                    if (!n || i.length !== n) throw new r("Invalid signature integer: wrong length");
                    if (128 & i[0]) throw new r("Invalid signature integer: negative");
                    if (0 === i[0] && !(128 & i[1])) throw new r("Invalid signature integer: unnecessary leading zero");
                    return {
                        d: a(i),
                        l: e.subarray(n + 2)
                    }
                },
                toSig(e) {
                    let {
                        Err: r
                    } = t.DER, n = "string" == typeof e ? c(e) : e;
                    if (!(n instanceof Uint8Array)) throw Error("ui8a expected");
                    let i = n.length;
                    if (i < 2 || 48 != n[0]) throw new r("Invalid signature tag");
                    if (n[1] !== i - 2) throw new r("Invalid signature: incorrect length");
                    let {
                        d: o,
                        l: s
                    } = t.DER._parseInt(n.subarray(2)), {
                        d: a,
                        l: u
                    } = t.DER._parseInt(s);
                    if (u.length) throw new r("Invalid signature: left bytes after parsing");
                    return {
                        r: o,
                        s: a
                    }
                },
                hexFromSig(e) {
                    let t = e => 8 & Number.parseInt(e[0], 16) ? "00" + e : e,
                        r = e => {
                            let t = e.toString(16);
                            return 1 & t.length ? `0${t}` : t
                        },
                        n = t(r(e.s)),
                        i = t(r(e.r)),
                        o = n.length / 2,
                        s = i.length / 2,
                        a = r(o),
                        c = r(s);
                    return `30${r(s+o+4)}02${c}${i}02${a}${n}`
                }
            };
            let u = BigInt(0),
                l = BigInt(1),
                d = BigInt(2),
                h = BigInt(3),
                f = BigInt(4);

            function p(e) {
                let t = function(e) {
                        let t = (0, s.validateBasic)(e);
                        i.validateObject(t, {
                            a: "field",
                            b: "field"
                        }, {
                            allowedPrivateKeyLengths: "array",
                            wrapPrivateKey: "boolean",
                            isTorsionFree: "function",
                            clearCofactor: "function",
                            allowInfinityPoint: "boolean",
                            fromBytes: "function",
                            toBytes: "function"
                        });
                        let {
                            endo: r,
                            Fp: n,
                            a: o
                        } = t;
                        if (r) {
                            if (!n.eql(o, n.ZERO)) throw Error("Endomorphism can only be defined for Koblitz curves that have a=0");
                            if ("object" != typeof r || "bigint" != typeof r.beta || "function" != typeof r.splitScalar) throw Error("Expected endomorphism with beta: bigint and splitScalar: function")
                        }
                        return Object.freeze({ ...t
                        })
                    }(e),
                    {
                        Fp: r
                    } = t,
                    a = t.toBytes || ((e, t, n) => {
                        let o = t.toAffine();
                        return i.concatBytes(Uint8Array.from([4]), r.toBytes(o.x), r.toBytes(o.y))
                    }),
                    c = t.fromBytes || (e => {
                        let t = e.subarray(1);
                        return {
                            x: r.fromBytes(t.subarray(0, r.BYTES)),
                            y: r.fromBytes(t.subarray(r.BYTES, 2 * r.BYTES))
                        }
                    });

                function d(e) {
                    let {
                        a: n,
                        b: i
                    } = t, o = r.sqr(e), s = r.mul(o, e);
                    return r.add(r.add(s, r.mul(e, n)), i)
                }
                if (!r.eql(r.sqr(t.Gy), d(t.Gx))) throw Error("bad generator point: equation left != right");

                function f(e) {
                    return "bigint" == typeof e && u < e && e < t.n
                }

                function p(e) {
                    if (!f(e)) throw Error("Expected valid bigint: 0 < bigint < curve.n")
                }

                function g(e) {
                    let r;
                    let {
                        allowedPrivateKeyLengths: s,
                        nByteLength: a,
                        wrapPrivateKey: c,
                        n: u
                    } = t;
                    if (s && "bigint" != typeof e) {
                        if (e instanceof Uint8Array && (e = i.bytesToHex(e)), "string" != typeof e || !s.includes(e.length)) throw Error("Invalid key");
                        e = e.padStart(2 * a, "0")
                    }
                    try {
                        r = "bigint" == typeof e ? e : i.bytesToNumberBE((0, o.ensureBytes)("private key", e, a))
                    } catch (t) {
                        throw Error(`private key must be ${a} bytes, hex or bigint, not ${typeof e}`)
                    }
                    return c && (r = n.mod(r, u)), p(r), r
                }
                let m = new Map;

                function b(e) {
                    if (!(e instanceof y)) throw Error("ProjectivePoint expected")
                }
                let y = class e {
                    static fromAffine(t) {
                        let {
                            x: n,
                            y: i
                        } = t || {};
                        if (!t || !r.isValid(n) || !r.isValid(i)) throw Error("invalid affine point");
                        if (t instanceof e) throw Error("projective point not allowed");
                        let o = e => r.eql(e, r.ZERO);
                        return o(n) && o(i) ? e.ZERO : new e(n, i, r.ONE)
                    }
                    get x() {
                        return this.toAffine().x
                    }
                    get y() {
                        return this.toAffine().y
                    }
                    static normalizeZ(t) {
                        let n = r.invertBatch(t.map(e => e.pz));
                        return t.map((e, t) => e.toAffine(n[t])).map(e.fromAffine)
                    }
                    static fromHex(t) {
                        let r = e.fromAffine(c((0, o.ensureBytes)("pointHex", t)));
                        return r.assertValidity(), r
                    }
                    static fromPrivateKey(t) {
                        return e.BASE.multiply(g(t))
                    }
                    _setWindowSize(e) {
                        this._WINDOW_SIZE = e, m.delete(this)
                    }
                    assertValidity() {
                        if (this.is0()) {
                            if (t.allowInfinityPoint && !r.is0(this.py)) return;
                            throw Error("bad point: ZERO")
                        }
                        let {
                            x: e,
                            y: n
                        } = this.toAffine();
                        if (!r.isValid(e) || !r.isValid(n)) throw Error("bad point: x or y not FE");
                        let i = r.sqr(n),
                            o = d(e);
                        if (!r.eql(i, o)) throw Error("bad point: equation left != right");
                        if (!this.isTorsionFree()) throw Error("bad point: not in prime-order subgroup")
                    }
                    hasEvenY() {
                        let {
                            y: e
                        } = this.toAffine();
                        if (r.isOdd) return !r.isOdd(e);
                        throw Error("Field doesn't support isOdd")
                    }
                    equals(e) {
                        b(e);
                        let {
                            px: t,
                            py: n,
                            pz: i
                        } = this, {
                            px: o,
                            py: s,
                            pz: a
                        } = e, c = r.eql(r.mul(t, a), r.mul(o, i)), u = r.eql(r.mul(n, a), r.mul(s, i));
                        return c && u
                    }
                    negate() {
                        return new e(this.px, r.neg(this.py), this.pz)
                    }
                    double() {
                        let {
                            a: n,
                            b: i
                        } = t, o = r.mul(i, h), {
                            px: s,
                            py: a,
                            pz: c
                        } = this, u = r.ZERO, l = r.ZERO, d = r.ZERO, f = r.mul(s, s), p = r.mul(a, a), g = r.mul(c, c), m = r.mul(s, a);
                        return m = r.add(m, m), d = r.mul(s, c), d = r.add(d, d), u = r.mul(n, d), l = r.mul(o, g), l = r.add(u, l), u = r.sub(p, l), l = r.add(p, l), l = r.mul(u, l), u = r.mul(m, u), d = r.mul(o, d), g = r.mul(n, g), m = r.sub(f, g), m = r.mul(n, m), m = r.add(m, d), d = r.add(f, f), f = r.add(d, f), f = r.add(f, g), f = r.mul(f, m), l = r.add(l, f), g = r.mul(a, c), g = r.add(g, g), f = r.mul(g, m), u = r.sub(u, f), d = r.mul(g, p), d = r.add(d, d), new e(u, l, d = r.add(d, d))
                    }
                    add(n) {
                        b(n);
                        let {
                            px: i,
                            py: o,
                            pz: s
                        } = this, {
                            px: a,
                            py: c,
                            pz: u
                        } = n, l = r.ZERO, d = r.ZERO, f = r.ZERO, p = t.a, g = r.mul(t.b, h), m = r.mul(i, a), y = r.mul(o, c), v = r.mul(s, u), w = r.add(i, o), E = r.add(a, c);
                        w = r.mul(w, E), E = r.add(m, y), w = r.sub(w, E), E = r.add(i, s);
                        let _ = r.add(a, u);
                        return E = r.mul(E, _), _ = r.add(m, v), E = r.sub(E, _), _ = r.add(o, s), l = r.add(c, u), _ = r.mul(_, l), l = r.add(y, v), _ = r.sub(_, l), f = r.mul(p, E), l = r.mul(g, v), f = r.add(l, f), l = r.sub(y, f), f = r.add(y, f), d = r.mul(l, f), y = r.add(m, m), y = r.add(y, m), v = r.mul(p, v), E = r.mul(g, E), y = r.add(y, v), v = r.sub(m, v), v = r.mul(p, v), E = r.add(E, v), m = r.mul(y, E), d = r.add(d, m), m = r.mul(_, E), l = r.mul(w, l), l = r.sub(l, m), m = r.mul(w, y), f = r.mul(_, f), new e(l, d, f = r.add(f, m))
                    }
                    subtract(e) {
                        return this.add(e.negate())
                    }
                    is0() {
                        return this.equals(e.ZERO)
                    }
                    wNAF(t) {
                        return w.wNAFCached(this, m, t, t => {
                            let n = r.invertBatch(t.map(e => e.pz));
                            return t.map((e, t) => e.toAffine(n[t])).map(e.fromAffine)
                        })
                    }
                    multiplyUnsafe(n) {
                        let i = e.ZERO;
                        if (n === u) return i;
                        if (p(n), n === l) return this;
                        let {
                            endo: o
                        } = t;
                        if (!o) return w.unsafeLadder(this, n);
                        let {
                            k1neg: s,
                            k1: a,
                            k2neg: c,
                            k2: d
                        } = o.splitScalar(n), h = i, f = i, g = this;
                        for (; a > u || d > u;) a & l && (h = h.add(g)), d & l && (f = f.add(g)), g = g.double(), a >>= l, d >>= l;
                        return s && (h = h.negate()), c && (f = f.negate()), f = new e(r.mul(f.px, o.beta), f.py, f.pz), h.add(f)
                    }
                    multiply(n) {
                        let i, o;
                        p(n);
                        let {
                            endo: s
                        } = t;
                        if (s) {
                            let {
                                k1neg: t,
                                k1: a,
                                k2neg: c,
                                k2: u
                            } = s.splitScalar(n), {
                                p: l,
                                f: d
                            } = this.wNAF(a), {
                                p: h,
                                f: f
                            } = this.wNAF(u);
                            l = w.constTimeNegate(t, l), h = w.constTimeNegate(c, h), h = new e(r.mul(h.px, s.beta), h.py, h.pz), i = l.add(h), o = d.add(f)
                        } else {
                            let {
                                p: e,
                                f: t
                            } = this.wNAF(n);
                            i = e, o = t
                        }
                        return e.normalizeZ([i, o])[0]
                    }
                    multiplyAndAddUnsafe(t, r, n) {
                        let i = e.BASE,
                            o = (e, t) => t !== u && t !== l && e.equals(i) ? e.multiply(t) : e.multiplyUnsafe(t),
                            s = o(this, r).add(o(t, n));
                        return s.is0() ? void 0 : s
                    }
                    toAffine(e) {
                        let {
                            px: t,
                            py: n,
                            pz: i
                        } = this, o = this.is0();
                        null == e && (e = o ? r.ONE : r.inv(i));
                        let s = r.mul(t, e),
                            a = r.mul(n, e),
                            c = r.mul(i, e);
                        if (o) return {
                            x: r.ZERO,
                            y: r.ZERO
                        };
                        if (!r.eql(c, r.ONE)) throw Error("invZ was invalid");
                        return {
                            x: s,
                            y: a
                        }
                    }
                    isTorsionFree() {
                        let {
                            h: r,
                            isTorsionFree: n
                        } = t;
                        if (r === l) return !0;
                        if (n) return n(e, this);
                        throw Error("isTorsionFree() has not been declared for the elliptic curve")
                    }
                    clearCofactor() {
                        let {
                            h: r,
                            clearCofactor: n
                        } = t;
                        return r === l ? this : n ? n(e, this) : this.multiplyUnsafe(t.h)
                    }
                    toRawBytes(t = !0) {
                        return this.assertValidity(), a(e, this, t)
                    }
                    toHex(e = !0) {
                        return i.bytesToHex(this.toRawBytes(e))
                    }
                    constructor(e, t, n) {
                        if (this.px = e, this.py = t, this.pz = n, null == e || !r.isValid(e)) throw Error("x required");
                        if (null == t || !r.isValid(t)) throw Error("y required");
                        if (null == n || !r.isValid(n)) throw Error("z required")
                    }
                };
                y.BASE = new y(t.Gx, t.Gy, r.ONE), y.ZERO = new y(r.ZERO, r.ONE, r.ZERO);
                let v = t.nBitLength,
                    w = (0, s.wNAF)(y, t.endo ? Math.ceil(v / 2) : v);
                return {
                    CURVE: t,
                    ProjectivePoint: y,
                    normPrivateKeyToScalar: g,
                    weierstrassEquation: d,
                    isWithinCurveOrder: f
                }
            }

            function g(e, t) {
                let r = e.ORDER,
                    n = u;
                for (let e = r - l; e % d === u; e /= d) n += l;
                let i = n,
                    o = d << i - l - l,
                    s = o * d,
                    a = (r - l) / s,
                    c = (a - l) / d,
                    p = s - l,
                    g = e.pow(t, a),
                    m = e.pow(t, (a + l) / d),
                    b = (t, r) => {
                        let n = g,
                            s = e.pow(r, p),
                            a = e.sqr(s);
                        a = e.mul(a, r);
                        let u = e.mul(t, a);
                        u = e.pow(u, c), u = e.mul(u, s), s = e.mul(u, r), a = e.mul(u, t);
                        let h = e.mul(a, s);
                        u = e.pow(h, o);
                        let f = e.eql(u, e.ONE);
                        s = e.mul(a, m), u = e.mul(h, n), a = e.cmov(s, a, f), h = e.cmov(u, h, f);
                        for (let t = i; t > l; t--) {
                            let r = t - d;
                            r = d << r - l;
                            let i = e.pow(h, r),
                                o = e.eql(i, e.ONE);
                            s = e.mul(a, n), n = e.mul(n, n), i = e.mul(h, n), a = e.cmov(s, a, o), h = e.cmov(i, h, o)
                        }
                        return {
                            isValid: f,
                            value: a
                        }
                    };
                if (e.ORDER % f === h) {
                    let r = (e.ORDER - h) / f,
                        n = e.sqrt(e.neg(t));
                    b = (t, i) => {
                        let o = e.sqr(i),
                            s = e.mul(t, i);
                        o = e.mul(o, s);
                        let a = e.pow(o, r);
                        a = e.mul(a, s);
                        let c = e.mul(a, n),
                            u = e.mul(e.sqr(a), i),
                            l = e.eql(u, t),
                            d = e.cmov(c, a, l);
                        return {
                            isValid: l,
                            value: d
                        }
                    }
                }
                return b
            }
            t.weierstrassPoints = p, t.weierstrass = function(e) {
                let r = function(e) {
                        let t = (0, s.validateBasic)(e);
                        return i.validateObject(t, {
                            hash: "hash",
                            hmac: "function",
                            randomBytes: "function"
                        }, {
                            bits2int: "function",
                            bits2int_modN: "function",
                            lowS: "boolean"
                        }), Object.freeze({
                            lowS: !0,
                            ...t
                        })
                    }(e),
                    {
                        Fp: a,
                        n: c
                    } = r,
                    d = a.BYTES + 1,
                    h = 2 * a.BYTES + 1;

                function f(e) {
                    return n.mod(e, c)
                }

                function g(e) {
                    return n.invert(e, c)
                }
                let {
                    ProjectivePoint: m,
                    normPrivateKeyToScalar: b,
                    weierstrassEquation: y,
                    isWithinCurveOrder: v
                } = p({ ...r,
                    toBytes(e, t, r) {
                        let n = t.toAffine(),
                            o = a.toBytes(n.x),
                            s = i.concatBytes;
                        return r ? s(Uint8Array.from([t.hasEvenY() ? 2 : 3]), o) : s(Uint8Array.from([4]), o, a.toBytes(n.y))
                    },
                    fromBytes(e) {
                        let t = e.length,
                            r = e[0],
                            n = e.subarray(1);
                        if (t === d && (2 === r || 3 === r)) {
                            let e = i.bytesToNumberBE(n);
                            if (!(u < e && e < a.ORDER)) throw Error("Point is not on curve");
                            let t = y(e),
                                o = a.sqrt(t);
                            return (1 & r) == 1 != ((o & l) === l) && (o = a.neg(o)), {
                                x: e,
                                y: o
                            }
                        }
                        if (t === h && 4 === r) return {
                            x: a.fromBytes(n.subarray(0, a.BYTES)),
                            y: a.fromBytes(n.subarray(a.BYTES, 2 * a.BYTES))
                        };
                        throw Error(`Point of length ${t} was invalid. Expected ${d} compressed bytes or ${h} uncompressed bytes`)
                    }
                }), w = e => i.bytesToHex(i.numberToBytesBE(e, r.nByteLength)), E = (e, t, r) => i.bytesToNumberBE(e.slice(t, r)), _ = class e {
                    static fromCompact(t) {
                        let n = r.nByteLength;
                        return new e(E(t = (0, o.ensureBytes)("compactSignature", t, 2 * n), 0, n), E(t, n, 2 * n))
                    }
                    static fromDER(r) {
                        let {
                            r: n,
                            s: i
                        } = t.DER.toSig((0, o.ensureBytes)("DER", r));
                        return new e(n, i)
                    }
                    assertValidity() {
                        if (!v(this.r)) throw Error("r must be 0 < r < CURVE.n");
                        if (!v(this.s)) throw Error("s must be 0 < s < CURVE.n")
                    }
                    addRecoveryBit(t) {
                        return new e(this.r, this.s, t)
                    }
                    recoverPublicKey(e) {
                        let {
                            r: t,
                            s: n,
                            recovery: i
                        } = this, s = I((0, o.ensureBytes)("msgHash", e));
                        if (null == i || ![0, 1, 2, 3].includes(i)) throw Error("recovery id invalid");
                        let c = 2 === i || 3 === i ? t + r.n : t;
                        if (c >= a.ORDER) throw Error("recovery id 2 or 3 invalid");
                        let u = (1 & i) == 0 ? "02" : "03",
                            l = m.fromHex(u + w(c)),
                            d = g(c),
                            h = f(-s * d),
                            p = f(n * d),
                            b = m.BASE.multiplyAndAddUnsafe(l, h, p);
                        if (!b) throw Error("point at infinify");
                        return b.assertValidity(), b
                    }
                    hasHighS() {
                        return this.s > c >> l
                    }
                    normalizeS() {
                        return this.hasHighS() ? new e(this.r, f(-this.s), this.recovery) : this
                    }
                    toDERRawBytes() {
                        return i.hexToBytes(this.toDERHex())
                    }
                    toDERHex() {
                        return t.DER.hexFromSig({
                            r: this.r,
                            s: this.s
                        })
                    }
                    toCompactRawBytes() {
                        return i.hexToBytes(this.toCompactHex())
                    }
                    toCompactHex() {
                        return w(this.r) + w(this.s)
                    }
                    constructor(e, t, r) {
                        this.r = e, this.s = t, this.recovery = r, this.assertValidity()
                    }
                };

                function P(e) {
                    let t = e instanceof Uint8Array,
                        r = "string" == typeof e,
                        n = (t || r) && e.length;
                    return t ? n === d || n === h : r ? n === 2 * d || n === 2 * h : e instanceof m
                }
                let x = r.bits2int || function(e) {
                        let t = i.bytesToNumberBE(e),
                            n = 8 * e.length - r.nBitLength;
                        return n > 0 ? t >> BigInt(n) : t
                    },
                    I = r.bits2int_modN || function(e) {
                        return f(x(e))
                    },
                    O = i.bitMask(r.nBitLength);

                function T(e) {
                    if ("bigint" != typeof e) throw Error("bigint expected");
                    if (!(u <= e && e < O)) throw Error(`bigint expected < 2^${r.nBitLength}`);
                    return i.numberToBytesBE(e, r.nByteLength)
                }
                let A = {
                        lowS: r.lowS,
                        prehash: !1
                    },
                    S = {
                        lowS: r.lowS,
                        prehash: !1
                    };
                return m.BASE._setWindowSize(8), {
                    CURVE: r,
                    getPublicKey: function(e, t = !0) {
                        return m.fromPrivateKey(e).toRawBytes(t)
                    },
                    getSharedSecret: function(e, t, r = !0) {
                        if (P(e)) throw Error("first arg must be private key");
                        if (!P(t)) throw Error("second arg must be public key");
                        return m.fromHex(t).multiply(b(e)).toRawBytes(r)
                    },
                    sign: function(e, t, n = A) {
                        let {
                            seed: s,
                            k2sig: d
                        } = function(e, t, n = A) {
                            if (["recovered", "canonical"].some(e => e in n)) throw Error("sign() legacy options not supported");
                            let {
                                hash: s,
                                randomBytes: d
                            } = r, {
                                lowS: h,
                                prehash: p,
                                extraEntropy: y
                            } = n;
                            null == h && (h = !0), e = (0, o.ensureBytes)("msgHash", e), p && (e = (0, o.ensureBytes)("prehashed msgHash", s(e)));
                            let w = I(e),
                                E = b(t),
                                P = [T(E), T(w)];
                            if (null != y) {
                                let e = !0 === y ? d(a.BYTES) : y;
                                P.push((0, o.ensureBytes)("extraEntropy", e))
                            }
                            return {
                                seed: i.concatBytes(...P),
                                k2sig: function(e) {
                                    let t = x(e);
                                    if (!v(t)) return;
                                    let r = g(t),
                                        n = m.BASE.multiply(t).toAffine(),
                                        i = f(n.x);
                                    if (i === u) return;
                                    let o = f(r * f(w + i * E));
                                    if (o === u) return;
                                    let s = (n.x === i ? 0 : 2) | Number(n.y & l),
                                        a = o;
                                    if (h && o > c >> l) a = o > c >> l ? f(-o) : o, s ^= 1;
                                    return new _(i, a, s)
                                }
                            }
                        }(e, t, n);
                        return i.createHmacDrbg(r.hash.outputLen, r.nByteLength, r.hmac)(s, d)
                    },
                    verify: function(e, n, i, s = S) {
                        let a, c;
                        if (n = (0, o.ensureBytes)("msgHash", n), i = (0, o.ensureBytes)("publicKey", i), "strict" in s) throw Error("options.strict was renamed to lowS");
                        let {
                            lowS: u,
                            prehash: l
                        } = s;
                        try {
                            if ("string" == typeof e || e instanceof Uint8Array) try {
                                c = _.fromDER(e)
                            } catch (r) {
                                if (!(r instanceof t.DER.Err)) throw r;
                                c = _.fromCompact(e)
                            } else if ("object" == typeof e && "bigint" == typeof e.r && "bigint" == typeof e.s) {
                                let {
                                    r: t,
                                    s: r
                                } = e;
                                c = new _(t, r)
                            } else throw Error("PARSE");
                            a = m.fromHex(i)
                        } catch (e) {
                            if ("PARSE" === e.message) throw Error("signature must be Signature instance, Uint8Array or hex string");
                            return !1
                        }
                        if (u && c.hasHighS()) return !1;
                        l && (n = r.hash(n));
                        let {
                            r: d,
                            s: h
                        } = c, p = I(n), b = g(h), y = f(p * b), v = f(d * b), w = m.BASE.multiplyAndAddUnsafe(a, y, v) ? .toAffine();
                        return !!w && f(w.x) === d
                    },
                    ProjectivePoint: m,
                    Signature: _,
                    utils: {
                        isValidPrivateKey(e) {
                            try {
                                return b(e), !0
                            } catch (e) {
                                return !1
                            }
                        },
                        normPrivateKeyToScalar: b,
                        randomPrivateKey: () => {
                            let e = n.getMinHashLength(r.n);
                            return n.mapHashToField(r.randomBytes(e), r.n)
                        },
                        precompute: (e = 8, t = m.BASE) => (t._setWindowSize(e), t.multiply(BigInt(3)), t)
                    }
                }
            }, t.SWUFpSqrtRatio = g, t.mapToCurveSimpleSWU = function(e, t) {
                if (n.validateField(e), !e.isValid(t.A) || !e.isValid(t.B) || !e.isValid(t.Z)) throw Error("mapToCurveSimpleSWU: invalid opts");
                let r = g(e, t.Z);
                if (!e.isOdd) throw Error("Fp.isOdd is not implemented!");
                return n => {
                    let i, o, s, a, c, u, l, d;
                    i = e.sqr(n), i = e.mul(i, t.Z), o = e.sqr(i), o = e.add(o, i), s = e.add(o, e.ONE), s = e.mul(s, t.B), a = e.cmov(t.Z, e.neg(o), !e.eql(o, e.ZERO)), a = e.mul(a, t.A), o = e.sqr(s), u = e.sqr(a), c = e.mul(u, t.A), o = e.add(o, c), o = e.mul(o, s), u = e.mul(u, a), c = e.mul(u, t.B), o = e.add(o, c), l = e.mul(i, s);
                    let {
                        isValid: h,
                        value: f
                    } = r(o, u);
                    d = e.mul(i, n), d = e.mul(d, f), l = e.cmov(l, s, h), d = e.cmov(d, f, h);
                    let p = e.isOdd(n) === e.isOdd(d);
                    return d = e.cmov(e.neg(d), d, p), {
                        x: l = e.div(l, a),
                        y: d
                    }
                }
            }
        },
        41483: (e, t, r) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.encodeToCurve = t.hashToCurve = t.schnorr = t.secp256k1 = void 0; /*!noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com)*/
            let n = r(77346),
                i = r(99548),
                o = r(58813),
                s = r(45769),
                a = r(27341),
                c = r(96707),
                u = r(56015),
                l = BigInt("0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffffc2f"),
                d = BigInt("0xfffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141"),
                h = BigInt(1),
                f = BigInt(2),
                p = (e, t) => (e + t / f) / t;

            function g(e) {
                let t = BigInt(3),
                    r = BigInt(6),
                    n = BigInt(11),
                    i = BigInt(22),
                    s = BigInt(23),
                    a = BigInt(44),
                    c = BigInt(88),
                    u = e * e * e % l,
                    d = u * u * e % l,
                    h = (0, o.pow2)(d, t, l) * d % l,
                    p = (0, o.pow2)(h, t, l) * d % l,
                    g = (0, o.pow2)(p, f, l) * u % l,
                    b = (0, o.pow2)(g, n, l) * g % l,
                    y = (0, o.pow2)(b, i, l) * b % l,
                    v = (0, o.pow2)(y, a, l) * y % l,
                    w = (0, o.pow2)(v, c, l) * v % l,
                    E = (0, o.pow2)(w, a, l) * y % l,
                    _ = (0, o.pow2)(E, t, l) * d % l,
                    P = (0, o.pow2)(_, s, l) * b % l,
                    x = (0, o.pow2)(P, r, l) * u % l,
                    I = (0, o.pow2)(x, f, l);
                if (!m.eql(m.sqr(I), e)) throw Error("Cannot find square root");
                return I
            }
            let m = (0, o.Field)(l, void 0, void 0, {
                sqrt: g
            });
            t.secp256k1 = (0, u.createCurve)({
                a: BigInt(0),
                b: BigInt(7),
                Fp: m,
                n: d,
                Gx: BigInt("55066263022277343669578718895168534326250603453777594175500187360389116729240"),
                Gy: BigInt("32670510020758816978083085130507043184471273380659243275938904335757337482424"),
                h: BigInt(1),
                lowS: !0,
                endo: {
                    beta: BigInt("0x7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee"),
                    splitScalar: e => {
                        let t = BigInt("0x3086d221a7d46bcde86c90e49284eb15"),
                            r = -h * BigInt("0xe4437ed6010e88286f547fa90abfe4c3"),
                            n = BigInt("0x114ca50f7a8e2f3f657c1108d9d44cfd8"),
                            i = BigInt("0x100000000000000000000000000000000"),
                            s = p(t * e, d),
                            a = p(-r * e, d),
                            c = (0, o.mod)(e - s * t - a * n, d),
                            u = (0, o.mod)(-s * r - a * t, d),
                            l = c > i,
                            f = u > i;
                        if (l && (c = d - c), f && (u = d - u), c > i || u > i) throw Error("splitScalar: Endomorphism failed, k=" + e);
                        return {
                            k1neg: l,
                            k1: c,
                            k2neg: f,
                            k2: u
                        }
                    }
                }
            }, n.sha256);
            let b = BigInt(0),
                y = e => "bigint" == typeof e && b < e && e < l,
                v = e => "bigint" == typeof e && b < e && e < d,
                w = {};

            function E(e, ...t) {
                let r = w[e];
                if (void 0 === r) {
                    let t = (0, n.sha256)(Uint8Array.from(e, e => e.charCodeAt(0)));
                    r = (0, a.concatBytes)(t, t), w[e] = r
                }
                return (0, n.sha256)((0, a.concatBytes)(r, ...t))
            }
            let _ = e => e.toRawBytes(!0).slice(1),
                P = e => (0, a.numberToBytesBE)(e, 32),
                x = e => (0, o.mod)(e, l),
                I = e => (0, o.mod)(e, d),
                O = t.secp256k1.ProjectivePoint,
                T = (e, t, r) => O.BASE.multiplyAndAddUnsafe(e, t, r);

            function A(e) {
                let r = t.secp256k1.utils.normPrivateKeyToScalar(e),
                    n = O.fromPrivateKey(r);
                return {
                    scalar: n.hasEvenY() ? r : I(-r),
                    bytes: _(n)
                }
            }

            function S(e) {
                if (!y(e)) throw Error("bad x: need 0 < x < p");
                let t = x(e * e),
                    r = g(x(t * e + BigInt(7)));
                r % f !== b && (r = x(-r));
                let n = new O(e, r, h);
                return n.assertValidity(), n
            }

            function j(...e) {
                return I((0, a.bytesToNumberBE)(E("BIP0340/challenge", ...e)))
            }

            function R(e, t, r) {
                let n = (0, a.ensureBytes)("signature", e, 64),
                    i = (0, a.ensureBytes)("message", t),
                    o = (0, a.ensureBytes)("publicKey", r, 32);
                try {
                    let e = S((0, a.bytesToNumberBE)(o)),
                        t = (0, a.bytesToNumberBE)(n.subarray(0, 32));
                    if (!y(t)) return !1;
                    let r = (0, a.bytesToNumberBE)(n.subarray(32, 64));
                    if (!v(r)) return !1;
                    let s = j(P(t), _(e), i),
                        c = T(e, r, I(-s));
                    if (!c || !c.hasEvenY() || c.toAffine().x !== t) return !1;
                    return !0
                } catch (e) {
                    return !1
                }
            }
            t.schnorr = {
                getPublicKey: function(e) {
                    return A(e).bytes
                },
                sign: function(e, t, r = (0, i.randomBytes)(32)) {
                    let n = (0, a.ensureBytes)("message", e),
                        {
                            bytes: o,
                            scalar: s
                        } = A(t),
                        c = (0, a.ensureBytes)("auxRand", r, 32),
                        u = P(s ^ (0, a.bytesToNumberBE)(E("BIP0340/aux", c))),
                        l = E("BIP0340/nonce", u, o, n),
                        d = I((0, a.bytesToNumberBE)(l));
                    if (d === b) throw Error("sign failed: k is zero");
                    let {
                        bytes: h,
                        scalar: f
                    } = A(d), p = j(h, o, n), g = new Uint8Array(64);
                    if (g.set(h, 0), g.set(P(I(f + p * s)), 32), !R(g, n, o)) throw Error("sign: Invalid signature produced");
                    return g
                },
                verify: R,
                utils: {
                    randomPrivateKey: t.secp256k1.utils.randomPrivateKey,
                    lift_x: S,
                    pointToBytes: _,
                    numberToBytesBE: a.numberToBytesBE,
                    bytesToNumberBE: a.bytesToNumberBE,
                    taggedHash: E,
                    mod: o.mod
                }
            };
            let C = (0, c.isogenyMap)(m, [
                    ["0x8e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38daaaaa8c7", "0x7d3d4c80bc321d5b9f315cea7fd44c5d595d2fc0bf63b92dfff1044f17c6581", "0x534c328d23f234e6e2a413deca25caece4506144037c40314ecbd0b53d9dd262", "0x8e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38e38daaaaa88c"],
                    ["0xd35771193d94918a9ca34ccbb7b640dd86cd409542f8487d9fe6b745781eb49b", "0xedadc6f64383dc1df7c4b2d51b54225406d36b641f5e41bbc52a56612a8c6d14", "0x0000000000000000000000000000000000000000000000000000000000000001"],
                    ["0x4bda12f684bda12f684bda12f684bda12f684bda12f684bda12f684b8e38e23c", "0xc75e0c32d5cb7c0fa9d0a54b12a0a6d5647ab046d686da6fdffc90fc201d71a3", "0x29a6194691f91a73715209ef6512e576722830a201be2018a765e85a9ecee931", "0x2f684bda12f684bda12f684bda12f684bda12f684bda12f684bda12f38e38d84"],
                    ["0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffefffff93b", "0x7a06534bb8bdb49fd5e9e6632722c2989467c1bfc8e8d978dfb425d2685c2573", "0x6484aa716545ca2cf3a70c3fa8fe337e0a3d21162f0d6299a7bf8192bfd2a76f", "0x0000000000000000000000000000000000000000000000000000000000000001"]
                ].map(e => e.map(e => BigInt(e)))),
                N = (0, s.mapToCurveSimpleSWU)(m, {
                    A: BigInt("0x3f8731abdd661adca08a5558f0f5d272e953d363cb6f0e5d405447c01a444533"),
                    B: BigInt("1771"),
                    Z: m.create(BigInt("-11"))
                }),
                M = (0, c.createHasher)(t.secp256k1.ProjectivePoint, e => {
                    let {
                        x: t,
                        y: r
                    } = N(m.create(e[0]));
                    return C(t, r)
                }, {
                    DST: "secp256k1_XMD:SHA-256_SSWU_RO_",
                    encodeDST: "secp256k1_XMD:SHA-256_SSWU_NU_",
                    p: m.ORDER,
                    m: 1,
                    k: 128,
                    expand: "xmd",
                    hash: n.sha256
                });
            t.hashToCurve = M.hashToCurve, t.encodeToCurve = M.encodeToCurve
        },
        70898: (e, t) => {
            "use strict";

            function r(e) {
                if (!Number.isSafeInteger(e) || e < 0) throw Error(`Wrong positive integer: ${e}`)
            }

            function n(e) {
                if ("boolean" != typeof e) throw Error(`Expected boolean, not ${e}`)
            }

            function i(e, ...t) {
                if (!(e instanceof Uint8Array)) throw Error("Expected Uint8Array");
                if (t.length > 0 && !t.includes(e.length)) throw Error(`Expected Uint8Array of length ${t}, not of length=${e.length}`)
            }

            function o(e) {
                if ("function" != typeof e || "function" != typeof e.create) throw Error("Hash should be wrapped by utils.wrapConstructor");
                r(e.outputLen), r(e.blockLen)
            }

            function s(e, t = !0) {
                if (e.destroyed) throw Error("Hash instance has been destroyed");
                if (t && e.finished) throw Error("Hash#digest() has already been called")
            }

            function a(e, t) {
                i(e);
                let r = t.outputLen;
                if (e.length < r) throw Error(`digestInto() expects output buffer of length at least ${r}`)
            }
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.output = t.exists = t.hash = t.bytes = t.bool = t.number = void 0, t.number = r, t.bool = n, t.bytes = i, t.hash = o, t.exists = s, t.output = a, t.default = {
                number: r,
                bool: n,
                bytes: i,
                hash: o,
                exists: s,
                output: a
            }
        },
        35708: (e, t, r) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.SHA2 = void 0;
            let n = r(70898),
                i = r(99548),
                o = class extends i.Hash {
                    update(e) {
                        (0, n.exists)(this);
                        let {
                            view: t,
                            buffer: r,
                            blockLen: o
                        } = this, s = (e = (0, i.toBytes)(e)).length;
                        for (let n = 0; n < s;) {
                            let a = Math.min(o - this.pos, s - n);
                            if (a === o) {
                                let t = (0, i.createView)(e);
                                for (; o <= s - n; n += o) this.process(t, n);
                                continue
                            }
                            r.set(e.subarray(n, n + a), this.pos), this.pos += a, n += a, this.pos === o && (this.process(t, 0), this.pos = 0)
                        }
                        return this.length += e.length, this.roundClean(), this
                    }
                    digestInto(e) {
                        (0, n.exists)(this), (0, n.output)(e, this), this.finished = !0;
                        let {
                            buffer: t,
                            view: r,
                            blockLen: o,
                            isLE: s
                        } = this, {
                            pos: a
                        } = this;
                        t[a++] = 128, this.buffer.subarray(a).fill(0), this.padOffset > o - a && (this.process(r, 0), a = 0);
                        for (let e = a; e < o; e++) t[e] = 0;
                        ! function(e, t, r, n) {
                            if ("function" == typeof e.setBigUint64) return e.setBigUint64(t, r, n);
                            let i = BigInt(32),
                                o = BigInt(4294967295),
                                s = Number(r >> i & o),
                                a = Number(r & o),
                                c = n ? 4 : 0,
                                u = n ? 0 : 4;
                            e.setUint32(t + c, s, n), e.setUint32(t + u, a, n)
                        }(r, o - 8, BigInt(8 * this.length), s), this.process(r, 0);
                        let c = (0, i.createView)(e),
                            u = this.outputLen;
                        if (u % 4) throw Error("_sha2: outputLen should be aligned to 32bit");
                        let l = u / 4,
                            d = this.get();
                        if (l > d.length) throw Error("_sha2: outputLen bigger than state");
                        for (let e = 0; e < l; e++) c.setUint32(4 * e, d[e], s)
                    }
                    digest() {
                        let {
                            buffer: e,
                            outputLen: t
                        } = this;
                        this.digestInto(e);
                        let r = e.slice(0, t);
                        return this.destroy(), r
                    }
                    _cloneInto(e) {
                        e || (e = new this.constructor), e.set(...this.get());
                        let {
                            blockLen: t,
                            buffer: r,
                            length: n,
                            finished: i,
                            destroyed: o,
                            pos: s
                        } = this;
                        return e.length = n, e.pos = s, e.finished = i, e.destroyed = o, n % t && e.buffer.set(r), e
                    }
                    constructor(e, t, r, n) {
                        super(), this.blockLen = e, this.outputLen = t, this.padOffset = r, this.isLE = n, this.finished = !1, this.length = 0, this.pos = 0, this.destroyed = !1, this.buffer = new Uint8Array(e), this.view = (0, i.createView)(this.buffer)
                    }
                };
            t.SHA2 = o
        },
        47870: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.add5L = t.add5H = t.add4H = t.add4L = t.add3H = t.add3L = t.add = t.rotlBL = t.rotlBH = t.rotlSL = t.rotlSH = t.rotr32L = t.rotr32H = t.rotrBL = t.rotrBH = t.rotrSL = t.rotrSH = t.shrSL = t.shrSH = t.toBig = t.split = t.fromBig = void 0;
            let r = BigInt(4294967296 - 1),
                n = BigInt(32);

            function i(e, t = !1) {
                return t ? {
                    h: Number(e & r),
                    l: Number(e >> n & r)
                } : {
                    h: 0 | Number(e >> n & r),
                    l: 0 | Number(e & r)
                }
            }

            function o(e, t = !1) {
                let r = new Uint32Array(e.length),
                    n = new Uint32Array(e.length);
                for (let o = 0; o < e.length; o++) {
                    let {
                        h: s,
                        l: a
                    } = i(e[o], t);
                    [r[o], n[o]] = [s, a]
                }
                return [r, n]
            }
            t.fromBig = i, t.split = o;
            let s = (e, t) => BigInt(e >>> 0) << n | BigInt(t >>> 0);
            t.toBig = s;
            let a = (e, t, r) => e >>> r;
            t.shrSH = a;
            let c = (e, t, r) => e << 32 - r | t >>> r;
            t.shrSL = c;
            let u = (e, t, r) => e >>> r | t << 32 - r;
            t.rotrSH = u;
            let l = (e, t, r) => e << 32 - r | t >>> r;
            t.rotrSL = l;
            let d = (e, t, r) => e << 64 - r | t >>> r - 32;
            t.rotrBH = d;
            let h = (e, t, r) => e >>> r - 32 | t << 64 - r;
            t.rotrBL = h;
            let f = (e, t) => t;
            t.rotr32H = f;
            let p = (e, t) => e;
            t.rotr32L = p;
            let g = (e, t, r) => e << r | t >>> 32 - r;
            t.rotlSH = g;
            let m = (e, t, r) => t << r | e >>> 32 - r;
            t.rotlSL = m;
            let b = (e, t, r) => t << r - 32 | e >>> 64 - r;
            t.rotlBH = b;
            let y = (e, t, r) => e << r - 32 | t >>> 64 - r;

            function v(e, t, r, n) {
                let i = (t >>> 0) + (n >>> 0);
                return {
                    h: e + r + (i / 4294967296 | 0) | 0,
                    l: 0 | i
                }
            }
            t.rotlBL = y, t.add = v;
            let w = (e, t, r) => (e >>> 0) + (t >>> 0) + (r >>> 0);
            t.add3L = w;
            let E = (e, t, r, n) => t + r + n + (e / 4294967296 | 0) | 0;
            t.add3H = E;
            let _ = (e, t, r, n) => (e >>> 0) + (t >>> 0) + (r >>> 0) + (n >>> 0);
            t.add4L = _;
            let P = (e, t, r, n, i) => t + r + n + i + (e / 4294967296 | 0) | 0;
            t.add4H = P;
            let x = (e, t, r, n, i) => (e >>> 0) + (t >>> 0) + (r >>> 0) + (n >>> 0) + (i >>> 0);
            t.add5L = x;
            let I = (e, t, r, n, i, o) => t + r + n + i + o + (e / 4294967296 | 0) | 0;
            t.add5H = I, t.default = {
                fromBig: i,
                split: o,
                toBig: s,
                shrSH: a,
                shrSL: c,
                rotrSH: u,
                rotrSL: l,
                rotrBH: d,
                rotrBL: h,
                rotr32H: f,
                rotr32L: p,
                rotlSH: g,
                rotlSL: m,
                rotlBH: b,
                rotlBL: y,
                add: v,
                add3L: w,
                add3H: E,
                add4L: _,
                add4H: P,
                add5H: I,
                add5L: x
            }
        },
        83749: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.crypto = void 0, t.crypto = "object" == typeof globalThis && "crypto" in globalThis ? globalThis.crypto : void 0
        },
        13705: (e, t, r) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.hmac = t.HMAC = void 0;
            let n = r(70898),
                i = r(99548),
                o = class extends i.Hash {
                    update(e) {
                        return (0, n.exists)(this), this.iHash.update(e), this
                    }
                    digestInto(e) {
                        (0, n.exists)(this), (0, n.bytes)(e, this.outputLen), this.finished = !0, this.iHash.digestInto(e), this.oHash.update(e), this.oHash.digestInto(e), this.destroy()
                    }
                    digest() {
                        let e = new Uint8Array(this.oHash.outputLen);
                        return this.digestInto(e), e
                    }
                    _cloneInto(e) {
                        e || (e = Object.create(Object.getPrototypeOf(this), {}));
                        let {
                            oHash: t,
                            iHash: r,
                            finished: n,
                            destroyed: i,
                            blockLen: o,
                            outputLen: s
                        } = this;
                        return e.finished = n, e.destroyed = i, e.blockLen = o, e.outputLen = s, e.oHash = t._cloneInto(e.oHash), e.iHash = r._cloneInto(e.iHash), e
                    }
                    destroy() {
                        this.destroyed = !0, this.oHash.destroy(), this.iHash.destroy()
                    }
                    constructor(e, t) {
                        super(), this.finished = !1, this.destroyed = !1, (0, n.hash)(e);
                        let r = (0, i.toBytes)(t);
                        if (this.iHash = e.create(), "function" != typeof this.iHash.update) throw Error("Expected instance of class which extends utils.Hash");
                        this.blockLen = this.iHash.blockLen, this.outputLen = this.iHash.outputLen;
                        let o = this.blockLen,
                            s = new Uint8Array(o);
                        s.set(r.length > o ? e.create().update(r).digest() : r);
                        for (let e = 0; e < s.length; e++) s[e] ^= 54;
                        this.iHash.update(s), this.oHash = e.create();
                        for (let e = 0; e < s.length; e++) s[e] ^= 106;
                        this.oHash.update(s), s.fill(0)
                    }
                };
            t.HMAC = o, t.hmac = (e, t, r) => new o(e, t).update(r).digest(), t.hmac.create = (e, t) => new o(e, t)
        },
        38142: (e, t, r) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.ripemd160 = t.RIPEMD160 = void 0;
            let n = r(35708),
                i = r(99548),
                o = new Uint8Array([7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8]),
                s = Uint8Array.from({
                    length: 16
                }, (e, t) => t),
                a = s.map(e => (9 * e + 5) % 16),
                c = [s],
                u = [a];
            for (let e = 0; e < 4; e++)
                for (let t of [c, u]) t.push(t[e].map(e => o[e]));
            let l = [
                    [11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8],
                    [12, 13, 11, 15, 6, 9, 9, 7, 12, 15, 11, 13, 7, 8, 7, 7],
                    [13, 15, 14, 11, 7, 7, 6, 8, 13, 14, 13, 12, 5, 5, 6, 9],
                    [14, 11, 12, 14, 8, 6, 5, 5, 15, 12, 15, 14, 9, 9, 8, 6],
                    [15, 12, 13, 13, 9, 5, 8, 6, 14, 11, 12, 11, 8, 6, 5, 5]
                ].map(e => new Uint8Array(e)),
                d = c.map((e, t) => e.map(e => l[t][e])),
                h = u.map((e, t) => e.map(e => l[t][e])),
                f = new Uint32Array([0, 1518500249, 1859775393, 2400959708, 2840853838]),
                p = new Uint32Array([1352829926, 1548603684, 1836072691, 2053994217, 0]),
                g = (e, t) => e << t | e >>> 32 - t;

            function m(e, t, r, n) {
                return 0 === e ? t ^ r ^ n : 1 === e ? t & r | ~t & n : 2 === e ? (t | ~r) ^ n : 3 === e ? t & n | r & ~n : t ^ (r | ~n)
            }
            let b = new Uint32Array(16),
                y = class extends n.SHA2 {
                    get() {
                        let {
                            h0: e,
                            h1: t,
                            h2: r,
                            h3: n,
                            h4: i
                        } = this;
                        return [e, t, r, n, i]
                    }
                    set(e, t, r, n, i) {
                        this.h0 = 0 | e, this.h1 = 0 | t, this.h2 = 0 | r, this.h3 = 0 | n, this.h4 = 0 | i
                    }
                    process(e, t) {
                        for (let r = 0; r < 16; r++, t += 4) b[r] = e.getUint32(t, !0);
                        let r = 0 | this.h0,
                            n = r,
                            i = 0 | this.h1,
                            o = i,
                            s = 0 | this.h2,
                            a = s,
                            l = 0 | this.h3,
                            y = l,
                            v = 0 | this.h4,
                            w = v;
                        for (let e = 0; e < 5; e++) {
                            let t = 4 - e,
                                E = f[e],
                                _ = p[e],
                                P = c[e],
                                x = u[e],
                                I = d[e],
                                O = h[e];
                            for (let t = 0; t < 16; t++) {
                                let n = g(r + m(e, i, s, l) + b[P[t]] + E, I[t]) + v | 0;
                                r = v, v = l, l = 0 | g(s, 10), s = i, i = n
                            }
                            for (let e = 0; e < 16; e++) {
                                let r = g(n + m(t, o, a, y) + b[x[e]] + _, O[e]) + w | 0;
                                n = w, w = y, y = 0 | g(a, 10), a = o, o = r
                            }
                        }
                        this.set(this.h1 + s + y | 0, this.h2 + l + w | 0, this.h3 + v + n | 0, this.h4 + r + o | 0, this.h0 + i + a | 0)
                    }
                    roundClean() {
                        b.fill(0)
                    }
                    destroy() {
                        this.destroyed = !0, this.buffer.fill(0), this.set(0, 0, 0, 0, 0)
                    }
                    constructor() {
                        super(64, 20, 8, !0), this.h0 = 1732584193, this.h1 = -271733879, this.h2 = -1732584194, this.h3 = 271733878, this.h4 = -1009589776
                    }
                };
            t.RIPEMD160 = y, t.ripemd160 = (0, i.wrapConstructor)(() => new y)
        },
        77346: (e, t, r) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.sha224 = t.sha256 = void 0;
            let n = r(35708),
                i = r(99548),
                o = (e, t, r) => e & t ^ ~e & r,
                s = (e, t, r) => e & t ^ e & r ^ t & r,
                a = new Uint32Array([1116352408, 1899447441, 3049323471, 3921009573, 961987163, 1508970993, 2453635748, 2870763221, 3624381080, 310598401, 607225278, 1426881987, 1925078388, 2162078206, 2614888103, 3248222580, 3835390401, 4022224774, 264347078, 604807628, 770255983, 1249150122, 1555081692, 1996064986, 2554220882, 2821834349, 2952996808, 3210313671, 3336571891, 3584528711, 113926993, 338241895, 666307205, 773529912, 1294757372, 1396182291, 1695183700, 1986661051, 2177026350, 2456956037, 2730485921, 2820302411, 3259730800, 3345764771, 3516065817, 3600352804, 4094571909, 275423344, 430227734, 506948616, 659060556, 883997877, 958139571, 1322822218, 1537002063, 1747873779, 1955562222, 2024104815, 2227730452, 2361852424, 2428436474, 2756734187, 3204031479, 3329325298]),
                c = new Uint32Array([1779033703, 3144134277, 1013904242, 2773480762, 1359893119, 2600822924, 528734635, 1541459225]),
                u = new Uint32Array(64),
                l = class extends n.SHA2 {
                    get() {
                        let {
                            A: e,
                            B: t,
                            C: r,
                            D: n,
                            E: i,
                            F: o,
                            G: s,
                            H: a
                        } = this;
                        return [e, t, r, n, i, o, s, a]
                    }
                    set(e, t, r, n, i, o, s, a) {
                        this.A = 0 | e, this.B = 0 | t, this.C = 0 | r, this.D = 0 | n, this.E = 0 | i, this.F = 0 | o, this.G = 0 | s, this.H = 0 | a
                    }
                    process(e, t) {
                        for (let r = 0; r < 16; r++, t += 4) u[r] = e.getUint32(t, !1);
                        for (let e = 16; e < 64; e++) {
                            let t = u[e - 15],
                                r = u[e - 2],
                                n = (0, i.rotr)(t, 7) ^ (0, i.rotr)(t, 18) ^ t >>> 3,
                                o = (0, i.rotr)(r, 17) ^ (0, i.rotr)(r, 19) ^ r >>> 10;
                            u[e] = o + u[e - 7] + n + u[e - 16] | 0
                        }
                        let {
                            A: r,
                            B: n,
                            C: c,
                            D: l,
                            E: d,
                            F: h,
                            G: f,
                            H: p
                        } = this;
                        for (let e = 0; e < 64; e++) {
                            let t = p + ((0, i.rotr)(d, 6) ^ (0, i.rotr)(d, 11) ^ (0, i.rotr)(d, 25)) + o(d, h, f) + a[e] + u[e] | 0,
                                g = ((0, i.rotr)(r, 2) ^ (0, i.rotr)(r, 13) ^ (0, i.rotr)(r, 22)) + s(r, n, c) | 0;
                            p = f, f = h, h = d, d = l + t | 0, l = c, c = n, n = r, r = t + g | 0
                        }
                        r = r + this.A | 0, n = n + this.B | 0, c = c + this.C | 0, l = l + this.D | 0, d = d + this.E | 0, h = h + this.F | 0, f = f + this.G | 0, p = p + this.H | 0, this.set(r, n, c, l, d, h, f, p)
                    }
                    roundClean() {
                        u.fill(0)
                    }
                    destroy() {
                        this.set(0, 0, 0, 0, 0, 0, 0, 0), this.buffer.fill(0)
                    }
                    constructor() {
                        super(64, 32, 8, !1), this.A = 0 | c[0], this.B = 0 | c[1], this.C = 0 | c[2], this.D = 0 | c[3], this.E = 0 | c[4], this.F = 0 | c[5], this.G = 0 | c[6], this.H = 0 | c[7]
                    }
                },
                d = class extends l {
                    constructor() {
                        super(), this.A = -1056596264, this.B = 914150663, this.C = 812702999, this.D = -150054599, this.E = -4191439, this.F = 1750603025, this.G = 1694076839, this.H = -1090891868, this.outputLen = 28
                    }
                };
            t.sha256 = (0, i.wrapConstructor)(() => new l), t.sha224 = (0, i.wrapConstructor)(() => new d)
        },
        20056: (e, t, r) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.shake256 = t.shake128 = t.keccak_512 = t.keccak_384 = t.keccak_256 = t.keccak_224 = t.sha3_512 = t.sha3_384 = t.sha3_256 = t.sha3_224 = t.Keccak = t.keccakP = void 0;
            let n = r(70898),
                i = r(47870),
                o = r(99548),
                [s, a, c] = [
                    [],
                    [],
                    []
                ],
                u = BigInt(0),
                l = BigInt(1),
                d = BigInt(2),
                h = BigInt(7),
                f = BigInt(256),
                p = BigInt(113);
            for (let e = 0, t = l, r = 1, n = 0; e < 24; e++) {
                [r, n] = [n, (2 * r + 3 * n) % 5], s.push(2 * (5 * n + r)), a.push((e + 1) * (e + 2) / 2 % 64);
                let i = u;
                for (let e = 0; e < 7; e++)(t = (t << l ^ (t >> h) * p) % f) & d && (i ^= l << (l << BigInt(e)) - l);
                c.push(i)
            }
            let [g, m] = (0, i.split)(c, !0), b = (e, t, r) => r > 32 ? (0, i.rotlBH)(e, t, r) : (0, i.rotlSH)(e, t, r), y = (e, t, r) => r > 32 ? (0, i.rotlBL)(e, t, r) : (0, i.rotlSL)(e, t, r);

            function v(e, t = 24) {
                let r = new Uint32Array(10);
                for (let n = 24 - t; n < 24; n++) {
                    for (let t = 0; t < 10; t++) r[t] = e[t] ^ e[t + 10] ^ e[t + 20] ^ e[t + 30] ^ e[t + 40];
                    for (let t = 0; t < 10; t += 2) {
                        let n = (t + 8) % 10,
                            i = (t + 2) % 10,
                            o = r[i],
                            s = r[i + 1],
                            a = b(o, s, 1) ^ r[n],
                            c = y(o, s, 1) ^ r[n + 1];
                        for (let r = 0; r < 50; r += 10) e[t + r] ^= a, e[t + r + 1] ^= c
                    }
                    let t = e[2],
                        i = e[3];
                    for (let r = 0; r < 24; r++) {
                        let n = a[r],
                            o = b(t, i, n),
                            c = y(t, i, n),
                            u = s[r];
                        t = e[u], i = e[u + 1], e[u] = o, e[u + 1] = c
                    }
                    for (let t = 0; t < 50; t += 10) {
                        for (let n = 0; n < 10; n++) r[n] = e[t + n];
                        for (let n = 0; n < 10; n++) e[t + n] ^= ~r[(n + 2) % 10] & r[(n + 4) % 10]
                    }
                    e[0] ^= g[n], e[1] ^= m[n]
                }
                r.fill(0)
            }
            t.keccakP = v;
            let w = class e extends o.Hash {
                keccak() {
                    v(this.state32, this.rounds), this.posOut = 0, this.pos = 0
                }
                update(e) {
                    (0, n.exists)(this);
                    let {
                        blockLen: t,
                        state: r
                    } = this, i = (e = (0, o.toBytes)(e)).length;
                    for (let n = 0; n < i;) {
                        let o = Math.min(t - this.pos, i - n);
                        for (let t = 0; t < o; t++) r[this.pos++] ^= e[n++];
                        this.pos === t && this.keccak()
                    }
                    return this
                }
                finish() {
                    if (this.finished) return;
                    this.finished = !0;
                    let {
                        state: e,
                        suffix: t,
                        pos: r,
                        blockLen: n
                    } = this;
                    e[r] ^= t, (128 & t) != 0 && r === n - 1 && this.keccak(), e[n - 1] ^= 128, this.keccak()
                }
                writeInto(e) {
                    (0, n.exists)(this, !1), (0, n.bytes)(e), this.finish();
                    let t = this.state,
                        {
                            blockLen: r
                        } = this;
                    for (let n = 0, i = e.length; n < i;) {
                        this.posOut >= r && this.keccak();
                        let o = Math.min(r - this.posOut, i - n);
                        e.set(t.subarray(this.posOut, this.posOut + o), n), this.posOut += o, n += o
                    }
                    return e
                }
                xofInto(e) {
                    if (!this.enableXOF) throw Error("XOF is not possible for this instance");
                    return this.writeInto(e)
                }
                xof(e) {
                    return (0, n.number)(e), this.xofInto(new Uint8Array(e))
                }
                digestInto(e) {
                    if ((0, n.output)(e, this), this.finished) throw Error("digest() was already called");
                    return this.writeInto(e), this.destroy(), e
                }
                digest() {
                    return this.digestInto(new Uint8Array(this.outputLen))
                }
                destroy() {
                    this.destroyed = !0, this.state.fill(0)
                }
                _cloneInto(t) {
                    let {
                        blockLen: r,
                        suffix: n,
                        outputLen: i,
                        rounds: o,
                        enableXOF: s
                    } = this;
                    return t || (t = new e(r, n, i, s, o)), t.state32.set(this.state32), t.pos = this.pos, t.posOut = this.posOut, t.finished = this.finished, t.rounds = o, t.suffix = n, t.outputLen = i, t.enableXOF = s, t.destroyed = this.destroyed, t
                }
                constructor(e, t, r, i = !1, s = 24) {
                    if (super(), this.blockLen = e, this.suffix = t, this.outputLen = r, this.enableXOF = i, this.rounds = s, this.pos = 0, this.posOut = 0, this.finished = !1, this.destroyed = !1, (0, n.number)(r), 0 >= this.blockLen || this.blockLen >= 200) throw Error("Sha3 supports only keccak-f1600 function");
                    this.state = new Uint8Array(200), this.state32 = (0, o.u32)(this.state)
                }
            };
            t.Keccak = w;
            let E = (e, t, r) => (0, o.wrapConstructor)(() => new w(t, e, r));
            t.sha3_224 = E(6, 144, 28), t.sha3_256 = E(6, 136, 32), t.sha3_384 = E(6, 104, 48), t.sha3_512 = E(6, 72, 64), t.keccak_224 = E(1, 144, 28), t.keccak_256 = E(1, 136, 32), t.keccak_384 = E(1, 104, 48), t.keccak_512 = E(1, 72, 64);
            let _ = (e, t, r) => (0, o.wrapXOFConstructorWithOpts)((n = {}) => new w(t, e, void 0 === n.dkLen ? r : n.dkLen, !0));
            t.shake128 = _(31, 168, 16), t.shake256 = _(31, 136, 32)
        },
        99548: (e, t, r) => {
            "use strict"; /*!noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com)*/
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.randomBytes = t.wrapXOFConstructorWithOpts = t.wrapConstructorWithOpts = t.wrapConstructor = t.checkOpts = t.Hash = t.concatBytes = t.toBytes = t.utf8ToBytes = t.asyncLoop = t.nextTick = t.hexToBytes = t.bytesToHex = t.isLE = t.rotr = t.createView = t.u32 = t.u8 = void 0;
            let n = r(83749),
                i = e => e instanceof Uint8Array;
            if (t.u8 = e => new Uint8Array(e.buffer, e.byteOffset, e.byteLength), t.u32 = e => new Uint32Array(e.buffer, e.byteOffset, Math.floor(e.byteLength / 4)), t.createView = e => new DataView(e.buffer, e.byteOffset, e.byteLength), t.rotr = (e, t) => e << 32 - t | e >>> t, t.isLE = 68 === new Uint8Array(new Uint32Array([287454020]).buffer)[0], !t.isLE) throw Error("Non little-endian hardware is not supported");
            let o = Array.from({
                length: 256
            }, (e, t) => t.toString(16).padStart(2, "0"));
            t.bytesToHex = function(e) {
                if (!i(e)) throw Error("Uint8Array expected");
                let t = "";
                for (let r = 0; r < e.length; r++) t += o[e[r]];
                return t
            }, t.hexToBytes = function(e) {
                if ("string" != typeof e) throw Error("hex string expected, got " + typeof e);
                let t = e.length;
                if (t % 2) throw Error("padded hex string expected, got unpadded hex of length " + t);
                let r = new Uint8Array(t / 2);
                for (let t = 0; t < r.length; t++) {
                    let n = 2 * t,
                        i = Number.parseInt(e.slice(n, n + 2), 16);
                    if (Number.isNaN(i) || i < 0) throw Error("Invalid byte sequence");
                    r[t] = i
                }
                return r
            };
            let s = async () => {};
            async function a(e, r, n) {
                let i = Date.now();
                for (let o = 0; o < e; o++) {
                    n(o);
                    let e = Date.now() - i;
                    e >= 0 && e < r || (await (0, t.nextTick)(), i += e)
                }
            }

            function c(e) {
                if ("string" != typeof e) throw Error(`utf8ToBytes expected string, got ${typeof e}`);
                return new Uint8Array(new TextEncoder().encode(e))
            }

            function u(e) {
                if ("string" == typeof e && (e = c(e)), !i(e)) throw Error(`expected Uint8Array, got ${typeof e}`);
                return e
            }
            t.nextTick = s, t.asyncLoop = a, t.utf8ToBytes = c, t.toBytes = u, t.concatBytes = function(...e) {
                let t = new Uint8Array(e.reduce((e, t) => e + t.length, 0)),
                    r = 0;
                return e.forEach(e => {
                    if (!i(e)) throw Error("Uint8Array expected");
                    t.set(e, r), r += e.length
                }), t
            }, t.Hash = class {
                clone() {
                    return this._cloneInto()
                }
            };
            let l = {}.toString;
            t.checkOpts = function(e, t) {
                if (void 0 !== t && "[object Object]" !== l.call(t)) throw Error("Options should be object or undefined");
                return Object.assign(e, t)
            }, t.wrapConstructor = function(e) {
                let t = t => e().update(u(t)).digest(),
                    r = e();
                return t.outputLen = r.outputLen, t.blockLen = r.blockLen, t.create = () => e(), t
            }, t.wrapConstructorWithOpts = function(e) {
                let t = (t, r) => e(r).update(u(t)).digest(),
                    r = e({});
                return t.outputLen = r.outputLen, t.blockLen = r.blockLen, t.create = t => e(t), t
            }, t.wrapXOFConstructorWithOpts = function(e) {
                let t = (t, r) => e(r).update(u(t)).digest(),
                    r = e({});
                return t.outputLen = r.outputLen, t.blockLen = r.blockLen, t.create = t => e(t), t
            }, t.randomBytes = function(e = 32) {
                if (n.crypto && "function" == typeof n.crypto.getRandomValues) return n.crypto.getRandomValues(new Uint8Array(e));
                throw Error("crypto.getRandomValues must be defined")
            }
        },
        63173: e => {
            "use strict";
            e.exports = function() {}
        },
        67262: (e, t, r) => {
            "use strict";
            r.d(t, {
                $v: () => a
            });
            var n = 1 / 12.92;

            function i(e) {
                return Math.pow((e + .055) / 1.055, 2.4)
            }

            function o(e) {
                var t = e[0] / 255,
                    r = e[1] / 255,
                    o = e[2] / 255;
                return (t <= .03928 ? t * n : i(t)) * .2126 + (r <= .03928 ? r * n : i(r)) * .7152 + (o <= .03928 ? o * n : i(o)) * .0722
            }

            function s(e) {
                var t = 255;
                8 === (e = e.replace(/^#/, "")).length && (t = parseInt(e.slice(6, 8), 16), e = e.substring(0, 6)), 4 === e.length && (t = parseInt(e.slice(3, 4).repeat(2), 16), e = e.substring(0, 3)), 3 === e.length && (e = e[0] + e[0] + e[1] + e[1] + e[2] + e[2]);
                var r = parseInt(e, 16);
                return [r >> 16, r >> 8 & 255, 255 & r, t]
            }

            function a(e, t) {
                var r, n, i, a;
                return r = s(e), n = s(t), (Math.max(i = o(r), a = o(n)) + .05) / (Math.min(i, a) + .05)
            }
        },
        78108: (e, t, r) => {
            "use strict";
            r.d(t, {
                Tb: () => A,
                Tx: () => O,
                Y: () => m,
                kz: () => v
            });
            var n, i, o, s, a = function(e, t) {
                    return {
                        name: e,
                        value: void 0 === t ? -1 : t,
                        delta: 0,
                        entries: [],
                        id: "v2-".concat(Date.now(), "-").concat(Math.floor(8999999999999 * Math.random()) + 1e12)
                    }
                },
                c = function(e, t) {
                    try {
                        if (PerformanceObserver.supportedEntryTypes.includes(e)) {
                            if ("first-input" === e && !("PerformanceEventTiming" in self)) return;
                            var r = new PerformanceObserver(function(e) {
                                return e.getEntries().map(t)
                            });
                            return r.observe({
                                type: e,
                                buffered: !0
                            }), r
                        }
                    } catch (e) {}
                },
                u = function(e, t) {
                    var r = function r(n) {
                        "pagehide" !== n.type && "hidden" !== document.visibilityState || (e(n), t && (removeEventListener("visibilitychange", r, !0), removeEventListener("pagehide", r, !0)))
                    };
                    addEventListener("visibilitychange", r, !0), addEventListener("pagehide", r, !0)
                },
                l = function(e) {
                    addEventListener("pageshow", function(t) {
                        t.persisted && e(t)
                    }, !0)
                },
                d = function(e, t, r) {
                    var n;
                    return function(i) {
                        t.value >= 0 && (i || r) && (t.delta = t.value - (n || 0), (t.delta || void 0 === n) && (n = t.value, e(t)))
                    }
                },
                h = -1,
                f = function() {
                    return "hidden" === document.visibilityState ? 0 : 1 / 0
                },
                p = function() {
                    u(function(e) {
                        h = e.timeStamp
                    }, !0)
                },
                g = function() {
                    return h < 0 && (h = f(), p(), l(function() {
                        setTimeout(function() {
                            h = f(), p()
                        }, 0)
                    })), {
                        get firstHiddenTime() {
                            return h
                        }
                    }
                },
                m = function(e, t) {
                    var r, n = g(),
                        i = a("FCP"),
                        o = function(e) {
                            "first-contentful-paint" === e.name && (u && u.disconnect(), e.startTime < n.firstHiddenTime && (i.value = e.startTime, i.entries.push(e), r(!0)))
                        },
                        s = window.performance && performance.getEntriesByName && performance.getEntriesByName("first-contentful-paint")[0],
                        u = s ? null : c("paint", o);
                    (s || u) && (r = d(e, i, t), s && o(s), l(function(n) {
                        r = d(e, i = a("FCP"), t), requestAnimationFrame(function() {
                            requestAnimationFrame(function() {
                                i.value = performance.now() - n.timeStamp, r(!0)
                            })
                        })
                    }))
                },
                b = !1,
                y = -1,
                v = function(e, t) {
                    b || (m(function(e) {
                        y = e.value
                    }), b = !0);
                    var r, n = function(t) {
                            y > -1 && e(t)
                        },
                        i = a("CLS", 0),
                        o = 0,
                        s = [],
                        h = function(e) {
                            if (!e.hadRecentInput) {
                                var t = s[0],
                                    n = s[s.length - 1];
                                o && e.startTime - n.startTime < 1e3 && e.startTime - t.startTime < 5e3 ? (o += e.value, s.push(e)) : (o = e.value, s = [e]), o > i.value && (i.value = o, i.entries = s, r())
                            }
                        },
                        f = c("layout-shift", h);
                    f && (r = d(n, i, t), u(function() {
                        f.takeRecords().map(h), r(!0)
                    }), l(function() {
                        o = 0, y = -1, r = d(n, i = a("CLS", 0), t)
                    }))
                },
                w = {
                    passive: !0,
                    capture: !0
                },
                E = new Date,
                _ = function(e, t) {
                    n || (n = t, i = e, o = new Date, I(removeEventListener), P())
                },
                P = function() {
                    if (i >= 0 && i < o - E) {
                        var e = {
                            entryType: "first-input",
                            name: n.type,
                            target: n.target,
                            cancelable: n.cancelable,
                            startTime: n.timeStamp,
                            processingStart: n.timeStamp + i
                        };
                        s.forEach(function(t) {
                            t(e)
                        }), s = []
                    }
                },
                x = function(e) {
                    if (e.cancelable) {
                        var t, r, n, i = (e.timeStamp > 1e12 ? new Date : performance.now()) - e.timeStamp;
                        "pointerdown" == e.type ? (t = function() {
                            _(i, e), n()
                        }, r = function() {
                            n()
                        }, n = function() {
                            removeEventListener("pointerup", t, w), removeEventListener("pointercancel", r, w)
                        }, addEventListener("pointerup", t, w), addEventListener("pointercancel", r, w)) : _(i, e)
                    }
                },
                I = function(e) {
                    ["mousedown", "keydown", "touchstart", "pointerdown"].forEach(function(t) {
                        return e(t, x, w)
                    })
                },
                O = function(e, t) {
                    var r, o = g(),
                        h = a("FID"),
                        f = function(e) {
                            e.startTime < o.firstHiddenTime && (h.value = e.processingStart - e.startTime, h.entries.push(e), r(!0))
                        },
                        p = c("first-input", f);
                    r = d(e, h, t), p && u(function() {
                        p.takeRecords().map(f), p.disconnect()
                    }, !0), p && l(function() {
                        r = d(e, h = a("FID"), t), s = [], i = -1, n = null, I(addEventListener), s.push(f), P()
                    })
                },
                T = {},
                A = function(e, t) {
                    var r, n = g(),
                        i = a("LCP"),
                        o = function(e) {
                            var t = e.startTime;
                            t < n.firstHiddenTime && (i.value = t, i.entries.push(e), r())
                        },
                        s = c("largest-contentful-paint", o);
                    if (s) {
                        r = d(e, i, t);
                        var h = function() {
                            T[i.id] || (s.takeRecords().map(o), s.disconnect(), T[i.id] = !0, r(!0))
                        };
                        ["keydown", "click"].forEach(function(e) {
                            addEventListener(e, h, {
                                once: !0,
                                capture: !0
                            })
                        }), u(h, !0), l(function(n) {
                            r = d(e, i = a("LCP"), t), requestAnimationFrame(function() {
                                requestAnimationFrame(function() {
                                    i.value = performance.now() - n.timeStamp, T[i.id] = !0, r(!0)
                                })
                            })
                        })
                    }
                }
        },
        53153: function(e, t, r) {
            "use strict";
            var n = this && this.__createBinding || (Object.create ? function(e, t, r, n) {
                    void 0 === n && (n = r);
                    var i = Object.getOwnPropertyDescriptor(t, r);
                    (!i || ("get" in i ? !t.__esModule : i.writable || i.configurable)) && (i = {
                        enumerable: !0,
                        get: function() {
                            return t[r]
                        }
                    }), Object.defineProperty(e, n, i)
                } : function(e, t, r, n) {
                    void 0 === n && (n = r), e[n] = t[r]
                }),
                i = this && this.__setModuleDefault || (Object.create ? function(e, t) {
                    Object.defineProperty(e, "default", {
                        enumerable: !0,
                        value: t
                    })
                } : function(e, t) {
                    e.default = t
                }),
                o = this && this.__importStar || function(e) {
                    if (e && e.__esModule) return e;
                    var t = {};
                    if (null != e)
                        for (var r in e) "default" !== r && Object.prototype.hasOwnProperty.call(e, r) && n(t, e, r);
                    return i(t, e), t
                },
                s = this && this.__awaiter || function(e, t, r, n) {
                    return new(r || (r = Promise))(function(i, o) {
                        function s(e) {
                            try {
                                c(n.next(e))
                            } catch (e) {
                                o(e)
                            }
                        }

                        function a(e) {
                            try {
                                c(n.throw(e))
                            } catch (e) {
                                o(e)
                            }
                        }

                        function c(e) {
                            var t;
                            e.done ? i(e.value) : ((t = e.value) instanceof r ? t : new r(function(e) {
                                e(t)
                            })).then(s, a)
                        }
                        c((n = n.apply(e, t || [])).next())
                    })
                },
                a = this && this.__rest || function(e, t) {
                    var r = {};
                    for (var n in e) Object.prototype.hasOwnProperty.call(e, n) && 0 > t.indexOf(n) && (r[n] = e[n]);
                    if (null != e && "function" == typeof Object.getOwnPropertySymbols)
                        for (var i = 0, n = Object.getOwnPropertySymbols(e); i < n.length; i++) 0 > t.indexOf(n[i]) && Object.prototype.propertyIsEnumerable.call(e, n[i]) && (r[n[i]] = e[n[i]]);
                    return r
                };
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.CoinbaseWallet = void 0;
            let c = r(15674);

            function u(e) {
                return "number" == typeof e ? e : Number.parseInt(e, e.startsWith("0x") ? 16 : 10)
            }
            let l = class extends c.Connector {
                get connected() {
                    var e;
                    return !!(null === (e = this.provider) || void 0 === e ? void 0 : e.selectedAddress)
                }
                isomorphicInitialize() {
                    return s(this, void 0, void 0, function*() {
                        this.eagerConnection || (yield this.eagerConnection = Promise.resolve().then(() => o(r(50527))).then(e => {
                            let t = this.options,
                                {
                                    url: r
                                } = t,
                                n = a(t, ["url"]);
                            this.coinbaseWallet = new e.default(n), this.provider = this.coinbaseWallet.makeWeb3Provider(r), this.provider.on("connect", ({
                                chainId: e
                            }) => {
                                this.actions.update({
                                    chainId: u(e)
                                })
                            }), this.provider.on("disconnect", e => {
                                var t;
                                this.actions.resetState(), null === (t = this.onError) || void 0 === t || t.call(this, e)
                            }), this.provider.on("chainChanged", e => {
                                this.actions.update({
                                    chainId: u(e)
                                })
                            }), this.provider.on("accountsChanged", e => {
                                0 === e.length ? this.actions.resetState() : this.actions.update({
                                    accounts: e
                                })
                            })
                        }))
                    })
                }
                connectEagerly() {
                    return s(this, void 0, void 0, function*() {
                        let e = this.actions.startActivation();
                        try {
                            if (yield this.isomorphicInitialize(), !this.provider || !this.connected) throw Error("No existing connection");
                            let e = yield this.provider.request({
                                method: "eth_accounts"
                            });
                            if (!e.length) throw Error("No accounts returned");
                            let t = yield this.provider.request({
                                method: "eth_chainId"
                            });
                            this.actions.update({
                                chainId: u(t),
                                accounts: e
                            })
                        } catch (t) {
                            throw e(), t
                        }
                    })
                }
                activate(e) {
                    var t;
                    return s(this, void 0, void 0, function*() {
                        let r = "number" == typeof e ? e : null == e ? void 0 : e.chainId;
                        if (this.provider && this.connected) {
                            if (!r || r === u(this.provider.chainId)) return;
                            let t = `0x${r.toString(16)}`;
                            return this.provider.request({
                                method: "wallet_switchEthereumChain",
                                params: [{
                                    chainId: t
                                }]
                            }).catch(r => s(this, void 0, void 0, function*() {
                                if (4902 === r.code && "number" != typeof e) {
                                    if (!this.provider) throw Error("No provider");
                                    return this.provider.request({
                                        method: "wallet_addEthereumChain",
                                        params: [Object.assign(Object.assign({}, e), {
                                            chainId: t
                                        })]
                                    })
                                }
                                throw r
                            }))
                        }
                        let n = this.actions.startActivation();
                        try {
                            if (yield this.isomorphicInitialize(), !this.provider) throw Error("No provider");
                            let n = yield this.provider.request({
                                method: "eth_requestAccounts"
                            }), i = yield this.provider.request({
                                method: "eth_chainId"
                            }), o = u(i);
                            if (!r || r === o) return this.actions.update({
                                chainId: o,
                                accounts: n
                            });
                            let a = `0x${r.toString(16)}`;
                            return null === (t = this.provider) || void 0 === t ? void 0 : t.request({
                                method: "wallet_switchEthereumChain",
                                params: [{
                                    chainId: a
                                }]
                            }).catch(t => s(this, void 0, void 0, function*() {
                                if (4902 === t.code && "number" != typeof e) {
                                    if (!this.provider) throw Error("No provider");
                                    return this.provider.request({
                                        method: "wallet_addEthereumChain",
                                        params: [Object.assign(Object.assign({}, e), {
                                            chainId: a
                                        })]
                                    })
                                }
                                throw t
                            }))
                        } catch (e) {
                            throw n(), e
                        }
                    })
                }
                deactivate() {
                    var e;
                    null === (e = this.coinbaseWallet) || void 0 === e || e.disconnect()
                }
                watchAsset({
                    address: e,
                    symbol: t,
                    decimals: r,
                    image: n
                }) {
                    return s(this, void 0, void 0, function*() {
                        if (!this.provider) throw Error("No provider");
                        return this.provider.request({
                            method: "wallet_watchAsset",
                            params: {
                                type: "ERC20",
                                options: {
                                    address: e,
                                    symbol: t,
                                    decimals: r,
                                    image: n
                                }
                            }
                        }).then(e => {
                            if (!e) throw Error("Rejected");
                            return !0
                        })
                    })
                }
                constructor({
                    actions: e,
                    options: t,
                    onError: r
                }) {
                    super(e, r), this.options = t
                }
            };
            t.CoinbaseWallet = l
        },
        2741: function(e, t, r) {
            "use strict";
            let n;
            var i = this && this.__createBinding || (Object.create ? function(e, t, r, n) {
                    void 0 === n && (n = r);
                    var i = Object.getOwnPropertyDescriptor(t, r);
                    (!i || ("get" in i ? !t.__esModule : i.writable || i.configurable)) && (i = {
                        enumerable: !0,
                        get: function() {
                            return t[r]
                        }
                    }), Object.defineProperty(e, n, i)
                } : function(e, t, r, n) {
                    void 0 === n && (n = r), e[n] = t[r]
                }),
                o = this && this.__setModuleDefault || (Object.create ? function(e, t) {
                    Object.defineProperty(e, "default", {
                        enumerable: !0,
                        value: t
                    })
                } : function(e, t) {
                    e.default = t
                }),
                s = this && this.__importStar || function(e) {
                    if (e && e.__esModule) return e;
                    var t = {};
                    if (null != e)
                        for (var r in e) "default" !== r && Object.prototype.hasOwnProperty.call(e, r) && i(t, e, r);
                    return o(t, e), t
                },
                a = this && this.__awaiter || function(e, t, r, n) {
                    return new(r || (r = Promise))(function(i, o) {
                        function s(e) {
                            try {
                                c(n.next(e))
                            } catch (e) {
                                o(e)
                            }
                        }

                        function a(e) {
                            try {
                                c(n.throw(e))
                            } catch (e) {
                                o(e)
                            }
                        }

                        function c(e) {
                            var t;
                            e.done ? i(e.value) : ((t = e.value) instanceof r ? t : new r(function(e) {
                                e(t)
                            })).then(s, a)
                        }
                        c((n = n.apply(e, t || [])).next())
                    })
                };
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.getPriorityConnector = t.getSelectedConnector = t.initializeConnector = void 0;
            let c = r(23018),
                u = r(63505),
                l = r(74067),
                d = r(79900);

            function h(...e) {
                function t(t) {
                    let r = e.findIndex(([e]) => t === e);
                    if (-1 === r) throw Error("Connector not found");
                    return r
                }
                return {
                    useSelectedStore: function(r) {
                        let n = e[t(r)][2];
                        if (!n) throw Error("Stores not passed");
                        return n
                    },
                    useSelectedChainId: function(r) {
                        return e.map(([, {
                            useChainId: e
                        }]) => e())[t(r)]
                    },
                    useSelectedAccounts: function(r) {
                        return e.map(([, {
                            useAccounts: e
                        }]) => e())[t(r)]
                    },
                    useSelectedIsActivating: function(r) {
                        return e.map(([, {
                            useIsActivating: e
                        }]) => e())[t(r)]
                    },
                    useSelectedAccount: function(r) {
                        return e.map(([, {
                            useAccount: e
                        }]) => e())[t(r)]
                    },
                    useSelectedIsActive: function(r) {
                        return e.map(([, {
                            useIsActive: e
                        }]) => e())[t(r)]
                    },
                    useSelectedProvider: function(r, n) {
                        let i = t(r);
                        return e.map(([, {
                            useProvider: e
                        }], t) => e(n, t === i))[i]
                    },
                    useSelectedENSNames: function(r, n) {
                        let i = t(r);
                        return e.map(([, {
                            useENSNames: e
                        }], t) => e(t === i ? n : void 0))[i]
                    },
                    useSelectedENSName: function(r, n) {
                        let i = t(r);
                        return e.map(([, {
                            useENSName: e
                        }], t) => e(t === i ? n : void 0))[i]
                    }
                }
            }
            t.initializeConnector = function(e) {
                let [t, i] = (0, c.createWeb3ReactStoreAndActions)(), o = e(i), h = {
                    useChainId: function() {
                        return (0, l.useStore)(t, f)
                    },
                    useAccounts: function() {
                        return (0, d.useStoreWithEqualityFn)(t, p, m)
                    },
                    useIsActivating: function() {
                        return (0, l.useStore)(t, g)
                    }
                }, y = function({
                    useChainId: e,
                    useAccounts: t,
                    useIsActivating: r
                }) {
                    return {
                        useAccount: function() {
                            var e;
                            return null === (e = t()) || void 0 === e ? void 0 : e[0]
                        },
                        useIsActive: function() {
                            return function({
                                chainId: e,
                                accounts: t,
                                activating: r
                            }) {
                                return !!(e && t && !r)
                            }({
                                chainId: e(),
                                accounts: t(),
                                activating: r()
                            })
                        }
                    }
                }(h), v = function(e, {
                    useAccounts: t,
                    useChainId: i
                }, {
                    useAccount: o,
                    useIsActive: c
                }) {
                    return {
                        useProvider: function(t, o = !0) {
                            let l = c(),
                                d = i(),
                                [h, f] = (0, u.useState)(void 0 !== n);
                            return (0, u.useEffect)(() => {
                                if (h) return;
                                let e = !1;
                                return (function() {
                                    return a(this, void 0, void 0, function*() {
                                        if (void 0 === n) try {
                                            let {
                                                Web3Provider: e
                                            } = yield Promise.resolve().then(() => s(r(49777)));
                                            n = e
                                        } catch (e) {
                                            console.debug("@ethersproject/providers not available"), n = null
                                        }
                                    })
                                })().then(() => {
                                    e || f(!0)
                                }), () => {
                                    e = !0
                                }
                            }, [h]), (0, u.useMemo)(() => {
                                if (o) {
                                    if (e.customProvider) return e.customProvider;
                                    if (n && e.provider) return new n(e.provider, t)
                                }
                            }, [h, o, l, d, t])
                        },
                        useENSNames: function(e) {
                            return b(e, t())
                        },
                        useENSName: function(e) {
                            var t;
                            let r = o();
                            return null === (t = b(e, (0, u.useMemo)(() => void 0 === r ? void 0 : [r], [r]))) || void 0 === t ? void 0 : t[0]
                        }
                    }
                }(o, h, y);
                return [o, Object.assign(Object.assign(Object.assign({}, h), y), v), t]
            }, t.getSelectedConnector = h, t.getPriorityConnector = function(...e) {
                let {
                    useSelectedStore: t,
                    useSelectedChainId: r,
                    useSelectedAccounts: n,
                    useSelectedIsActivating: i,
                    useSelectedAccount: o,
                    useSelectedIsActive: s,
                    useSelectedProvider: a,
                    useSelectedENSNames: c,
                    useSelectedENSName: u
                } = h(...e);

                function l() {
                    let t = e.map(([, {
                        useIsActive: e
                    }]) => e()).findIndex(e => e);
                    return e[-1 === t ? 0 : t][0]
                }
                return {
                    useSelectedStore: t,
                    useSelectedChainId: r,
                    useSelectedAccounts: n,
                    useSelectedIsActivating: i,
                    useSelectedAccount: o,
                    useSelectedIsActive: s,
                    useSelectedProvider: a,
                    useSelectedENSNames: c,
                    useSelectedENSName: u,
                    usePriorityConnector: l,
                    usePriorityStore: function() {
                        return t(l())
                    },
                    usePriorityChainId: function() {
                        return r(l())
                    },
                    usePriorityAccounts: function() {
                        return n(l())
                    },
                    usePriorityIsActivating: function() {
                        return i(l())
                    },
                    usePriorityAccount: function() {
                        return o(l())
                    },
                    usePriorityIsActive: function() {
                        return s(l())
                    },
                    usePriorityProvider: function(e) {
                        return a(l(), e)
                    },
                    usePriorityENSNames: function(e) {
                        return c(l(), e)
                    },
                    usePriorityENSName: function(e) {
                        return u(l(), e)
                    }
                }
            };
            let f = ({
                    chainId: e
                }) => e,
                p = ({
                    accounts: e
                }) => e,
                g = ({
                    activating: e
                }) => e,
                m = (e, t) => void 0 === e && void 0 === t || void 0 !== e && e.length === (null == t ? void 0 : t.length) && e.every((e, r) => e === t[r]);

            function b(e, t = []) {
                let [r, n] = (0, u.useState)();
                return (0, u.useEffect)(() => {
                    if (e && t.length) {
                        let r = !1;
                        return Promise.all(t.map(t => e.lookupAddress(t))).then(e => {
                            r || n(e)
                        }).catch(e => {
                            r || (console.debug("Could not fetch ENS names", e), n(Array(t.length).fill(null)))
                        }), () => {
                            r = !0, n(void 0)
                        }
                    }
                }, [e, t]), null != r ? r : Array(t.length).fill(void 0)
            }
        },
        38414: function(e, t, r) {
            "use strict";
            var n = this && this.__createBinding || (Object.create ? function(e, t, r, n) {
                    void 0 === n && (n = r);
                    var i = Object.getOwnPropertyDescriptor(t, r);
                    (!i || ("get" in i ? !t.__esModule : i.writable || i.configurable)) && (i = {
                        enumerable: !0,
                        get: function() {
                            return t[r]
                        }
                    }), Object.defineProperty(e, n, i)
                } : function(e, t, r, n) {
                    void 0 === n && (n = r), e[n] = t[r]
                }),
                i = this && this.__exportStar || function(e, t) {
                    for (var r in e) "default" === r || Object.prototype.hasOwnProperty.call(t, r) || n(t, e, r)
                };
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), i(r(2741), t), i(r(1707), t), i(r(6730), t)
        },
        1707: (e, t, r) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.MockEIP1193Provider = void 0;
            let n = r(31918),
                i = class extends n.EventEmitter {
                    request(e) {
                        if (!this.chainId) return Promise.reject(Error());
                        switch (e.method) {
                            case "eth_chainId":
                                return Promise.resolve(this.eth_chainId(this.chainId));
                            case "eth_accounts":
                                return Promise.resolve(this.eth_accounts(this.accounts));
                            case "eth_requestAccounts":
                                return Promise.resolve(this.eth_requestAccounts(this.accounts));
                            default:
                                throw Error(`Method not supported on mock: ${JSON.stringify(e)}`)
                        }
                    }
                    emitConnect(e) {
                        this.emit("connect", {
                            chainId: e
                        })
                    }
                    emitDisconnect(e) {
                        this.emit("disconnect", e)
                    }
                    emitChainChanged(e) {
                        this.emit("chainChanged", e)
                    }
                    emitAccountsChanged(e) {
                        this.emit("accountsChanged", e)
                    }
                    constructor() {
                        super(...arguments), this.eth_chainId = jest.fn(e => e), this.eth_accounts = jest.fn(e => e), this.eth_requestAccounts = jest.fn(e => e)
                    }
                };
            t.MockEIP1193Provider = i
        },
        6730: function(e, t, r) {
            "use strict";
            var n = this && this.__createBinding || (Object.create ? function(e, t, r, n) {
                    void 0 === n && (n = r);
                    var i = Object.getOwnPropertyDescriptor(t, r);
                    (!i || ("get" in i ? !t.__esModule : i.writable || i.configurable)) && (i = {
                        enumerable: !0,
                        get: function() {
                            return t[r]
                        }
                    }), Object.defineProperty(e, n, i)
                } : function(e, t, r, n) {
                    void 0 === n && (n = r), e[n] = t[r]
                }),
                i = this && this.__setModuleDefault || (Object.create ? function(e, t) {
                    Object.defineProperty(e, "default", {
                        enumerable: !0,
                        value: t
                    })
                } : function(e, t) {
                    e.default = t
                }),
                o = this && this.__importStar || function(e) {
                    if (e && e.__esModule) return e;
                    var t = {};
                    if (null != e)
                        for (var r in e) "default" !== r && Object.prototype.hasOwnProperty.call(e, r) && n(t, e, r);
                    return i(t, e), t
                };
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.useWeb3React = t.Web3ReactProvider = void 0;
            let s = o(r(63505)),
                a = r(2741),
                c = (0, s.createContext)(void 0);
            t.Web3ReactProvider = function({
                children: e,
                connectors: t,
                connectorOverride: r,
                network: n,
                lookupENS: i = !0
            }) {
                let o = (0, s.useRef)(t);
                if (t.length != o.current.length || t.some((e, t) => {
                        let r = o.current[t];
                        return e[0] !== r[0]
                    })) throw Error("The connectors prop passed to Web3ReactProvider must be referentially static. If connectors is changing, try providing a key prop to Web3ReactProvider that changes every time connectors changes.");
                let u = (0, a.getPriorityConnector)(...t),
                    {
                        usePriorityConnector: l,
                        useSelectedChainId: d,
                        useSelectedAccounts: h,
                        useSelectedIsActivating: f,
                        useSelectedAccount: p,
                        useSelectedIsActive: g,
                        useSelectedProvider: m,
                        useSelectedENSNames: b,
                        useSelectedENSName: y
                    } = u,
                    v = l(),
                    w = null != r ? r : v,
                    E = d(w),
                    _ = h(w),
                    P = f(w),
                    x = p(w),
                    I = g(w),
                    O = m(w, n),
                    T = b(w, i ? O : void 0),
                    A = y(w, i ? O : void 0);
                return s.default.createElement(c.Provider, {
                    value: {
                        connector: w,
                        chainId: E,
                        accounts: _,
                        isActivating: P,
                        account: x,
                        isActive: I,
                        provider: O,
                        ENSNames: T,
                        ENSName: A,
                        hooks: u
                    }
                }, e)
            }, t.useWeb3React = function() {
                let e = (0, s.useContext)(c);
                if (!e) throw Error("useWeb3React can only be used within the Web3ReactProvider component");
                return e
            }
        },
        45474: function(e, t, r) {
            "use strict";
            var n = this && this.__createBinding || (Object.create ? function(e, t, r, n) {
                    void 0 === n && (n = r);
                    var i = Object.getOwnPropertyDescriptor(t, r);
                    (!i || ("get" in i ? !t.__esModule : i.writable || i.configurable)) && (i = {
                        enumerable: !0,
                        get: function() {
                            return t[r]
                        }
                    }), Object.defineProperty(e, n, i)
                } : function(e, t, r, n) {
                    void 0 === n && (n = r), e[n] = t[r]
                }),
                i = this && this.__setModuleDefault || (Object.create ? function(e, t) {
                    Object.defineProperty(e, "default", {
                        enumerable: !0,
                        value: t
                    })
                } : function(e, t) {
                    e.default = t
                }),
                o = this && this.__importStar || function(e) {
                    if (e && e.__esModule) return e;
                    var t = {};
                    if (null != e)
                        for (var r in e) "default" !== r && Object.prototype.hasOwnProperty.call(e, r) && n(t, e, r);
                    return i(t, e), t
                },
                s = this && this.__awaiter || function(e, t, r, n) {
                    return new(r || (r = Promise))(function(i, o) {
                        function s(e) {
                            try {
                                c(n.next(e))
                            } catch (e) {
                                o(e)
                            }
                        }

                        function a(e) {
                            try {
                                c(n.throw(e))
                            } catch (e) {
                                o(e)
                            }
                        }

                        function c(e) {
                            var t;
                            e.done ? i(e.value) : ((t = e.value) instanceof r ? t : new r(function(e) {
                                e(t)
                            })).then(s, a)
                        }
                        c((n = n.apply(e, t || [])).next())
                    })
                };
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.GnosisSafe = t.NoSafeContext = void 0;
            let a = r(15674),
                c = class e extends Error {
                    constructor() {
                        super("The app is loaded outside safe context"), this.name = e.name, Object.setPrototypeOf(this, e.prototype)
                    }
                };
            t.NoSafeContext = c;
            let u = class extends a.Connector {
                get serverSide() {
                    return "undefined" == typeof window
                }
                get inIframe() {
                    return !this.serverSide && window !== window.parent
                }
                isomorphicInitialize() {
                    return s(this, void 0, void 0, function*() {
                        if (this.eagerConnection) return;
                        let e = Promise.resolve().then(() => o(r(94230))).then(({
                            SafeAppProvider: e
                        }) => e);
                        yield this.eagerConnection = Promise.resolve().then(() => o(r(49375))).then(t => s(this, void 0, void 0, function*() {
                            this.sdk = new t.default(this.options);
                            let r = yield Promise.race([this.sdk.safe.getInfo(), new Promise(e => setTimeout(e, 500))]);
                            if (r) {
                                let t = yield e;
                                this.provider = new t(r, this.sdk)
                            }
                        }))
                    })
                }
                connectEagerly() {
                    return s(this, void 0, void 0, function*() {
                        if (!this.inIframe) return;
                        let e = this.actions.startActivation();
                        try {
                            if (yield this.isomorphicInitialize(), !this.provider) throw new c;
                            this.actions.update({
                                chainId: this.provider.chainId,
                                accounts: [(yield this.sdk.safe.getInfo().then(({
                                    safeAddress: e
                                }) => e))]
                            })
                        } catch (t) {
                            throw e(), t
                        }
                    })
                }
                activate() {
                    return s(this, void 0, void 0, function*() {
                        let e;
                        if (!this.inIframe) throw new c;
                        return this.sdk || (e = this.actions.startActivation()), this.isomorphicInitialize().then(() => s(this, void 0, void 0, function*() {
                            if (!this.provider) throw new c;
                            this.actions.update({
                                chainId: this.provider.chainId,
                                accounts: [(yield this.sdk.safe.getInfo().then(({
                                    safeAddress: e
                                }) => e))]
                            })
                        })).catch(t => {
                            throw null == e || e(), t
                        })
                    })
                }
                constructor({
                    actions: e,
                    options: t
                }) {
                    super(e), this.options = t
                }
            };
            t.GnosisSafe = u
        },
        94176: function(e, t, r) {
            "use strict";
            var n = this && this.__createBinding || (Object.create ? function(e, t, r, n) {
                    void 0 === n && (n = r);
                    var i = Object.getOwnPropertyDescriptor(t, r);
                    (!i || ("get" in i ? !t.__esModule : i.writable || i.configurable)) && (i = {
                        enumerable: !0,
                        get: function() {
                            return t[r]
                        }
                    }), Object.defineProperty(e, n, i)
                } : function(e, t, r, n) {
                    void 0 === n && (n = r), e[n] = t[r]
                }),
                i = this && this.__setModuleDefault || (Object.create ? function(e, t) {
                    Object.defineProperty(e, "default", {
                        enumerable: !0,
                        value: t
                    })
                } : function(e, t) {
                    e.default = t
                }),
                o = this && this.__importStar || function(e) {
                    if (e && e.__esModule) return e;
                    var t = {};
                    if (null != e)
                        for (var r in e) "default" !== r && Object.prototype.hasOwnProperty.call(e, r) && n(t, e, r);
                    return i(t, e), t
                },
                s = this && this.__awaiter || function(e, t, r, n) {
                    return new(r || (r = Promise))(function(i, o) {
                        function s(e) {
                            try {
                                c(n.next(e))
                            } catch (e) {
                                o(e)
                            }
                        }

                        function a(e) {
                            try {
                                c(n.throw(e))
                            } catch (e) {
                                o(e)
                            }
                        }

                        function c(e) {
                            var t;
                            e.done ? i(e.value) : ((t = e.value) instanceof r ? t : new r(function(e) {
                                e(t)
                            })).then(s, a)
                        }
                        c((n = n.apply(e, t || [])).next())
                    })
                };
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.MetaMask = t.NoMetaMaskError = void 0;
            let a = r(15674),
                c = class e extends Error {
                    constructor() {
                        super("MetaMask not installed"), this.name = e.name, Object.setPrototypeOf(this, e.prototype)
                    }
                };

            function u(e) {
                return Number.parseInt(e, 16)
            }
            t.NoMetaMaskError = c;
            let l = class extends a.Connector {
                isomorphicInitialize() {
                    return s(this, void 0, void 0, function*() {
                        if (!this.eagerConnection) return this.eagerConnection = Promise.resolve().then(() => o(r(64309))).then(e => s(this, void 0, void 0, function*() {
                            var t, r;
                            let n = yield e.default(this.options);
                            n && (this.provider = n, (null === (t = this.provider.providers) || void 0 === t ? void 0 : t.length) && (this.provider = null !== (r = this.provider.providers.find(e => e.isMetaMask)) && void 0 !== r ? r : this.provider.providers[0]), this.provider.on("connect", ({
                                chainId: e
                            }) => {
                                this.actions.update({
                                    chainId: u(e)
                                })
                            }), this.provider.on("disconnect", e => {
                                var t;
                                if (1013 === e.code) {
                                    console.debug('MetaMask logged connection error 1013: "Try again later"');
                                    return
                                }
                                this.actions.resetState(), null === (t = this.onError) || void 0 === t || t.call(this, e)
                            }), this.provider.on("chainChanged", e => {
                                this.actions.update({
                                    chainId: u(e)
                                })
                            }), this.provider.on("accountsChanged", e => {
                                0 === e.length ? this.actions.resetState() : this.actions.update({
                                    accounts: e
                                })
                            }))
                        }))
                    })
                }
                connectEagerly() {
                    return s(this, void 0, void 0, function*() {
                        let e = this.actions.startActivation();
                        try {
                            if (yield this.isomorphicInitialize(), !this.provider) return e();
                            let t = yield this.provider.request({
                                method: "eth_accounts"
                            });
                            if (!t.length) throw Error("No accounts returned");
                            let r = yield this.provider.request({
                                method: "eth_chainId"
                            });
                            this.actions.update({
                                chainId: u(r),
                                accounts: t
                            })
                        } catch (e) {
                            console.debug("Could not connect eagerly", e), this.actions.resetState()
                        }
                    })
                }
                activate(e) {
                    var t, r;
                    return s(this, void 0, void 0, function*() {
                        let n;
                        return (null === (r = null === (t = this.provider) || void 0 === t ? void 0 : t.isConnected) || void 0 === r ? void 0 : r.call(t)) || (n = this.actions.startActivation()), this.isomorphicInitialize().then(() => s(this, void 0, void 0, function*() {
                            if (!this.provider) throw new c;
                            let t = yield this.provider.request({
                                method: "eth_requestAccounts"
                            }), r = u((yield this.provider.request({
                                method: "eth_chainId"
                            }))), n = "number" == typeof e ? e : null == e ? void 0 : e.chainId;
                            if (!n || r === n) return this.actions.update({
                                chainId: r,
                                accounts: t
                            });
                            let i = `0x${n.toString(16)}`;
                            return this.provider.request({
                                method: "wallet_switchEthereumChain",
                                params: [{
                                    chainId: i
                                }]
                            }).catch(t => {
                                var r, n;
                                if (4902 === ((null === (n = null === (r = t.data) || void 0 === r ? void 0 : r.originalError) || void 0 === n ? void 0 : n.code) || t.code) && "number" != typeof e) {
                                    if (!this.provider) throw Error("No provider");
                                    return this.provider.request({
                                        method: "wallet_addEthereumChain",
                                        params: [Object.assign(Object.assign({}, e), {
                                            chainId: i
                                        })]
                                    })
                                }
                                throw t
                            }).then(() => this.activate(n))
                        })).catch(e => {
                            throw null == n || n(), e
                        })
                    })
                }
                watchAsset({
                    address: e,
                    symbol: t,
                    decimals: r,
                    image: n
                }) {
                    return s(this, void 0, void 0, function*() {
                        if (!this.provider) throw Error("No provider");
                        return this.provider.request({
                            method: "wallet_watchAsset",
                            params: {
                                type: "ERC20",
                                options: {
                                    address: e,
                                    symbol: t,
                                    decimals: r,
                                    image: n
                                }
                            }
                        }).then(e => {
                            if (!e) throw Error("Rejected");
                            return !0
                        })
                    })
                }
                constructor({
                    actions: e,
                    options: t,
                    onError: r
                }) {
                    super(e, r), this.options = t
                }
            };
            t.MetaMask = l
        },
        23337: function(e, t, r) {
            "use strict";
            var n = this && this.__createBinding || (Object.create ? function(e, t, r, n) {
                    void 0 === n && (n = r);
                    var i = Object.getOwnPropertyDescriptor(t, r);
                    (!i || ("get" in i ? !t.__esModule : i.writable || i.configurable)) && (i = {
                        enumerable: !0,
                        get: function() {
                            return t[r]
                        }
                    }), Object.defineProperty(e, n, i)
                } : function(e, t, r, n) {
                    void 0 === n && (n = r), e[n] = t[r]
                }),
                i = this && this.__setModuleDefault || (Object.create ? function(e, t) {
                    Object.defineProperty(e, "default", {
                        enumerable: !0,
                        value: t
                    })
                } : function(e, t) {
                    e.default = t
                }),
                o = this && this.__importStar || function(e) {
                    if (e && e.__esModule) return e;
                    var t = {};
                    if (null != e)
                        for (var r in e) "default" !== r && Object.prototype.hasOwnProperty.call(e, r) && n(t, e, r);
                    return i(t, e), t
                },
                s = this && this.__awaiter || function(e, t, r, n) {
                    return new(r || (r = Promise))(function(i, o) {
                        function s(e) {
                            try {
                                c(n.next(e))
                            } catch (e) {
                                o(e)
                            }
                        }

                        function a(e) {
                            try {
                                c(n.throw(e))
                            } catch (e) {
                                o(e)
                            }
                        }

                        function c(e) {
                            var t;
                            e.done ? i(e.value) : ((t = e.value) instanceof r ? t : new r(function(e) {
                                e(t)
                            })).then(s, a)
                        }
                        c((n = n.apply(e, t || [])).next())
                    })
                };
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.Network = void 0;
            let a = r(15674),
                c = r(48583);

            function u(e) {
                return "string" == typeof e || "url" in e && !("connection" in e)
            }
            let l = class extends a.Connector {
                isomorphicInitialize(e) {
                    return s(this, void 0, void 0, function*() {
                        if (this.providerCache[e]) return this.providerCache[e];
                        let t = this.urlMap[e];
                        return 1 !== t.length || u(t[0]) ? this.providerCache[e] = Promise.resolve().then(() => o(r(49777))).then(({
                            JsonRpcProvider: r
                        }) => {
                            let n = t.map(t => u(t) ? new r(t, e) : t);
                            return (0, c.getBestProvider)(n, this.timeout)
                        }) : this.providerCache[e] = Promise.resolve(t[0])
                    })
                }
                activate(e = this.defaultChainId) {
                    return s(this, void 0, void 0, function*() {
                        let t;
                        return this.providerCache[e] || (t = this.actions.startActivation()), this.isomorphicInitialize(e).then(e => s(this, void 0, void 0, function*() {
                            this.customProvider = e;
                            let {
                                chainId: t
                            } = yield this.customProvider.getNetwork();
                            this.actions.update({
                                chainId: t,
                                accounts: []
                            })
                        })).catch(e => {
                            throw null == t || t(), e
                        })
                    })
                }
                constructor({
                    actions: e,
                    urlMap: t,
                    defaultChainId: r = Number(Object.keys(t)[0]),
                    timeout: n = 5e3
                }) {
                    super(e), this.providerCache = {}, this.urlMap = Object.keys(t).reduce((e, r) => {
                        let n = t[Number(r)];
                        return Array.isArray(n) ? e[Number(r)] = n : e[Number(r)] = (u(n), [n]), e
                    }, {}), this.defaultChainId = r, this.timeout = n
                }
            };
            t.Network = l
        },
        48583: function(e, t) {
            "use strict";
            var r = this && this.__awaiter || function(e, t, r, n) {
                return new(r || (r = Promise))(function(i, o) {
                    function s(e) {
                        try {
                            c(n.next(e))
                        } catch (e) {
                            o(e)
                        }
                    }

                    function a(e) {
                        try {
                            c(n.throw(e))
                        } catch (e) {
                            o(e)
                        }
                    }

                    function c(e) {
                        var t;
                        e.done ? i(e.value) : ((t = e.value) instanceof r ? t : new r(function(e) {
                            e(t)
                        })).then(s, a)
                    }
                    c((n = n.apply(e, t || [])).next())
                })
            };
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.getBestProvider = void 0, t.getBestProvider = function(e, t = 5e3) {
                return r(this, void 0, void 0, function*() {
                    return 1 === e.length ? e[0] : new Promise(r => {
                        let n = !1,
                            i = {};
                        e.forEach((o, s) => {
                            new Promise((e, r) => {
                                o.getNetwork().then(() => e()).catch(() => r()), setTimeout(() => {
                                    r()
                                }, t)
                            }).then(() => !0).catch(() => !1).then(t => {
                                if (!n) {
                                    if (i[s] = t, Object.keys(i).length === e.length) {
                                        let t = Object.keys(i).findIndex(e => i[Number(e)]);
                                        return r(e[-1 === t ? 0 : t])
                                    }
                                    Array(e.length).fill(0).forEach((t, o) => {
                                        i[o] && Array(o).fill(0).every((e, t) => !1 === i[t]) && (n = !0, r(e[o]))
                                    })
                                }
                            })
                        })
                    })
                })
            }
        },
        23018: (e, t, r) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.createWeb3ReactStoreAndActions = t.MAX_SAFE_CHAIN_ID = void 0;
            let n = r(47997),
                i = r(96165);
            t.MAX_SAFE_CHAIN_ID = 0xfffffffffffec;
            let o = {
                chainId: void 0,
                accounts: void 0,
                activating: !1
            };
            t.createWeb3ReactStoreAndActions = function() {
                let e = (0, i.createStore)()(() => o),
                    r = 0;
                return [e, {
                    startActivation: function() {
                        let t = ++r;
                        return e.setState(Object.assign(Object.assign({}, o), {
                            activating: !0
                        })), () => {
                            r === t && e.setState({
                                activating: !1
                            })
                        }
                    },
                    update: function(i) {
                        if (void 0 !== i.chainId && function(e) {
                                if (!Number.isInteger(e) || e <= 0 || e > t.MAX_SAFE_CHAIN_ID) throw Error(`Invalid chainId ${e}`)
                            }(i.chainId), void 0 !== i.accounts)
                            for (let e = 0; e < i.accounts.length; e++) {
                                var o;
                                i.accounts[e] = (o = i.accounts[e], (0, n.getAddress)(o))
                            }
                        r++, e.setState(e => {
                            var t, r;
                            let n = null !== (t = i.chainId) && void 0 !== t ? t : e.chainId,
                                o = null !== (r = i.accounts) && void 0 !== r ? r : e.accounts,
                                s = e.activating;
                            return s && n && o && (s = !1), {
                                chainId: n,
                                accounts: o,
                                activating: s
                            }
                        })
                    },
                    resetState: function() {
                        r++, e.setState(o)
                    }
                }]
            }
        },
        15674: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.Connector = void 0, t.Connector = class {
                resetState() {
                    this.actions.resetState()
                }
                constructor(e, t) {
                    this.actions = e, this.onError = t
                }
            }
        },
        56832: function(e, t, r) {
            "use strict";
            var n = this && this.__createBinding || (Object.create ? function(e, t, r, n) {
                    void 0 === n && (n = r);
                    var i = Object.getOwnPropertyDescriptor(t, r);
                    (!i || ("get" in i ? !t.__esModule : i.writable || i.configurable)) && (i = {
                        enumerable: !0,
                        get: function() {
                            return t[r]
                        }
                    }), Object.defineProperty(e, n, i)
                } : function(e, t, r, n) {
                    void 0 === n && (n = r), e[n] = t[r]
                }),
                i = this && this.__setModuleDefault || (Object.create ? function(e, t) {
                    Object.defineProperty(e, "default", {
                        enumerable: !0,
                        value: t
                    })
                } : function(e, t) {
                    e.default = t
                }),
                o = this && this.__importStar || function(e) {
                    if (e && e.__esModule) return e;
                    var t = {};
                    if (null != e)
                        for (var r in e) "default" !== r && Object.prototype.hasOwnProperty.call(e, r) && n(t, e, r);
                    return i(t, e), t
                },
                s = this && this.__awaiter || function(e, t, r, n) {
                    return new(r || (r = Promise))(function(i, o) {
                        function s(e) {
                            try {
                                c(n.next(e))
                            } catch (e) {
                                o(e)
                            }
                        }

                        function a(e) {
                            try {
                                c(n.throw(e))
                            } catch (e) {
                                o(e)
                            }
                        }

                        function c(e) {
                            var t;
                            e.done ? i(e.value) : ((t = e.value) instanceof r ? t : new r(function(e) {
                                e(t)
                            })).then(s, a)
                        }
                        c((n = n.apply(e, t || [])).next())
                    })
                },
                a = this && this.__rest || function(e, t) {
                    var r = {};
                    for (var n in e) Object.prototype.hasOwnProperty.call(e, n) && 0 > t.indexOf(n) && (r[n] = e[n]);
                    if (null != e && "function" == typeof Object.getOwnPropertySymbols)
                        for (var i = 0, n = Object.getOwnPropertySymbols(e); i < n.length; i++) 0 > t.indexOf(n[i]) && Object.prototype.propertyIsEnumerable.call(e, n[i]) && (r[n[i]] = e[n[i]]);
                    return r
                },
                c = this && this.__importDefault || function(e) {
                    return e && e.__esModule ? e : {
                        default: e
                    }
                };
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.WalletConnect = t.URI_AVAILABLE = void 0;
            let u = r(15674),
                l = c(r(31918)),
                d = r(84395);
            t.URI_AVAILABLE = "URI_AVAILABLE";
            let h = class extends u.Connector {
                initializeProvider(e = this.defaultChainId) {
                    return s(this, void 0, void 0, function*() {
                        let t = this.rpcMap ? (0, d.getBestUrlMap)(this.rpcMap, this.timeout) : void 0,
                            n = this.getChainProps(this.chains, this.optionalChains, e),
                            i = yield Promise.resolve().then(() => o(r(51118)));
                        return this.provider = yield i.default.init(Object.assign(Object.assign(Object.assign({}, this.options), n), {
                            rpcMap: yield t
                        })), this.provider.on("disconnect", this.disconnectListener).on("chainChanged", this.chainChangedListener).on("accountsChanged", this.accountsChangedListener).on("display_uri", this.URIListener)
                    })
                }
                getChainProps(e, t, r = this.defaultChainId) {
                    let n = (0, d.getChainsWithDefault)(e, r),
                        i = (0, d.getChainsWithDefault)(t, r);
                    if ((0, d.isArrayOneOrMore)(n) || (0, d.isArrayOneOrMore)(i)) return {
                        chains: n,
                        optionalChains: i
                    };
                    throw Error("Either chains or optionalChains must have at least one item.")
                }
                isomorphicInitialize(e = this.defaultChainId) {
                    return this.eagerConnection ? this.eagerConnection : this.eagerConnection = this.initializeProvider(e)
                }
                connectEagerly() {
                    return s(this, void 0, void 0, function*() {
                        let e = this.actions.startActivation();
                        try {
                            let e = yield this.isomorphicInitialize();
                            if (!e.session) throw Error("No active session found. Connect your wallet first.");
                            this.actions.update({
                                accounts: e.accounts,
                                chainId: e.chainId
                            })
                        } catch (t) {
                            throw yield this.deactivate(), e(), t
                        }
                    })
                }
                activate(e) {
                    var t;
                    return s(this, void 0, void 0, function*() {
                        let r = yield this.isomorphicInitialize(e);
                        if (r.session) {
                            if (!e || e === r.chainId) return;
                            if (!r.session.namespaces.eip155.accounts.some(t => t.startsWith(`eip155:${e}:`))) {
                                if (null === (t = this.options.optionalChains) || void 0 === t ? void 0 : t.includes(e)) throw Error(`Cannot activate an optional chain (${e}), as the wallet is not connected to it.
	You should handle this error in application code, as there is no guarantee that a wallet is connected to a chain configured in "optionalChains".`);
                                throw Error(`Unknown chain (${e}). Make sure to include any chains you might connect to in the "chains" or "optionalChains" parameters when initializing WalletConnect.`)
                            }
                            return r.request({
                                method: "wallet_switchEthereumChain",
                                params: [{
                                    chainId: `0x${e.toString(16)}`
                                }]
                            })
                        }
                        let n = this.actions.startActivation();
                        try {
                            yield r.enable(), this.actions.update({
                                chainId: r.chainId,
                                accounts: r.accounts
                            })
                        } catch (e) {
                            throw yield this.deactivate(), n(), e
                        }
                    })
                }
                deactivate() {
                    var e;
                    return s(this, void 0, void 0, function*() {
                        null === (e = this.provider) || void 0 === e || e.removeListener("disconnect", this.disconnectListener).removeListener("chainChanged", this.chainChangedListener).removeListener("accountsChanged", this.accountsChangedListener).removeListener("display_uri", this.URIListener).disconnect(), this.provider = void 0, this.eagerConnection = void 0, this.actions.resetState()
                    })
                }
                constructor({
                    actions: e,
                    defaultChainId: r,
                    options: n,
                    timeout: i = 5e3,
                    onError: o
                }) {
                    super(e, o), this.events = new l.default, this.disconnectListener = e => {
                        var t;
                        this.actions.resetState(), e && (null === (t = this.onError) || void 0 === t || t.call(this, e))
                    }, this.chainChangedListener = e => {
                        this.actions.update({
                            chainId: Number.parseInt(e, 16)
                        })
                    }, this.accountsChangedListener = e => {
                        this.actions.update({
                            accounts: e
                        })
                    }, this.URIListener = e => {
                        this.events.emit(t.URI_AVAILABLE, e)
                    };
                    let {
                        rpcMap: s,
                        rpc: c
                    } = n, u = a(n, ["rpcMap", "rpc"]);
                    this.options = u, this.defaultChainId = r, this.rpcMap = s || c, this.timeout = i;
                    let {
                        chains: d,
                        optionalChains: h
                    } = this.getChainProps(u.chains, u.optionalChains, r);
                    this.chains = d, this.optionalChains = h
                }
            };
            t.WalletConnect = h
        },
        84395: function(e, t, r) {
            "use strict";
            var n = this && this.__createBinding || (Object.create ? function(e, t, r, n) {
                    void 0 === n && (n = r);
                    var i = Object.getOwnPropertyDescriptor(t, r);
                    (!i || ("get" in i ? !t.__esModule : i.writable || i.configurable)) && (i = {
                        enumerable: !0,
                        get: function() {
                            return t[r]
                        }
                    }), Object.defineProperty(e, n, i)
                } : function(e, t, r, n) {
                    void 0 === n && (n = r), e[n] = t[r]
                }),
                i = this && this.__setModuleDefault || (Object.create ? function(e, t) {
                    Object.defineProperty(e, "default", {
                        enumerable: !0,
                        value: t
                    })
                } : function(e, t) {
                    e.default = t
                }),
                o = this && this.__importStar || function(e) {
                    if (e && e.__esModule) return e;
                    var t = {};
                    if (null != e)
                        for (var r in e) "default" !== r && Object.prototype.hasOwnProperty.call(e, r) && n(t, e, r);
                    return i(t, e), t
                },
                s = this && this.__awaiter || function(e, t, r, n) {
                    return new(r || (r = Promise))(function(i, o) {
                        function s(e) {
                            try {
                                c(n.next(e))
                            } catch (e) {
                                o(e)
                            }
                        }

                        function a(e) {
                            try {
                                c(n.throw(e))
                            } catch (e) {
                                o(e)
                            }
                        }

                        function c(e) {
                            var t;
                            e.done ? i(e.value) : ((t = e.value) instanceof r ? t : new r(function(e) {
                                e(t)
                            })).then(s, a)
                        }
                        c((n = n.apply(e, t || [])).next())
                    })
                };
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.getChainsWithDefault = t.getBestUrlMap = t.isArrayOneOrMore = void 0, t.isArrayOneOrMore = function(e = []) {
                return e.length > 0
            }, t.getBestUrlMap = function(e, t) {
                return s(this, void 0, void 0, function*() {
                    return Object.fromEntries((yield Promise.all(Object.entries(e).map(([e, n]) => s(this, void 0, void 0, function*() {
                        return [e, (yield function(e, t) {
                            return s(this, void 0, void 0, function*() {
                                if ("string" == typeof e) return e;
                                if (1 === e.length) return e[0];
                                let [n, i] = yield Promise.all([Promise.resolve().then(() => o(r(7660))).then(({
                                    HttpConnection: e
                                }) => e), Promise.resolve().then(() => o(r(39468))).then(({
                                    JsonRpcProvider: e
                                }) => e)]);
                                return new Promise(r => {
                                    let o = !1,
                                        s = {};
                                    e.forEach((a, c) => {
                                        let u = new i(new n(a));
                                        new Promise((e, r) => {
                                            u.request({
                                                method: "eth_chainId"
                                            }).then(() => e()).catch(() => r()), setTimeout(() => {
                                                r()
                                            }, t)
                                        }).then(() => !0).catch(() => !1).then(t => {
                                            if (!o) {
                                                if (s[c] = t, Object.keys(s).length === e.length) {
                                                    let t = Object.keys(s).findIndex(e => s[Number(e)]);
                                                    return r(e[-1 === t ? 0 : t])
                                                }
                                                Array(e.length).fill(0).forEach((t, n) => {
                                                    s[n] && Array(n).fill(0).every((e, t) => !1 === s[t]) && (o = !0, r(e[n]))
                                                })
                                            }
                                        })
                                    })
                                })
                            })
                        }(n, t))]
                    })))))
                })
            }, t.getChainsWithDefault = function(e, t) {
                if (!e || !t || 0 === e.length) return e;
                let r = e.indexOf(t);
                if (-1 === r) throw Error(`Invalid chainId ${t}. Make sure default chain is included in "chains" - chains specified in "optionalChains" may not be selected as the default, as they may not be supported by the wallet.`);
                let n = [...e];
                return n.splice(r, 1), [t, ...n]
            }
        },
        36401: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.parseAccount = void 0, t.parseAccount = function(e) {
                return "string" == typeof e ? {
                    address: e,
                    type: "json-rpc"
                } : e
            }
        },
        86246: (e, t, r) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.publicKeyToAddress = void 0;
            let n = r(98067),
                i = r(45112);
            t.publicKeyToAddress = function(e) {
                let t = (0, i.keccak256)(`0x${e.substring(4)}`).substring(26);
                return (0, n.checksumAddress)(`0x${t}`)
            }
        },
        25271: (e, t, r) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.getEnsAddress = void 0;
            let n = r(71635),
                i = r(47318),
                o = r(92496),
                s = r(20913),
                a = r(84392),
                c = r(36373),
                u = r(30892),
                l = r(86175),
                d = r(76921),
                h = r(55891),
                f = r(67927);
            async function p(e, {
                blockNumber: t,
                blockTag: r,
                coinType: p,
                name: g,
                universalResolverAddress: m
            }) {
                let b = m;
                if (!b) {
                    if (!e.chain) throw Error("client chain not configured. universalResolverAddress is required.");
                    b = (0, s.getChainContractAddress)({
                        blockNumber: t,
                        chain: e.chain,
                        contract: "ensUniversalResolver"
                    })
                }
                try {
                    let s = (0, o.encodeFunctionData)({
                            abi: n.addressResolverAbi,
                            functionName: "addr",
                            ...null != p ? {
                                args: [(0, l.namehash)(g), BigInt(p)]
                            } : {
                                args: [(0, l.namehash)(g)]
                            }
                        }),
                        u = await (0, h.getAction)(e, f.readContract, "readContract")({
                            address: b,
                            abi: n.universalResolverResolveAbi,
                            functionName: "resolve",
                            args: [(0, c.toHex)((0, d.packetToBytes)(g)), s],
                            blockNumber: t,
                            blockTag: r
                        });
                    if ("0x" === u[0]) return null;
                    let m = (0, i.decodeFunctionResult)({
                        abi: n.addressResolverAbi,
                        args: null != p ? [(0, l.namehash)(g), BigInt(p)] : void 0,
                        functionName: "addr",
                        data: u[0]
                    });
                    if ("0x" === m || "0x00" === (0, a.trim)(m)) return null;
                    return m
                } catch (e) {
                    if ((0, u.isNullUniversalResolverError)(e, "resolve")) return null;
                    throw e
                }
            }
            t.getEnsAddress = p
        },
        58891: (e, t, r) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.getEnsAvatar = void 0;
            let n = r(38394),
                i = r(55891),
                o = r(20784);
            async function s(e, {
                blockNumber: t,
                blockTag: r,
                gatewayUrls: s,
                name: a,
                universalResolverAddress: c
            }) {
                let u = await (0, i.getAction)(e, o.getEnsText, "getEnsText")({
                    blockNumber: t,
                    blockTag: r,
                    key: "avatar",
                    name: a,
                    universalResolverAddress: c
                });
                if (!u) return null;
                try {
                    return await (0, n.parseAvatarRecord)(e, {
                        record: u,
                        gatewayUrls: s
                    })
                } catch {
                    return null
                }
            }
            t.getEnsAvatar = s
        },
        82760: (e, t, r) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.getEnsName = void 0;
            let n = r(71635),
                i = r(20913),
                o = r(36373),
                s = r(30892),
                a = r(76921),
                c = r(55891),
                u = r(67927);
            async function l(e, {
                address: t,
                blockNumber: r,
                blockTag: l,
                universalResolverAddress: d
            }) {
                let h = d;
                if (!h) {
                    if (!e.chain) throw Error("client chain not configured. universalResolverAddress is required.");
                    h = (0, i.getChainContractAddress)({
                        blockNumber: r,
                        chain: e.chain,
                        contract: "ensUniversalResolver"
                    })
                }
                let f = `${t.toLowerCase().substring(2)}.addr.reverse`;
                try {
                    let [i, s] = await (0, c.getAction)(e, u.readContract, "readContract")({
                        address: h,
                        abi: n.universalResolverReverseAbi,
                        functionName: "reverse",
                        args: [(0, o.toHex)((0, a.packetToBytes)(f))],
                        blockNumber: r,
                        blockTag: l
                    });
                    if (t.toLowerCase() !== s.toLowerCase()) return null;
                    return i
                } catch (e) {
                    if ((0, s.isNullUniversalResolverError)(e, "reverse")) return null;
                    throw e
                }
            }
            t.getEnsName = l
        },
        71309: (e, t, r) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.getEnsResolver = void 0;
            let n = r(20913),
                i = r(36373),
                o = r(76921),
                s = r(55891),
                a = r(67927);
            async function c(e, {
                blockNumber: t,
                blockTag: r,
                name: c,
                universalResolverAddress: u
            }) {
                let l = u;
                if (!l) {
                    if (!e.chain) throw Error("client chain not configured. universalResolverAddress is required.");
                    l = (0, n.getChainContractAddress)({
                        blockNumber: t,
                        chain: e.chain,
                        contract: "ensUniversalResolver"
                    })
                }
                let [d] = await (0, s.getAction)(e, a.readContract, "readContract")({
                    address: l,
                    abi: [{
                        inputs: [{
                            type: "bytes"
                        }],
                        name: "findResolver",
                        outputs: [{
                            type: "address"
                        }, {
                            type: "bytes32"
                        }],
                        stateMutability: "view",
                        type: "function"
                    }],
                    functionName: "findResolver",
                    args: [(0, i.toHex)((0, o.packetToBytes)(c))],
                    blockNumber: t,
                    blockTag: r
                });
                return d
            }
            t.getEnsResolver = c
        },
        20784: (e, t, r) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.getEnsText = void 0;
            let n = r(71635),
                i = r(47318),
                o = r(92496),
                s = r(20913),
                a = r(36373),
                c = r(30892),
                u = r(86175),
                l = r(76921),
                d = r(55891),
                h = r(67927);
            async function f(e, {
                blockNumber: t,
                blockTag: r,
                name: f,
                key: p,
                universalResolverAddress: g
            }) {
                let m = g;
                if (!m) {
                    if (!e.chain) throw Error("client chain not configured. universalResolverAddress is required.");
                    m = (0, s.getChainContractAddress)({
                        blockNumber: t,
                        chain: e.chain,
                        contract: "ensUniversalResolver"
                    })
                }
                try {
                    let s = await (0, d.getAction)(e, h.readContract, "readContract")({
                        address: m,
                        abi: n.universalResolverResolveAbi,
                        functionName: "resolve",
                        args: [(0, a.toHex)((0, l.packetToBytes)(f)), (0, o.encodeFunctionData)({
                            abi: n.textResolverAbi,
                            functionName: "text",
                            args: [(0, u.namehash)(f), p]
                        })],
                        blockNumber: t,
                        blockTag: r
                    });
                    if ("0x" === s[0]) return null;
                    let c = (0, i.decodeFunctionResult)({
                        abi: n.textResolverAbi,
                        functionName: "text",
                        data: s[0]
                    });
                    return "" === c ? null : c
                } catch (e) {
                    if ((0, c.isNullUniversalResolverError)(e, "resolve")) return null;
                    throw e
                }
            }
            t.getEnsText = f
        },
        76784: (e, t, r) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.getEventParameters = t.getFunctionParameters = t.getContract = void 0;
            let n = r(55891),
                i = r(30270),
                o = r(21585),
                s = r(86199),
                a = r(67927),
                c = r(85197),
                u = r(77013),
                l = r(5538);

            function d(e) {
                let t = e.length && Array.isArray(e[0]);
                return {
                    args: t ? e[0] : [],
                    options: (t ? e[1] : e[0]) ? ? {}
                }
            }

            function h(e, t) {
                let r = !1;
                return Array.isArray(e[0]) ? r = !0 : 1 === e.length ? r = t.inputs.some(e => e.indexed) : 2 === e.length && (r = !0), {
                    args: r ? e[0] : void 0,
                    options: (r ? e[1] : e[0]) ? ? {}
                }
            }
            t.getContract = function({
                abi: e,
                address: t,
                publicClient: r,
                walletClient: f
            }) {
                let p = null != r,
                    g = null != f,
                    m = {},
                    b = !1,
                    y = !1,
                    v = !1;
                for (let t of e)
                    if ("function" === t.type ? "view" === t.stateMutability || "pure" === t.stateMutability ? b = !0 : y = !0 : "event" === t.type && (v = !0), b && y && v) break;
                return p && (b && (m.read = new Proxy({}, {
                    get: (i, o) => (...i) => {
                        let {
                            args: s,
                            options: c
                        } = d(i);
                        return (0, n.getAction)(r, a.readContract, "readContract")({
                            abi: e,
                            address: t,
                            functionName: o,
                            args: s,
                            ...c
                        })
                    }
                })), y && (m.simulate = new Proxy({}, {
                    get: (i, o) => (...i) => {
                        let {
                            args: s,
                            options: a
                        } = d(i);
                        return (0, n.getAction)(r, c.simulateContract, "simulateContract")({
                            abi: e,
                            address: t,
                            functionName: o,
                            args: s,
                            ...a
                        })
                    }
                })), v && (m.createEventFilter = new Proxy({}, {
                    get: (o, s) => (...o) => {
                        let {
                            args: a,
                            options: c
                        } = h(o, e.find(e => "event" === e.type && e.name === s));
                        return (0, n.getAction)(r, i.createContractEventFilter, "createContractEventFilter")({
                            abi: e,
                            address: t,
                            eventName: s,
                            args: a,
                            ...c
                        })
                    }
                }), m.getEvents = new Proxy({}, {
                    get: (i, o) => (...i) => {
                        let {
                            args: a,
                            options: c
                        } = h(i, e.find(e => "event" === e.type && e.name === o));
                        return (0, n.getAction)(r, s.getContractEvents, "getContractEvents")({
                            abi: e,
                            address: t,
                            eventName: o,
                            args: a,
                            ...c
                        })
                    }
                }), m.watchEvent = new Proxy({}, {
                    get: (i, o) => (...i) => {
                        let {
                            args: s,
                            options: a
                        } = h(i, e.find(e => "event" === e.type && e.name === o));
                        return (0, n.getAction)(r, u.watchContractEvent, "watchContractEvent")({
                            abi: e,
                            address: t,
                            eventName: o,
                            args: s,
                            ...a
                        })
                    }
                }))), g && y && (m.write = new Proxy({}, {
                    get: (r, i) => (...r) => {
                        let {
                            args: o,
                            options: s
                        } = d(r);
                        return (0, n.getAction)(f, l.writeContract, "writeContract")({
                            abi: e,
                            address: t,
                            functionName: i,
                            args: o,
                            ...s
                        })
                    }
                })), (p || g) && y && (m.estimateGas = new Proxy({}, {
                    get: (i, s) => (...i) => {
                        let {
                            args: a,
                            options: c
                        } = d(i), u = r ? ? f;
                        return (0, n.getAction)(u, o.estimateContractGas, "estimateContractGas")({
                            abi: e,
                            address: t,
                            functionName: s,
                            args: a,
                            ...c,
                            account: c.account ? ? f.account
                        })
                    }
                })), m.address = t, m.abi = e, m
            }, t.getFunctionParameters = d, t.getEventParameters = h
        },
        23683: (e, t, r) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.getRevertErrorData = t.call = void 0;
            let n = r(36401),
                i = r(71635),
                o = r(41999),
                s = r(72968),
                a = r(1586),
                c = r(30211),
                u = r(47318),
                l = r(92496),
                d = r(20913),
                h = r(36373),
                f = r(62767),
                p = r(55613),
                g = r(61033),
                m = r(36687),
                b = r(82897);
            async function y(e, t) {
                let {
                    account: i = e.account,
                    batch: s = !!e.batch ? .multicall,
                    blockNumber: c,
                    blockTag: u = "latest",
                    accessList: l,
                    data: d,
                    gas: m,
                    gasPrice: y,
                    maxFeePerGas: E,
                    maxPriorityFeePerGas: _,
                    nonce: P,
                    to: x,
                    value: I,
                    ...O
                } = t, T = i ? (0, n.parseAccount)(i) : void 0;
                try {
                    (0, b.assertRequest)(t);
                    let r = (c ? (0, h.numberToHex)(c) : void 0) || u,
                        n = e.chain ? .formatters ? .transactionRequest ? .format,
                        i = (n || g.formatTransactionRequest)({ ...(0, p.extract)(O, {
                                format: n
                            }),
                            from: T ? .address,
                            accessList: l,
                            data: d,
                            gas: m,
                            gasPrice: y,
                            maxFeePerGas: E,
                            maxPriorityFeePerGas: _,
                            nonce: P,
                            to: x,
                            value: I
                        });
                    if (s && function({
                            request: e
                        }) {
                            let {
                                data: t,
                                to: r,
                                ...n
                            } = e;
                            return !(!t || t.startsWith(o.aggregate3Signature)) && !!r && !(Object.values(n).filter(e => void 0 !== e).length > 0)
                        }({
                            request: i
                        })) try {
                        return await v(e, { ...i,
                            blockNumber: c,
                            blockTag: u
                        })
                    } catch (e) {
                        if (!(e instanceof a.ClientChainNotConfiguredError) && !(e instanceof a.ChainDoesNotSupportContract)) throw e
                    }
                    let f = await e.request({
                        method: "eth_call",
                        params: r ? [i, r] : [i]
                    });
                    if ("0x" === f) return {
                        data: void 0
                    };
                    return {
                        data: f
                    }
                } catch (s) {
                    let n = w(s),
                        {
                            offchainLookup: i,
                            offchainLookupSignature: o
                        } = await Promise.resolve().then(() => r(44622));
                    if (n ? .slice(0, 10) === o && x) return {
                        data: await i(e, {
                            data: n,
                            to: x
                        })
                    };
                    throw (0, f.getCallError)(s, { ...t,
                        account: T,
                        chain: e.chain
                    })
                }
            }
            async function v(e, t) {
                let {
                    batchSize: r = 1024,
                    wait: n = 0
                } = "object" == typeof e.batch ? .multicall ? e.batch.multicall : {}, {
                    blockNumber: o,
                    blockTag: s = "latest",
                    data: f,
                    multicallAddress: p,
                    to: g
                } = t, b = p;
                if (!b) {
                    if (!e.chain) throw new a.ClientChainNotConfiguredError;
                    b = (0, d.getChainContractAddress)({
                        blockNumber: o,
                        chain: e.chain,
                        contract: "multicall3"
                    })
                }
                let y = (o ? (0, h.numberToHex)(o) : void 0) || s,
                    {
                        schedule: v
                    } = (0, m.createBatchScheduler)({
                        id: `${e.uid}.${y}`,
                        wait: n,
                        shouldSplitBatch: e => e.reduce((e, {
                            data: t
                        }) => e + (t.length - 2), 0) > 2 * r,
                        fn: async t => {
                            let r = t.map(e => ({
                                    allowFailure: !0,
                                    callData: e.data,
                                    target: e.to
                                })),
                                n = (0, l.encodeFunctionData)({
                                    abi: i.multicall3Abi,
                                    args: [r],
                                    functionName: "aggregate3"
                                }),
                                o = await e.request({
                                    method: "eth_call",
                                    params: [{
                                        data: n,
                                        to: b
                                    }, y]
                                });
                            return (0, u.decodeFunctionResult)({
                                abi: i.multicall3Abi,
                                args: [r],
                                functionName: "aggregate3",
                                data: o || "0x"
                            })
                        }
                    }),
                    [{
                        returnData: w,
                        success: E
                    }] = await v({
                        data: f,
                        to: g
                    });
                if (!E) throw new c.RawContractError({
                    data: w
                });
                return "0x" === w ? {
                    data: void 0
                } : {
                    data: w
                }
            }

            function w(e) {
                if (!(e instanceof s.BaseError)) return;
                let t = e.walk();
                return "object" == typeof t.data ? t.data.data : t.data
            }
            t.call = y, t.getRevertErrorData = w
        },
        54736: (e, t, r) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.createBlockFilter = void 0;
            let n = r(24135);
            async function i(e) {
                let t = (0, n.createFilterRequestScope)(e, {
                        method: "eth_newBlockFilter"
                    }),
                    r = await e.request({
                        method: "eth_newBlockFilter"
                    });
                return {
                    id: r,
                    request: t(r),
                    type: "block"
                }
            }
            t.createBlockFilter = i
        },
        30270: (e, t, r) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.createContractEventFilter = void 0;
            let n = r(15326),
                i = r(36373),
                o = r(24135);
            async function s(e, {
                address: t,
                abi: r,
                args: s,
                eventName: a,
                fromBlock: c,
                strict: u,
                toBlock: l
            }) {
                let d = (0, o.createFilterRequestScope)(e, {
                        method: "eth_newFilter"
                    }),
                    h = a ? (0, n.encodeEventTopics)({
                        abi: r,
                        args: s,
                        eventName: a
                    }) : void 0,
                    f = await e.request({
                        method: "eth_newFilter",
                        params: [{
                            address: t,
                            fromBlock: "bigint" == typeof c ? (0, i.numberToHex)(c) : c,
                            toBlock: "bigint" == typeof l ? (0, i.numberToHex)(l) : l,
                            topics: h
                        }]
                    });
                return {
                    abi: r,
                    args: s,
                    eventName: a,
                    id: f,
                    request: d(f),
                    strict: u,
                    type: "event"
                }
            }
            t.createContractEventFilter = s
        },
        44314: (e, t, r) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.createEventFilter = void 0;
            let n = r(15326),
                i = r(36373),
                o = r(24135);
            async function s(e, {
                address: t,
                args: r,
                event: s,
                events: a,
                fromBlock: c,
                strict: u,
                toBlock: l
            } = {}) {
                let d = a ? ? (s ? [s] : void 0),
                    h = (0, o.createFilterRequestScope)(e, {
                        method: "eth_newFilter"
                    }),
                    f = [];
                d && (f = [d.flatMap(e => (0, n.encodeEventTopics)({
                    abi: [e],
                    eventName: e.name,
                    args: r
                }))], s && (f = f[0]));
                let p = await e.request({
                    method: "eth_newFilter",
                    params: [{
                        address: t,
                        fromBlock: "bigint" == typeof c ? (0, i.numberToHex)(c) : c,
                        toBlock: "bigint" == typeof l ? (0, i.numberToHex)(l) : l,
                        ...f.length ? {
                            topics: f
                        } : {}
                    }]
                });
                return {
                    abi: d,
                    args: r,
                    eventName: s ? s.name : void 0,
                    fromBlock: c,
                    id: p,
                    request: h(p),
                    strict: u,
                    toBlock: l,
                    type: "event"
                }
            }
            t.createEventFilter = s
        },
        21997: (e, t, r) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.createPendingTransactionFilter = void 0;
            let n = r(24135);
            async function i(e) {
                let t = (0, n.createFilterRequestScope)(e, {
                        method: "eth_newPendingTransactionFilter"
                    }),
                    r = await e.request({
                        method: "eth_newPendingTransactionFilter"
                    });
                return {
                    id: r,
                    request: t(r),
                    type: "transaction"
                }
            }
            t.createPendingTransactionFilter = i
        },
        21585: (e, t, r) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.estimateContractGas = void 0;
            let n = r(36401),
                i = r(92496),
                o = r(19261),
                s = r(55891),
                a = r(74258);
            async function c(e, {
                abi: t,
                address: r,
                args: c,
                functionName: u,
                ...l
            }) {
                let d = (0, i.encodeFunctionData)({
                    abi: t,
                    args: c,
                    functionName: u
                });
                try {
                    return await (0, s.getAction)(e, a.estimateGas, "estimateGas")({
                        data: d,
                        to: r,
                        ...l
                    })
                } catch (i) {
                    let e = l.account ? (0, n.parseAccount)(l.account) : void 0;
                    throw (0, o.getContractError)(i, {
                        abi: t,
                        address: r,
                        args: c,
                        docsPath: "/docs/contract/estimateContractGas",
                        functionName: u,
                        sender: e ? .address
                    })
                }
            }
            t.estimateContractGas = c
        },
        92657: (e, t, r) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.internal_estimateFeesPerGas = t.estimateFeesPerGas = void 0;
            let n = r(78215),
                i = r(55891),
                o = r(41798),
                s = r(57002),
                a = r(6733);
            async function c(e, t) {
                return u(e, t)
            }
            async function u(e, t) {
                let {
                    block: r,
                    chain: c = e.chain,
                    request: u,
                    type: l = "eip1559"
                } = t || {}, d = await (async () => "function" == typeof c ? .fees ? .baseFeeMultiplier ? c.fees.baseFeeMultiplier({
                    block: r,
                    client: e,
                    request: u
                }) : c ? .fees ? .baseFeeMultiplier ? ? 1.2)();
                if (d < 1) throw new n.BaseFeeScalarError;
                let h = 10 ** (d.toString().split(".")[1] ? .length ? ? 0),
                    f = e => e * BigInt(Math.ceil(d * h)) / BigInt(h),
                    p = r || await (0, i.getAction)(e, s.getBlock, "getBlock")({});
                if ("function" == typeof c ? .fees ? .estimateFeesPerGas) return c.fees.estimateFeesPerGas({
                    block: r,
                    client: e,
                    multiply: f,
                    request: u,
                    type: l
                });
                if ("eip1559" === l) {
                    if ("bigint" != typeof p.baseFeePerGas) throw new n.Eip1559FeesNotSupportedError;
                    let t = u ? .maxPriorityFeePerGas ? u.maxPriorityFeePerGas : await (0, o.internal_estimateMaxPriorityFeePerGas)(e, {
                            block: p,
                            chain: c,
                            request: u
                        }),
                        r = f(p.baseFeePerGas);
                    return {
                        maxFeePerGas: u ? .maxFeePerGas ? ? r + t,
                        maxPriorityFeePerGas: t
                    }
                }
                return {
                    gasPrice: u ? .gasPrice ? ? f(await (0, i.getAction)(e, a.getGasPrice, "getGasPrice")({}))
                }
            }
            t.estimateFeesPerGas = c, t.internal_estimateFeesPerGas = u
        },
        74258: (e, t, r) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.estimateGas = void 0;
            let n = r(36401),
                i = r(38527),
                o = r(36373),
                s = r(41007),
                a = r(55613),
                c = r(61033),
                u = r(82897),
                l = r(52969);
            async function d(e, t) {
                let r = t.account ? ? e.account;
                if (!r) throw new i.AccountNotFoundError({
                    docsPath: "/docs/actions/public/estimateGas"
                });
                let d = (0, n.parseAccount)(r);
                try {
                    let {
                        accessList: r,
                        blockNumber: n,
                        blockTag: i,
                        data: s,
                        gas: h,
                        gasPrice: f,
                        maxFeePerGas: p,
                        maxPriorityFeePerGas: g,
                        nonce: m,
                        to: b,
                        value: y,
                        ...v
                    } = "local" === d.type ? await (0, l.prepareTransactionRequest)(e, t) : t, w = (n ? (0, o.numberToHex)(n) : void 0) || i;
                    (0, u.assertRequest)(t);
                    let E = e.chain ? .formatters ? .transactionRequest ? .format,
                        _ = (E || c.formatTransactionRequest)({ ...(0, a.extract)(v, {
                                format: E
                            }),
                            from: d.address,
                            accessList: r,
                            data: s,
                            gas: h,
                            gasPrice: f,
                            maxFeePerGas: p,
                            maxPriorityFeePerGas: g,
                            nonce: m,
                            to: b,
                            value: y
                        }),
                        P = await e.request({
                            method: "eth_estimateGas",
                            params: w ? [_, w] : [_]
                        });
                    return BigInt(P)
                } catch (r) {
                    throw (0, s.getEstimateGasError)(r, { ...t,
                        account: d,
                        chain: e.chain
                    })
                }
            }
            t.estimateGas = d
        },
        41798: (e, t, r) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.internal_estimateMaxPriorityFeePerGas = t.estimateMaxPriorityFeePerGas = void 0;
            let n = r(78215),
                i = r(7506),
                o = r(55891),
                s = r(57002),
                a = r(6733);
            async function c(e, t) {
                return u(e, t)
            }
            async function u(e, t) {
                let {
                    block: r,
                    chain: c = e.chain,
                    request: u
                } = t || {};
                if ("function" == typeof c ? .fees ? .defaultPriorityFee) {
                    let t = r || await (0, o.getAction)(e, s.getBlock, "getBlock")({});
                    return c.fees.defaultPriorityFee({
                        block: t,
                        client: e,
                        request: u
                    })
                }
                if (void 0 !== c ? .fees ? .defaultPriorityFee) return c ? .fees ? .defaultPriorityFee;
                try {
                    let t = await e.request({
                        method: "eth_maxPriorityFeePerGas"
                    });
                    return (0, i.hexToBigInt)(t)
                } catch {
                    let [t, i] = await Promise.all([r ? Promise.resolve(r) : (0, o.getAction)(e, s.getBlock, "getBlock")({}), (0, o.getAction)(e, a.getGasPrice, "getGasPrice")({})]);
                    if ("bigint" != typeof t.baseFeePerGas) throw new n.Eip1559FeesNotSupportedError;
                    let c = i - t.baseFeePerGas;
                    if (c < 0 n) return 0 n;
                    return c
                }
            }
            t.estimateMaxPriorityFeePerGas = c, t.internal_estimateMaxPriorityFeePerGas = u
        },
        66344: (e, t, r) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.getBalance = void 0;
            let n = r(36373);
            async function i(e, {
                address: t,
                blockNumber: r,
                blockTag: i = "latest"
            }) {
                let o = r ? (0, n.numberToHex)(r) : void 0;
                return BigInt(await e.request({
                    method: "eth_getBalance",
                    params: [t, o || i]
                }))
            }
            t.getBalance = i
        },
        57002: (e, t, r) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.getBlock = void 0;
            let n = r(38129),
                i = r(36373),
                o = r(1812);
            async function s(e, {
                blockHash: t,
                blockNumber: r,
                blockTag: s,
                includeTransactions: a
            } = {}) {
                let c = a ? ? !1,
                    u = void 0 !== r ? (0, i.numberToHex)(r) : void 0,
                    l = null;
                if (!(l = t ? await e.request({
                        method: "eth_getBlockByHash",
                        params: [t, c]
                    }) : await e.request({
                        method: "eth_getBlockByNumber",
                        params: [u || (s ? ? "latest"), c]
                    }))) throw new n.BlockNotFoundError({
                    blockHash: t,
                    blockNumber: r
                });
                return (e.chain ? .formatters ? .block ? .format || o.formatBlock)(l)
            }
            t.getBlock = s
        },
        40058: (e, t, r) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.getBlockNumber = t.getBlockNumberCache = void 0;
            let n = r(66573),
                i = e => `blockNumber.${e}`;
            async function o(e, {
                cacheTime: t = e.cacheTime,
                maxAge: r
            } = {}) {
                return BigInt(await (0, n.withCache)(() => e.request({
                    method: "eth_blockNumber"
                }), {
                    cacheKey: i(e.uid),
                    cacheTime: r ? ? t
                }))
            }
            t.getBlockNumberCache = function(e) {
                return (0, n.getCache)(i(e))
            }, t.getBlockNumber = o
        },
        74610: (e, t, r) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.getBlockTransactionCount = void 0;
            let n = r(7506),
                i = r(36373);
            async function o(e, {
                blockHash: t,
                blockNumber: r,
                blockTag: o = "latest"
            } = {}) {
                let s;
                let a = void 0 !== r ? (0, i.numberToHex)(r) : void 0;
                return s = t ? await e.request({
                    method: "eth_getBlockTransactionCountByHash",
                    params: [t]
                }) : await e.request({
                    method: "eth_getBlockTransactionCountByNumber",
                    params: [a || o]
                }), (0, n.hexToNumber)(s)
            }
            t.getBlockTransactionCount = o
        },
        95322: (e, t, r) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.getBytecode = void 0;
            let n = r(36373);
            async function i(e, {
                address: t,
                blockNumber: r,
                blockTag: i = "latest"
            }) {
                let o = void 0 !== r ? (0, n.numberToHex)(r) : void 0,
                    s = await e.request({
                        method: "eth_getCode",
                        params: [t, o || i]
                    });
                if ("0x" !== s) return s
            }
            t.getBytecode = i
        },
        36966: (e, t, r) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.getChainId = void 0;
            let n = r(7506);
            async function i(e) {
                let t = await e.request({
                    method: "eth_chainId"
                });
                return (0, n.hexToNumber)(t)
            }
            t.getChainId = i
        },
        86199: (e, t, r) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.getContractEvents = void 0;
            let n = r(57754),
                i = r(55891),
                o = r(27583);
            async function s(e, {
                abi: t,
                address: r,
                args: s,
                blockHash: a,
                eventName: c,
                fromBlock: u,
                toBlock: l,
                strict: d
            }) {
                let h = c ? (0, n.getAbiItem)({
                        abi: t,
                        name: c
                    }) : void 0,
                    f = h ? void 0 : t.filter(e => "event" === e.type);
                return (0, i.getAction)(e, o.getLogs, "getLogs")({
                    address: r,
                    args: s,
                    blockHash: a,
                    event: h,
                    events: f,
                    fromBlock: u,
                    toBlock: l,
                    strict: d
                })
            }
            t.getContractEvents = s
        },
        78996: (e, t, r) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.getFeeHistory = void 0;
            let n = r(36373),
                i = r(19705);
            async function o(e, {
                blockCount: t,
                blockNumber: r,
                blockTag: o = "latest",
                rewardPercentiles: s
            }) {
                let a = r ? (0, n.numberToHex)(r) : void 0,
                    c = await e.request({
                        method: "eth_feeHistory",
                        params: [(0, n.numberToHex)(t), a || o, s]
                    });
                return (0, i.formatFeeHistory)(c)
            }
            t.getFeeHistory = o
        },
        27718: (e, t, r) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.getFilterChanges = void 0;
            let n = r(51889),
                i = r(81403),
                o = r(99738);
            async function s(e, {
                filter: t
            }) {
                let r = "strict" in t && t.strict;
                return (await t.request({
                    method: "eth_getFilterChanges",
                    params: [t.id]
                })).map(e => {
                    if ("string" == typeof e) return e;
                    try {
                        let {
                            eventName: n,
                            args: s
                        } = "abi" in t && t.abi ? (0, i.decodeEventLog)({
                            abi: t.abi,
                            data: e.data,
                            topics: e.topics,
                            strict: r
                        }) : {
                            eventName: void 0,
                            args: void 0
                        };
                        return (0, o.formatLog)(e, {
                            args: s,
                            eventName: n
                        })
                    } catch (s) {
                        let r, i;
                        if (s instanceof n.DecodeLogDataMismatch || s instanceof n.DecodeLogTopicsMismatch) {
                            if ("strict" in t && t.strict) return;
                            r = s.abiItem.name, i = s.abiItem.inputs ? .some(e => !("name" in e && e.name))
                        }
                        return (0, o.formatLog)(e, {
                            args: i ? [] : {},
                            eventName: r
                        })
                    }
                }).filter(Boolean)
            }
            t.getFilterChanges = s
        },
        35721: (e, t, r) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.getFilterLogs = void 0;
            let n = r(51889),
                i = r(81403),
                o = r(99738);
            async function s(e, {
                filter: t
            }) {
                let r = t.strict ? ? !1;
                return (await t.request({
                    method: "eth_getFilterLogs",
                    params: [t.id]
                })).map(e => {
                    try {
                        let {
                            eventName: n,
                            args: s
                        } = "abi" in t && t.abi ? (0, i.decodeEventLog)({
                            abi: t.abi,
                            data: e.data,
                            topics: e.topics,
                            strict: r
                        }) : {
                            eventName: void 0,
                            args: void 0
                        };
                        return (0, o.formatLog)(e, {
                            args: s,
                            eventName: n
                        })
                    } catch (s) {
                        let r, i;
                        if (s instanceof n.DecodeLogDataMismatch || s instanceof n.DecodeLogTopicsMismatch) {
                            if ("strict" in t && t.strict) return;
                            r = s.abiItem.name, i = s.abiItem.inputs ? .some(e => !("name" in e && e.name))
                        }
                        return (0, o.formatLog)(e, {
                            args: i ? [] : {},
                            eventName: r
                        })
                    }
                }).filter(Boolean)
            }
            t.getFilterLogs = s
        },
        6733: (e, t) => {
            "use strict";
            async function r(e) {
                return BigInt(await e.request({
                    method: "eth_gasPrice"
                }))
            }
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.getGasPrice = void 0, t.getGasPrice = r
        },
        27583: (e, t, r) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.getLogs = void 0;
            let n = r(51889),
                i = r(81403),
                o = r(15326),
                s = r(36373),
                a = r(99738);
            async function c(e, {
                address: t,
                blockHash: r,
                fromBlock: c,
                toBlock: u,
                event: l,
                events: d,
                args: h,
                strict: f
            } = {}) {
                let p = f ? ? !1,
                    g = d ? ? (l ? [l] : void 0),
                    m = [];
                return g && (m = [g.flatMap(e => (0, o.encodeEventTopics)({
                    abi: [e],
                    eventName: e.name,
                    args: h
                }))], l && (m = m[0])), (r ? await e.request({
                    method: "eth_getLogs",
                    params: [{
                        address: t,
                        topics: m,
                        blockHash: r
                    }]
                }) : await e.request({
                    method: "eth_getLogs",
                    params: [{
                        address: t,
                        topics: m,
                        fromBlock: "bigint" == typeof c ? (0, s.numberToHex)(c) : c,
                        toBlock: "bigint" == typeof u ? (0, s.numberToHex)(u) : u
                    }]
                })).map(e => {
                    try {
                        let {
                            eventName: t,
                            args: r
                        } = g ? (0, i.decodeEventLog)({
                            abi: g,
                            data: e.data,
                            topics: e.topics,
                            strict: p
                        }) : {
                            eventName: void 0,
                            args: void 0
                        };
                        return (0, a.formatLog)(e, {
                            args: r,
                            eventName: t
                        })
                    } catch (i) {
                        let t, r;
                        if (i instanceof n.DecodeLogDataMismatch || i instanceof n.DecodeLogTopicsMismatch) {
                            if (p) return;
                            t = i.abiItem.name, r = i.abiItem.inputs ? .some(e => !("name" in e && e.name))
                        }
                        return (0, a.formatLog)(e, {
                            args: r ? [] : {},
                            eventName: t
                        })
                    }
                }).filter(Boolean)
            }
            t.getLogs = c
        },
        89909: (e, t, r) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.getProof = void 0;
            let n = r(36373),
                i = r(35261);
            async function o(e, {
                address: t,
                blockNumber: r,
                blockTag: o,
                storageKeys: s
            }) {
                let a = void 0 !== r ? (0, n.numberToHex)(r) : void 0,
                    c = await e.request({
                        method: "eth_getProof",
                        params: [t, s, a || (o ? ? "latest")]
                    });
                return (0, i.formatProof)(c)
            }
            t.getProof = o
        },
        72146: (e, t, r) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.getStorageAt = void 0;
            let n = r(36373);
            async function i(e, {
                address: t,
                blockNumber: r,
                blockTag: i = "latest",
                slot: o
            }) {
                let s = void 0 !== r ? (0, n.numberToHex)(r) : void 0;
                return await e.request({
                    method: "eth_getStorageAt",
                    params: [t, o, s || i]
                })
            }
            t.getStorageAt = i
        },
        51942: (e, t, r) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.getTransaction = void 0;
            let n = r(99449),
                i = r(36373),
                o = r(31616);
            async function s(e, {
                blockHash: t,
                blockNumber: r,
                blockTag: s,
                hash: a,
                index: c
            }) {
                let u = s || "latest",
                    l = void 0 !== r ? (0, i.numberToHex)(r) : void 0,
                    d = null;
                if (a ? d = await e.request({
                        method: "eth_getTransactionByHash",
                        params: [a]
                    }) : t ? d = await e.request({
                        method: "eth_getTransactionByBlockHashAndIndex",
                        params: [t, (0, i.numberToHex)(c)]
                    }) : (l || u) && (d = await e.request({
                        method: "eth_getTransactionByBlockNumberAndIndex",
                        params: [l || u, (0, i.numberToHex)(c)]
                    })), !d) throw new n.TransactionNotFoundError({
                    blockHash: t,
                    blockNumber: r,
                    blockTag: u,
                    hash: a,
                    index: c
                });
                return (e.chain ? .formatters ? .transaction ? .format || o.formatTransaction)(d)
            }
            t.getTransaction = s
        },
        11274: (e, t, r) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.getTransactionConfirmations = void 0;
            let n = r(55891),
                i = r(40058),
                o = r(51942);
            async function s(e, {
                hash: t,
                transactionReceipt: r
            }) {
                let [s, a] = await Promise.all([(0, n.getAction)(e, i.getBlockNumber, "getBlockNumber")({}), t ? (0, n.getAction)(e, o.getTransaction, "getBlockNumber")({
                    hash: t
                }) : void 0]), c = r ? .blockNumber || a ? .blockNumber;
                return c ? s - c + 1 n : 0 n
            }
            t.getTransactionConfirmations = s
        },
        56861: (e, t, r) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.getTransactionCount = void 0;
            let n = r(7506),
                i = r(36373);
            async function o(e, {
                address: t,
                blockTag: r = "latest",
                blockNumber: o
            }) {
                let s = await e.request({
                    method: "eth_getTransactionCount",
                    params: [t, o ? (0, i.numberToHex)(o) : r]
                });
                return (0, n.hexToNumber)(s)
            }
            t.getTransactionCount = o
        },
        80616: (e, t, r) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.getTransactionReceipt = void 0;
            let n = r(99449),
                i = r(12435);
            async function o(e, {
                hash: t
            }) {
                let r = await e.request({
                    method: "eth_getTransactionReceipt",
                    params: [t]
                });
                if (!r) throw new n.TransactionReceiptNotFoundError({
                    hash: t
                });
                return (e.chain ? .formatters ? .transactionReceipt ? .format || i.formatTransactionReceipt)(r)
            }
            t.getTransactionReceipt = o
        },
        24145: (e, t, r) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.multicall = void 0;
            let n = r(71635),
                i = r(51889),
                o = r(72968),
                s = r(30211),
                a = r(47318),
                c = r(92496),
                u = r(20913),
                l = r(19261),
                d = r(55891),
                h = r(67927);
            async function f(e, t) {
                let {
                    allowFailure: r = !0,
                    batchSize: f,
                    blockNumber: p,
                    blockTag: g,
                    contracts: m,
                    multicallAddress: b
                } = t, y = f ? ? ("object" == typeof e.batch ? .multicall && e.batch.multicall.batchSize || 1024), v = b;
                if (!v) {
                    if (!e.chain) throw Error("client chain not configured. multicallAddress is required.");
                    v = (0, u.getChainContractAddress)({
                        blockNumber: p,
                        chain: e.chain,
                        contract: "multicall3"
                    })
                }
                let w = [
                        []
                    ],
                    E = 0,
                    _ = 0;
                for (let e = 0; e < m.length; e++) {
                    let {
                        abi: t,
                        address: n,
                        args: i,
                        functionName: o
                    } = m[e];
                    try {
                        let e = (0, c.encodeFunctionData)({
                            abi: t,
                            args: i,
                            functionName: o
                        });
                        _ += (e.length - 2) / 2, y > 0 && _ > y && w[E].length > 0 && (E++, _ = (e.length - 2) / 2, w[E] = []), w[E] = [...w[E], {
                            allowFailure: !0,
                            callData: e,
                            target: n
                        }]
                    } catch (s) {
                        let e = (0, l.getContractError)(s, {
                            abi: t,
                            address: n,
                            args: i,
                            docsPath: "/docs/contract/multicall",
                            functionName: o
                        });
                        if (!r) throw e;
                        w[E] = [...w[E], {
                            allowFailure: !0,
                            callData: "0x",
                            target: n
                        }]
                    }
                }
                let P = await Promise.allSettled(w.map(t => (0, d.getAction)(e, h.readContract, "readContract")({
                        abi: n.multicall3Abi,
                        address: v,
                        args: [t],
                        blockNumber: p,
                        blockTag: g,
                        functionName: "aggregate3"
                    }))),
                    x = [];
                for (let e = 0; e < P.length; e++) {
                    let t = P[e];
                    if ("rejected" === t.status) {
                        if (!r) throw t.reason;
                        for (let r = 0; r < w[e].length; r++) x.push({
                            status: "failure",
                            error: t.reason,
                            result: void 0
                        });
                        continue
                    }
                    let n = t.value;
                    for (let t = 0; t < n.length; t++) {
                        let {
                            returnData: o,
                            success: c
                        } = n[t], {
                            callData: u
                        } = w[e][t], {
                            abi: d,
                            address: h,
                            functionName: f,
                            args: p
                        } = m[x.length];
                        try {
                            if ("0x" === u) throw new i.AbiDecodingZeroDataError;
                            if (!c) throw new s.RawContractError({
                                data: o
                            });
                            let e = (0, a.decodeFunctionResult)({
                                abi: d,
                                args: p,
                                data: o,
                                functionName: f
                            });
                            x.push(r ? {
                                result: e,
                                status: "success"
                            } : e)
                        } catch (t) {
                            let e = (0, l.getContractError)(t, {
                                abi: d,
                                address: h,
                                args: p,
                                docsPath: "/docs/contract/multicall",
                                functionName: f
                            });
                            if (!r) throw e;
                            x.push({
                                error: e,
                                result: void 0,
                                status: "failure"
                            })
                        }
                    }
                }
                if (x.length !== m.length) throw new o.BaseError("multicall results mismatch");
                return x
            }
            t.multicall = f
        },
        67927: (e, t, r) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.readContract = void 0;
            let n = r(47318),
                i = r(92496),
                o = r(19261),
                s = r(55891),
                a = r(23683);
            async function c(e, {
                abi: t,
                address: r,
                args: c,
                functionName: u,
                ...l
            }) {
                let d = (0, i.encodeFunctionData)({
                    abi: t,
                    args: c,
                    functionName: u
                });
                try {
                    let {
                        data: i
                    } = await (0, s.getAction)(e, a.call, "call")({
                        data: d,
                        to: r,
                        ...l
                    });
                    return (0, n.decodeFunctionResult)({
                        abi: t,
                        args: c,
                        functionName: u,
                        data: i || "0x"
                    })
                } catch (e) {
                    throw (0, o.getContractError)(e, {
                        abi: t,
                        address: r,
                        args: c,
                        docsPath: "/docs/contract/readContract",
                        functionName: u
                    })
                }
            }
            t.readContract = c
        },
        85197: (e, t, r) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.simulateContract = void 0;
            let n = r(36401),
                i = r(47318),
                o = r(92496),
                s = r(19261),
                a = r(55891),
                c = r(23683);
            async function u(e, {
                abi: t,
                address: r,
                args: u,
                dataSuffix: l,
                functionName: d,
                ...h
            }) {
                let f = h.account ? (0, n.parseAccount)(h.account) : void 0,
                    p = (0, o.encodeFunctionData)({
                        abi: t,
                        args: u,
                        functionName: d
                    });
                try {
                    let {
                        data: n
                    } = await (0, a.getAction)(e, c.call, "call")({
                        batch: !1,
                        data: `${p}${l?l.replace("0x",""):""}`,
                        to: r,
                        ...h
                    });
                    return {
                        result: (0, i.decodeFunctionResult)({
                            abi: t,
                            args: u,
                            functionName: d,
                            data: n || "0x"
                        }),
                        request: {
                            abi: t,
                            address: r,
                            args: u,
                            dataSuffix: l,
                            functionName: d,
                            ...h
                        }
                    }
                } catch (e) {
                    throw (0, s.getContractError)(e, {
                        abi: t,
                        address: r,
                        args: u,
                        docsPath: "/docs/contract/simulateContract",
                        functionName: d,
                        sender: f ? .address
                    })
                }
            }
            t.simulateContract = u
        },
        20998: (e, t) => {
            "use strict";
            async function r(e, {
                filter: t
            }) {
                return t.request({
                    method: "eth_uninstallFilter",
                    params: [t.id]
                })
            }
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.uninstallFilter = void 0, t.uninstallFilter = r
        },
        42508: (e, t, r) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.verifyHash = void 0;
            let n = r(71635),
                i = r(10089),
                o = r(30211),
                s = r(74655),
                a = r(55891),
                c = r(83471),
                u = r(23683);
            async function l(e, {
                address: t,
                hash: r,
                signature: l,
                ...d
            }) {
                let h = (0, c.isHex)(l) ? l : (0, c.toHex)(l);
                try {
                    let {
                        data: o
                    } = await (0, a.getAction)(e, u.call, "call")({
                        data: (0, c.encodeDeployData)({
                            abi: n.universalSignatureValidatorAbi,
                            args: [t, r, h],
                            bytecode: i.universalSignatureValidatorByteCode
                        }),
                        ...d
                    });
                    return (0, s.isBytesEqual)(o ? ? "0x0", "0x1")
                } catch (e) {
                    if (e instanceof o.CallExecutionError) return !1;
                    throw e
                }
            }
            t.verifyHash = l
        },
        56560: (e, t, r) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.verifyMessage = void 0;
            let n = r(83471),
                i = r(42508);
            async function o(e, {
                address: t,
                message: r,
                signature: o,
                ...s
            }) {
                let a = (0, n.hashMessage)(r);
                return (0, i.verifyHash)(e, {
                    address: t,
                    hash: a,
                    signature: o,
                    ...s
                })
            }
            t.verifyMessage = o
        },
        59635: (e, t, r) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.verifyTypedData = void 0;
            let n = r(67419),
                i = r(42508);
            async function o(e, {
                address: t,
                signature: r,
                message: o,
                primaryType: s,
                types: a,
                domain: c,
                ...u
            }) {
                let l = (0, n.hashTypedData)({
                    message: o,
                    primaryType: s,
                    types: a,
                    domain: c
                });
                return (0, i.verifyHash)(e, {
                    address: t,
                    hash: l,
                    signature: r,
                    ...u
                })
            }
            t.verifyTypedData = o
        },
        98627: (e, t, r) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.waitForTransactionReceipt = void 0;
            let n = r(38129),
                i = r(99449),
                o = r(55891),
                s = r(17531),
                a = r(78967),
                c = r(63291),
                u = r(57002),
                l = r(51942),
                d = r(80616),
                h = r(75197);
            async function f(e, {
                confirmations: t = 1,
                hash: r,
                onReplaced: f,
                pollingInterval: p = e.pollingInterval,
                timeout: g
            }) {
                let m, b, y;
                let v = (0, c.stringify)(["waitForTransactionReceipt", e.uid, r]),
                    w = !1;
                return new Promise((c, E) => {
                    g && setTimeout(() => E(new i.WaitForTransactionReceiptTimeoutError({
                        hash: r
                    })), g);
                    let _ = (0, s.observe)(v, {
                        onReplaced: f,
                        resolve: c,
                        reject: E
                    }, s => {
                        let c = (0, o.getAction)(e, h.watchBlockNumber, "watchBlockNumber")({
                            emitMissed: !0,
                            emitOnBegin: !0,
                            poll: !0,
                            pollingInterval: p,
                            async onBlockNumber(h) {
                                if (w) return;
                                let f = h,
                                    p = e => {
                                        c(), e(), _()
                                    };
                                try {
                                    if (y) {
                                        if (t > 1 && (!y.blockNumber || f - y.blockNumber + 1 n < t)) return;
                                        p(() => s.resolve(y));
                                        return
                                    }
                                    if (m || (w = !0, await (0, a.withRetry)(async () => {
                                            (m = await (0, o.getAction)(e, l.getTransaction, "getTransaction")({
                                                hash: r
                                            })).blockNumber && (f = m.blockNumber)
                                        }, {
                                            delay: ({
                                                count: e
                                            }) => 200 * ~~(1 << e),
                                            retryCount: 6
                                        }), w = !1), y = await (0, o.getAction)(e, d.getTransactionReceipt, "getTransactionReceipt")({
                                            hash: r
                                        }), t > 1 && (!y.blockNumber || f - y.blockNumber + 1 n < t)) return;
                                    p(() => s.resolve(y))
                                } catch (r) {
                                    if (m && (r instanceof i.TransactionNotFoundError || r instanceof i.TransactionReceiptNotFoundError)) try {
                                        b = m, w = !0;
                                        let r = await (0, a.withRetry)(() => (0, o.getAction)(e, u.getBlock, "getBlock")({
                                            blockNumber: f,
                                            includeTransactions: !0
                                        }), {
                                            delay: ({
                                                count: e
                                            }) => 200 * ~~(1 << e),
                                            retryCount: 6,
                                            shouldRetry: ({
                                                error: e
                                            }) => e instanceof n.BlockNotFoundError
                                        });
                                        w = !1;
                                        let i = r.transactions.find(({
                                            from: e,
                                            nonce: t
                                        }) => e === b.from && t === b.nonce);
                                        if (!i || (y = await (0, o.getAction)(e, d.getTransactionReceipt, "getTransactionReceipt")({
                                                hash: i.hash
                                            }), t > 1 && (!y.blockNumber || f - y.blockNumber + 1 n < t))) return;
                                        let c = "replaced";
                                        i.to === b.to && i.value === b.value ? c = "repriced" : i.from === i.to && 0 n === i.value && (c = "cancelled"), p(() => {
                                            s.onReplaced ? .({
                                                reason: c,
                                                replacedTransaction: b,
                                                transaction: i,
                                                transactionReceipt: y
                                            }), s.resolve(y)
                                        })
                                    } catch (e) {
                                        p(() => s.reject(e))
                                    } else p(() => s.reject(r))
                                }
                            }
                        })
                    })
                })
            }
            t.waitForTransactionReceipt = f
        },
        75197: (e, t, r) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.watchBlockNumber = void 0;
            let n = r(7506),
                i = r(55891),
                o = r(17531),
                s = r(69595),
                a = r(63291),
                c = r(40058);
            t.watchBlockNumber = function(e, {
                emitOnBegin: t = !1,
                emitMissed: r = !1,
                onBlockNumber: u,
                onError: l,
                poll: d,
                pollingInterval: h = e.pollingInterval
            }) {
                let f, p, g;
                return (void 0 !== d ? d : "webSocket" !== e.transport.type) ? (() => {
                    let n = (0, a.stringify)(["watchBlockNumber", e.uid, t, r, h]);
                    return (0, o.observe)(n, {
                        onBlockNumber: u,
                        onError: l
                    }, n => (0, s.poll)(async () => {
                        try {
                            let t = await (0, i.getAction)(e, c.getBlockNumber, "getBlockNumber")({
                                cacheTime: 0
                            });
                            if (f) {
                                if (t === f) return;
                                if (t - f > 1 && r)
                                    for (let e = f + 1 n; e < t; e++) n.onBlockNumber(e, f), f = e
                            }(!f || t > f) && (n.onBlockNumber(t, f), f = t)
                        } catch (e) {
                            n.onError ? .(e)
                        }
                    }, {
                        emitOnBegin: t,
                        interval: h
                    }))
                })() : (p = !0, g = () => p = !1, (async () => {
                    try {
                        let {
                            unsubscribe: t
                        } = await e.transport.subscribe({
                            params: ["newHeads"],
                            onData(e) {
                                if (!p) return;
                                let t = (0, n.hexToBigInt)(e.result ? .number);
                                u(t, f), f = t
                            },
                            onError(e) {
                                l ? .(e)
                            }
                        });
                        g = t, p || g()
                    } catch (e) {
                        l ? .(e)
                    }
                })(), g)
            }
        },
        21896: (e, t, r) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.watchBlocks = void 0;
            let n = r(1812),
                i = r(55891),
                o = r(17531),
                s = r(69595),
                a = r(63291),
                c = r(57002);
            t.watchBlocks = function(e, {
                blockTag: t = "latest",
                emitMissed: r = !1,
                emitOnBegin: u = !1,
                onBlock: l,
                onError: d,
                includeTransactions: h,
                poll: f,
                pollingInterval: p = e.pollingInterval
            }) {
                let g, m, b;
                let y = void 0 !== f ? f : "webSocket" !== e.transport.type,
                    v = h ? ? !1;
                return y ? (() => {
                    let n = (0, a.stringify)(["watchBlocks", e.uid, r, u, v, p]);
                    return (0, o.observe)(n, {
                        onBlock: l,
                        onError: d
                    }, n => (0, s.poll)(async () => {
                        try {
                            let o = await (0, i.getAction)(e, c.getBlock, "getBlock")({
                                blockTag: t,
                                includeTransactions: v
                            });
                            if (o.number && g ? .number) {
                                if (o.number === g.number) return;
                                if (o.number - g.number > 1 && r)
                                    for (let t = g ? .number + 1 n; t < o.number; t++) {
                                        let r = await (0, i.getAction)(e, c.getBlock, "getBlock")({
                                            blockNumber: t,
                                            includeTransactions: v
                                        });
                                        n.onBlock(r, g), g = r
                                    }
                            }(!g ? .number || "pending" === t && !o ? .number || o.number && o.number > g.number) && (n.onBlock(o, g), g = o)
                        } catch (e) {
                            n.onError ? .(e)
                        }
                    }, {
                        emitOnBegin: u,
                        interval: p
                    }))
                })() : (m = !0, b = () => m = !1, (async () => {
                    try {
                        let {
                            unsubscribe: t
                        } = await e.transport.subscribe({
                            params: ["newHeads"],
                            onData(t) {
                                if (!m) return;
                                let r = (e.chain ? .formatters ? .block ? .format || n.formatBlock)(t.result);
                                l(r, g), g = r
                            },
                            onError(e) {
                                d ? .(e)
                            }
                        });
                        b = t, m || b()
                    } catch (e) {
                        d ? .(e)
                    }
                })(), b)
            }
        },
        77013: (e, t, r) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.watchContractEvent = void 0;
            let n = r(17531),
                i = r(69595),
                o = r(63291),
                s = r(51889),
                a = r(56467),
                c = r(81403),
                u = r(15326),
                l = r(99738),
                d = r(55891),
                h = r(30270),
                f = r(40058),
                p = r(86199),
                g = r(27718),
                m = r(20998);
            t.watchContractEvent = function(e, {
                abi: t,
                address: r,
                args: b,
                batch: y = !0,
                eventName: v,
                onError: w,
                onLogs: E,
                poll: _,
                pollingInterval: P = e.pollingInterval,
                strict: x
            }) {
                let I, O;
                return (void 0 !== _ ? _ : "webSocket" !== e.transport.type) ? (() => {
                    let s = (0, o.stringify)(["watchContractEvent", r, b, y, e.uid, v, P]),
                        c = x ? ? !1;
                    return (0, n.observe)(s, {
                        onLogs: E,
                        onError: w
                    }, n => {
                        let o, s;
                        let u = !1,
                            l = (0, i.poll)(async () => {
                                if (!u) {
                                    try {
                                        s = await (0, d.getAction)(e, h.createContractEventFilter, "createContractEventFilter")({
                                            abi: t,
                                            address: r,
                                            args: b,
                                            eventName: v,
                                            strict: c
                                        })
                                    } catch {}
                                    u = !0;
                                    return
                                }
                                try {
                                    let i;
                                    if (s) i = await (0, d.getAction)(e, g.getFilterChanges, "getFilterChanges")({
                                        filter: s
                                    });
                                    else {
                                        let n = await (0, d.getAction)(e, f.getBlockNumber, "getBlockNumber")({});
                                        i = o && o !== n ? await (0, d.getAction)(e, p.getContractEvents, "getContractEvents")({
                                            abi: t,
                                            address: r,
                                            args: b,
                                            eventName: v,
                                            fromBlock: o + 1 n,
                                            toBlock: n,
                                            strict: c
                                        }) : [], o = n
                                    }
                                    if (0 === i.length) return;
                                    if (y) n.onLogs(i);
                                    else
                                        for (let e of i) n.onLogs([e])
                                } catch (e) {
                                    s && e instanceof a.InvalidInputRpcError && (u = !1), n.onError ? .(e)
                                }
                            }, {
                                emitOnBegin: !0,
                                interval: P
                            });
                        return async () => {
                            s && await (0, d.getAction)(e, m.uninstallFilter, "uninstallFilter")({
                                filter: s
                            }), l()
                        }
                    })
                })() : (I = !0, O = () => I = !1, (async () => {
                    try {
                        let n = v ? (0, u.encodeEventTopics)({
                                abi: t,
                                eventName: v,
                                args: b
                            }) : [],
                            {
                                unsubscribe: i
                            } = await e.transport.subscribe({
                                params: ["logs", {
                                    address: r,
                                    topics: n
                                }],
                                onData(e) {
                                    if (!I) return;
                                    let r = e.result;
                                    try {
                                        let {
                                            eventName: e,
                                            args: n
                                        } = (0, c.decodeEventLog)({
                                            abi: t,
                                            data: r.data,
                                            topics: r.topics,
                                            strict: x
                                        }), i = (0, l.formatLog)(r, {
                                            args: n,
                                            eventName: e
                                        });
                                        E([i])
                                    } catch (i) {
                                        let e, t;
                                        if (i instanceof s.DecodeLogDataMismatch || i instanceof s.DecodeLogTopicsMismatch) {
                                            if (x) return;
                                            e = i.abiItem.name, t = i.abiItem.inputs ? .some(e => !("name" in e && e.name))
                                        }
                                        let n = (0, l.formatLog)(r, {
                                            args: t ? [] : {},
                                            eventName: e
                                        });
                                        E([n])
                                    }
                                },
                                onError(e) {
                                    w ? .(e)
                                }
                            });
                        O = i, I || O()
                    } catch (e) {
                        w ? .(e)
                    }
                })(), O)
            }
        },
        54714: (e, t, r) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.watchEvent = void 0;
            let n = r(17531),
                i = r(69595),
                o = r(63291),
                s = r(51889),
                a = r(56467),
                c = r(55891),
                u = r(83471),
                l = r(44314),
                d = r(40058),
                h = r(27718),
                f = r(27583),
                p = r(20998);
            t.watchEvent = function(e, {
                address: t,
                args: r,
                batch: g = !0,
                event: m,
                events: b,
                onError: y,
                onLogs: v,
                poll: w,
                pollingInterval: E = e.pollingInterval,
                strict: _
            }) {
                let P, x;
                let I = void 0 !== w ? w : "webSocket" !== e.transport.type,
                    O = _ ? ? !1;
                return I ? (() => {
                    let s = (0, o.stringify)(["watchEvent", t, r, g, e.uid, m, E]);
                    return (0, n.observe)(s, {
                        onLogs: v,
                        onError: y
                    }, n => {
                        let o, s;
                        let u = !1,
                            y = (0, i.poll)(async () => {
                                if (!u) {
                                    try {
                                        s = await (0, c.getAction)(e, l.createEventFilter, "createEventFilter")({
                                            address: t,
                                            args: r,
                                            event: m,
                                            events: b,
                                            strict: O
                                        })
                                    } catch {}
                                    u = !0;
                                    return
                                }
                                try {
                                    let i;
                                    if (s) i = await (0, c.getAction)(e, h.getFilterChanges, "getFilterChanges")({
                                        filter: s
                                    });
                                    else {
                                        let n = await (0, c.getAction)(e, d.getBlockNumber, "getBlockNumber")({});
                                        i = o && o !== n ? await (0, c.getAction)(e, f.getLogs, "getLogs")({
                                            address: t,
                                            args: r,
                                            event: m,
                                            events: b,
                                            fromBlock: o + 1 n,
                                            toBlock: n
                                        }) : [], o = n
                                    }
                                    if (0 === i.length) return;
                                    if (g) n.onLogs(i);
                                    else
                                        for (let e of i) n.onLogs([e])
                                } catch (e) {
                                    s && e instanceof a.InvalidInputRpcError && (u = !1), n.onError ? .(e)
                                }
                            }, {
                                emitOnBegin: !0,
                                interval: E
                            });
                        return async () => {
                            s && await (0, c.getAction)(e, p.uninstallFilter, "uninstallFilter")({
                                filter: s
                            }), y()
                        }
                    })
                })() : (P = !0, x = () => P = !1, (async () => {
                    try {
                        let n = b ? ? (m ? [m] : void 0),
                            i = [];
                        n && (i = [n.flatMap(e => (0, u.encodeEventTopics)({
                            abi: [e],
                            eventName: e.name,
                            args: r
                        }))], m && (i = i[0]));
                        let {
                            unsubscribe: o
                        } = await e.transport.subscribe({
                            params: ["logs", {
                                address: t,
                                topics: i
                            }],
                            onData(e) {
                                if (!P) return;
                                let t = e.result;
                                try {
                                    let {
                                        eventName: e,
                                        args: r
                                    } = (0, u.decodeEventLog)({
                                        abi: n,
                                        data: t.data,
                                        topics: t.topics,
                                        strict: O
                                    }), i = (0, u.formatLog)(t, {
                                        args: r,
                                        eventName: e
                                    });
                                    v([i])
                                } catch (i) {
                                    let e, r;
                                    if (i instanceof s.DecodeLogDataMismatch || i instanceof s.DecodeLogTopicsMismatch) {
                                        if (_) return;
                                        e = i.abiItem.name, r = i.abiItem.inputs ? .some(e => !("name" in e && e.name))
                                    }
                                    let n = (0, u.formatLog)(t, {
                                        args: r ? [] : {},
                                        eventName: e
                                    });
                                    v([n])
                                }
                            },
                            onError(e) {
                                y ? .(e)
                            }
                        });
                        x = o, P || x()
                    } catch (e) {
                        y ? .(e)
                    }
                })(), x)
            }
        },
        95181: (e, t, r) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.watchPendingTransactions = void 0;
            let n = r(55891),
                i = r(17531),
                o = r(69595),
                s = r(63291),
                a = r(21997),
                c = r(27718),
                u = r(20998);
            t.watchPendingTransactions = function(e, {
                batch: t = !0,
                onError: r,
                onTransactions: l,
                poll: d,
                pollingInterval: h = e.pollingInterval
            }) {
                let f, p;
                return (void 0 !== d ? d : "webSocket" !== e.transport.type) ? (() => {
                    let d = (0, s.stringify)(["watchPendingTransactions", e.uid, t, h]);
                    return (0, i.observe)(d, {
                        onTransactions: l,
                        onError: r
                    }, r => {
                        let i;
                        let s = (0, o.poll)(async () => {
                            try {
                                if (!i) try {
                                    i = await (0, n.getAction)(e, a.createPendingTransactionFilter, "createPendingTransactionFilter")({});
                                    return
                                } catch (e) {
                                    throw s(), e
                                }
                                let o = await (0, n.getAction)(e, c.getFilterChanges, "getFilterChanges")({
                                    filter: i
                                });
                                if (0 === o.length) return;
                                if (t) r.onTransactions(o);
                                else
                                    for (let e of o) r.onTransactions([e])
                            } catch (e) {
                                r.onError ? .(e)
                            }
                        }, {
                            emitOnBegin: !0,
                            interval: h
                        });
                        return async () => {
                            i && await (0, n.getAction)(e, u.uninstallFilter, "uninstallFilter")({
                                filter: i
                            }), s()
                        }
                    })
                })() : (f = !0, p = () => f = !1, (async () => {
                    try {
                        let {
                            unsubscribe: t
                        } = await e.transport.subscribe({
                            params: ["newPendingTransactions"],
                            onData(e) {
                                if (!f) return;
                                let t = e.result;
                                l([t])
                            },
                            onError(e) {
                                r ? .(e)
                            }
                        });
                        p = t, f || p()
                    } catch (e) {
                        r ? .(e)
                    }
                })(), p)
            }
        },
        45768: (e, t) => {
            "use strict";
            async function r(e, {
                hash: t
            }) {
                await e.request({
                    method: `${e.mode}_dropTransaction`,
                    params: [t]
                })
            }
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.dropTransaction = void 0, t.dropTransaction = r
        },
        39728: (e, t) => {
            "use strict";
            async function r(e) {
                return e.request({
                    method: `${e.mode}_dumpState`
                })
            }
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.dumpState = void 0, t.dumpState = r
        },
        52080: (e, t) => {
            "use strict";
            async function r(e) {
                return "ganache" === e.mode ? await e.request({
                    method: "eth_mining"
                }) : await e.request({
                    method: `${e.mode}_getAutomine`
                })
            }
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.getAutomine = void 0, t.getAutomine = r
        },
        35833: (e, t) => {
            "use strict";
            async function r(e) {
                return await e.request({
                    method: "txpool_content"
                })
            }
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.getTxpoolContent = void 0, t.getTxpoolContent = r
        },
        51933: (e, t, r) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.getTxpoolStatus = void 0;
            let n = r(7506);
            async function i(e) {
                let {
                    pending: t,
                    queued: r
                } = await e.request({
                    method: "txpool_status"
                });
                return {
                    pending: (0, n.hexToNumber)(t),
                    queued: (0, n.hexToNumber)(r)
                }
            }
            t.getTxpoolStatus = i
        },
        33139: (e, t) => {
            "use strict";
            async function r(e, {
                address: t
            }) {
                await e.request({
                    method: `${e.mode}_impersonateAccount`,
                    params: [t]
                })
            }
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.impersonateAccount = void 0, t.impersonateAccount = r
        },
        43193: (e, t, r) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.increaseTime = void 0;
            let n = r(36373);
            async function i(e, {
                seconds: t
            }) {
                return await e.request({
                    method: "evm_increaseTime",
                    params: [(0, n.numberToHex)(t)]
                })
            }
            t.increaseTime = i
        },
        69321: (e, t) => {
            "use strict";
            async function r(e) {
                return await e.request({
                    method: "txpool_inspect"
                })
            }
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.inspectTxpool = void 0, t.inspectTxpool = r
        },
        83551: (e, t) => {
            "use strict";
            async function r(e, {
                state: t
            }) {
                await e.request({
                    method: `${e.mode}_loadState`,
                    params: [t]
                })
            }
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.loadState = void 0, t.loadState = r
        },
        5175: (e, t, r) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.mine = void 0;
            let n = r(36373);
            async function i(e, {
                blocks: t,
                interval: r
            }) {
                "ganache" === e.mode ? await e.request({
                    method: "evm_mine",
                    params: [{
                        blocks: (0, n.numberToHex)(t)
                    }]
                }) : await e.request({
                    method: `${e.mode}_mine`,
                    params: [(0, n.numberToHex)(t), (0, n.numberToHex)(r || 0)]
                })
            }
            t.mine = i
        },
        28366: (e, t) => {
            "use strict";
            async function r(e) {
                await e.request({
                    method: `${e.mode}_removeBlockTimestampInterval`
                })
            }
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.removeBlockTimestampInterval = void 0, t.removeBlockTimestampInterval = r
        },
        24113: (e, t) => {
            "use strict";
            async function r(e, {
                blockNumber: t,
                jsonRpcUrl: r
            } = {}) {
                await e.request({
                    method: `${e.mode}_reset`,
                    params: [{
                        forking: {
                            blockNumber: Number(t),
                            jsonRpcUrl: r
                        }
                    }]
                })
            }
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.reset = void 0, t.reset = r
        },
        57499: (e, t) => {
            "use strict";
            async function r(e, {
                id: t
            }) {
                await e.request({
                    method: "evm_revert",
                    params: [t]
                })
            }
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.revert = void 0, t.revert = r
        },
        91243: (e, t, r) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.sendUnsignedTransaction = void 0;
            let n = r(55613),
                i = r(61033);
            async function o(e, t) {
                let {
                    accessList: r,
                    data: o,
                    from: s,
                    gas: a,
                    gasPrice: c,
                    maxFeePerGas: u,
                    maxPriorityFeePerGas: l,
                    nonce: d,
                    to: h,
                    value: f,
                    ...p
                } = t, g = e.chain ? .formatters ? .transactionRequest ? .format, m = (g || i.formatTransactionRequest)({ ...(0, n.extract)(p, {
                        format: g
                    }),
                    accessList: r,
                    data: o,
                    from: s,
                    gas: a,
                    gasPrice: c,
                    maxFeePerGas: u,
                    maxPriorityFeePerGas: l,
                    nonce: d,
                    to: h,
                    value: f
                });
                return await e.request({
                    method: "eth_sendUnsignedTransaction",
                    params: [m]
                })
            }
            t.sendUnsignedTransaction = o
        },
        85966: (e, t) => {
            "use strict";
            async function r(e, t) {
                "ganache" === e.mode ? t ? await e.request({
                    method: "miner_start"
                }) : await e.request({
                    method: "miner_stop"
                }) : await e.request({
                    method: "evm_setAutomine",
                    params: [t]
                })
            }
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.setAutomine = void 0, t.setAutomine = r
        },
        89379: (e, t, r) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.setBalance = void 0;
            let n = r(36373);
            async function i(e, {
                address: t,
                value: r
            }) {
                "ganache" === e.mode ? await e.request({
                    method: "evm_setAccountBalance",
                    params: [t, (0, n.numberToHex)(r)]
                }) : await e.request({
                    method: `${e.mode}_setBalance`,
                    params: [t, (0, n.numberToHex)(r)]
                })
            }
            t.setBalance = i
        },
        33076: (e, t, r) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.setBlockGasLimit = void 0;
            let n = r(36373);
            async function i(e, {
                gasLimit: t
            }) {
                await e.request({
                    method: "evm_setBlockGasLimit",
                    params: [(0, n.numberToHex)(t)]
                })
            }
            t.setBlockGasLimit = i
        },
        27339: (e, t) => {
            "use strict";
            async function r(e, {
                interval: t
            }) {
                let r = "hardhat" === e.mode ? 1e3 * t : t;
                await e.request({
                    method: `${e.mode}_setBlockTimestampInterval`,
                    params: [r]
                })
            }
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.setBlockTimestampInterval = void 0, t.setBlockTimestampInterval = r
        },
        71190: (e, t) => {
            "use strict";
            async function r(e, {
                address: t,
                bytecode: r
            }) {
                await e.request({
                    method: `${e.mode}_setCode`,
                    params: [t, r]
                })
            }
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.setCode = void 0, t.setCode = r
        },
        52323: (e, t) => {
            "use strict";
            async function r(e, {
                address: t
            }) {
                await e.request({
                    method: `${e.mode}_setCoinbase`,
                    params: [t]
                })
            }
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.setCoinbase = void 0, t.setCoinbase = r
        },
        23450: (e, t) => {
            "use strict";
            async function r(e, {
                interval: t
            }) {
                let r = "hardhat" === e.mode ? 1e3 * t : t;
                await e.request({
                    method: "evm_setIntervalMining",
                    params: [r]
                })
            }
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.setIntervalMining = void 0, t.setIntervalMining = r
        },
        20722: (e, t) => {
            "use strict";
            async function r(e, t) {
                await e.request({
                    method: `${e.mode}_setLoggingEnabled`,
                    params: [t]
                })
            }
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.setLoggingEnabled = void 0, t.setLoggingEnabled = r
        },
        57140: (e, t, r) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.setMinGasPrice = void 0;
            let n = r(36373);
            async function i(e, {
                gasPrice: t
            }) {
                await e.request({
                    method: `${e.mode}_setMinGasPrice`,
                    params: [(0, n.numberToHex)(t)]
                })
            }
            t.setMinGasPrice = i
        },
        98758: (e, t, r) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.setNextBlockBaseFeePerGas = void 0;
            let n = r(36373);
            async function i(e, {
                baseFeePerGas: t
            }) {
                await e.request({
                    method: `${e.mode}_setNextBlockBaseFeePerGas`,
                    params: [(0, n.numberToHex)(t)]
                })
            }
            t.setNextBlockBaseFeePerGas = i
        },
        42036: (e, t, r) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.setNextBlockTimestamp = void 0;
            let n = r(36373);
            async function i(e, {
                timestamp: t
            }) {
                await e.request({
                    method: "evm_setNextBlockTimestamp",
                    params: [(0, n.numberToHex)(t)]
                })
            }
            t.setNextBlockTimestamp = i
        },
        58118: (e, t, r) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.setNonce = void 0;
            let n = r(36373);
            async function i(e, {
                address: t,
                nonce: r
            }) {
                await e.request({
                    method: `${e.mode}_setNonce`,
                    params: [t, (0, n.numberToHex)(r)]
                })
            }
            t.setNonce = i
        },
        84014: (e, t) => {
            "use strict";
            async function r(e, t) {
                await e.request({
                    method: `${e.mode}_setRpcUrl`,
                    params: [t]
                })
            }
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.setRpcUrl = void 0, t.setRpcUrl = r
        },
        96315: (e, t, r) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.setStorageAt = void 0;
            let n = r(36373);
            async function i(e, {
                address: t,
                index: r,
                value: i
            }) {
                await e.request({
                    method: `${e.mode}_setStorageAt`,
                    params: [t, "number" == typeof r ? (0, n.numberToHex)(r) : r, i]
                })
            }
            t.setStorageAt = i
        },
        95629: (e, t) => {
            "use strict";
            async function r(e) {
                return await e.request({
                    method: "evm_snapshot"
                })
            }
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.snapshot = void 0, t.snapshot = r
        },
        16578: (e, t) => {
            "use strict";
            async function r(e, {
                address: t
            }) {
                await e.request({
                    method: `${e.mode}_stopImpersonatingAccount`,
                    params: [t]
                })
            }
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.stopImpersonatingAccount = void 0, t.stopImpersonatingAccount = r
        },
        12516: (e, t, r) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.addChain = void 0;
            let n = r(36373);
            async function i(e, {
                chain: t
            }) {
                let {
                    id: r,
                    name: i,
                    nativeCurrency: o,
                    rpcUrls: s,
                    blockExplorers: a
                } = t;
                await e.request({
                    method: "wallet_addEthereumChain",
                    params: [{
                        chainId: (0, n.numberToHex)(r),
                        chainName: i,
                        nativeCurrency: o,
                        rpcUrls: s.default.http,
                        blockExplorerUrls: a ? Object.values(a).map(({
                            url: e
                        }) => e) : void 0
                    }]
                })
            }
            t.addChain = i
        },
        73330: (e, t, r) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.deployContract = void 0;
            let n = r(46050),
                i = r(53641);
            t.deployContract = function(e, {
                abi: t,
                args: r,
                bytecode: o,
                ...s
            }) {
                let a = (0, n.encodeDeployData)({
                    abi: t,
                    args: r,
                    bytecode: o
                });
                return (0, i.sendTransaction)(e, { ...s,
                    data: a
                })
            }
        },
        53475: (e, t, r) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.getAddresses = void 0;
            let n = r(98067);
            async function i(e) {
                return e.account ? .type === "local" ? [e.account.address] : (await e.request({
                    method: "eth_accounts"
                })).map(e => (0, n.checksumAddress)(e))
            }
            t.getAddresses = i
        },
        88642: (e, t) => {
            "use strict";
            async function r(e) {
                return await e.request({
                    method: "wallet_getPermissions"
                })
            }
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.getPermissions = void 0, t.getPermissions = r
        },
        52969: (e, t, r) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.prepareTransactionRequest = void 0;
            let n = r(36401),
                i = r(92657),
                o = r(74258),
                s = r(57002),
                a = r(56861),
                c = r(38527),
                u = r(78215),
                l = r(55891),
                d = r(82897),
                h = r(50421);
            async function f(e, t) {
                let {
                    account: r = e.account,
                    chain: f,
                    gas: p,
                    nonce: g,
                    type: m
                } = t;
                if (!r) throw new c.AccountNotFoundError;
                let b = (0, n.parseAccount)(r),
                    y = await (0, l.getAction)(e, s.getBlock, "getBlock")({
                        blockTag: "latest"
                    }),
                    v = { ...t,
                        from: b.address
                    };
                if (void 0 === g && (v.nonce = await (0, l.getAction)(e, a.getTransactionCount, "getTransactionCount")({
                        address: b.address,
                        blockTag: "pending"
                    })), void 0 === m) try {
                    v.type = (0, h.getTransactionType)(v)
                } catch {
                    v.type = "bigint" == typeof y.baseFeePerGas ? "eip1559" : "legacy"
                }
                if ("eip1559" === v.type) {
                    let {
                        maxFeePerGas: r,
                        maxPriorityFeePerGas: n
                    } = await (0, i.internal_estimateFeesPerGas)(e, {
                        block: y,
                        chain: f,
                        request: v
                    });
                    if (void 0 === t.maxPriorityFeePerGas && t.maxFeePerGas && t.maxFeePerGas < n) throw new u.MaxFeePerGasTooLowError({
                        maxPriorityFeePerGas: n
                    });
                    v.maxPriorityFeePerGas = n, v.maxFeePerGas = r
                } else {
                    if (void 0 !== t.maxFeePerGas || void 0 !== t.maxPriorityFeePerGas) throw new u.Eip1559FeesNotSupportedError;
                    let {
                        gasPrice: r
                    } = await (0, i.internal_estimateFeesPerGas)(e, {
                        block: y,
                        chain: f,
                        request: v,
                        type: "legacy"
                    });
                    v.gasPrice = r
                }
                return void 0 === p && (v.gas = await (0, l.getAction)(e, o.estimateGas, "estimateGas")({ ...v,
                    account: {
                        address: b.address,
                        type: "json-rpc"
                    }
                })), (0, d.assertRequest)(v), v
            }
            t.prepareTransactionRequest = f
        },
        80996: (e, t, r) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.requestAddresses = void 0;
            let n = r(98067);
            async function i(e) {
                return (await e.request({
                    method: "eth_requestAccounts"
                })).map(e => (0, n.getAddress)(e))
            }
            t.requestAddresses = i
        },
        69508: (e, t) => {
            "use strict";
            async function r(e, t) {
                return e.request({
                    method: "wallet_requestPermissions",
                    params: [t]
                })
            }
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.requestPermissions = void 0, t.requestPermissions = r
        },
        88914: (e, t) => {
            "use strict";
            async function r(e, {
                serializedTransaction: t
            }) {
                return e.request({
                    method: "eth_sendRawTransaction",
                    params: [t]
                })
            }
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.sendRawTransaction = void 0, t.sendRawTransaction = r
        },
        53641: (e, t, r) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.sendTransaction = void 0;
            let n = r(36401),
                i = r(38527),
                o = r(19586),
                s = r(93424),
                a = r(55613),
                c = r(61033),
                u = r(55891),
                l = r(82897),
                d = r(36966),
                h = r(52969),
                f = r(88914);
            async function p(e, t) {
                let {
                    account: r = e.account,
                    chain: p = e.chain,
                    accessList: g,
                    data: m,
                    gas: b,
                    gasPrice: y,
                    maxFeePerGas: v,
                    maxPriorityFeePerGas: w,
                    nonce: E,
                    to: _,
                    value: P,
                    ...x
                } = t;
                if (!r) throw new i.AccountNotFoundError({
                    docsPath: "/docs/actions/wallet/sendTransaction"
                });
                let I = (0, n.parseAccount)(r);
                try {
                    let r;
                    if ((0, l.assertRequest)(t), null !== p && (r = await (0, u.getAction)(e, d.getChainId, "getChainId")({}), (0, o.assertCurrentChain)({
                            currentChainId: r,
                            chain: p
                        })), "local" === I.type) {
                        let t = await (0, u.getAction)(e, h.prepareTransactionRequest, "prepareTransactionRequest")({
                            account: I,
                            accessList: g,
                            chain: p,
                            data: m,
                            gas: b,
                            gasPrice: y,
                            maxFeePerGas: v,
                            maxPriorityFeePerGas: w,
                            nonce: E,
                            to: _,
                            value: P,
                            ...x
                        });
                        r || (r = await (0, u.getAction)(e, d.getChainId, "getChainId")({}));
                        let n = p ? .serializers ? .transaction,
                            i = await I.signTransaction({ ...t,
                                chainId: r
                            }, {
                                serializer: n
                            });
                        return await (0, u.getAction)(e, f.sendRawTransaction, "sendRawTransaction")({
                            serializedTransaction: i
                        })
                    }
                    let n = e.chain ? .formatters ? .transactionRequest ? .format,
                        i = (n || c.formatTransactionRequest)({ ...(0, a.extract)(x, {
                                format: n
                            }),
                            accessList: g,
                            data: m,
                            from: I.address,
                            gas: b,
                            gasPrice: y,
                            maxFeePerGas: v,
                            maxPriorityFeePerGas: w,
                            nonce: E,
                            to: _,
                            value: P
                        });
                    return await e.request({
                        method: "eth_sendTransaction",
                        params: [i]
                    })
                } catch (e) {
                    throw (0, s.getTransactionError)(e, { ...t,
                        account: I,
                        chain: t.chain || void 0
                    })
                }
            }
            t.sendTransaction = p
        },
        67834: (e, t, r) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.signMessage = void 0;
            let n = r(36401),
                i = r(38527),
                o = r(36373);
            async function s(e, {
                account: t = e.account,
                message: r
            }) {
                if (!t) throw new i.AccountNotFoundError({
                    docsPath: "/docs/actions/wallet/signMessage"
                });
                let s = (0, n.parseAccount)(t);
                if ("local" === s.type) return s.signMessage({
                    message: r
                });
                let a = "string" == typeof r ? (0, o.stringToHex)(r) : r.raw instanceof Uint8Array ? (0, o.toHex)(r.raw) : r.raw;
                return e.request({
                    method: "personal_sign",
                    params: [a, s.address]
                })
            }
            t.signMessage = s
        },
        51697: (e, t, r) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.signTransaction = void 0;
            let n = r(36401),
                i = r(38527),
                o = r(19586),
                s = r(61033),
                a = r(55891),
                c = r(83471),
                u = r(82897),
                l = r(36966);
            async function d(e, t) {
                let {
                    account: r = e.account,
                    chain: d = e.chain,
                    ...h
                } = t;
                if (!r) throw new i.AccountNotFoundError({
                    docsPath: "/docs/actions/wallet/signTransaction"
                });
                let f = (0, n.parseAccount)(r);
                (0, u.assertRequest)({
                    account: f,
                    ...t
                });
                let p = await (0, a.getAction)(e, l.getChainId, "getChainId")({});
                null !== d && (0, o.assertCurrentChain)({
                    currentChainId: p,
                    chain: d
                });
                let g = d ? .formatters || e.chain ? .formatters,
                    m = g ? .transactionRequest ? .format || s.formatTransactionRequest;
                return "local" === f.type ? f.signTransaction({ ...h,
                    chainId: p
                }, {
                    serializer: e.chain ? .serializers ? .transaction
                }) : await e.request({
                    method: "eth_signTransaction",
                    params: [{ ...m(h),
                        chainId: (0, c.numberToHex)(p),
                        from: f.address
                    }]
                })
            }
            t.signTransaction = d
        },
        9127: (e, t, r) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.signTypedData = void 0;
            let n = r(36401),
                i = r(38527),
                o = r(93918),
                s = r(63291),
                a = r(87054);
            async function c(e, {
                account: t = e.account,
                domain: r,
                message: c,
                primaryType: u,
                types: l
            }) {
                if (!t) throw new i.AccountNotFoundError({
                    docsPath: "/docs/actions/wallet/signTypedData"
                });
                let d = (0, n.parseAccount)(t),
                    h = {
                        EIP712Domain: (0, a.getTypesForEIP712Domain)({
                            domain: r
                        }),
                        ...l
                    };
                if ((0, a.validateTypedData)({
                        domain: r,
                        message: c,
                        primaryType: u,
                        types: h
                    }), "local" === d.type) return d.signTypedData({
                    domain: r,
                    primaryType: u,
                    types: h,
                    message: c
                });
                let f = (0, s.stringify)({
                    domain: r ? ? {},
                    primaryType: u,
                    types: h,
                    message: c
                }, (e, t) => (0, o.isHex)(t) ? t.toLowerCase() : t);
                return e.request({
                    method: "eth_signTypedData_v4",
                    params: [d.address, f]
                })
            }
            t.signTypedData = c
        },
        9132: (e, t, r) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.switchChain = void 0;
            let n = r(36373);
            async function i(e, {
                id: t
            }) {
                await e.request({
                    method: "wallet_switchEthereumChain",
                    params: [{
                        chainId: (0, n.numberToHex)(t)
                    }]
                })
            }
            t.switchChain = i
        },
        47346: (e, t) => {
            "use strict";
            async function r(e, t) {
                return await e.request({
                    method: "wallet_watchAsset",
                    params: t
                })
            }
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.watchAsset = void 0, t.watchAsset = r
        },
        5538: (e, t, r) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.writeContract = void 0;
            let n = r(92496),
                i = r(55891),
                o = r(53641);
            async function s(e, {
                abi: t,
                address: r,
                args: s,
                dataSuffix: a,
                functionName: c,
                ...u
            }) {
                let l = (0, n.encodeFunctionData)({
                    abi: t,
                    args: s,
                    functionName: c
                });
                return await (0, i.getAction)(e, o.sendTransaction, "sendTransaction")({
                    data: `${l}${a?a.replace("0x",""):""}`,
                    to: r,
                    ...u
                })
            }
            t.writeContract = s
        },
        18980: (e, t, r) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.createClient = void 0;
            let n = r(47208),
                i = r(42581);
            t.createClient = function(e) {
                let {
                    batch: t,
                    cacheTime: r = e.pollingInterval ? ? 4e3,
                    key: o = "base",
                    name: s = "Base Client",
                    pollingInterval: a = 4e3,
                    type: c = "base"
                } = e, u = e.chain, l = e.account ? (0, n.parseAccount)(e.account) : void 0, {
                    config: d,
                    request: h,
                    value: f
                } = e.transport({
                    chain: u,
                    pollingInterval: a
                }), p = {
                    account: l,
                    batch: t,
                    cacheTime: r,
                    chain: u,
                    key: o,
                    name: s,
                    pollingInterval: a,
                    request: h,
                    transport: { ...d,
                        ...f
                    },
                    type: c,
                    uid: (0, i.uid)()
                };
                return Object.assign(p, {
                    extend: function e(t) {
                        return r => {
                            let n = r(t);
                            for (let e in p) delete n[e];
                            let i = { ...t,
                                ...n
                            };
                            return Object.assign(i, {
                                extend: e(i)
                            })
                        }
                    }(p)
                })
            }
        },
        79091: (e, t, r) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.createPublicClient = void 0;
            let n = r(18980),
                i = r(3);
            t.createPublicClient = function(e) {
                let {
                    key: t = "public",
                    name: r = "Public Client"
                } = e;
                return (0, n.createClient)({ ...e,
                    key: t,
                    name: r,
                    type: "publicClient"
                }).extend(i.publicActions)
            }
        },
        58253: (e, t, r) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.createTestClient = void 0;
            let n = r(18980),
                i = r(98);
            t.createTestClient = function(e) {
                let {
                    key: t = "test",
                    name: r = "Test Client",
                    mode: o
                } = e;
                return (0, n.createClient)({ ...e,
                    key: t,
                    name: r,
                    type: "testClient"
                }).extend(e => ({
                    mode: o,
                    ...(0, i.testActions)({
                        mode: o
                    })(e)
                }))
            }
        },
        6293: (e, t, r) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.createWalletClient = void 0;
            let n = r(18980),
                i = r(96157);
            t.createWalletClient = function(e) {
                let {
                    key: t = "wallet",
                    name: r = "Wallet Client",
                    transport: o
                } = e;
                return (0, n.createClient)({ ...e,
                    key: t,
                    name: r,
                    transport: e => o({ ...e,
                        retryCount: 0
                    }),
                    type: "walletClient"
                }).extend(i.walletActions)
            }
        },
        3: (e, t, r) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.publicActions = void 0;
            let n = r(25271),
                i = r(58891),
                o = r(82760),
                s = r(71309),
                a = r(20784),
                c = r(23683),
                u = r(54736),
                l = r(30270),
                d = r(44314),
                h = r(21997),
                f = r(21585),
                p = r(92657),
                g = r(74258),
                m = r(41798),
                b = r(66344),
                y = r(57002),
                v = r(40058),
                w = r(74610),
                E = r(95322),
                _ = r(36966),
                P = r(86199),
                x = r(78996),
                I = r(27718),
                O = r(35721),
                T = r(6733),
                A = r(27583),
                S = r(89909),
                j = r(72146),
                R = r(51942),
                C = r(11274),
                N = r(56861),
                M = r(80616),
                B = r(24145),
                k = r(67927),
                D = r(85197),
                U = r(20998),
                L = r(56560),
                F = r(59635),
                q = r(98627),
                H = r(75197),
                $ = r(21896),
                z = r(77013),
                V = r(54714),
                G = r(95181),
                W = r(52969),
                K = r(88914);
            t.publicActions = function(e) {
                return {
                    call: t => (0, c.call)(e, t),
                    createBlockFilter: () => (0, u.createBlockFilter)(e),
                    createContractEventFilter: t => (0, l.createContractEventFilter)(e, t),
                    createEventFilter: t => (0, d.createEventFilter)(e, t),
                    createPendingTransactionFilter: () => (0, h.createPendingTransactionFilter)(e),
                    estimateContractGas: t => (0, f.estimateContractGas)(e, t),
                    estimateGas: t => (0, g.estimateGas)(e, t),
                    getBalance: t => (0, b.getBalance)(e, t),
                    getBlock: t => (0, y.getBlock)(e, t),
                    getBlockNumber: t => (0, v.getBlockNumber)(e, t),
                    getBlockTransactionCount: t => (0, w.getBlockTransactionCount)(e, t),
                    getBytecode: t => (0, E.getBytecode)(e, t),
                    getChainId: () => (0, _.getChainId)(e),
                    getContractEvents: t => (0, P.getContractEvents)(e, t),
                    getEnsAddress: t => (0, n.getEnsAddress)(e, t),
                    getEnsAvatar: t => (0, i.getEnsAvatar)(e, t),
                    getEnsName: t => (0, o.getEnsName)(e, t),
                    getEnsResolver: t => (0, s.getEnsResolver)(e, t),
                    getEnsText: t => (0, a.getEnsText)(e, t),
                    getFeeHistory: t => (0, x.getFeeHistory)(e, t),
                    estimateFeesPerGas: t => (0, p.estimateFeesPerGas)(e, t),
                    getFilterChanges: t => (0, I.getFilterChanges)(e, t),
                    getFilterLogs: t => (0, O.getFilterLogs)(e, t),
                    getGasPrice: () => (0, T.getGasPrice)(e),
                    getLogs: t => (0, A.getLogs)(e, t),
                    getProof: t => (0, S.getProof)(e, t),
                    estimateMaxPriorityFeePerGas: t => (0, m.estimateMaxPriorityFeePerGas)(e, t),
                    getStorageAt: t => (0, j.getStorageAt)(e, t),
                    getTransaction: t => (0, R.getTransaction)(e, t),
                    getTransactionConfirmations: t => (0, C.getTransactionConfirmations)(e, t),
                    getTransactionCount: t => (0, N.getTransactionCount)(e, t),
                    getTransactionReceipt: t => (0, M.getTransactionReceipt)(e, t),
                    multicall: t => (0, B.multicall)(e, t),
                    prepareTransactionRequest: t => (0, W.prepareTransactionRequest)(e, t),
                    readContract: t => (0, k.readContract)(e, t),
                    sendRawTransaction: t => (0, K.sendRawTransaction)(e, t),
                    simulateContract: t => (0, D.simulateContract)(e, t),
                    verifyMessage: t => (0, L.verifyMessage)(e, t),
                    verifyTypedData: t => (0, F.verifyTypedData)(e, t),
                    uninstallFilter: t => (0, U.uninstallFilter)(e, t),
                    waitForTransactionReceipt: t => (0, q.waitForTransactionReceipt)(e, t),
                    watchBlocks: t => (0, $.watchBlocks)(e, t),
                    watchBlockNumber: t => (0, H.watchBlockNumber)(e, t),
                    watchContractEvent: t => (0, z.watchContractEvent)(e, t),
                    watchEvent: t => (0, V.watchEvent)(e, t),
                    watchPendingTransactions: t => (0, G.watchPendingTransactions)(e, t)
                }
            }
        },
        98: (e, t, r) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.testActions = void 0;
            let n = r(45768),
                i = r(39728),
                o = r(52080),
                s = r(35833),
                a = r(51933),
                c = r(33139),
                u = r(43193),
                l = r(69321),
                d = r(83551),
                h = r(5175),
                f = r(28366),
                p = r(24113),
                g = r(57499),
                m = r(91243),
                b = r(85966),
                y = r(89379),
                v = r(33076),
                w = r(27339),
                E = r(71190),
                _ = r(52323),
                P = r(23450),
                x = r(20722),
                I = r(57140),
                O = r(98758),
                T = r(42036),
                A = r(58118),
                S = r(84014),
                j = r(96315),
                R = r(95629),
                C = r(16578);
            t.testActions = function({
                mode: e
            }) {
                return t => {
                    let r = t.extend(() => ({
                        mode: e
                    }));
                    return {
                        dropTransaction: e => (0, n.dropTransaction)(r, e),
                        dumpState: () => (0, i.dumpState)(r),
                        getAutomine: () => (0, o.getAutomine)(r),
                        getTxpoolContent: () => (0, s.getTxpoolContent)(r),
                        getTxpoolStatus: () => (0, a.getTxpoolStatus)(r),
                        impersonateAccount: e => (0, c.impersonateAccount)(r, e),
                        increaseTime: e => (0, u.increaseTime)(r, e),
                        inspectTxpool: () => (0, l.inspectTxpool)(r),
                        loadState: e => (0, d.loadState)(r, e),
                        mine: e => (0, h.mine)(r, e),
                        removeBlockTimestampInterval: () => (0, f.removeBlockTimestampInterval)(r),
                        reset: e => (0, p.reset)(r, e),
                        revert: e => (0, g.revert)(r, e),
                        sendUnsignedTransaction: e => (0, m.sendUnsignedTransaction)(r, e),
                        setAutomine: e => (0, b.setAutomine)(r, e),
                        setBalance: e => (0, y.setBalance)(r, e),
                        setBlockGasLimit: e => (0, v.setBlockGasLimit)(r, e),
                        setBlockTimestampInterval: e => (0, w.setBlockTimestampInterval)(r, e),
                        setCode: e => (0, E.setCode)(r, e),
                        setCoinbase: e => (0, _.setCoinbase)(r, e),
                        setIntervalMining: e => (0, P.setIntervalMining)(r, e),
                        setLoggingEnabled: e => (0, x.setLoggingEnabled)(r, e),
                        setMinGasPrice: e => (0, I.setMinGasPrice)(r, e),
                        setNextBlockBaseFeePerGas: e => (0, O.setNextBlockBaseFeePerGas)(r, e),
                        setNextBlockTimestamp: e => (0, T.setNextBlockTimestamp)(r, e),
                        setNonce: e => (0, A.setNonce)(r, e),
                        setRpcUrl: e => (0, S.setRpcUrl)(r, e),
                        setStorageAt: e => (0, j.setStorageAt)(r, e),
                        snapshot: () => (0, R.snapshot)(r),
                        stopImpersonatingAccount: e => (0, C.stopImpersonatingAccount)(r, e)
                    }
                }
            }
        },
        96157: (e, t, r) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.walletActions = void 0;
            let n = r(36966),
                i = r(12516),
                o = r(73330),
                s = r(53475),
                a = r(88642),
                c = r(52969),
                u = r(80996),
                l = r(69508),
                d = r(88914),
                h = r(53641),
                f = r(67834),
                p = r(51697),
                g = r(9127),
                m = r(9132),
                b = r(47346),
                y = r(5538);
            t.walletActions = function(e) {
                return {
                    addChain: t => (0, i.addChain)(e, t),
                    deployContract: t => (0, o.deployContract)(e, t),
                    getAddresses: () => (0, s.getAddresses)(e),
                    getChainId: () => (0, n.getChainId)(e),
                    getPermissions: () => (0, a.getPermissions)(e),
                    prepareTransactionRequest: t => (0, c.prepareTransactionRequest)(e, t),
                    requestAddresses: () => (0, u.requestAddresses)(e),
                    requestPermissions: t => (0, l.requestPermissions)(e, t),
                    sendRawTransaction: t => (0, d.sendRawTransaction)(e, t),
                    sendTransaction: t => (0, h.sendTransaction)(e, t),
                    signMessage: t => (0, f.signMessage)(e, t),
                    signTransaction: t => (0, p.signTransaction)(e, t),
                    signTypedData: t => (0, g.signTypedData)(e, t),
                    switchChain: t => (0, m.switchChain)(e, t),
                    watchAsset: t => (0, b.watchAsset)(e, t),
                    writeContract: t => (0, y.writeContract)(e, t)
                }
            }
        },
        56429: (e, t, r) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.createTransport = void 0;
            let n = r(36810);
            t.createTransport = function({
                key: e,
                name: t,
                request: r,
                retryCount: i = 3,
                retryDelay: o = 150,
                timeout: s,
                type: a
            }, c) {
                return {
                    config: {
                        key: e,
                        name: t,
                        request: r,
                        retryCount: i,
                        retryDelay: o,
                        timeout: s,
                        type: a
                    },
                    request: (0, n.buildRequest)(r, {
                        retryCount: i,
                        retryDelay: o
                    }),
                    value: c
                }
            }
        },
        22838: (e, t, r) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.custom = void 0;
            let n = r(56429);
            t.custom = function(e, t = {}) {
                let {
                    key: r = "custom",
                    name: i = "Custom Provider",
                    retryDelay: o
                } = t;
                return ({
                    retryCount: s
                }) => (0, n.createTransport)({
                    key: r,
                    name: i,
                    request: e.request.bind(e),
                    retryCount: t.retryCount ? ? s,
                    retryDelay: o,
                    type: "custom"
                })
            }
        },
        56666: (e, t, r) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.rankTransports = t.fallback = void 0;
            let n = r(36810),
                i = r(72142),
                o = r(56429);

            function s({
                chain: e,
                interval: t = 4e3,
                onTransports: r,
                sampleCount: n = 10,
                timeout: o = 1e3,
                transports: s,
                weights: a = {}
            }) {
                let {
                    stability: c = .7,
                    latency: u = .3
                } = a, l = [], d = async () => {
                    let a = await Promise.all(s.map(async t => {
                        let r, n;
                        let i = t({
                                chain: e,
                                retryCount: 0,
                                timeout: o
                            }),
                            s = Date.now();
                        try {
                            await i.request({
                                method: "net_listening"
                            }), n = 1
                        } catch {
                            n = 0
                        } finally {
                            r = Date.now()
                        }
                        return {
                            latency: r - s,
                            success: n
                        }
                    }));
                    l.push(a), l.length > n && l.shift();
                    let h = Math.max(...l.map(e => Math.max(...e.map(({
                        latency: e
                    }) => e))));
                    r(s.map((e, t) => {
                        let r = l.map(e => e[t].latency),
                            n = r.reduce((e, t) => e + t, 0) / r.length,
                            i = l.map(e => e[t].success),
                            o = i.reduce((e, t) => e + t, 0) / i.length;
                        return 0 === o ? [0, t] : [u * (1 - n / h) + c * o, t]
                    }).sort((e, t) => t[0] - e[0]).map(([, e]) => s[e])), await (0, i.wait)(t), d()
                };
                d()
            }
            t.fallback = function(e, t = {}) {
                let {
                    key: r = "fallback",
                    name: i = "Fallback",
                    rank: a = !1,
                    retryCount: c,
                    retryDelay: u
                } = t;
                return ({
                    chain: t,
                    pollingInterval: l = 4e3,
                    timeout: d
                }) => {
                    let h = e,
                        f = () => {},
                        p = (0, o.createTransport)({
                            key: r,
                            name: i,
                            async request({
                                method: e,
                                params: r
                            }) {
                                let i = async (o = 0) => {
                                    let s = h[o]({
                                        chain: t,
                                        retryCount: 0,
                                        timeout: d
                                    });
                                    try {
                                        let t = await s.request({
                                            method: e,
                                            params: r
                                        });
                                        return f({
                                            method: e,
                                            params: r,
                                            response: t,
                                            transport: s,
                                            status: "success"
                                        }), t
                                    } catch (t) {
                                        if (f({
                                                error: t,
                                                method: e,
                                                params: r,
                                                transport: s,
                                                status: "error"
                                            }), (0, n.isDeterministicError)(t) || o === h.length - 1) throw t;
                                        return i(o + 1)
                                    }
                                };
                                return i()
                            },
                            retryCount: c,
                            retryDelay: u,
                            type: "fallback"
                        }, {
                            onResponse: e => f = e,
                            transports: h.map(e => e({
                                chain: t,
                                retryCount: 0
                            }))
                        });
                    if (a) {
                        let e = "object" == typeof a ? a : {};
                        s({
                            chain: t,
                            interval: e.interval ? ? l,
                            onTransports: e => h = e,
                            sampleCount: e.sampleCount,
                            timeout: e.timeout,
                            transports: h,
                            weights: e.weights
                        })
                    }
                    return p
                }
            }, t.rankTransports = s
        },
        5434: (e, t, r) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.http = void 0;
            let n = r(24187),
                i = r(74790),
                o = r(36687),
                s = r(48954),
                a = r(56429);
            t.http = function(e, t = {}) {
                let {
                    batch: r,
                    fetchOptions: c,
                    key: u = "http",
                    name: l = "HTTP JSON-RPC",
                    retryDelay: d
                } = t;
                return ({
                    chain: h,
                    retryCount: f,
                    timeout: p
                }) => {
                    let {
                        batchSize: g = 1e3,
                        wait: m = 0
                    } = "object" == typeof r ? r : {}, b = t.retryCount ? ? f, y = p ? ? t.timeout ? ? 1e4, v = e || h ? .rpcUrls.default.http[0];
                    if (!v) throw new i.UrlRequiredError;
                    return (0, a.createTransport)({
                        key: u,
                        name: l,
                        async request({
                            method: t,
                            params: i
                        }) {
                            let a = {
                                    method: t,
                                    params: i
                                },
                                {
                                    schedule: u
                                } = (0, o.createBatchScheduler)({
                                    id: `${e}`,
                                    wait: m,
                                    shouldSplitBatch: e => e.length > g,
                                    fn: e => s.rpc.http(v, {
                                        body: e,
                                        fetchOptions: c,
                                        timeout: y
                                    }),
                                    sort: (e, t) => e.id - t.id
                                }),
                                l = async e => r ? u(e) : [await s.rpc.http(v, {
                                    body: e,
                                    fetchOptions: c,
                                    timeout: y
                                })],
                                [{
                                    error: d,
                                    result: h
                                }] = await l(a);
                            if (d) throw new n.RpcRequestError({
                                body: a,
                                error: d,
                                url: v
                            });
                            return h
                        },
                        retryCount: b,
                        retryDelay: d,
                        timeout: y,
                        type: "http"
                    }, {
                        fetchOptions: c,
                        url: e
                    })
                }
            }
        },
        99434: (e, t, r) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.webSocket = void 0;
            let n = r(24187),
                i = r(74790),
                o = r(48954),
                s = r(56429);
            t.webSocket = function(e, t = {}) {
                let {
                    key: r = "webSocket",
                    name: a = "WebSocket JSON-RPC",
                    retryDelay: c
                } = t;
                return ({
                    chain: u,
                    retryCount: l,
                    timeout: d
                }) => {
                    let h = t.retryCount ? ? l,
                        f = d ? ? t.timeout ? ? 1e4,
                        p = e || u ? .rpcUrls.default.webSocket ? .[0];
                    if (!p) throw new i.UrlRequiredError;
                    return (0, s.createTransport)({
                        key: r,
                        name: a,
                        async request({
                            method: e,
                            params: t
                        }) {
                            let r = {
                                    method: e,
                                    params: t
                                },
                                i = await (0, o.getSocket)(p),
                                {
                                    error: s,
                                    result: a
                                } = await o.rpc.webSocketAsync(i, {
                                    body: r,
                                    timeout: f
                                });
                            if (s) throw new n.RpcRequestError({
                                body: r,
                                error: s,
                                url: p
                            });
                            return a
                        },
                        retryCount: h,
                        retryDelay: c,
                        timeout: f,
                        type: "webSocket"
                    }, {
                        getSocket: () => (0, o.getSocket)(p),
                        async subscribe({
                            params: e,
                            onData: t,
                            onError: r
                        }) {
                            let n = await (0, o.getSocket)(p),
                                {
                                    result: i
                                } = await new Promise((i, s) => o.rpc.webSocket(n, {
                                    body: {
                                        method: "eth_subscribe",
                                        params: e
                                    },
                                    onResponse(e) {
                                        if (e.error) {
                                            s(e.error), r ? .(e.error);
                                            return
                                        }
                                        if ("number" == typeof e.id) {
                                            i(e);
                                            return
                                        }
                                        "eth_subscription" === e.method && t(e.params)
                                    }
                                }));
                            return {
                                subscriptionId: i,
                                unsubscribe: async () => new Promise(e => o.rpc.webSocket(n, {
                                    body: {
                                        method: "eth_unsubscribe",
                                        params: [i]
                                    },
                                    onResponse: e
                                }))
                            }
                        }
                    })
                }
            }
        },
        71635: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.universalSignatureValidatorAbi = t.smartAccountAbi = t.addressResolverAbi = t.textResolverAbi = t.universalResolverReverseAbi = t.universalResolverResolveAbi = t.multicall3Abi = void 0, t.multicall3Abi = [{
                inputs: [{
                    components: [{
                        name: "target",
                        type: "address"
                    }, {
                        name: "allowFailure",
                        type: "bool"
                    }, {
                        name: "callData",
                        type: "bytes"
                    }],
                    name: "calls",
                    type: "tuple[]"
                }],
                name: "aggregate3",
                outputs: [{
                    components: [{
                        name: "success",
                        type: "bool"
                    }, {
                        name: "returnData",
                        type: "bytes"
                    }],
                    name: "returnData",
                    type: "tuple[]"
                }],
                stateMutability: "view",
                type: "function"
            }];
            let r = [{
                inputs: [],
                name: "ResolverNotFound",
                type: "error"
            }, {
                inputs: [],
                name: "ResolverWildcardNotSupported",
                type: "error"
            }];
            t.universalResolverResolveAbi = [...r, {
                name: "resolve",
                type: "function",
                stateMutability: "view",
                inputs: [{
                    name: "name",
                    type: "bytes"
                }, {
                    name: "data",
                    type: "bytes"
                }],
                outputs: [{
                    name: "",
                    type: "bytes"
                }, {
                    name: "address",
                    type: "address"
                }]
            }], t.universalResolverReverseAbi = [...r, {
                name: "reverse",
                type: "function",
                stateMutability: "view",
                inputs: [{
                    type: "bytes",
                    name: "reverseName"
                }],
                outputs: [{
                    type: "string",
                    name: "resolvedName"
                }, {
                    type: "address",
                    name: "resolvedAddress"
                }, {
                    type: "address",
                    name: "reverseResolver"
                }, {
                    type: "address",
                    name: "resolver"
                }]
            }], t.textResolverAbi = [{
                name: "text",
                type: "function",
                stateMutability: "view",
                inputs: [{
                    name: "name",
                    type: "bytes32"
                }, {
                    name: "key",
                    type: "string"
                }],
                outputs: [{
                    name: "",
                    type: "string"
                }]
            }], t.addressResolverAbi = [{
                name: "addr",
                type: "function",
                stateMutability: "view",
                inputs: [{
                    name: "name",
                    type: "bytes32"
                }],
                outputs: [{
                    name: "",
                    type: "address"
                }]
            }, {
                name: "addr",
                type: "function",
                stateMutability: "view",
                inputs: [{
                    name: "name",
                    type: "bytes32"
                }, {
                    name: "coinType",
                    type: "uint256"
                }],
                outputs: [{
                    name: "",
                    type: "bytes"
                }]
            }], t.smartAccountAbi = [{
                name: "isValidSignature",
                type: "function",
                stateMutability: "view",
                inputs: [{
                    name: "hash",
                    type: "bytes32"
                }, {
                    name: "signature",
                    type: "bytes"
                }],
                outputs: [{
                    name: "",
                    type: "bytes4"
                }]
            }], t.universalSignatureValidatorAbi = [{
                inputs: [{
                    internalType: "address",
                    name: "_signer",
                    type: "address"
                }, {
                    internalType: "bytes32",
                    name: "_hash",
                    type: "bytes32"
                }, {
                    internalType: "bytes",
                    name: "_signature",
                    type: "bytes"
                }],
                stateMutability: "nonpayable",
                type: "constructor"
            }]
        },
        81513: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.zeroAddress = void 0, t.zeroAddress = "0x0000000000000000000000000000000000000000"
        },
        93620: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.zeroHash = void 0, t.zeroHash = "0x0000000000000000000000000000000000000000000000000000000000000000"
        },
        41999: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.aggregate3Signature = void 0, t.aggregate3Signature = "0x82ad56cb"
        },
        10089: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.universalSignatureValidatorByteCode = void 0, t.universalSignatureValidatorByteCode = "0x60806040523480156200001157600080fd5b50604051620007003803806200070083398101604081905262000034916200056f565b6000620000438484846200004f565b9050806000526001601ff35b600080846001600160a01b0316803b806020016040519081016040528181526000908060200190933c90507f6492649264926492649264926492649264926492649264926492649264926492620000a68462000451565b036200021f57600060608085806020019051810190620000c79190620005ce565b8651929550909350915060000362000192576000836001600160a01b031683604051620000f5919062000643565b6000604051808303816000865af19150503d806000811462000134576040519150601f19603f3d011682016040523d82523d6000602084013e62000139565b606091505b5050905080620001905760405162461bcd60e51b815260206004820152601e60248201527f5369676e617475726556616c696461746f723a206465706c6f796d656e74000060448201526064015b60405180910390fd5b505b604051630b135d3f60e11b808252906001600160a01b038a1690631626ba7e90620001c4908b90869060040162000661565b602060405180830381865afa158015620001e2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200020891906200069d565b6001600160e01b031916149450505050506200044a565b805115620002b157604051630b135d3f60e11b808252906001600160a01b03871690631626ba7e9062000259908890889060040162000661565b602060405180830381865afa15801562000277573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200029d91906200069d565b6001600160e01b031916149150506200044a565b8251604114620003195760405162461bcd60e51b815260206004820152603a6024820152600080516020620006e083398151915260448201527f3a20696e76616c6964207369676e6174757265206c656e677468000000000000606482015260840162000187565b620003236200046b565b506020830151604080850151855186939260009185919081106200034b576200034b620006c9565b016020015160f81c9050601b81148015906200036b57508060ff16601c14155b15620003cf5760405162461bcd60e51b815260206004820152603b6024820152600080516020620006e083398151915260448201527f3a20696e76616c6964207369676e617475726520762076616c75650000000000606482015260840162000187565b6040805160008152602081018083528a905260ff83169181019190915260608101849052608081018390526001600160a01b038a169060019060a0016020604051602081039080840390855afa1580156200042e573d6000803e3d6000fd5b505050602060405103516001600160a01b031614955050505050505b9392505050565b60006020825110156200046357600080fd5b508051015190565b60405180606001604052806003906020820280368337509192915050565b6001600160a01b03811681146200049f57600080fd5b50565b634e487b7160e01b600052604160045260246000fd5b60005b83811015620004d5578181015183820152602001620004bb565b50506000910152565b600082601f830112620004f057600080fd5b81516001600160401b03808211156200050d576200050d620004a2565b604051601f8301601f19908116603f01168101908282118183101715620005385762000538620004a2565b816040528381528660208588010111156200055257600080fd5b62000565846020830160208901620004b8565b9695505050505050565b6000806000606084860312156200058557600080fd5b8351620005928162000489565b6020850151604086015191945092506001600160401b03811115620005b657600080fd5b620005c486828701620004de565b9150509250925092565b600080600060608486031215620005e457600080fd5b8351620005f18162000489565b60208501519093506001600160401b03808211156200060f57600080fd5b6200061d87838801620004de565b935060408601519150808211156200063457600080fd5b50620005c486828701620004de565b6000825162000657818460208701620004b8565b9190910192915050565b828152604060208201526000825180604084015262000688816060850160208701620004b8565b601f01601f1916919091016060019392505050565b600060208284031215620006b057600080fd5b81516001600160e01b0319811681146200044a57600080fd5b634e487b7160e01b600052603260045260246000fdfe5369676e617475726556616c696461746f72237265636f7665725369676e6572"
        },
        35156: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.minInt144 = t.minInt136 = t.minInt128 = t.minInt120 = t.minInt112 = t.minInt104 = t.minInt96 = t.minInt88 = t.minInt80 = t.minInt72 = t.minInt64 = t.minInt56 = t.minInt48 = t.minInt40 = t.minInt32 = t.minInt24 = t.minInt16 = t.minInt8 = t.maxInt256 = t.maxInt248 = t.maxInt240 = t.maxInt232 = t.maxInt224 = t.maxInt216 = t.maxInt208 = t.maxInt200 = t.maxInt192 = t.maxInt184 = t.maxInt176 = t.maxInt168 = t.maxInt160 = t.maxInt152 = t.maxInt144 = t.maxInt136 = t.maxInt128 = t.maxInt120 = t.maxInt112 = t.maxInt104 = t.maxInt96 = t.maxInt88 = t.maxInt80 = t.maxInt72 = t.maxInt64 = t.maxInt56 = t.maxInt48 = t.maxInt40 = t.maxInt32 = t.maxInt24 = t.maxInt16 = t.maxInt8 = void 0, t.maxUint256 = t.maxUint248 = t.maxUint240 = t.maxUint232 = t.maxUint224 = t.maxUint216 = t.maxUint208 = t.maxUint200 = t.maxUint192 = t.maxUint184 = t.maxUint176 = t.maxUint168 = t.maxUint160 = t.maxUint152 = t.maxUint144 = t.maxUint136 = t.maxUint128 = t.maxUint120 = t.maxUint112 = t.maxUint104 = t.maxUint96 = t.maxUint88 = t.maxUint80 = t.maxUint72 = t.maxUint64 = t.maxUint56 = t.maxUint48 = t.maxUint40 = t.maxUint32 = t.maxUint24 = t.maxUint16 = t.maxUint8 = t.minInt256 = t.minInt248 = t.minInt240 = t.minInt232 = t.minInt224 = t.minInt216 = t.minInt208 = t.minInt200 = t.minInt192 = t.minInt184 = t.minInt176 = t.minInt168 = t.minInt160 = t.minInt152 = void 0, t.maxInt8 = 2 n ** (8 n - 1 n) - 1 n, t.maxInt16 = 2 n ** (16 n - 1 n) - 1 n, t.maxInt24 = 2 n ** (24 n - 1 n) - 1 n, t.maxInt32 = 2 n ** (32 n - 1 n) - 1 n, t.maxInt40 = 2 n ** (40 n - 1 n) - 1 n, t.maxInt48 = 2 n ** (48 n - 1 n) - 1 n, t.maxInt56 = 2 n ** (56 n - 1 n) - 1 n, t.maxInt64 = 2 n ** (64 n - 1 n) - 1 n, t.maxInt72 = 2 n ** (72 n - 1 n) - 1 n, t.maxInt80 = 2 n ** (80 n - 1 n) - 1 n, t.maxInt88 = 2 n ** (88 n - 1 n) - 1 n, t.maxInt96 = 2 n ** (96 n - 1 n) - 1 n, t.maxInt104 = 2 n ** (104 n - 1 n) - 1 n, t.maxInt112 = 2 n ** (112 n - 1 n) - 1 n, t.maxInt120 = 2 n ** (120 n - 1 n) - 1 n, t.maxInt128 = 2 n ** (128 n - 1 n) - 1 n, t.maxInt136 = 2 n ** (136 n - 1 n) - 1 n, t.maxInt144 = 2 n ** (144 n - 1 n) - 1 n, t.maxInt152 = 2 n ** (152 n - 1 n) - 1 n, t.maxInt160 = 2 n ** (160 n - 1 n) - 1 n, t.maxInt168 = 2 n ** (168 n - 1 n) - 1 n, t.maxInt176 = 2 n ** (176 n - 1 n) - 1 n, t.maxInt184 = 2 n ** (184 n - 1 n) - 1 n, t.maxInt192 = 2 n ** (192 n - 1 n) - 1 n, t.maxInt200 = 2 n ** (200 n - 1 n) - 1 n, t.maxInt208 = 2 n ** (208 n - 1 n) - 1 n, t.maxInt216 = 2 n ** (216 n - 1 n) - 1 n, t.maxInt224 = 2 n ** (224 n - 1 n) - 1 n, t.maxInt232 = 2 n ** (232 n - 1 n) - 1 n, t.maxInt240 = 2 n ** (240 n - 1 n) - 1 n, t.maxInt248 = 2 n ** (248 n - 1 n) - 1 n, t.maxInt256 = 2 n ** (256 n - 1 n) - 1 n, t.minInt8 = -(2 n ** (8 n - 1 n)), t.minInt16 = -(2 n ** (16 n - 1 n)), t.minInt24 = -(2 n ** (24 n - 1 n)), t.minInt32 = -(2 n ** (32 n - 1 n)), t.minInt40 = -(2 n ** (40 n - 1 n)), t.minInt48 = -(2 n ** (48 n - 1 n)), t.minInt56 = -(2 n ** (56 n - 1 n)), t.minInt64 = -(2 n ** (64 n - 1 n)), t.minInt72 = -(2 n ** (72 n - 1 n)), t.minInt80 = -(2 n ** (80 n - 1 n)), t.minInt88 = -(2 n ** (88 n - 1 n)), t.minInt96 = -(2 n ** (96 n - 1 n)), t.minInt104 = -(2 n ** (104 n - 1 n)), t.minInt112 = -(2 n ** (112 n - 1 n)), t.minInt120 = -(2 n ** (120 n - 1 n)), t.minInt128 = -(2 n ** (128 n - 1 n)), t.minInt136 = -(2 n ** (136 n - 1 n)), t.minInt144 = -(2 n ** (144 n - 1 n)), t.minInt152 = -(2 n ** (152 n - 1 n)), t.minInt160 = -(2 n ** (160 n - 1 n)), t.minInt168 = -(2 n ** (168 n - 1 n)), t.minInt176 = -(2 n ** (176 n - 1 n)), t.minInt184 = -(2 n ** (184 n - 1 n)), t.minInt192 = -(2 n ** (192 n - 1 n)), t.minInt200 = -(2 n ** (200 n - 1 n)), t.minInt208 = -(2 n ** (208 n - 1 n)), t.minInt216 = -(2 n ** (216 n - 1 n)), t.minInt224 = -(2 n ** (224 n - 1 n)), t.minInt232 = -(2 n ** (232 n - 1 n)), t.minInt240 = -(2 n ** (240 n - 1 n)), t.minInt248 = -(2 n ** (248 n - 1 n)), t.minInt256 = -(2 n ** (256 n - 1 n)), t.maxUint8 = 2 n ** 8 n - 1 n, t.maxUint16 = 2 n ** 16 n - 1 n, t.maxUint24 = 2 n ** 24 n - 1 n, t.maxUint32 = 2 n ** 32 n - 1 n, t.maxUint40 = 2 n ** 40 n - 1 n, t.maxUint48 = 2 n ** 48 n - 1 n, t.maxUint56 = 2 n ** 56 n - 1 n, t.maxUint64 = 2 n ** 64 n - 1 n, t.maxUint72 = 2 n ** 72 n - 1 n, t.maxUint80 = 2 n ** 80 n - 1 n, t.maxUint88 = 2 n ** 88 n - 1 n, t.maxUint96 = 2 n ** 96 n - 1 n, t.maxUint104 = 2 n ** 104 n - 1 n, t.maxUint112 = 2 n ** 112 n - 1 n, t.maxUint120 = 2 n ** 120 n - 1 n, t.maxUint128 = 2 n ** 128 n - 1 n, t.maxUint136 = 2 n ** 136 n - 1 n, t.maxUint144 = 2 n ** 144 n - 1 n, t.maxUint152 = 2 n ** 152 n - 1 n, t.maxUint160 = 2 n ** 160 n - 1 n, t.maxUint168 = 2 n ** 168 n - 1 n, t.maxUint176 = 2 n ** 176 n - 1 n, t.maxUint184 = 2 n ** 184 n - 1 n, t.maxUint192 = 2 n ** 192 n - 1 n, t.maxUint200 = 2 n ** 200 n - 1 n, t.maxUint208 = 2 n ** 208 n - 1 n, t.maxUint216 = 2 n ** 216 n - 1 n, t.maxUint224 = 2 n ** 224 n - 1 n, t.maxUint232 = 2 n ** 232 n - 1 n, t.maxUint240 = 2 n ** 240 n - 1 n, t.maxUint248 = 2 n ** 248 n - 1 n, t.maxUint256 = 2 n ** 256 n - 1 n
        },
        17480: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.solidityPanic = t.solidityError = t.panicReasons = void 0, t.panicReasons = {
                1: "An `assert` condition failed.",
                17: "Arithmic operation resulted in underflow or overflow.",
                18: "Division or modulo by zero (e.g. `5 / 0` or `23 % 0`).",
                33: "Attempted to convert to an invalid type.",
                34: "Attempted to access a storage byte array that is incorrectly encoded.",
                49: "Performed `.pop()` on an empty array",
                50: "Array index is out of bounds.",
                65: "Allocated too much memory or created an array which is too large.",
                81: "Attempted to call a zero-initialized variable of internal function type."
            }, t.solidityError = {
                inputs: [{
                    name: "message",
                    type: "string"
                }],
                name: "Error",
                type: "error"
            }, t.solidityPanic = {
                inputs: [{
                    name: "reason",
                    type: "uint256"
                }],
                name: "Panic",
                type: "error"
            }
        },
        88759: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.presignMessagePrefix = void 0, t.presignMessagePrefix = "\x19Ethereum Signed Message:\n"
        },
        67888: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.weiUnits = t.gweiUnits = t.etherUnits = void 0, t.etherUnits = {
                gwei: 9,
                wei: 18
            }, t.gweiUnits = {
                ether: -9,
                wei: 9
            }, t.weiUnits = {
                ether: -18,
                gwei: -9
            }
        },
        51889: (e, t, r) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.UnsupportedPackedAbiType = t.InvalidDefinitionTypeError = t.InvalidArrayError = t.InvalidAbiDecodingTypeError = t.InvalidAbiEncodingTypeError = t.DecodeLogTopicsMismatch = t.DecodeLogDataMismatch = t.BytesSizeMismatchError = t.AbiItemAmbiguityError = t.AbiFunctionSignatureNotFoundError = t.AbiFunctionOutputsNotFoundError = t.AbiFunctionNotFoundError = t.AbiEventNotFoundError = t.AbiEventSignatureNotFoundError = t.AbiEventSignatureEmptyTopicsError = t.AbiErrorSignatureNotFoundError = t.AbiErrorNotFoundError = t.AbiErrorInputsNotFoundError = t.AbiEncodingLengthMismatchError = t.AbiEncodingBytesSizeMismatchError = t.AbiEncodingArrayLengthMismatchError = t.AbiDecodingZeroDataError = t.AbiDecodingDataSizeTooSmallError = t.AbiDecodingDataSizeInvalidError = t.AbiConstructorParamsNotFoundError = t.AbiConstructorNotFoundError = void 0;
            let n = r(73735),
                i = r(6629),
                o = r(72968),
                s = class extends o.BaseError {
                    constructor({
                        docsPath: e
                    }) {
                        super("A constructor was not found on the ABI.\nMake sure you are using the correct ABI and that the constructor exists on it.", {
                            docsPath: e
                        }), Object.defineProperty(this, "name", {
                            enumerable: !0,
                            configurable: !0,
                            writable: !0,
                            value: "AbiConstructorNotFoundError"
                        })
                    }
                };
            t.AbiConstructorNotFoundError = s;
            let a = class extends o.BaseError {
                constructor({
                    docsPath: e
                }) {
                    super("Constructor arguments were provided (`args`), but a constructor parameters (`inputs`) were not found on the ABI.\nMake sure you are using the correct ABI, and that the `inputs` attribute on the constructor exists.", {
                        docsPath: e
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "AbiConstructorParamsNotFoundError"
                    })
                }
            };
            t.AbiConstructorParamsNotFoundError = a;
            let c = class extends o.BaseError {
                constructor({
                    data: e,
                    size: t
                }) {
                    super(`Data size of ${t} bytes is invalid.
Size must be in increments of 32 bytes (size % 32 === 0).`, {
                        metaMessages: [`Data: ${e} (${t} bytes)`]
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "AbiDecodingDataSizeInvalidError"
                    })
                }
            };
            t.AbiDecodingDataSizeInvalidError = c;
            let u = class extends o.BaseError {
                constructor({
                    data: e,
                    params: t,
                    size: r
                }) {
                    super(`Data size of ${r} bytes is too small for given parameters.`, {
                        metaMessages: [`Params: (${(0,n.formatAbiParams)(t,{includeName:!0})})`, `Data:   ${e} (${r} bytes)`]
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "AbiDecodingDataSizeTooSmallError"
                    }), Object.defineProperty(this, "data", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }), Object.defineProperty(this, "params", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }), Object.defineProperty(this, "size", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }), this.data = e, this.params = t, this.size = r
                }
            };
            t.AbiDecodingDataSizeTooSmallError = u;
            let l = class extends o.BaseError {
                constructor() {
                    super('Cannot decode zero data ("0x") with ABI parameters.'), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "AbiDecodingZeroDataError"
                    })
                }
            };
            t.AbiDecodingZeroDataError = l;
            let d = class extends o.BaseError {
                constructor({
                    expectedLength: e,
                    givenLength: t,
                    type: r
                }) {
                    super(`ABI encoding array length mismatch for type ${r}.
Expected length: ${e}
Given length: ${t}`), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "AbiEncodingArrayLengthMismatchError"
                    })
                }
            };
            t.AbiEncodingArrayLengthMismatchError = d;
            let h = class extends o.BaseError {
                constructor({
                    expectedSize: e,
                    value: t
                }) {
                    super(`Size of bytes "${t}" (bytes${(0,i.size)(t)}) does not match expected size (bytes${e}).`), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "AbiEncodingBytesSizeMismatchError"
                    })
                }
            };
            t.AbiEncodingBytesSizeMismatchError = h;
            let f = class extends o.BaseError {
                constructor({
                    expectedLength: e,
                    givenLength: t
                }) {
                    super(`ABI encoding params/values length mismatch.
Expected length (params): ${e}
Given length (values): ${t}`), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "AbiEncodingLengthMismatchError"
                    })
                }
            };
            t.AbiEncodingLengthMismatchError = f;
            let p = class extends o.BaseError {
                constructor(e, {
                    docsPath: t
                }) {
                    super(`Arguments (\`args\`) were provided to "${e}", but "${e}" on the ABI does not contain any parameters (\`inputs\`).
Cannot encode error result without knowing what the parameter types are.
Make sure you are using the correct ABI and that the inputs exist on it.`, {
                        docsPath: t
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "AbiErrorInputsNotFoundError"
                    })
                }
            };
            t.AbiErrorInputsNotFoundError = p;
            let g = class extends o.BaseError {
                constructor(e, {
                    docsPath: t
                } = {}) {
                    super(`Error ${e?`"${e}" `:""}not found on ABI.
Make sure you are using the correct ABI and that the error exists on it.`, {
                        docsPath: t
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "AbiErrorNotFoundError"
                    })
                }
            };
            t.AbiErrorNotFoundError = g;
            let m = class extends o.BaseError {
                constructor(e, {
                    docsPath: t
                }) {
                    super(`Encoded error signature "${e}" not found on ABI.
Make sure you are using the correct ABI and that the error exists on it.
You can look up the decoded signature here: https://openchain.xyz/signatures?query=${e}.`, {
                        docsPath: t
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "AbiErrorSignatureNotFoundError"
                    }), Object.defineProperty(this, "signature", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }), this.signature = e
                }
            };
            t.AbiErrorSignatureNotFoundError = m;
            let b = class extends o.BaseError {
                constructor({
                    docsPath: e
                }) {
                    super("Cannot extract event signature from empty topics.", {
                        docsPath: e
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "AbiEventSignatureEmptyTopicsError"
                    })
                }
            };
            t.AbiEventSignatureEmptyTopicsError = b;
            let y = class extends o.BaseError {
                constructor(e, {
                    docsPath: t
                }) {
                    super(`Encoded event signature "${e}" not found on ABI.
Make sure you are using the correct ABI and that the event exists on it.
You can look up the signature here: https://openchain.xyz/signatures?query=${e}.`, {
                        docsPath: t
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "AbiEventSignatureNotFoundError"
                    })
                }
            };
            t.AbiEventSignatureNotFoundError = y;
            let v = class extends o.BaseError {
                constructor(e, {
                    docsPath: t
                } = {}) {
                    super(`Event ${e?`"${e}" `:""}not found on ABI.
Make sure you are using the correct ABI and that the event exists on it.`, {
                        docsPath: t
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "AbiEventNotFoundError"
                    })
                }
            };
            t.AbiEventNotFoundError = v;
            let w = class extends o.BaseError {
                constructor(e, {
                    docsPath: t
                } = {}) {
                    super(`Function ${e?`"${e}" `:""}not found on ABI.
Make sure you are using the correct ABI and that the function exists on it.`, {
                        docsPath: t
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "AbiFunctionNotFoundError"
                    })
                }
            };
            t.AbiFunctionNotFoundError = w;
            let E = class extends o.BaseError {
                constructor(e, {
                    docsPath: t
                }) {
                    super(`Function "${e}" does not contain any \`outputs\` on ABI.
Cannot decode function result without knowing what the parameter types are.
Make sure you are using the correct ABI and that the function exists on it.`, {
                        docsPath: t
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "AbiFunctionOutputsNotFoundError"
                    })
                }
            };
            t.AbiFunctionOutputsNotFoundError = E;
            let _ = class extends o.BaseError {
                constructor(e, {
                    docsPath: t
                }) {
                    super(`Encoded function signature "${e}" not found on ABI.
Make sure you are using the correct ABI and that the function exists on it.
You can look up the signature here: https://openchain.xyz/signatures?query=${e}.`, {
                        docsPath: t
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "AbiFunctionSignatureNotFoundError"
                    })
                }
            };
            t.AbiFunctionSignatureNotFoundError = _;
            let P = class extends o.BaseError {
                constructor(e, t) {
                    super("Found ambiguous types in overloaded ABI items.", {
                        metaMessages: [`\`${e.type}\` in \`${(0,n.formatAbiItem)(e.abiItem)}\`, and`, `\`${t.type}\` in \`${(0,n.formatAbiItem)(t.abiItem)}\``, "", "These types encode differently and cannot be distinguished at runtime.", "Remove one of the ambiguous items in the ABI."]
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "AbiItemAmbiguityError"
                    })
                }
            };
            t.AbiItemAmbiguityError = P;
            let x = class extends o.BaseError {
                constructor({
                    expectedSize: e,
                    givenSize: t
                }) {
                    super(`Expected bytes${e}, got bytes${t}.`), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "BytesSizeMismatchError"
                    })
                }
            };
            t.BytesSizeMismatchError = x;
            let I = class extends o.BaseError {
                constructor({
                    abiItem: e,
                    data: t,
                    params: r,
                    size: i
                }) {
                    super(`Data size of ${i} bytes is too small for non-indexed event parameters.`, {
                        metaMessages: [`Params: (${(0,n.formatAbiParams)(r,{includeName:!0})})`, `Data:   ${t} (${i} bytes)`]
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "DecodeLogDataMismatch"
                    }), Object.defineProperty(this, "abiItem", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }), Object.defineProperty(this, "data", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }), Object.defineProperty(this, "params", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }), Object.defineProperty(this, "size", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }), this.abiItem = e, this.data = t, this.params = r, this.size = i
                }
            };
            t.DecodeLogDataMismatch = I;
            let O = class extends o.BaseError {
                constructor({
                    abiItem: e,
                    param: t
                }) {
                    super(`Expected a topic for indexed event parameter${t.name?` "${t.name}"`:""} on event "${(0,n.formatAbiItem)(e,{includeName:!0})}".`), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "DecodeLogTopicsMismatch"
                    }), Object.defineProperty(this, "abiItem", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }), this.abiItem = e
                }
            };
            t.DecodeLogTopicsMismatch = O;
            let T = class extends o.BaseError {
                constructor(e, {
                    docsPath: t
                }) {
                    super(`Type "${e}" is not a valid encoding type.
Please provide a valid ABI type.`, {
                        docsPath: t
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "InvalidAbiEncodingType"
                    })
                }
            };
            t.InvalidAbiEncodingTypeError = T;
            let A = class extends o.BaseError {
                constructor(e, {
                    docsPath: t
                }) {
                    super(`Type "${e}" is not a valid decoding type.
Please provide a valid ABI type.`, {
                        docsPath: t
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "InvalidAbiDecodingType"
                    })
                }
            };
            t.InvalidAbiDecodingTypeError = A;
            let S = class extends o.BaseError {
                constructor(e) {
                    super(`Value "${e}" is not a valid array.`), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "InvalidArrayError"
                    })
                }
            };
            t.InvalidArrayError = S;
            let j = class extends o.BaseError {
                constructor(e) {
                    super(`"${e}" is not a valid definition type.
Valid types: "function", "event", "error"`), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "InvalidDefinitionTypeError"
                    })
                }
            };
            t.InvalidDefinitionTypeError = j;
            let R = class extends o.BaseError {
                constructor(e) {
                    super(`Type "${e}" is not supported for packed encoding.`), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "UnsupportedPackedAbiType"
                    })
                }
            };
            t.UnsupportedPackedAbiType = R
        },
        38527: (e, t, r) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.AccountNotFoundError = void 0;
            let n = r(72968),
                i = class extends n.BaseError {
                    constructor({
                        docsPath: e
                    } = {}) {
                        super("Could not find an Account to execute with this Action.\nPlease provide an Account with the `account` argument on the Action, or by supplying an `account` to the WalletClient.", {
                            docsPath: e,
                            docsSlug: "account"
                        }), Object.defineProperty(this, "name", {
                            enumerable: !0,
                            configurable: !0,
                            writable: !0,
                            value: "AccountNotFoundError"
                        })
                    }
                };
            t.AccountNotFoundError = i
        },
        13411: (e, t, r) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.InvalidAddressError = void 0;
            let n = r(72968),
                i = class extends n.BaseError {
                    constructor({
                        address: e
                    }) {
                        super(`Address "${e}" is invalid.`), Object.defineProperty(this, "name", {
                            enumerable: !0,
                            configurable: !0,
                            writable: !0,
                            value: "InvalidAddressError"
                        })
                    }
                };
            t.InvalidAddressError = i
        },
        72968: (e, t, r) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.BaseError = void 0;
            let n = r(35762),
                i = class e extends Error {
                    walk(e) {
                        return function e(t, r) {
                            return r ? .(t) ? t : t && "object" == typeof t && "cause" in t ? e(t.cause, r) : r ? null : t
                        }(this, e)
                    }
                    constructor(t, r = {}) {
                        super(), Object.defineProperty(this, "details", {
                            enumerable: !0,
                            configurable: !0,
                            writable: !0,
                            value: void 0
                        }), Object.defineProperty(this, "docsPath", {
                            enumerable: !0,
                            configurable: !0,
                            writable: !0,
                            value: void 0
                        }), Object.defineProperty(this, "metaMessages", {
                            enumerable: !0,
                            configurable: !0,
                            writable: !0,
                            value: void 0
                        }), Object.defineProperty(this, "shortMessage", {
                            enumerable: !0,
                            configurable: !0,
                            writable: !0,
                            value: void 0
                        }), Object.defineProperty(this, "name", {
                            enumerable: !0,
                            configurable: !0,
                            writable: !0,
                            value: "ViemError"
                        }), Object.defineProperty(this, "version", {
                            enumerable: !0,
                            configurable: !0,
                            writable: !0,
                            value: (0, n.getVersion)()
                        });
                        let i = r.cause instanceof e ? r.cause.details : r.cause ? .message ? r.cause.message : r.details,
                            o = r.cause instanceof e && r.cause.docsPath || r.docsPath;
                        this.message = [t || "An error occurred.", "", ...r.metaMessages ? [...r.metaMessages, ""] : [], ...o ? [`Docs: https://viem.sh${o}.html${r.docsSlug?`#${r.docsSlug}`:""}`] : [], ...i ? [`Details: ${i}`] : [], `Version: ${this.version}`].join("\n"), r.cause && (this.cause = r.cause), this.details = i, this.docsPath = o, this.metaMessages = r.metaMessages, this.shortMessage = t
                    }
                };
            t.BaseError = i
        },
        38129: (e, t, r) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.BlockNotFoundError = void 0;
            let n = r(72968),
                i = class extends n.BaseError {
                    constructor({
                        blockHash: e,
                        blockNumber: t
                    }) {
                        let r = "Block";
                        e && (r = `Block at hash "${e}"`), t && (r = `Block at number "${t}"`), super(`${r} could not be found.`), Object.defineProperty(this, "name", {
                            enumerable: !0,
                            configurable: !0,
                            writable: !0,
                            value: "BlockNotFoundError"
                        })
                    }
                };
            t.BlockNotFoundError = i
        },
        17458: (e, t, r) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.OffchainLookupSenderMismatchError = t.OffchainLookupResponseMalformedError = t.OffchainLookupError = void 0;
            let n = r(63291),
                i = r(72968),
                o = r(35762),
                s = class extends i.BaseError {
                    constructor({
                        callbackSelector: e,
                        cause: t,
                        data: r,
                        extraData: n,
                        sender: i,
                        urls: s
                    }) {
                        super(t.shortMessage || "An error occurred while fetching for an offchain result.", {
                            cause: t,
                            metaMessages: [...t.metaMessages || [], t.metaMessages ? .length ? "" : [], "Offchain Gateway Call:", s && ["  Gateway URL(s):", ...s.map(e => `    ${(0,o.getUrl)(e)}`)], `  Sender: ${i}`, `  Data: ${r}`, `  Callback selector: ${e}`, `  Extra data: ${n}`].flat()
                        }), Object.defineProperty(this, "name", {
                            enumerable: !0,
                            configurable: !0,
                            writable: !0,
                            value: "OffchainLookupError"
                        })
                    }
                };
            t.OffchainLookupError = s;
            let a = class extends i.BaseError {
                constructor({
                    result: e,
                    url: t
                }) {
                    super("Offchain gateway response is malformed. Response data must be a hex value.", {
                        metaMessages: [`Gateway URL: ${(0,o.getUrl)(t)}`, `Response: ${(0,n.stringify)(e)}`]
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "OffchainLookupResponseMalformedError"
                    })
                }
            };
            t.OffchainLookupResponseMalformedError = a;
            let c = class extends i.BaseError {
                constructor({
                    sender: e,
                    to: t
                }) {
                    super("Reverted sender address does not match target contract address (`to`).", {
                        metaMessages: [`Contract address: ${t}`, `OffchainLookup sender address: ${e}`]
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "OffchainLookupSenderMismatchError"
                    })
                }
            };
            t.OffchainLookupSenderMismatchError = c
        },
        1586: (e, t, r) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.InvalidChainIdError = t.ClientChainNotConfiguredError = t.ChainNotFoundError = t.ChainMismatchError = t.ChainDoesNotSupportContract = void 0;
            let n = r(72968),
                i = class extends n.BaseError {
                    constructor({
                        blockNumber: e,
                        chain: t,
                        contract: r
                    }) {
                        super(`Chain "${t.name}" does not support contract "${r.name}".`, {
                            metaMessages: ["This could be due to any of the following:", ...e && r.blockCreated && r.blockCreated > e ? [`- The contract "${r.name}" was not deployed until block ${r.blockCreated} (current block ${e}).`] : [`- The chain does not have the contract "${r.name}" configured.`]]
                        }), Object.defineProperty(this, "name", {
                            enumerable: !0,
                            configurable: !0,
                            writable: !0,
                            value: "ChainDoesNotSupportContract"
                        })
                    }
                };
            t.ChainDoesNotSupportContract = i;
            let o = class extends n.BaseError {
                constructor({
                    chain: e,
                    currentChainId: t
                }) {
                    super(`The current chain of the wallet (id: ${t}) does not match the target chain for the transaction (id: ${e.id} – ${e.name}).`, {
                        metaMessages: [`Current Chain ID:  ${t}`, `Expected Chain ID: ${e.id} – ${e.name}`]
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "ChainMismatchError"
                    })
                }
            };
            t.ChainMismatchError = o;
            let s = class extends n.BaseError {
                constructor() {
                    super("No chain was provided to the request.\nPlease provide a chain with the `chain` argument on the Action, or by supplying a `chain` to WalletClient."), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "ChainNotFoundError"
                    })
                }
            };
            t.ChainNotFoundError = s;
            let a = class extends n.BaseError {
                constructor() {
                    super("No chain was provided to the Client."), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "ClientChainNotConfiguredError"
                    })
                }
            };
            t.ClientChainNotConfiguredError = a;
            let c = class extends n.BaseError {
                constructor({
                    chainId: e
                }) {
                    super(`Chain ID "${e}" is invalid.`), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "InvalidChainIdError"
                    })
                }
            };
            t.InvalidChainIdError = c
        },
        30211: (e, t, r) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.RawContractError = t.ContractFunctionZeroDataError = t.ContractFunctionRevertedError = t.ContractFunctionExecutionError = t.CallExecutionError = void 0;
            let n = r(36401),
                i = r(17480),
                o = r(64487),
                s = r(73735),
                a = r(54243),
                c = r(57754),
                u = r(7838),
                l = r(74129),
                d = r(51889),
                h = r(72968),
                f = r(99449),
                p = r(35762),
                g = class extends h.BaseError {
                    constructor(e, {
                        account: t,
                        docsPath: r,
                        chain: i,
                        data: o,
                        gas: s,
                        gasPrice: a,
                        maxFeePerGas: c,
                        maxPriorityFeePerGas: d,
                        nonce: h,
                        to: p,
                        value: g
                    }) {
                        super(e.shortMessage, {
                            cause: e,
                            docsPath: r,
                            metaMessages: [...e.metaMessages ? [...e.metaMessages, " "] : [], "Raw Call Arguments:", (0, f.prettyPrint)({
                                from: (t ? (0, n.parseAccount)(t) : void 0) ? .address,
                                to: p,
                                value: void 0 !== g && `${(0,u.formatEther)(g)} ${i?.nativeCurrency?.symbol||"ETH"}`,
                                data: o,
                                gas: s,
                                gasPrice: void 0 !== a && `${(0,l.formatGwei)(a)} gwei`,
                                maxFeePerGas: void 0 !== c && `${(0,l.formatGwei)(c)} gwei`,
                                maxPriorityFeePerGas: void 0 !== d && `${(0,l.formatGwei)(d)} gwei`,
                                nonce: h
                            })].filter(Boolean)
                        }), Object.defineProperty(this, "cause", {
                            enumerable: !0,
                            configurable: !0,
                            writable: !0,
                            value: void 0
                        }), Object.defineProperty(this, "name", {
                            enumerable: !0,
                            configurable: !0,
                            writable: !0,
                            value: "CallExecutionError"
                        }), this.cause = e
                    }
                };
            t.CallExecutionError = g;
            let m = class extends h.BaseError {
                constructor(e, {
                    abi: t,
                    args: r,
                    contractAddress: n,
                    docsPath: i,
                    functionName: o,
                    sender: u
                }) {
                    let l = (0, c.getAbiItem)({
                            abi: t,
                            args: r,
                            name: o
                        }),
                        d = l ? (0, a.formatAbiItemWithArgs)({
                            abiItem: l,
                            args: r,
                            includeFunctionName: !1,
                            includeName: !1
                        }) : void 0;
                    super(e.shortMessage || `An unknown error occurred while executing the contract function "${o}".`, {
                        cause: e,
                        docsPath: i,
                        metaMessages: [...e.metaMessages ? [...e.metaMessages, " "] : [], "Contract Call:", (0, f.prettyPrint)({
                            address: n && (0, p.getContractAddress)(n),
                            function: l ? (0, s.formatAbiItem)(l, {
                                includeName: !0
                            }) : void 0,
                            args: d && "()" !== d && `${[...Array(o?.length??0).keys()].map(()=>" ").join("")}${d}`,
                            sender: u
                        })].filter(Boolean)
                    }), Object.defineProperty(this, "abi", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }), Object.defineProperty(this, "args", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }), Object.defineProperty(this, "cause", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }), Object.defineProperty(this, "contractAddress", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }), Object.defineProperty(this, "formattedArgs", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }), Object.defineProperty(this, "functionName", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }), Object.defineProperty(this, "sender", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "ContractFunctionExecutionError"
                    }), this.abi = t, this.args = r, this.cause = e, this.contractAddress = n, this.functionName = o, this.sender = u
                }
            };
            t.ContractFunctionExecutionError = m;
            let b = class extends h.BaseError {
                constructor({
                    abi: e,
                    data: t,
                    functionName: r,
                    message: n
                }) {
                    let c, u, l, h, f;
                    if (t && "0x" !== t) try {
                        let {
                            abiItem: r,
                            errorName: n,
                            args: c
                        } = f = (0, o.decodeErrorResult)({
                            abi: e,
                            data: t
                        });
                        if ("Error" === n) l = c[0];
                        else if ("Panic" === n) {
                            let [e] = c;
                            l = i.panicReasons[e]
                        } else {
                            let e = r ? (0, s.formatAbiItem)(r, {
                                    includeName: !0
                                }) : void 0,
                                t = r && c ? (0, a.formatAbiItemWithArgs)({
                                    abiItem: r,
                                    args: c,
                                    includeFunctionName: !1,
                                    includeName: !1
                                }) : void 0;
                            u = [e ? `Error: ${e}` : "", t && "()" !== t ? `       ${[...Array(n?.length??0).keys()].map(()=>" ").join("")}${t}` : ""]
                        }
                    } catch (e) {
                        c = e
                    } else n && (l = n);
                    c instanceof d.AbiErrorSignatureNotFoundError && (h = c.signature, u = [`Unable to decode signature "${h}" as it was not found on the provided ABI.`, "Make sure you are using the correct ABI and that the error exists on it.", `You can look up the decoded signature here: https://openchain.xyz/signatures?query=${h}.`]), super(l && "execution reverted" !== l || h ? [`The contract function "${r}" reverted with the following ${h?"signature":"reason"}:`, l || h].join("\n") : `The contract function "${r}" reverted.`, {
                        cause: c,
                        metaMessages: u
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "ContractFunctionRevertedError"
                    }), Object.defineProperty(this, "data", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }), Object.defineProperty(this, "reason", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }), Object.defineProperty(this, "signature", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }), this.data = f, this.reason = l, this.signature = h
                }
            };
            t.ContractFunctionRevertedError = b;
            let y = class extends h.BaseError {
                constructor({
                    functionName: e
                }) {
                    super(`The contract function "${e}" returned no data ("0x").`, {
                        metaMessages: ["This could be due to any of the following:", `  - The contract does not have the function "${e}",`, "  - The parameters passed to the contract function may be invalid, or", "  - The address is not a contract."]
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "ContractFunctionZeroDataError"
                    })
                }
            };
            t.ContractFunctionZeroDataError = y;
            let v = class extends h.BaseError {
                constructor({
                    data: e,
                    message: t
                }) {
                    super(t || ""), Object.defineProperty(this, "code", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: 3
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "RawContractError"
                    }), Object.defineProperty(this, "data", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }), this.data = e
                }
            };
            t.RawContractError = v
        },
        8904: (e, t, r) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.PositionOutOfBoundsError = t.NegativeOffsetError = void 0;
            let n = r(72968),
                i = class extends n.BaseError {
                    constructor({
                        offset: e
                    }) {
                        super(`Offset \`${e}\` cannot be negative.`), Object.defineProperty(this, "name", {
                            enumerable: !0,
                            configurable: !0,
                            writable: !0,
                            value: "NegativeOffsetError"
                        })
                    }
                };
            t.NegativeOffsetError = i;
            let o = class extends n.BaseError {
                constructor({
                    length: e,
                    position: t
                }) {
                    super(`Position \`${t}\` is out of bounds (\`0 < position < ${e}\`).`), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "PositionOutOfBoundsError"
                    })
                }
            };
            t.PositionOutOfBoundsError = o
        },
        13319: (e, t, r) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.SizeExceedsPaddingSizeError = t.SliceOffsetOutOfBoundsError = void 0;
            let n = r(72968),
                i = class extends n.BaseError {
                    constructor({
                        offset: e,
                        position: t,
                        size: r
                    }) {
                        super(`Slice ${"start"===t?"starting":"ending"} at offset "${e}" is out-of-bounds (size: ${r}).`), Object.defineProperty(this, "name", {
                            enumerable: !0,
                            configurable: !0,
                            writable: !0,
                            value: "SliceOffsetOutOfBoundsError"
                        })
                    }
                };
            t.SliceOffsetOutOfBoundsError = i;
            let o = class extends n.BaseError {
                constructor({
                    size: e,
                    targetSize: t,
                    type: r
                }) {
                    super(`${r.charAt(0).toUpperCase()}${r.slice(1).toLowerCase()} size (${e}) exceeds padding size (${t}).`), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "SizeExceedsPaddingSizeError"
                    })
                }
            };
            t.SizeExceedsPaddingSizeError = o
        },
        1750: (e, t, r) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.SizeOverflowError = t.OffsetOutOfBoundsError = t.InvalidHexValueError = t.InvalidHexBooleanError = t.InvalidBytesBooleanError = t.IntegerOutOfRangeError = t.DataLengthTooShortError = t.DataLengthTooLongError = void 0;
            let n = r(72968),
                i = class extends n.BaseError {
                    constructor({
                        consumed: e,
                        length: t
                    }) {
                        super(`Consumed bytes (${e}) is shorter than data length (${t-1}).`), Object.defineProperty(this, "name", {
                            enumerable: !0,
                            configurable: !0,
                            writable: !0,
                            value: "DataLengthTooLongError"
                        })
                    }
                };
            t.DataLengthTooLongError = i;
            let o = class extends n.BaseError {
                constructor({
                    length: e,
                    dataLength: t
                }) {
                    super(`Data length (${t-1}) is shorter than consumed bytes length (${e-1}).`), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "DataLengthTooShortError"
                    })
                }
            };
            t.DataLengthTooShortError = o;
            let s = class extends n.BaseError {
                constructor({
                    max: e,
                    min: t,
                    signed: r,
                    size: n,
                    value: i
                }) {
                    super(`Number "${i}" is not in safe ${n?`${8*n}-bit ${r?"signed":"unsigned"} `:""}integer range ${e?`(${t} to ${e})`:`(above ${t})`}`), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "IntegerOutOfRangeError"
                    })
                }
            };
            t.IntegerOutOfRangeError = s;
            let a = class extends n.BaseError {
                constructor(e) {
                    super(`Bytes value "${e}" is not a valid boolean. The bytes array must contain a single byte of either a 0 or 1 value.`), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "InvalidBytesBooleanError"
                    })
                }
            };
            t.InvalidBytesBooleanError = a;
            let c = class extends n.BaseError {
                constructor(e) {
                    super(`Hex value "${e}" is not a valid boolean. The hex value must be "0x0" (false) or "0x1" (true).`), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "InvalidHexBooleanError"
                    })
                }
            };
            t.InvalidHexBooleanError = c;
            let u = class extends n.BaseError {
                constructor(e) {
                    super(`Hex value "${e}" is an odd length (${e.length}). It must be an even length.`), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "InvalidHexValueError"
                    })
                }
            };
            t.InvalidHexValueError = u;
            let l = class extends n.BaseError {
                constructor({
                    nextOffset: e,
                    offset: t
                }) {
                    super(`Next offset (${e}) is greater than previous offset + consumed bytes (${t})`), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "OffsetOutOfBoundsError"
                    })
                }
            };
            t.OffsetOutOfBoundsError = l;
            let d = class extends n.BaseError {
                constructor({
                    givenSize: e,
                    maxSize: t
                }) {
                    super(`Size cannot exceed ${t} bytes. Given size: ${e} bytes.`), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "SizeOverflowError"
                    })
                }
            };
            t.SizeOverflowError = d
        },
        42119: (e, t, r) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.EnsAvatarUnsupportedNamespaceError = t.EnsAvatarUriResolutionError = t.EnsAvatarInvalidNftUriError = t.EnsAvatarInvalidMetadataError = void 0;
            let n = r(72968),
                i = class extends n.BaseError {
                    constructor({
                        data: e
                    }) {
                        super("Unable to extract image from metadata. The metadata may be malformed or invalid.", {
                            metaMessages: ["- Metadata must be a JSON object with at least an `image`, `image_url` or `image_data` property.", "", `Provided data: ${JSON.stringify(e)}`]
                        }), Object.defineProperty(this, "name", {
                            enumerable: !0,
                            configurable: !0,
                            writable: !0,
                            value: "EnsAvatarInvalidMetadataError"
                        })
                    }
                };
            t.EnsAvatarInvalidMetadataError = i;
            let o = class extends n.BaseError {
                constructor({
                    reason: e
                }) {
                    super(`ENS NFT avatar URI is invalid. ${e}`), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "EnsAvatarInvalidNftUriError"
                    })
                }
            };
            t.EnsAvatarInvalidNftUriError = o;
            let s = class extends n.BaseError {
                constructor({
                    uri: e
                }) {
                    super(`Unable to resolve ENS avatar URI "${e}". The URI may be malformed, invalid, or does not respond with a valid image.`), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "EnsAvatarUriResolutionError"
                    })
                }
            };
            t.EnsAvatarUriResolutionError = s;
            let a = class extends n.BaseError {
                constructor({
                    namespace: e
                }) {
                    super(`ENS NFT avatar namespace "${e}" is not supported. Must be "erc721" or "erc1155".`), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "EnsAvatarUnsupportedNamespaceError"
                    })
                }
            };
            t.EnsAvatarUnsupportedNamespaceError = a
        },
        5853: (e, t, r) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.EstimateGasExecutionError = void 0;
            let n = r(7838),
                i = r(74129),
                o = r(72968),
                s = r(99449),
                a = class extends o.BaseError {
                    constructor(e, {
                        account: t,
                        docsPath: r,
                        chain: o,
                        data: a,
                        gas: c,
                        gasPrice: u,
                        maxFeePerGas: l,
                        maxPriorityFeePerGas: d,
                        nonce: h,
                        to: f,
                        value: p
                    }) {
                        super(e.shortMessage, {
                            cause: e,
                            docsPath: r,
                            metaMessages: [...e.metaMessages ? [...e.metaMessages, " "] : [], "Estimate Gas Arguments:", (0, s.prettyPrint)({
                                from: t ? .address,
                                to: f,
                                value: void 0 !== p && `${(0,n.formatEther)(p)} ${o?.nativeCurrency?.symbol||"ETH"}`,
                                data: a,
                                gas: c,
                                gasPrice: void 0 !== u && `${(0,i.formatGwei)(u)} gwei`,
                                maxFeePerGas: void 0 !== l && `${(0,i.formatGwei)(l)} gwei`,
                                maxPriorityFeePerGas: void 0 !== d && `${(0,i.formatGwei)(d)} gwei`,
                                nonce: h
                            })].filter(Boolean)
                        }), Object.defineProperty(this, "cause", {
                            enumerable: !0,
                            configurable: !0,
                            writable: !0,
                            value: void 0
                        }), Object.defineProperty(this, "name", {
                            enumerable: !0,
                            configurable: !0,
                            writable: !0,
                            value: "EstimateGasExecutionError"
                        }), this.cause = e
                    }
                };
            t.EstimateGasExecutionError = a
        },
        78215: (e, t, r) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.MaxFeePerGasTooLowError = t.Eip1559FeesNotSupportedError = t.BaseFeeScalarError = void 0;
            let n = r(74129),
                i = r(72968),
                o = class extends i.BaseError {
                    constructor() {
                        super("`baseFeeMultiplier` must be greater than 1."), Object.defineProperty(this, "name", {
                            enumerable: !0,
                            configurable: !0,
                            writable: !0,
                            value: "BaseFeeScalarError"
                        })
                    }
                };
            t.BaseFeeScalarError = o;
            let s = class extends i.BaseError {
                constructor() {
                    super("Chain does not support EIP-1559 fees."), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "Eip1559FeesNotSupportedError"
                    })
                }
            };
            t.Eip1559FeesNotSupportedError = s;
            let a = class extends i.BaseError {
                constructor({
                    maxPriorityFeePerGas: e
                }) {
                    super(`\`maxFeePerGas\` cannot be less than the \`maxPriorityFeePerGas\` (${(0,n.formatGwei)(e)} gwei).`), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "MaxFeePerGasTooLowError"
                    })
                }
            };
            t.MaxFeePerGasTooLowError = a
        },
        76588: (e, t, r) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.FilterTypeNotSupportedError = void 0;
            let n = r(72968),
                i = class extends n.BaseError {
                    constructor(e) {
                        super(`Filter type "${e}" is not supported.`), Object.defineProperty(this, "name", {
                            enumerable: !0,
                            configurable: !0,
                            writable: !0,
                            value: "FilterTypeNotSupportedError"
                        })
                    }
                };
            t.FilterTypeNotSupportedError = i
        },
        69110: (e, t, r) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.UnknownNodeError = t.TipAboveFeeCapError = t.TransactionTypeNotSupportedError = t.IntrinsicGasTooLowError = t.IntrinsicGasTooHighError = t.InsufficientFundsError = t.NonceMaxValueError = t.NonceTooLowError = t.NonceTooHighError = t.FeeCapTooLowError = t.FeeCapTooHighError = t.ExecutionRevertedError = void 0;
            let n = r(74129),
                i = r(72968),
                o = class extends i.BaseError {
                    constructor({
                        cause: e,
                        message: t
                    } = {}) {
                        let r = t ? .replace("execution reverted: ", "") ? .replace("execution reverted", "");
                        super(`Execution reverted ${r?`with reason: ${r}`:"for an unknown reason"}.`, {
                            cause: e
                        }), Object.defineProperty(this, "name", {
                            enumerable: !0,
                            configurable: !0,
                            writable: !0,
                            value: "ExecutionRevertedError"
                        })
                    }
                };
            Object.defineProperty(o, "code", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: 3
            }), Object.defineProperty(o, "nodeMessage", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: /execution reverted/
            }), t.ExecutionRevertedError = o;
            let s = class extends i.BaseError {
                constructor({
                    cause: e,
                    maxFeePerGas: t
                } = {}) {
                    super(`The fee cap (\`maxFeePerGas\`${t?` = ${(0,n.formatGwei)(t)} gwei`:""}) cannot be higher than the maximum allowed value (2^256-1).`, {
                        cause: e
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "FeeCapTooHigh"
                    })
                }
            };
            Object.defineProperty(s, "nodeMessage", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: /max fee per gas higher than 2\^256-1|fee cap higher than 2\^256-1/
            }), t.FeeCapTooHighError = s;
            let a = class extends i.BaseError {
                constructor({
                    cause: e,
                    maxFeePerGas: t
                } = {}) {
                    super(`The fee cap (\`maxFeePerGas\`${t?` = ${(0,n.formatGwei)(t)}`:""} gwei) cannot be lower than the block base fee.`, {
                        cause: e
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "FeeCapTooLow"
                    })
                }
            };
            Object.defineProperty(a, "nodeMessage", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: /max fee per gas less than block base fee|fee cap less than block base fee|transaction is outdated/
            }), t.FeeCapTooLowError = a;
            let c = class extends i.BaseError {
                constructor({
                    cause: e,
                    nonce: t
                } = {}) {
                    super(`Nonce provided for the transaction ${t?`(${t}) `:""}is higher than the next one expected.`, {
                        cause: e
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "NonceTooHighError"
                    })
                }
            };
            Object.defineProperty(c, "nodeMessage", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: /nonce too high/
            }), t.NonceTooHighError = c;
            let u = class extends i.BaseError {
                constructor({
                    cause: e,
                    nonce: t
                } = {}) {
                    super(`Nonce provided for the transaction ${t?`(${t}) `:""}is lower than the current nonce of the account.
Try increasing the nonce or find the latest nonce with \`getTransactionCount\`.`, {
                        cause: e
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "NonceTooLowError"
                    })
                }
            };
            Object.defineProperty(u, "nodeMessage", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: /nonce too low|transaction already imported|already known/
            }), t.NonceTooLowError = u;
            let l = class extends i.BaseError {
                constructor({
                    cause: e,
                    nonce: t
                } = {}) {
                    super(`Nonce provided for the transaction ${t?`(${t}) `:""}exceeds the maximum allowed nonce.`, {
                        cause: e
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "NonceMaxValueError"
                    })
                }
            };
            Object.defineProperty(l, "nodeMessage", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: /nonce has max value/
            }), t.NonceMaxValueError = l;
            let d = class extends i.BaseError {
                constructor({
                    cause: e
                } = {}) {
                    super("The total cost (gas * gas fee + value) of executing this transaction exceeds the balance of the account.", {
                        cause: e,
                        metaMessages: ["This error could arise when the account does not have enough funds to:", " - pay for the total gas fee,", " - pay for the value to send.", " ", "The cost of the transaction is calculated as `gas * gas fee + value`, where:", " - `gas` is the amount of gas needed for transaction to execute,", " - `gas fee` is the gas fee,", " - `value` is the amount of ether to send to the recipient."]
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "InsufficientFundsError"
                    })
                }
            };
            Object.defineProperty(d, "nodeMessage", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: /insufficient funds/
            }), t.InsufficientFundsError = d;
            let h = class extends i.BaseError {
                constructor({
                    cause: e,
                    gas: t
                } = {}) {
                    super(`The amount of gas ${t?`(${t}) `:""}provided for the transaction exceeds the limit allowed for the block.`, {
                        cause: e
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "IntrinsicGasTooHighError"
                    })
                }
            };
            Object.defineProperty(h, "nodeMessage", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: /intrinsic gas too high|gas limit reached/
            }), t.IntrinsicGasTooHighError = h;
            let f = class extends i.BaseError {
                constructor({
                    cause: e,
                    gas: t
                } = {}) {
                    super(`The amount of gas ${t?`(${t}) `:""}provided for the transaction is too low.`, {
                        cause: e
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "IntrinsicGasTooLowError"
                    })
                }
            };
            Object.defineProperty(f, "nodeMessage", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: /intrinsic gas too low/
            }), t.IntrinsicGasTooLowError = f;
            let p = class extends i.BaseError {
                constructor({
                    cause: e
                }) {
                    super("The transaction type is not supported for this chain.", {
                        cause: e
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "TransactionTypeNotSupportedError"
                    })
                }
            };
            Object.defineProperty(p, "nodeMessage", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: /transaction type not valid/
            }), t.TransactionTypeNotSupportedError = p;
            let g = class extends i.BaseError {
                constructor({
                    cause: e,
                    maxPriorityFeePerGas: t,
                    maxFeePerGas: r
                } = {}) {
                    super(`The provided tip (\`maxPriorityFeePerGas\`${t?` = ${(0,n.formatGwei)(t)} gwei`:""}) cannot be higher than the fee cap (\`maxFeePerGas\`${r?` = ${(0,n.formatGwei)(r)} gwei`:""}).`, {
                        cause: e
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "TipAboveFeeCapError"
                    })
                }
            };
            Object.defineProperty(g, "nodeMessage", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: /max priority fee per gas higher than max fee per gas|tip higher than fee cap/
            }), t.TipAboveFeeCapError = g;
            let m = class extends i.BaseError {
                constructor({
                    cause: e
                }) {
                    super(`An error occurred while executing: ${e?.shortMessage}`, {
                        cause: e
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "UnknownNodeError"
                    })
                }
            };
            t.UnknownNodeError = m
        },
        24187: (e, t, r) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.TimeoutError = t.RpcRequestError = t.WebSocketRequestError = t.HttpRequestError = void 0;
            let n = r(63291),
                i = r(72968),
                o = r(35762),
                s = class extends i.BaseError {
                    constructor({
                        body: e,
                        details: t,
                        headers: r,
                        status: i,
                        url: s
                    }) {
                        super("HTTP request failed.", {
                            details: t,
                            metaMessages: [i && `Status: ${i}`, `URL: ${(0,o.getUrl)(s)}`, e && `Request body: ${(0,n.stringify)(e)}`].filter(Boolean)
                        }), Object.defineProperty(this, "name", {
                            enumerable: !0,
                            configurable: !0,
                            writable: !0,
                            value: "HttpRequestError"
                        }), Object.defineProperty(this, "body", {
                            enumerable: !0,
                            configurable: !0,
                            writable: !0,
                            value: void 0
                        }), Object.defineProperty(this, "headers", {
                            enumerable: !0,
                            configurable: !0,
                            writable: !0,
                            value: void 0
                        }), Object.defineProperty(this, "status", {
                            enumerable: !0,
                            configurable: !0,
                            writable: !0,
                            value: void 0
                        }), Object.defineProperty(this, "url", {
                            enumerable: !0,
                            configurable: !0,
                            writable: !0,
                            value: void 0
                        }), this.body = e, this.headers = r, this.status = i, this.url = s
                    }
                };
            t.HttpRequestError = s;
            let a = class extends i.BaseError {
                constructor({
                    body: e,
                    details: t,
                    url: r
                }) {
                    super("WebSocket request failed.", {
                        details: t,
                        metaMessages: [`URL: ${(0,o.getUrl)(r)}`, `Request body: ${(0,n.stringify)(e)}`]
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "WebSocketRequestError"
                    })
                }
            };
            t.WebSocketRequestError = a;
            let c = class extends i.BaseError {
                constructor({
                    body: e,
                    error: t,
                    url: r
                }) {
                    super("RPC Request failed.", {
                        cause: t,
                        details: t.message,
                        metaMessages: [`URL: ${(0,o.getUrl)(r)}`, `Request body: ${(0,n.stringify)(e)}`]
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "RpcRequestError"
                    }), Object.defineProperty(this, "code", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }), this.code = t.code
                }
            };
            t.RpcRequestError = c;
            let u = class extends i.BaseError {
                constructor({
                    body: e,
                    url: t
                }) {
                    super("The request took too long to respond.", {
                        details: "The request timed out.",
                        metaMessages: [`URL: ${(0,o.getUrl)(t)}`, `Request body: ${(0,n.stringify)(e)}`]
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "TimeoutError"
                    })
                }
            };
            t.TimeoutError = u
        },
        56467: (e, t, r) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.UnknownRpcError = t.SwitchChainError = t.ChainDisconnectedError = t.ProviderDisconnectedError = t.UnsupportedProviderMethodError = t.UnauthorizedProviderError = t.UserRejectedRequestError = t.JsonRpcVersionUnsupportedError = t.LimitExceededRpcError = t.MethodNotSupportedRpcError = t.TransactionRejectedRpcError = t.ResourceUnavailableRpcError = t.ResourceNotFoundRpcError = t.InvalidInputRpcError = t.InternalRpcError = t.InvalidParamsRpcError = t.MethodNotFoundRpcError = t.InvalidRequestRpcError = t.ParseRpcError = t.ProviderRpcError = t.RpcError = void 0;
            let n = r(72968),
                i = r(24187),
                o = class extends n.BaseError {
                    constructor(e, {
                        code: t,
                        docsPath: r,
                        metaMessages: n,
                        shortMessage: o
                    }) {
                        super(o, {
                            cause: e,
                            docsPath: r,
                            metaMessages: n || e ? .metaMessages
                        }), Object.defineProperty(this, "name", {
                            enumerable: !0,
                            configurable: !0,
                            writable: !0,
                            value: "RpcError"
                        }), Object.defineProperty(this, "code", {
                            enumerable: !0,
                            configurable: !0,
                            writable: !0,
                            value: void 0
                        }), this.name = e.name, this.code = e instanceof i.RpcRequestError ? e.code : t ? ? -1
                    }
                };
            t.RpcError = o;
            let s = class extends o {
                constructor(e, t) {
                    super(e, t), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "ProviderRpcError"
                    }), Object.defineProperty(this, "data", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }), this.data = t.data
                }
            };
            t.ProviderRpcError = s;
            let a = class e extends o {
                constructor(t) {
                    super(t, {
                        code: e.code,
                        shortMessage: "Invalid JSON was received by the server. An error occurred on the server while parsing the JSON text."
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "ParseRpcError"
                    })
                }
            };
            Object.defineProperty(a, "code", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: -32700
            }), t.ParseRpcError = a;
            let c = class e extends o {
                constructor(t) {
                    super(t, {
                        code: e.code,
                        shortMessage: "JSON is not a valid request object."
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "InvalidRequestRpcError"
                    })
                }
            };
            Object.defineProperty(c, "code", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: -32600
            }), t.InvalidRequestRpcError = c;
            let u = class e extends o {
                constructor(t) {
                    super(t, {
                        code: e.code,
                        shortMessage: "The method does not exist / is not available."
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "MethodNotFoundRpcError"
                    })
                }
            };
            Object.defineProperty(u, "code", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: -32601
            }), t.MethodNotFoundRpcError = u;
            let l = class e extends o {
                constructor(t) {
                    super(t, {
                        code: e.code,
                        shortMessage: "Invalid parameters were provided to the RPC method.\nDouble check you have provided the correct parameters."
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "InvalidParamsRpcError"
                    })
                }
            };
            Object.defineProperty(l, "code", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: -32602
            }), t.InvalidParamsRpcError = l;
            let d = class e extends o {
                constructor(t) {
                    super(t, {
                        code: e.code,
                        shortMessage: "An internal error was received."
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "InternalRpcError"
                    })
                }
            };
            Object.defineProperty(d, "code", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: -32603
            }), t.InternalRpcError = d;
            let h = class e extends o {
                constructor(t) {
                    super(t, {
                        code: e.code,
                        shortMessage: "Missing or invalid parameters.\nDouble check you have provided the correct parameters."
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "InvalidInputRpcError"
                    })
                }
            };
            Object.defineProperty(h, "code", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: -32e3
            }), t.InvalidInputRpcError = h;
            let f = class e extends o {
                constructor(t) {
                    super(t, {
                        code: e.code,
                        shortMessage: "Requested resource not found."
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "ResourceNotFoundRpcError"
                    })
                }
            };
            Object.defineProperty(f, "code", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: -32001
            }), t.ResourceNotFoundRpcError = f;
            let p = class e extends o {
                constructor(t) {
                    super(t, {
                        code: e.code,
                        shortMessage: "Requested resource not available."
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "ResourceUnavailableRpcError"
                    })
                }
            };
            Object.defineProperty(p, "code", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: -32002
            }), t.ResourceUnavailableRpcError = p;
            let g = class e extends o {
                constructor(t) {
                    super(t, {
                        code: e.code,
                        shortMessage: "Transaction creation failed."
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "TransactionRejectedRpcError"
                    })
                }
            };
            Object.defineProperty(g, "code", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: -32003
            }), t.TransactionRejectedRpcError = g;
            let m = class e extends o {
                constructor(t) {
                    super(t, {
                        code: e.code,
                        shortMessage: "Method is not implemented."
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "MethodNotSupportedRpcError"
                    })
                }
            };
            Object.defineProperty(m, "code", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: -32004
            }), t.MethodNotSupportedRpcError = m;
            let b = class e extends o {
                constructor(t) {
                    super(t, {
                        code: e.code,
                        shortMessage: "Request exceeds defined limit."
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "LimitExceededRpcError"
                    })
                }
            };
            Object.defineProperty(b, "code", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: -32005
            }), t.LimitExceededRpcError = b;
            let y = class e extends o {
                constructor(t) {
                    super(t, {
                        code: e.code,
                        shortMessage: "Version of JSON-RPC protocol is not supported."
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "JsonRpcVersionUnsupportedError"
                    })
                }
            };
            Object.defineProperty(y, "code", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: -32006
            }), t.JsonRpcVersionUnsupportedError = y;
            let v = class e extends s {
                constructor(t) {
                    super(t, {
                        code: e.code,
                        shortMessage: "User rejected the request."
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "UserRejectedRequestError"
                    })
                }
            };
            Object.defineProperty(v, "code", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: 4001
            }), t.UserRejectedRequestError = v;
            let w = class e extends s {
                constructor(t) {
                    super(t, {
                        code: e.code,
                        shortMessage: "The requested method and/or account has not been authorized by the user."
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "UnauthorizedProviderError"
                    })
                }
            };
            Object.defineProperty(w, "code", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: 4100
            }), t.UnauthorizedProviderError = w;
            let E = class e extends s {
                constructor(t) {
                    super(t, {
                        code: e.code,
                        shortMessage: "The Provider does not support the requested method."
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "UnsupportedProviderMethodError"
                    })
                }
            };
            Object.defineProperty(E, "code", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: 4200
            }), t.UnsupportedProviderMethodError = E;
            let _ = class e extends s {
                constructor(t) {
                    super(t, {
                        code: e.code,
                        shortMessage: "The Provider is disconnected from all chains."
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "ProviderDisconnectedError"
                    })
                }
            };
            Object.defineProperty(_, "code", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: 4900
            }), t.ProviderDisconnectedError = _;
            let P = class e extends s {
                constructor(t) {
                    super(t, {
                        code: e.code,
                        shortMessage: "The Provider is not connected to the requested chain."
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "ChainDisconnectedError"
                    })
                }
            };
            Object.defineProperty(P, "code", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: 4901
            }), t.ChainDisconnectedError = P;
            let x = class e extends s {
                constructor(t) {
                    super(t, {
                        code: e.code,
                        shortMessage: "An error occurred when attempting to switch chain."
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "SwitchChainError"
                    })
                }
            };
            Object.defineProperty(x, "code", {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: 4902
            }), t.SwitchChainError = x;
            let I = class extends o {
                constructor(e) {
                    super(e, {
                        shortMessage: "An unknown RPC error occurred."
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "UnknownRpcError"
                    })
                }
            };
            t.UnknownRpcError = I
        },
        99449: (e, t, r) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.WaitForTransactionReceiptTimeoutError = t.TransactionReceiptNotFoundError = t.TransactionNotFoundError = t.TransactionExecutionError = t.InvalidStorageKeySizeError = t.InvalidSerializedTransactionError = t.InvalidSerializedTransactionTypeError = t.InvalidSerializableTransactionError = t.InvalidLegacyVError = t.FeeConflictError = t.prettyPrint = void 0;
            let n = r(7838),
                i = r(74129),
                o = r(72968);

            function s(e) {
                let t = Object.entries(e).map(([e, t]) => void 0 === t || !1 === t ? null : [e, t]).filter(Boolean),
                    r = t.reduce((e, [t]) => Math.max(e, t.length), 0);
                return t.map(([e, t]) => `  ${`${e}:`.padEnd(r+1)}  ${t}`).join("\n")
            }
            t.prettyPrint = s;
            let a = class extends o.BaseError {
                constructor() {
                    super("Cannot specify both a `gasPrice` and a `maxFeePerGas`/`maxPriorityFeePerGas`.\nUse `maxFeePerGas`/`maxPriorityFeePerGas` for EIP-1559 compatible networks, and `gasPrice` for others."), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "FeeConflictError"
                    })
                }
            };
            t.FeeConflictError = a;
            let c = class extends o.BaseError {
                constructor({
                    v: e
                }) {
                    super(`Invalid \`v\` value "${e}". Expected 27 or 28.`), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "InvalidLegacyVError"
                    })
                }
            };
            t.InvalidLegacyVError = c;
            let u = class extends o.BaseError {
                constructor({
                    transaction: e
                }) {
                    super("Cannot infer a transaction type from provided transaction.", {
                        metaMessages: ["Provided Transaction:", "{", s(e), "}", "", "To infer the type, either provide:", "- a `type` to the Transaction, or", "- an EIP-1559 Transaction with `maxFeePerGas`, or", "- an EIP-2930 Transaction with `gasPrice` & `accessList`, or", "- a Legacy Transaction with `gasPrice`"]
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "InvalidSerializableTransactionError"
                    })
                }
            };
            t.InvalidSerializableTransactionError = u;
            let l = class extends o.BaseError {
                constructor({
                    serializedType: e
                }) {
                    super(`Serialized transaction type "${e}" is invalid.`), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "InvalidSerializedTransactionType"
                    }), Object.defineProperty(this, "serializedType", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }), this.serializedType = e
                }
            };
            t.InvalidSerializedTransactionTypeError = l;
            let d = class extends o.BaseError {
                constructor({
                    attributes: e,
                    serializedTransaction: t,
                    type: r
                }) {
                    let n = Object.entries(e).map(([e, t]) => void 0 === t ? e : void 0).filter(Boolean);
                    super(`Invalid serialized transaction of type "${r}" was provided.`, {
                        metaMessages: [`Serialized Transaction: "${t}"`, n.length > 0 ? `Missing Attributes: ${n.join(", ")}` : ""].filter(Boolean)
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "InvalidSerializedTransactionError"
                    }), Object.defineProperty(this, "serializedTransaction", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }), Object.defineProperty(this, "type", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }), this.serializedTransaction = t, this.type = r
                }
            };
            t.InvalidSerializedTransactionError = d;
            let h = class extends o.BaseError {
                constructor({
                    storageKey: e
                }) {
                    super(`Size for storage key "${e}" is invalid. Expected 32 bytes. Got ${Math.floor((e.length-2)/2)} bytes.`), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "InvalidStorageKeySizeError"
                    })
                }
            };
            t.InvalidStorageKeySizeError = h;
            let f = class extends o.BaseError {
                constructor(e, {
                    account: t,
                    docsPath: r,
                    chain: o,
                    data: a,
                    gas: c,
                    gasPrice: u,
                    maxFeePerGas: l,
                    maxPriorityFeePerGas: d,
                    nonce: h,
                    to: f,
                    value: p
                }) {
                    super(e.shortMessage, {
                        cause: e,
                        docsPath: r,
                        metaMessages: [...e.metaMessages ? [...e.metaMessages, " "] : [], "Request Arguments:", s({
                            chain: o && `${o?.name} (id: ${o?.id})`,
                            from: t ? .address,
                            to: f,
                            value: void 0 !== p && `${(0,n.formatEther)(p)} ${o?.nativeCurrency?.symbol||"ETH"}`,
                            data: a,
                            gas: c,
                            gasPrice: void 0 !== u && `${(0,i.formatGwei)(u)} gwei`,
                            maxFeePerGas: void 0 !== l && `${(0,i.formatGwei)(l)} gwei`,
                            maxPriorityFeePerGas: void 0 !== d && `${(0,i.formatGwei)(d)} gwei`,
                            nonce: h
                        })].filter(Boolean)
                    }), Object.defineProperty(this, "cause", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: void 0
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "TransactionExecutionError"
                    }), this.cause = e
                }
            };
            t.TransactionExecutionError = f;
            let p = class extends o.BaseError {
                constructor({
                    blockHash: e,
                    blockNumber: t,
                    blockTag: r,
                    hash: n,
                    index: i
                }) {
                    let o = "Transaction";
                    r && void 0 !== i && (o = `Transaction at block time "${r}" at index "${i}"`), e && void 0 !== i && (o = `Transaction at block hash "${e}" at index "${i}"`), t && void 0 !== i && (o = `Transaction at block number "${t}" at index "${i}"`), n && (o = `Transaction with hash "${n}"`), super(`${o} could not be found.`), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "TransactionNotFoundError"
                    })
                }
            };
            t.TransactionNotFoundError = p;
            let g = class extends o.BaseError {
                constructor({
                    hash: e
                }) {
                    super(`Transaction receipt with hash "${e}" could not be found. The Transaction may not be processed on a block yet.`), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "TransactionReceiptNotFoundError"
                    })
                }
            };
            t.TransactionReceiptNotFoundError = g;
            let m = class extends o.BaseError {
                constructor({
                    hash: e
                }) {
                    super(`Timed out while waiting for transaction with hash "${e}" to be confirmed.`), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "WaitForTransactionReceiptTimeoutError"
                    })
                }
            };
            t.WaitForTransactionReceiptTimeoutError = m
        },
        74790: (e, t, r) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.UrlRequiredError = void 0;
            let n = r(72968),
                i = class extends n.BaseError {
                    constructor() {
                        super("No URL was provided to the Transport. Please provide a valid RPC URL to the Transport.", {
                            docsPath: "/docs/clients/intro"
                        })
                    }
                };
            t.UrlRequiredError = i
        },
        35762: (e, t, r) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.getVersion = t.getUrl = t.getContractAddress = void 0;
            let n = r(61254);
            t.getContractAddress = e => e, t.getUrl = e => e, t.getVersion = () => `viem@${n.version}`
        },
        61254: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.version = void 0, t.version = "1.21.3"
        },
        5414: (e, t, r) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.maxInt112 = t.maxInt104 = t.maxInt96 = t.maxInt88 = t.maxInt80 = t.maxInt72 = t.maxInt64 = t.maxInt56 = t.maxInt48 = t.maxInt40 = t.maxInt32 = t.maxInt24 = t.maxInt16 = t.maxInt8 = t.weiUnits = t.gweiUnits = t.etherUnits = t.zeroAddress = t.multicall3Abi = t.webSocket = t.createWalletClient = t.createTransport = t.walletActions = t.testActions = t.publicActions = t.createTestClient = t.createPublicClient = t.http = t.fallback = t.custom = t.createClient = t.getContract = t.parseAbiParameters = t.parseAbiParameter = t.parseAbiItem = t.parseAbi = t.UnknownSignatureError = t.UnknownTypeError = t.SolidityProtectedKeywordError = t.InvalidStructSignatureError = t.InvalidSignatureError = t.InvalidParenthesisError = t.InvalidParameterError = t.InvalidModifierError = t.InvalidFunctionModifierError = t.InvalidAbiTypeParameterError = t.InvalidAbiItemError = t.InvalidAbiParametersError = t.InvalidAbiParameterError = t.CircularReferenceError = void 0, t.maxUint256 = t.maxUint248 = t.maxUint240 = t.maxUint232 = t.maxUint224 = t.maxUint216 = t.maxUint208 = t.maxUint200 = t.maxUint192 = t.maxUint184 = t.maxUint176 = t.maxUint168 = t.maxUint160 = t.maxUint152 = t.maxUint144 = t.maxUint136 = t.maxUint128 = t.maxUint120 = t.maxUint112 = t.maxUint104 = t.maxUint96 = t.maxUint88 = t.maxUint80 = t.maxUint72 = t.maxUint64 = t.maxUint56 = t.maxUint48 = t.maxUint40 = t.maxUint32 = t.maxUint24 = t.maxUint16 = t.maxUint8 = t.maxInt256 = t.maxInt248 = t.maxInt240 = t.maxInt232 = t.maxInt224 = t.maxInt216 = t.maxInt208 = t.maxInt200 = t.maxInt192 = t.maxInt184 = t.maxInt176 = t.maxInt168 = t.maxInt160 = t.maxInt152 = t.maxInt144 = t.maxInt136 = t.maxInt128 = t.maxInt120 = void 0, t.AbiFunctionOutputsNotFoundError = t.AbiFunctionNotFoundError = t.AbiEventSignatureNotFoundError = t.AbiEventSignatureEmptyTopicsError = t.AbiEventNotFoundError = t.AbiErrorSignatureNotFoundError = t.AbiErrorNotFoundError = t.AbiErrorInputsNotFoundError = t.AbiEncodingBytesSizeMismatchError = t.AbiEncodingLengthMismatchError = t.AbiEncodingArrayLengthMismatchError = t.AbiDecodingZeroDataError = t.AbiDecodingDataSizeTooSmallError = t.AbiDecodingDataSizeInvalidError = t.AbiConstructorParamsNotFoundError = t.AbiConstructorNotFoundError = t.presignMessagePrefix = t.zeroHash = t.minInt256 = t.minInt248 = t.minInt240 = t.minInt232 = t.minInt224 = t.minInt216 = t.minInt208 = t.minInt200 = t.minInt192 = t.minInt184 = t.minInt176 = t.minInt168 = t.minInt160 = t.minInt152 = t.minInt144 = t.minInt136 = t.minInt128 = t.minInt120 = t.minInt112 = t.minInt104 = t.minInt96 = t.minInt88 = t.minInt80 = t.minInt72 = t.minInt64 = t.minInt56 = t.minInt48 = t.minInt40 = t.minInt32 = t.minInt24 = t.minInt16 = t.minInt8 = void 0, t.InvalidHexBooleanError = t.IntegerOutOfRangeError = t.InvalidBytesBooleanError = t.DataLengthTooShortError = t.DataLengthTooLongError = t.InvalidChainIdError = t.ClientChainNotConfiguredError = t.ChainNotFoundError = t.ChainMismatchError = t.ChainDoesNotSupportContract = t.UserRejectedRequestError = t.UnsupportedProviderMethodError = t.UnknownRpcError = t.UnauthorizedProviderError = t.TransactionRejectedRpcError = t.SwitchChainError = t.RpcError = t.ResourceUnavailableRpcError = t.ResourceNotFoundRpcError = t.ProviderRpcError = t.ProviderDisconnectedError = t.ParseRpcError = t.MethodNotSupportedRpcError = t.MethodNotFoundRpcError = t.LimitExceededRpcError = t.JsonRpcVersionUnsupportedError = t.InvalidRequestRpcError = t.InvalidParamsRpcError = t.InvalidInputRpcError = t.InternalRpcError = t.ChainDisconnectedError = t.MaxFeePerGasTooLowError = t.Eip1559FeesNotSupportedError = t.BaseFeeScalarError = t.RawContractError = t.ContractFunctionZeroDataError = t.ContractFunctionRevertedError = t.ContractFunctionExecutionError = t.CallExecutionError = t.BlockNotFoundError = t.BaseError = t.UnsupportedPackedAbiType = t.InvalidDefinitionTypeError = t.InvalidArrayError = t.InvalidAbiEncodingTypeError = t.InvalidAbiDecodingTypeError = t.DecodeLogTopicsMismatch = t.DecodeLogDataMismatch = t.BytesSizeMismatchError = t.AbiFunctionSignatureNotFoundError = void 0, t.encodeAbiParameters = t.decodeFunctionResult = t.decodeFunctionData = t.decodeEventLog = t.decodeErrorResult = t.decodeDeployData = t.decodeAbiParameters = t.formatLog = t.formatBlock = t.defineBlock = t.namehash = t.labelhash = t.UrlRequiredError = t.SliceOffsetOutOfBoundsError = t.SizeExceedsPaddingSizeError = t.WaitForTransactionReceiptTimeoutError = t.TransactionReceiptNotFoundError = t.TransactionNotFoundError = t.TransactionExecutionError = t.InvalidStorageKeySizeError = t.InvalidSerializedTransactionTypeError = t.InvalidSerializedTransactionError = t.InvalidSerializableTransactionError = t.InvalidLegacyVError = t.FeeConflictError = t.InvalidAddressError = t.WebSocketRequestError = t.TimeoutError = t.RpcRequestError = t.HttpRequestError = t.FilterTypeNotSupportedError = t.UnknownNodeError = t.TransactionTypeNotSupportedError = t.TipAboveFeeCapError = t.NonceTooLowError = t.NonceTooHighError = t.NonceMaxValueError = t.IntrinsicGasTooLowError = t.IntrinsicGasTooHighError = t.InsufficientFundsError = t.FeeCapTooLowError = t.FeeCapTooHighError = t.ExecutionRevertedError = t.EstimateGasExecutionError = t.EnsAvatarUnsupportedNamespaceError = t.EnsAvatarInvalidNftUriError = t.EnsAvatarUriResolutionError = t.SizeOverflowError = t.OffsetOutOfBoundsError = t.InvalidHexValueError = void 0, t.toHex = t.stringToHex = t.numberToHex = t.bytesToHex = t.boolToHex = t.toBytes = t.stringToBytes = t.numberToBytes = t.hexToBytes = t.boolToBytes = t.assertTransactionLegacy = t.assertTransactionEIP2930 = t.assertTransactionEIP1559 = t.assertRequest = t.verifyTypedData = t.verifyMessage = t.toRlp = t.hexToRlp = t.bytesToRlp = t.signatureToHex = t.compactSignatureToHex = t.signatureToCompactSignature = t.recoverTypedDataAddress = t.recoverPublicKey = t.recoverMessageAddress = t.recoverAddress = t.hexToSignature = t.hexToCompactSignature = t.compactSignatureToSignature = t.hashTypedData = t.hashDomain = t.getTransactionType = t.getSerializedTransactionType = t.getCreateAddress = t.getCreate2Address = t.getContractAddress = t.getAbiItem = t.rpcTransactionType = t.formatTransactionRequest = t.defineTransactionRequest = t.formatTransactionReceipt = t.defineTransactionReceipt = t.transactionType = t.formatTransaction = t.defineTransaction = t.encodeFunctionResult = t.encodeFunctionData = t.encodeEventTopics = t.encodeErrorResult = t.encodeDeployData = void 0, t.parseUnits = t.parseTransaction = t.parseGwei = t.parseEther = t.padHex = t.padBytes = t.pad = t.ripemd160 = t.sha256 = t.keccak256 = t.isHex = t.isHash = t.isBytes = t.isAddressEqual = t.isAddress = t.hashMessage = t.getFunctionSignature = t.getFunctionSelector = t.getEventSignature = t.getEventSelector = t.getContractError = t.getAddress = t.checksumAddress = t.fromRlp = t.hexToString = t.hexToNumber = t.hexToBool = t.hexToBigInt = t.fromHex = t.formatUnits = t.formatGwei = t.formatEther = t.encodePacked = t.getChainContractAddress = t.extractChain = t.defineChain = t.assertCurrentChain = t.concatHex = t.concatBytes = t.concat = t.offchainLookupSignature = t.offchainLookupAbiItem = t.offchainLookup = t.ccipFetch = t.fromBytes = t.bytesToString = t.bytesToNumber = t.bytesToBool = t.bytesToBigint = t.bytesToBigInt = void 0, t.getTypesForEIP712Domain = t.domainSeparator = t.validateTypedData = t.trim = t.stringify = t.sliceHex = t.sliceBytes = t.slice = t.size = t.serializeTransaction = t.serializeAccessList = void 0;
            var n = r(8017);
            Object.defineProperty(t, "CircularReferenceError", {
                enumerable: !0,
                get: function() {
                    return n.CircularReferenceError
                }
            }), Object.defineProperty(t, "InvalidAbiParameterError", {
                enumerable: !0,
                get: function() {
                    return n.InvalidAbiParameterError
                }
            }), Object.defineProperty(t, "InvalidAbiParametersError", {
                enumerable: !0,
                get: function() {
                    return n.InvalidAbiParametersError
                }
            }), Object.defineProperty(t, "InvalidAbiItemError", {
                enumerable: !0,
                get: function() {
                    return n.InvalidAbiItemError
                }
            }), Object.defineProperty(t, "InvalidAbiTypeParameterError", {
                enumerable: !0,
                get: function() {
                    return n.InvalidAbiTypeParameterError
                }
            }), Object.defineProperty(t, "InvalidFunctionModifierError", {
                enumerable: !0,
                get: function() {
                    return n.InvalidFunctionModifierError
                }
            }), Object.defineProperty(t, "InvalidModifierError", {
                enumerable: !0,
                get: function() {
                    return n.InvalidModifierError
                }
            }), Object.defineProperty(t, "InvalidParameterError", {
                enumerable: !0,
                get: function() {
                    return n.InvalidParameterError
                }
            }), Object.defineProperty(t, "InvalidParenthesisError", {
                enumerable: !0,
                get: function() {
                    return n.InvalidParenthesisError
                }
            }), Object.defineProperty(t, "InvalidSignatureError", {
                enumerable: !0,
                get: function() {
                    return n.InvalidSignatureError
                }
            }), Object.defineProperty(t, "InvalidStructSignatureError", {
                enumerable: !0,
                get: function() {
                    return n.InvalidStructSignatureError
                }
            }), Object.defineProperty(t, "SolidityProtectedKeywordError", {
                enumerable: !0,
                get: function() {
                    return n.SolidityProtectedKeywordError
                }
            }), Object.defineProperty(t, "UnknownTypeError", {
                enumerable: !0,
                get: function() {
                    return n.UnknownTypeError
                }
            }), Object.defineProperty(t, "UnknownSignatureError", {
                enumerable: !0,
                get: function() {
                    return n.UnknownSignatureError
                }
            }), Object.defineProperty(t, "parseAbi", {
                enumerable: !0,
                get: function() {
                    return n.parseAbi
                }
            }), Object.defineProperty(t, "parseAbiItem", {
                enumerable: !0,
                get: function() {
                    return n.parseAbiItem
                }
            }), Object.defineProperty(t, "parseAbiParameter", {
                enumerable: !0,
                get: function() {
                    return n.parseAbiParameter
                }
            }), Object.defineProperty(t, "parseAbiParameters", {
                enumerable: !0,
                get: function() {
                    return n.parseAbiParameters
                }
            });
            var i = r(76784);
            Object.defineProperty(t, "getContract", {
                enumerable: !0,
                get: function() {
                    return i.getContract
                }
            });
            var o = r(18980);
            Object.defineProperty(t, "createClient", {
                enumerable: !0,
                get: function() {
                    return o.createClient
                }
            });
            var s = r(22838);
            Object.defineProperty(t, "custom", {
                enumerable: !0,
                get: function() {
                    return s.custom
                }
            });
            var a = r(56666);
            Object.defineProperty(t, "fallback", {
                enumerable: !0,
                get: function() {
                    return a.fallback
                }
            });
            var c = r(5434);
            Object.defineProperty(t, "http", {
                enumerable: !0,
                get: function() {
                    return c.http
                }
            });
            var u = r(79091);
            Object.defineProperty(t, "createPublicClient", {
                enumerable: !0,
                get: function() {
                    return u.createPublicClient
                }
            });
            var l = r(58253);
            Object.defineProperty(t, "createTestClient", {
                enumerable: !0,
                get: function() {
                    return l.createTestClient
                }
            });
            var d = r(3);
            Object.defineProperty(t, "publicActions", {
                enumerable: !0,
                get: function() {
                    return d.publicActions
                }
            });
            var h = r(98);
            Object.defineProperty(t, "testActions", {
                enumerable: !0,
                get: function() {
                    return h.testActions
                }
            });
            var f = r(96157);
            Object.defineProperty(t, "walletActions", {
                enumerable: !0,
                get: function() {
                    return f.walletActions
                }
            });
            var p = r(56429);
            Object.defineProperty(t, "createTransport", {
                enumerable: !0,
                get: function() {
                    return p.createTransport
                }
            });
            var g = r(6293);
            Object.defineProperty(t, "createWalletClient", {
                enumerable: !0,
                get: function() {
                    return g.createWalletClient
                }
            });
            var m = r(99434);
            Object.defineProperty(t, "webSocket", {
                enumerable: !0,
                get: function() {
                    return m.webSocket
                }
            });
            var b = r(71635);
            Object.defineProperty(t, "multicall3Abi", {
                enumerable: !0,
                get: function() {
                    return b.multicall3Abi
                }
            });
            var y = r(81513);
            Object.defineProperty(t, "zeroAddress", {
                enumerable: !0,
                get: function() {
                    return y.zeroAddress
                }
            });
            var v = r(67888);
            Object.defineProperty(t, "etherUnits", {
                enumerable: !0,
                get: function() {
                    return v.etherUnits
                }
            }), Object.defineProperty(t, "gweiUnits", {
                enumerable: !0,
                get: function() {
                    return v.gweiUnits
                }
            }), Object.defineProperty(t, "weiUnits", {
                enumerable: !0,
                get: function() {
                    return v.weiUnits
                }
            });
            var w = r(35156);
            Object.defineProperty(t, "maxInt8", {
                enumerable: !0,
                get: function() {
                    return w.maxInt8
                }
            }), Object.defineProperty(t, "maxInt16", {
                enumerable: !0,
                get: function() {
                    return w.maxInt16
                }
            }), Object.defineProperty(t, "maxInt24", {
                enumerable: !0,
                get: function() {
                    return w.maxInt24
                }
            }), Object.defineProperty(t, "maxInt32", {
                enumerable: !0,
                get: function() {
                    return w.maxInt32
                }
            }), Object.defineProperty(t, "maxInt40", {
                enumerable: !0,
                get: function() {
                    return w.maxInt40
                }
            }), Object.defineProperty(t, "maxInt48", {
                enumerable: !0,
                get: function() {
                    return w.maxInt48
                }
            }), Object.defineProperty(t, "maxInt56", {
                enumerable: !0,
                get: function() {
                    return w.maxInt56
                }
            }), Object.defineProperty(t, "maxInt64", {
                enumerable: !0,
                get: function() {
                    return w.maxInt64
                }
            }), Object.defineProperty(t, "maxInt72", {
                enumerable: !0,
                get: function() {
                    return w.maxInt72
                }
            }), Object.defineProperty(t, "maxInt80", {
                enumerable: !0,
                get: function() {
                    return w.maxInt80
                }
            }), Object.defineProperty(t, "maxInt88", {
                enumerable: !0,
                get: function() {
                    return w.maxInt88
                }
            }), Object.defineProperty(t, "maxInt96", {
                enumerable: !0,
                get: function() {
                    return w.maxInt96
                }
            }), Object.defineProperty(t, "maxInt104", {
                enumerable: !0,
                get: function() {
                    return w.maxInt104
                }
            }), Object.defineProperty(t, "maxInt112", {
                enumerable: !0,
                get: function() {
                    return w.maxInt112
                }
            }), Object.defineProperty(t, "maxInt120", {
                enumerable: !0,
                get: function() {
                    return w.maxInt120
                }
            }), Object.defineProperty(t, "maxInt128", {
                enumerable: !0,
                get: function() {
                    return w.maxInt128
                }
            }), Object.defineProperty(t, "maxInt136", {
                enumerable: !0,
                get: function() {
                    return w.maxInt136
                }
            }), Object.defineProperty(t, "maxInt144", {
                enumerable: !0,
                get: function() {
                    return w.maxInt144
                }
            }), Object.defineProperty(t, "maxInt152", {
                enumerable: !0,
                get: function() {
                    return w.maxInt152
                }
            }), Object.defineProperty(t, "maxInt160", {
                enumerable: !0,
                get: function() {
                    return w.maxInt160
                }
            }), Object.defineProperty(t, "maxInt168", {
                enumerable: !0,
                get: function() {
                    return w.maxInt168
                }
            }), Object.defineProperty(t, "maxInt176", {
                enumerable: !0,
                get: function() {
                    return w.maxInt176
                }
            }), Object.defineProperty(t, "maxInt184", {
                enumerable: !0,
                get: function() {
                    return w.maxInt184
                }
            }), Object.defineProperty(t, "maxInt192", {
                enumerable: !0,
                get: function() {
                    return w.maxInt192
                }
            }), Object.defineProperty(t, "maxInt200", {
                enumerable: !0,
                get: function() {
                    return w.maxInt200
                }
            }), Object.defineProperty(t, "maxInt208", {
                enumerable: !0,
                get: function() {
                    return w.maxInt208
                }
            }), Object.defineProperty(t, "maxInt216", {
                enumerable: !0,
                get: function() {
                    return w.maxInt216
                }
            }), Object.defineProperty(t, "maxInt224", {
                enumerable: !0,
                get: function() {
                    return w.maxInt224
                }
            }), Object.defineProperty(t, "maxInt232", {
                enumerable: !0,
                get: function() {
                    return w.maxInt232
                }
            }), Object.defineProperty(t, "maxInt240", {
                enumerable: !0,
                get: function() {
                    return w.maxInt240
                }
            }), Object.defineProperty(t, "maxInt248", {
                enumerable: !0,
                get: function() {
                    return w.maxInt248
                }
            }), Object.defineProperty(t, "maxInt256", {
                enumerable: !0,
                get: function() {
                    return w.maxInt256
                }
            }), Object.defineProperty(t, "maxUint8", {
                enumerable: !0,
                get: function() {
                    return w.maxUint8
                }
            }), Object.defineProperty(t, "maxUint16", {
                enumerable: !0,
                get: function() {
                    return w.maxUint16
                }
            }), Object.defineProperty(t, "maxUint24", {
                enumerable: !0,
                get: function() {
                    return w.maxUint24
                }
            }), Object.defineProperty(t, "maxUint32", {
                enumerable: !0,
                get: function() {
                    return w.maxUint32
                }
            }), Object.defineProperty(t, "maxUint40", {
                enumerable: !0,
                get: function() {
                    return w.maxUint40
                }
            }), Object.defineProperty(t, "maxUint48", {
                enumerable: !0,
                get: function() {
                    return w.maxUint48
                }
            }), Object.defineProperty(t, "maxUint56", {
                enumerable: !0,
                get: function() {
                    return w.maxUint56
                }
            }), Object.defineProperty(t, "maxUint64", {
                enumerable: !0,
                get: function() {
                    return w.maxUint64
                }
            }), Object.defineProperty(t, "maxUint72", {
                enumerable: !0,
                get: function() {
                    return w.maxUint72
                }
            }), Object.defineProperty(t, "maxUint80", {
                enumerable: !0,
                get: function() {
                    return w.maxUint80
                }
            }), Object.defineProperty(t, "maxUint88", {
                enumerable: !0,
                get: function() {
                    return w.maxUint88
                }
            }), Object.defineProperty(t, "maxUint96", {
                enumerable: !0,
                get: function() {
                    return w.maxUint96
                }
            }), Object.defineProperty(t, "maxUint104", {
                enumerable: !0,
                get: function() {
                    return w.maxUint104
                }
            }), Object.defineProperty(t, "maxUint112", {
                enumerable: !0,
                get: function() {
                    return w.maxUint112
                }
            }), Object.defineProperty(t, "maxUint120", {
                enumerable: !0,
                get: function() {
                    return w.maxUint120
                }
            }), Object.defineProperty(t, "maxUint128", {
                enumerable: !0,
                get: function() {
                    return w.maxUint128
                }
            }), Object.defineProperty(t, "maxUint136", {
                enumerable: !0,
                get: function() {
                    return w.maxUint136
                }
            }), Object.defineProperty(t, "maxUint144", {
                enumerable: !0,
                get: function() {
                    return w.maxUint144
                }
            }), Object.defineProperty(t, "maxUint152", {
                enumerable: !0,
                get: function() {
                    return w.maxUint152
                }
            }), Object.defineProperty(t, "maxUint160", {
                enumerable: !0,
                get: function() {
                    return w.maxUint160
                }
            }), Object.defineProperty(t, "maxUint168", {
                enumerable: !0,
                get: function() {
                    return w.maxUint168
                }
            }), Object.defineProperty(t, "maxUint176", {
                enumerable: !0,
                get: function() {
                    return w.maxUint176
                }
            }), Object.defineProperty(t, "maxUint184", {
                enumerable: !0,
                get: function() {
                    return w.maxUint184
                }
            }), Object.defineProperty(t, "maxUint192", {
                enumerable: !0,
                get: function() {
                    return w.maxUint192
                }
            }), Object.defineProperty(t, "maxUint200", {
                enumerable: !0,
                get: function() {
                    return w.maxUint200
                }
            }), Object.defineProperty(t, "maxUint208", {
                enumerable: !0,
                get: function() {
                    return w.maxUint208
                }
            }), Object.defineProperty(t, "maxUint216", {
                enumerable: !0,
                get: function() {
                    return w.maxUint216
                }
            }), Object.defineProperty(t, "maxUint224", {
                enumerable: !0,
                get: function() {
                    return w.maxUint224
                }
            }), Object.defineProperty(t, "maxUint232", {
                enumerable: !0,
                get: function() {
                    return w.maxUint232
                }
            }), Object.defineProperty(t, "maxUint240", {
                enumerable: !0,
                get: function() {
                    return w.maxUint240
                }
            }), Object.defineProperty(t, "maxUint248", {
                enumerable: !0,
                get: function() {
                    return w.maxUint248
                }
            }), Object.defineProperty(t, "maxUint256", {
                enumerable: !0,
                get: function() {
                    return w.maxUint256
                }
            }), Object.defineProperty(t, "minInt8", {
                enumerable: !0,
                get: function() {
                    return w.minInt8
                }
            }), Object.defineProperty(t, "minInt16", {
                enumerable: !0,
                get: function() {
                    return w.minInt16
                }
            }), Object.defineProperty(t, "minInt24", {
                enumerable: !0,
                get: function() {
                    return w.minInt24
                }
            }), Object.defineProperty(t, "minInt32", {
                enumerable: !0,
                get: function() {
                    return w.minInt32
                }
            }), Object.defineProperty(t, "minInt40", {
                enumerable: !0,
                get: function() {
                    return w.minInt40
                }
            }), Object.defineProperty(t, "minInt48", {
                enumerable: !0,
                get: function() {
                    return w.minInt48
                }
            }), Object.defineProperty(t, "minInt56", {
                enumerable: !0,
                get: function() {
                    return w.minInt56
                }
            }), Object.defineProperty(t, "minInt64", {
                enumerable: !0,
                get: function() {
                    return w.minInt64
                }
            }), Object.defineProperty(t, "minInt72", {
                enumerable: !0,
                get: function() {
                    return w.minInt72
                }
            }), Object.defineProperty(t, "minInt80", {
                enumerable: !0,
                get: function() {
                    return w.minInt80
                }
            }), Object.defineProperty(t, "minInt88", {
                enumerable: !0,
                get: function() {
                    return w.minInt88
                }
            }), Object.defineProperty(t, "minInt96", {
                enumerable: !0,
                get: function() {
                    return w.minInt96
                }
            }), Object.defineProperty(t, "minInt104", {
                enumerable: !0,
                get: function() {
                    return w.minInt104
                }
            }), Object.defineProperty(t, "minInt112", {
                enumerable: !0,
                get: function() {
                    return w.minInt112
                }
            }), Object.defineProperty(t, "minInt120", {
                enumerable: !0,
                get: function() {
                    return w.minInt120
                }
            }), Object.defineProperty(t, "minInt128", {
                enumerable: !0,
                get: function() {
                    return w.minInt128
                }
            }), Object.defineProperty(t, "minInt136", {
                enumerable: !0,
                get: function() {
                    return w.minInt136
                }
            }), Object.defineProperty(t, "minInt144", {
                enumerable: !0,
                get: function() {
                    return w.minInt144
                }
            }), Object.defineProperty(t, "minInt152", {
                enumerable: !0,
                get: function() {
                    return w.minInt152
                }
            }), Object.defineProperty(t, "minInt160", {
                enumerable: !0,
                get: function() {
                    return w.minInt160
                }
            }), Object.defineProperty(t, "minInt168", {
                enumerable: !0,
                get: function() {
                    return w.minInt168
                }
            }), Object.defineProperty(t, "minInt176", {
                enumerable: !0,
                get: function() {
                    return w.minInt176
                }
            }), Object.defineProperty(t, "minInt184", {
                enumerable: !0,
                get: function() {
                    return w.minInt184
                }
            }), Object.defineProperty(t, "minInt192", {
                enumerable: !0,
                get: function() {
                    return w.minInt192
                }
            }), Object.defineProperty(t, "minInt200", {
                enumerable: !0,
                get: function() {
                    return w.minInt200
                }
            }), Object.defineProperty(t, "minInt208", {
                enumerable: !0,
                get: function() {
                    return w.minInt208
                }
            }), Object.defineProperty(t, "minInt216", {
                enumerable: !0,
                get: function() {
                    return w.minInt216
                }
            }), Object.defineProperty(t, "minInt224", {
                enumerable: !0,
                get: function() {
                    return w.minInt224
                }
            }), Object.defineProperty(t, "minInt232", {
                enumerable: !0,
                get: function() {
                    return w.minInt232
                }
            }), Object.defineProperty(t, "minInt240", {
                enumerable: !0,
                get: function() {
                    return w.minInt240
                }
            }), Object.defineProperty(t, "minInt248", {
                enumerable: !0,
                get: function() {
                    return w.minInt248
                }
            }), Object.defineProperty(t, "minInt256", {
                enumerable: !0,
                get: function() {
                    return w.minInt256
                }
            });
            var E = r(93620);
            Object.defineProperty(t, "zeroHash", {
                enumerable: !0,
                get: function() {
                    return E.zeroHash
                }
            });
            var _ = r(88759);
            Object.defineProperty(t, "presignMessagePrefix", {
                enumerable: !0,
                get: function() {
                    return _.presignMessagePrefix
                }
            });
            var P = r(51889);
            Object.defineProperty(t, "AbiConstructorNotFoundError", {
                enumerable: !0,
                get: function() {
                    return P.AbiConstructorNotFoundError
                }
            }), Object.defineProperty(t, "AbiConstructorParamsNotFoundError", {
                enumerable: !0,
                get: function() {
                    return P.AbiConstructorParamsNotFoundError
                }
            }), Object.defineProperty(t, "AbiDecodingDataSizeInvalidError", {
                enumerable: !0,
                get: function() {
                    return P.AbiDecodingDataSizeInvalidError
                }
            }), Object.defineProperty(t, "AbiDecodingDataSizeTooSmallError", {
                enumerable: !0,
                get: function() {
                    return P.AbiDecodingDataSizeTooSmallError
                }
            }), Object.defineProperty(t, "AbiDecodingZeroDataError", {
                enumerable: !0,
                get: function() {
                    return P.AbiDecodingZeroDataError
                }
            }), Object.defineProperty(t, "AbiEncodingArrayLengthMismatchError", {
                enumerable: !0,
                get: function() {
                    return P.AbiEncodingArrayLengthMismatchError
                }
            }), Object.defineProperty(t, "AbiEncodingLengthMismatchError", {
                enumerable: !0,
                get: function() {
                    return P.AbiEncodingLengthMismatchError
                }
            }), Object.defineProperty(t, "AbiEncodingBytesSizeMismatchError", {
                enumerable: !0,
                get: function() {
                    return P.AbiEncodingBytesSizeMismatchError
                }
            }), Object.defineProperty(t, "AbiErrorInputsNotFoundError", {
                enumerable: !0,
                get: function() {
                    return P.AbiErrorInputsNotFoundError
                }
            }), Object.defineProperty(t, "AbiErrorNotFoundError", {
                enumerable: !0,
                get: function() {
                    return P.AbiErrorNotFoundError
                }
            }), Object.defineProperty(t, "AbiErrorSignatureNotFoundError", {
                enumerable: !0,
                get: function() {
                    return P.AbiErrorSignatureNotFoundError
                }
            }), Object.defineProperty(t, "AbiEventNotFoundError", {
                enumerable: !0,
                get: function() {
                    return P.AbiEventNotFoundError
                }
            }), Object.defineProperty(t, "AbiEventSignatureEmptyTopicsError", {
                enumerable: !0,
                get: function() {
                    return P.AbiEventSignatureEmptyTopicsError
                }
            }), Object.defineProperty(t, "AbiEventSignatureNotFoundError", {
                enumerable: !0,
                get: function() {
                    return P.AbiEventSignatureNotFoundError
                }
            }), Object.defineProperty(t, "AbiFunctionNotFoundError", {
                enumerable: !0,
                get: function() {
                    return P.AbiFunctionNotFoundError
                }
            }), Object.defineProperty(t, "AbiFunctionOutputsNotFoundError", {
                enumerable: !0,
                get: function() {
                    return P.AbiFunctionOutputsNotFoundError
                }
            }), Object.defineProperty(t, "AbiFunctionSignatureNotFoundError", {
                enumerable: !0,
                get: function() {
                    return P.AbiFunctionSignatureNotFoundError
                }
            }), Object.defineProperty(t, "BytesSizeMismatchError", {
                enumerable: !0,
                get: function() {
                    return P.BytesSizeMismatchError
                }
            }), Object.defineProperty(t, "DecodeLogDataMismatch", {
                enumerable: !0,
                get: function() {
                    return P.DecodeLogDataMismatch
                }
            }), Object.defineProperty(t, "DecodeLogTopicsMismatch", {
                enumerable: !0,
                get: function() {
                    return P.DecodeLogTopicsMismatch
                }
            }), Object.defineProperty(t, "InvalidAbiDecodingTypeError", {
                enumerable: !0,
                get: function() {
                    return P.InvalidAbiDecodingTypeError
                }
            }), Object.defineProperty(t, "InvalidAbiEncodingTypeError", {
                enumerable: !0,
                get: function() {
                    return P.InvalidAbiEncodingTypeError
                }
            }), Object.defineProperty(t, "InvalidArrayError", {
                enumerable: !0,
                get: function() {
                    return P.InvalidArrayError
                }
            }), Object.defineProperty(t, "InvalidDefinitionTypeError", {
                enumerable: !0,
                get: function() {
                    return P.InvalidDefinitionTypeError
                }
            }), Object.defineProperty(t, "UnsupportedPackedAbiType", {
                enumerable: !0,
                get: function() {
                    return P.UnsupportedPackedAbiType
                }
            });
            var x = r(72968);
            Object.defineProperty(t, "BaseError", {
                enumerable: !0,
                get: function() {
                    return x.BaseError
                }
            });
            var I = r(38129);
            Object.defineProperty(t, "BlockNotFoundError", {
                enumerable: !0,
                get: function() {
                    return I.BlockNotFoundError
                }
            });
            var O = r(30211);
            Object.defineProperty(t, "CallExecutionError", {
                enumerable: !0,
                get: function() {
                    return O.CallExecutionError
                }
            }), Object.defineProperty(t, "ContractFunctionExecutionError", {
                enumerable: !0,
                get: function() {
                    return O.ContractFunctionExecutionError
                }
            }), Object.defineProperty(t, "ContractFunctionRevertedError", {
                enumerable: !0,
                get: function() {
                    return O.ContractFunctionRevertedError
                }
            }), Object.defineProperty(t, "ContractFunctionZeroDataError", {
                enumerable: !0,
                get: function() {
                    return O.ContractFunctionZeroDataError
                }
            }), Object.defineProperty(t, "RawContractError", {
                enumerable: !0,
                get: function() {
                    return O.RawContractError
                }
            });
            var T = r(78215);
            Object.defineProperty(t, "BaseFeeScalarError", {
                enumerable: !0,
                get: function() {
                    return T.BaseFeeScalarError
                }
            }), Object.defineProperty(t, "Eip1559FeesNotSupportedError", {
                enumerable: !0,
                get: function() {
                    return T.Eip1559FeesNotSupportedError
                }
            }), Object.defineProperty(t, "MaxFeePerGasTooLowError", {
                enumerable: !0,
                get: function() {
                    return T.MaxFeePerGasTooLowError
                }
            });
            var A = r(56467);
            Object.defineProperty(t, "ChainDisconnectedError", {
                enumerable: !0,
                get: function() {
                    return A.ChainDisconnectedError
                }
            }), Object.defineProperty(t, "InternalRpcError", {
                enumerable: !0,
                get: function() {
                    return A.InternalRpcError
                }
            }), Object.defineProperty(t, "InvalidInputRpcError", {
                enumerable: !0,
                get: function() {
                    return A.InvalidInputRpcError
                }
            }), Object.defineProperty(t, "InvalidParamsRpcError", {
                enumerable: !0,
                get: function() {
                    return A.InvalidParamsRpcError
                }
            }), Object.defineProperty(t, "InvalidRequestRpcError", {
                enumerable: !0,
                get: function() {
                    return A.InvalidRequestRpcError
                }
            }), Object.defineProperty(t, "JsonRpcVersionUnsupportedError", {
                enumerable: !0,
                get: function() {
                    return A.JsonRpcVersionUnsupportedError
                }
            }), Object.defineProperty(t, "LimitExceededRpcError", {
                enumerable: !0,
                get: function() {
                    return A.LimitExceededRpcError
                }
            }), Object.defineProperty(t, "MethodNotFoundRpcError", {
                enumerable: !0,
                get: function() {
                    return A.MethodNotFoundRpcError
                }
            }), Object.defineProperty(t, "MethodNotSupportedRpcError", {
                enumerable: !0,
                get: function() {
                    return A.MethodNotSupportedRpcError
                }
            }), Object.defineProperty(t, "ParseRpcError", {
                enumerable: !0,
                get: function() {
                    return A.ParseRpcError
                }
            }), Object.defineProperty(t, "ProviderDisconnectedError", {
                enumerable: !0,
                get: function() {
                    return A.ProviderDisconnectedError
                }
            }), Object.defineProperty(t, "ProviderRpcError", {
                enumerable: !0,
                get: function() {
                    return A.ProviderRpcError
                }
            }), Object.defineProperty(t, "ResourceNotFoundRpcError", {
                enumerable: !0,
                get: function() {
                    return A.ResourceNotFoundRpcError
                }
            }), Object.defineProperty(t, "ResourceUnavailableRpcError", {
                enumerable: !0,
                get: function() {
                    return A.ResourceUnavailableRpcError
                }
            }), Object.defineProperty(t, "RpcError", {
                enumerable: !0,
                get: function() {
                    return A.RpcError
                }
            }), Object.defineProperty(t, "SwitchChainError", {
                enumerable: !0,
                get: function() {
                    return A.SwitchChainError
                }
            }), Object.defineProperty(t, "TransactionRejectedRpcError", {
                enumerable: !0,
                get: function() {
                    return A.TransactionRejectedRpcError
                }
            }), Object.defineProperty(t, "UnauthorizedProviderError", {
                enumerable: !0,
                get: function() {
                    return A.UnauthorizedProviderError
                }
            }), Object.defineProperty(t, "UnknownRpcError", {
                enumerable: !0,
                get: function() {
                    return A.UnknownRpcError
                }
            }), Object.defineProperty(t, "UnsupportedProviderMethodError", {
                enumerable: !0,
                get: function() {
                    return A.UnsupportedProviderMethodError
                }
            }), Object.defineProperty(t, "UserRejectedRequestError", {
                enumerable: !0,
                get: function() {
                    return A.UserRejectedRequestError
                }
            });
            var S = r(1586);
            Object.defineProperty(t, "ChainDoesNotSupportContract", {
                enumerable: !0,
                get: function() {
                    return S.ChainDoesNotSupportContract
                }
            }), Object.defineProperty(t, "ChainMismatchError", {
                enumerable: !0,
                get: function() {
                    return S.ChainMismatchError
                }
            }), Object.defineProperty(t, "ChainNotFoundError", {
                enumerable: !0,
                get: function() {
                    return S.ChainNotFoundError
                }
            }), Object.defineProperty(t, "ClientChainNotConfiguredError", {
                enumerable: !0,
                get: function() {
                    return S.ClientChainNotConfiguredError
                }
            }), Object.defineProperty(t, "InvalidChainIdError", {
                enumerable: !0,
                get: function() {
                    return S.InvalidChainIdError
                }
            });
            var j = r(1750);
            Object.defineProperty(t, "DataLengthTooLongError", {
                enumerable: !0,
                get: function() {
                    return j.DataLengthTooLongError
                }
            }), Object.defineProperty(t, "DataLengthTooShortError", {
                enumerable: !0,
                get: function() {
                    return j.DataLengthTooShortError
                }
            }), Object.defineProperty(t, "InvalidBytesBooleanError", {
                enumerable: !0,
                get: function() {
                    return j.InvalidBytesBooleanError
                }
            }), Object.defineProperty(t, "IntegerOutOfRangeError", {
                enumerable: !0,
                get: function() {
                    return j.IntegerOutOfRangeError
                }
            }), Object.defineProperty(t, "InvalidHexBooleanError", {
                enumerable: !0,
                get: function() {
                    return j.InvalidHexBooleanError
                }
            }), Object.defineProperty(t, "InvalidHexValueError", {
                enumerable: !0,
                get: function() {
                    return j.InvalidHexValueError
                }
            }), Object.defineProperty(t, "OffsetOutOfBoundsError", {
                enumerable: !0,
                get: function() {
                    return j.OffsetOutOfBoundsError
                }
            }), Object.defineProperty(t, "SizeOverflowError", {
                enumerable: !0,
                get: function() {
                    return j.SizeOverflowError
                }
            });
            var R = r(42119);
            Object.defineProperty(t, "EnsAvatarUriResolutionError", {
                enumerable: !0,
                get: function() {
                    return R.EnsAvatarUriResolutionError
                }
            }), Object.defineProperty(t, "EnsAvatarInvalidNftUriError", {
                enumerable: !0,
                get: function() {
                    return R.EnsAvatarInvalidNftUriError
                }
            }), Object.defineProperty(t, "EnsAvatarUnsupportedNamespaceError", {
                enumerable: !0,
                get: function() {
                    return R.EnsAvatarUnsupportedNamespaceError
                }
            });
            var C = r(5853);
            Object.defineProperty(t, "EstimateGasExecutionError", {
                enumerable: !0,
                get: function() {
                    return C.EstimateGasExecutionError
                }
            });
            var N = r(69110);
            Object.defineProperty(t, "ExecutionRevertedError", {
                enumerable: !0,
                get: function() {
                    return N.ExecutionRevertedError
                }
            }), Object.defineProperty(t, "FeeCapTooHighError", {
                enumerable: !0,
                get: function() {
                    return N.FeeCapTooHighError
                }
            }), Object.defineProperty(t, "FeeCapTooLowError", {
                enumerable: !0,
                get: function() {
                    return N.FeeCapTooLowError
                }
            }), Object.defineProperty(t, "InsufficientFundsError", {
                enumerable: !0,
                get: function() {
                    return N.InsufficientFundsError
                }
            }), Object.defineProperty(t, "IntrinsicGasTooHighError", {
                enumerable: !0,
                get: function() {
                    return N.IntrinsicGasTooHighError
                }
            }), Object.defineProperty(t, "IntrinsicGasTooLowError", {
                enumerable: !0,
                get: function() {
                    return N.IntrinsicGasTooLowError
                }
            }), Object.defineProperty(t, "NonceMaxValueError", {
                enumerable: !0,
                get: function() {
                    return N.NonceMaxValueError
                }
            }), Object.defineProperty(t, "NonceTooHighError", {
                enumerable: !0,
                get: function() {
                    return N.NonceTooHighError
                }
            }), Object.defineProperty(t, "NonceTooLowError", {
                enumerable: !0,
                get: function() {
                    return N.NonceTooLowError
                }
            }), Object.defineProperty(t, "TipAboveFeeCapError", {
                enumerable: !0,
                get: function() {
                    return N.TipAboveFeeCapError
                }
            }), Object.defineProperty(t, "TransactionTypeNotSupportedError", {
                enumerable: !0,
                get: function() {
                    return N.TransactionTypeNotSupportedError
                }
            }), Object.defineProperty(t, "UnknownNodeError", {
                enumerable: !0,
                get: function() {
                    return N.UnknownNodeError
                }
            });
            var M = r(76588);
            Object.defineProperty(t, "FilterTypeNotSupportedError", {
                enumerable: !0,
                get: function() {
                    return M.FilterTypeNotSupportedError
                }
            });
            var B = r(24187);
            Object.defineProperty(t, "HttpRequestError", {
                enumerable: !0,
                get: function() {
                    return B.HttpRequestError
                }
            }), Object.defineProperty(t, "RpcRequestError", {
                enumerable: !0,
                get: function() {
                    return B.RpcRequestError
                }
            }), Object.defineProperty(t, "TimeoutError", {
                enumerable: !0,
                get: function() {
                    return B.TimeoutError
                }
            }), Object.defineProperty(t, "WebSocketRequestError", {
                enumerable: !0,
                get: function() {
                    return B.WebSocketRequestError
                }
            });
            var k = r(13411);
            Object.defineProperty(t, "InvalidAddressError", {
                enumerable: !0,
                get: function() {
                    return k.InvalidAddressError
                }
            });
            var D = r(99449);
            Object.defineProperty(t, "FeeConflictError", {
                enumerable: !0,
                get: function() {
                    return D.FeeConflictError
                }
            }), Object.defineProperty(t, "InvalidLegacyVError", {
                enumerable: !0,
                get: function() {
                    return D.InvalidLegacyVError
                }
            }), Object.defineProperty(t, "InvalidSerializableTransactionError", {
                enumerable: !0,
                get: function() {
                    return D.InvalidSerializableTransactionError
                }
            }), Object.defineProperty(t, "InvalidSerializedTransactionError", {
                enumerable: !0,
                get: function() {
                    return D.InvalidSerializedTransactionError
                }
            }), Object.defineProperty(t, "InvalidSerializedTransactionTypeError", {
                enumerable: !0,
                get: function() {
                    return D.InvalidSerializedTransactionTypeError
                }
            }), Object.defineProperty(t, "InvalidStorageKeySizeError", {
                enumerable: !0,
                get: function() {
                    return D.InvalidStorageKeySizeError
                }
            }), Object.defineProperty(t, "TransactionExecutionError", {
                enumerable: !0,
                get: function() {
                    return D.TransactionExecutionError
                }
            }), Object.defineProperty(t, "TransactionNotFoundError", {
                enumerable: !0,
                get: function() {
                    return D.TransactionNotFoundError
                }
            }), Object.defineProperty(t, "TransactionReceiptNotFoundError", {
                enumerable: !0,
                get: function() {
                    return D.TransactionReceiptNotFoundError
                }
            }), Object.defineProperty(t, "WaitForTransactionReceiptTimeoutError", {
                enumerable: !0,
                get: function() {
                    return D.WaitForTransactionReceiptTimeoutError
                }
            });
            var U = r(13319);
            Object.defineProperty(t, "SizeExceedsPaddingSizeError", {
                enumerable: !0,
                get: function() {
                    return U.SizeExceedsPaddingSizeError
                }
            }), Object.defineProperty(t, "SliceOffsetOutOfBoundsError", {
                enumerable: !0,
                get: function() {
                    return U.SliceOffsetOutOfBoundsError
                }
            });
            var L = r(74790);
            Object.defineProperty(t, "UrlRequiredError", {
                enumerable: !0,
                get: function() {
                    return L.UrlRequiredError
                }
            });
            var F = r(38457);
            Object.defineProperty(t, "labelhash", {
                enumerable: !0,
                get: function() {
                    return F.labelhash
                }
            });
            var q = r(86175);
            Object.defineProperty(t, "namehash", {
                enumerable: !0,
                get: function() {
                    return q.namehash
                }
            });
            var H = r(1812);
            Object.defineProperty(t, "defineBlock", {
                enumerable: !0,
                get: function() {
                    return H.defineBlock
                }
            }), Object.defineProperty(t, "formatBlock", {
                enumerable: !0,
                get: function() {
                    return H.formatBlock
                }
            });
            var $ = r(99738);
            Object.defineProperty(t, "formatLog", {
                enumerable: !0,
                get: function() {
                    return $.formatLog
                }
            });
            var z = r(1739);
            Object.defineProperty(t, "decodeAbiParameters", {
                enumerable: !0,
                get: function() {
                    return z.decodeAbiParameters
                }
            });
            var V = r(25116);
            Object.defineProperty(t, "decodeDeployData", {
                enumerable: !0,
                get: function() {
                    return V.decodeDeployData
                }
            });
            var G = r(64487);
            Object.defineProperty(t, "decodeErrorResult", {
                enumerable: !0,
                get: function() {
                    return G.decodeErrorResult
                }
            });
            var W = r(81403);
            Object.defineProperty(t, "decodeEventLog", {
                enumerable: !0,
                get: function() {
                    return W.decodeEventLog
                }
            });
            var K = r(81622);
            Object.defineProperty(t, "decodeFunctionData", {
                enumerable: !0,
                get: function() {
                    return K.decodeFunctionData
                }
            });
            var J = r(47318);
            Object.defineProperty(t, "decodeFunctionResult", {
                enumerable: !0,
                get: function() {
                    return J.decodeFunctionResult
                }
            });
            var Y = r(34544);
            Object.defineProperty(t, "encodeAbiParameters", {
                enumerable: !0,
                get: function() {
                    return Y.encodeAbiParameters
                }
            });
            var Z = r(46050);
            Object.defineProperty(t, "encodeDeployData", {
                enumerable: !0,
                get: function() {
                    return Z.encodeDeployData
                }
            });
            var Q = r(65868);
            Object.defineProperty(t, "encodeErrorResult", {
                enumerable: !0,
                get: function() {
                    return Q.encodeErrorResult
                }
            });
            var X = r(15326);
            Object.defineProperty(t, "encodeEventTopics", {
                enumerable: !0,
                get: function() {
                    return X.encodeEventTopics
                }
            });
            var ee = r(92496);
            Object.defineProperty(t, "encodeFunctionData", {
                enumerable: !0,
                get: function() {
                    return ee.encodeFunctionData
                }
            });
            var et = r(5724);
            Object.defineProperty(t, "encodeFunctionResult", {
                enumerable: !0,
                get: function() {
                    return et.encodeFunctionResult
                }
            });
            var er = r(31616);
            Object.defineProperty(t, "defineTransaction", {
                enumerable: !0,
                get: function() {
                    return er.defineTransaction
                }
            }), Object.defineProperty(t, "formatTransaction", {
                enumerable: !0,
                get: function() {
                    return er.formatTransaction
                }
            }), Object.defineProperty(t, "transactionType", {
                enumerable: !0,
                get: function() {
                    return er.transactionType
                }
            });
            var en = r(12435);
            Object.defineProperty(t, "defineTransactionReceipt", {
                enumerable: !0,
                get: function() {
                    return en.defineTransactionReceipt
                }
            }), Object.defineProperty(t, "formatTransactionReceipt", {
                enumerable: !0,
                get: function() {
                    return en.formatTransactionReceipt
                }
            });
            var ei = r(61033);
            Object.defineProperty(t, "defineTransactionRequest", {
                enumerable: !0,
                get: function() {
                    return ei.defineTransactionRequest
                }
            }), Object.defineProperty(t, "formatTransactionRequest", {
                enumerable: !0,
                get: function() {
                    return ei.formatTransactionRequest
                }
            }), Object.defineProperty(t, "rpcTransactionType", {
                enumerable: !0,
                get: function() {
                    return ei.rpcTransactionType
                }
            });
            var eo = r(57754);
            Object.defineProperty(t, "getAbiItem", {
                enumerable: !0,
                get: function() {
                    return eo.getAbiItem
                }
            });
            var es = r(11605);
            Object.defineProperty(t, "getContractAddress", {
                enumerable: !0,
                get: function() {
                    return es.getContractAddress
                }
            }), Object.defineProperty(t, "getCreate2Address", {
                enumerable: !0,
                get: function() {
                    return es.getCreate2Address
                }
            }), Object.defineProperty(t, "getCreateAddress", {
                enumerable: !0,
                get: function() {
                    return es.getCreateAddress
                }
            });
            var ea = r(17822);
            Object.defineProperty(t, "getSerializedTransactionType", {
                enumerable: !0,
                get: function() {
                    return ea.getSerializedTransactionType
                }
            });
            var ec = r(50421);
            Object.defineProperty(t, "getTransactionType", {
                enumerable: !0,
                get: function() {
                    return ec.getTransactionType
                }
            });
            var eu = r(67419);
            Object.defineProperty(t, "hashDomain", {
                enumerable: !0,
                get: function() {
                    return eu.hashDomain
                }
            }), Object.defineProperty(t, "hashTypedData", {
                enumerable: !0,
                get: function() {
                    return eu.hashTypedData
                }
            });
            var el = r(49364);
            Object.defineProperty(t, "compactSignatureToSignature", {
                enumerable: !0,
                get: function() {
                    return el.compactSignatureToSignature
                }
            });
            var ed = r(60478);
            Object.defineProperty(t, "hexToCompactSignature", {
                enumerable: !0,
                get: function() {
                    return ed.hexToCompactSignature
                }
            });
            var eh = r(67172);
            Object.defineProperty(t, "hexToSignature", {
                enumerable: !0,
                get: function() {
                    return eh.hexToSignature
                }
            });
            var ef = r(40798);
            Object.defineProperty(t, "recoverAddress", {
                enumerable: !0,
                get: function() {
                    return ef.recoverAddress
                }
            });
            var ep = r(28843);
            Object.defineProperty(t, "recoverMessageAddress", {
                enumerable: !0,
                get: function() {
                    return ep.recoverMessageAddress
                }
            });
            var eg = r(19159);
            Object.defineProperty(t, "recoverPublicKey", {
                enumerable: !0,
                get: function() {
                    return eg.recoverPublicKey
                }
            });
            var em = r(70339);
            Object.defineProperty(t, "recoverTypedDataAddress", {
                enumerable: !0,
                get: function() {
                    return em.recoverTypedDataAddress
                }
            });
            var eb = r(10381);
            Object.defineProperty(t, "signatureToCompactSignature", {
                enumerable: !0,
                get: function() {
                    return eb.signatureToCompactSignature
                }
            });
            var ey = r(56520);
            Object.defineProperty(t, "compactSignatureToHex", {
                enumerable: !0,
                get: function() {
                    return ey.compactSignatureToHex
                }
            });
            var ev = r(13084);
            Object.defineProperty(t, "signatureToHex", {
                enumerable: !0,
                get: function() {
                    return ev.signatureToHex
                }
            });
            var ew = r(50366);
            Object.defineProperty(t, "bytesToRlp", {
                enumerable: !0,
                get: function() {
                    return ew.bytesToRlp
                }
            }), Object.defineProperty(t, "hexToRlp", {
                enumerable: !0,
                get: function() {
                    return ew.hexToRlp
                }
            }), Object.defineProperty(t, "toRlp", {
                enumerable: !0,
                get: function() {
                    return ew.toRlp
                }
            });
            var eE = r(48255);
            Object.defineProperty(t, "verifyMessage", {
                enumerable: !0,
                get: function() {
                    return eE.verifyMessage
                }
            });
            var e_ = r(6747);
            Object.defineProperty(t, "verifyTypedData", {
                enumerable: !0,
                get: function() {
                    return e_.verifyTypedData
                }
            });
            var eP = r(82897);
            Object.defineProperty(t, "assertRequest", {
                enumerable: !0,
                get: function() {
                    return eP.assertRequest
                }
            });
            var ex = r(7617);
            Object.defineProperty(t, "assertTransactionEIP1559", {
                enumerable: !0,
                get: function() {
                    return ex.assertTransactionEIP1559
                }
            }), Object.defineProperty(t, "assertTransactionEIP2930", {
                enumerable: !0,
                get: function() {
                    return ex.assertTransactionEIP2930
                }
            }), Object.defineProperty(t, "assertTransactionLegacy", {
                enumerable: !0,
                get: function() {
                    return ex.assertTransactionLegacy
                }
            });
            var eI = r(33742);
            Object.defineProperty(t, "boolToBytes", {
                enumerable: !0,
                get: function() {
                    return eI.boolToBytes
                }
            }), Object.defineProperty(t, "hexToBytes", {
                enumerable: !0,
                get: function() {
                    return eI.hexToBytes
                }
            }), Object.defineProperty(t, "numberToBytes", {
                enumerable: !0,
                get: function() {
                    return eI.numberToBytes
                }
            }), Object.defineProperty(t, "stringToBytes", {
                enumerable: !0,
                get: function() {
                    return eI.stringToBytes
                }
            }), Object.defineProperty(t, "toBytes", {
                enumerable: !0,
                get: function() {
                    return eI.toBytes
                }
            });
            var eO = r(36373);
            Object.defineProperty(t, "boolToHex", {
                enumerable: !0,
                get: function() {
                    return eO.boolToHex
                }
            }), Object.defineProperty(t, "bytesToHex", {
                enumerable: !0,
                get: function() {
                    return eO.bytesToHex
                }
            }), Object.defineProperty(t, "numberToHex", {
                enumerable: !0,
                get: function() {
                    return eO.numberToHex
                }
            }), Object.defineProperty(t, "stringToHex", {
                enumerable: !0,
                get: function() {
                    return eO.stringToHex
                }
            }), Object.defineProperty(t, "toHex", {
                enumerable: !0,
                get: function() {
                    return eO.toHex
                }
            });
            var eT = r(9045);
            Object.defineProperty(t, "bytesToBigInt", {
                enumerable: !0,
                get: function() {
                    return eT.bytesToBigInt
                }
            }), Object.defineProperty(t, "bytesToBigint", {
                enumerable: !0,
                get: function() {
                    return eT.bytesToBigInt
                }
            }), Object.defineProperty(t, "bytesToBool", {
                enumerable: !0,
                get: function() {
                    return eT.bytesToBool
                }
            }), Object.defineProperty(t, "bytesToNumber", {
                enumerable: !0,
                get: function() {
                    return eT.bytesToNumber
                }
            }), Object.defineProperty(t, "bytesToString", {
                enumerable: !0,
                get: function() {
                    return eT.bytesToString
                }
            }), Object.defineProperty(t, "fromBytes", {
                enumerable: !0,
                get: function() {
                    return eT.fromBytes
                }
            });
            var eA = r(44622);
            Object.defineProperty(t, "ccipFetch", {
                enumerable: !0,
                get: function() {
                    return eA.ccipFetch
                }
            }), Object.defineProperty(t, "offchainLookup", {
                enumerable: !0,
                get: function() {
                    return eA.offchainLookup
                }
            }), Object.defineProperty(t, "offchainLookupAbiItem", {
                enumerable: !0,
                get: function() {
                    return eA.offchainLookupAbiItem
                }
            }), Object.defineProperty(t, "offchainLookupSignature", {
                enumerable: !0,
                get: function() {
                    return eA.offchainLookupSignature
                }
            });
            var eS = r(79763);
            Object.defineProperty(t, "concat", {
                enumerable: !0,
                get: function() {
                    return eS.concat
                }
            }), Object.defineProperty(t, "concatBytes", {
                enumerable: !0,
                get: function() {
                    return eS.concatBytes
                }
            }), Object.defineProperty(t, "concatHex", {
                enumerable: !0,
                get: function() {
                    return eS.concatHex
                }
            });
            var ej = r(19586);
            Object.defineProperty(t, "assertCurrentChain", {
                enumerable: !0,
                get: function() {
                    return ej.assertCurrentChain
                }
            });
            var eR = r(19165);
            Object.defineProperty(t, "defineChain", {
                enumerable: !0,
                get: function() {
                    return eR.defineChain
                }
            });
            var eC = r(32085);
            Object.defineProperty(t, "extractChain", {
                enumerable: !0,
                get: function() {
                    return eC.extractChain
                }
            });
            var eN = r(20913);
            Object.defineProperty(t, "getChainContractAddress", {
                enumerable: !0,
                get: function() {
                    return eN.getChainContractAddress
                }
            });
            var eM = r(26789);
            Object.defineProperty(t, "encodePacked", {
                enumerable: !0,
                get: function() {
                    return eM.encodePacked
                }
            });
            var eB = r(7838);
            Object.defineProperty(t, "formatEther", {
                enumerable: !0,
                get: function() {
                    return eB.formatEther
                }
            });
            var ek = r(74129);
            Object.defineProperty(t, "formatGwei", {
                enumerable: !0,
                get: function() {
                    return ek.formatGwei
                }
            });
            var eD = r(43385);
            Object.defineProperty(t, "formatUnits", {
                enumerable: !0,
                get: function() {
                    return eD.formatUnits
                }
            });
            var eU = r(7506);
            Object.defineProperty(t, "fromHex", {
                enumerable: !0,
                get: function() {
                    return eU.fromHex
                }
            }), Object.defineProperty(t, "hexToBigInt", {
                enumerable: !0,
                get: function() {
                    return eU.hexToBigInt
                }
            }), Object.defineProperty(t, "hexToBool", {
                enumerable: !0,
                get: function() {
                    return eU.hexToBool
                }
            }), Object.defineProperty(t, "hexToNumber", {
                enumerable: !0,
                get: function() {
                    return eU.hexToNumber
                }
            }), Object.defineProperty(t, "hexToString", {
                enumerable: !0,
                get: function() {
                    return eU.hexToString
                }
            });
            var eL = r(2290);
            Object.defineProperty(t, "fromRlp", {
                enumerable: !0,
                get: function() {
                    return eL.fromRlp
                }
            });
            var eF = r(98067);
            Object.defineProperty(t, "checksumAddress", {
                enumerable: !0,
                get: function() {
                    return eF.checksumAddress
                }
            }), Object.defineProperty(t, "getAddress", {
                enumerable: !0,
                get: function() {
                    return eF.getAddress
                }
            });
            var eq = r(19261);
            Object.defineProperty(t, "getContractError", {
                enumerable: !0,
                get: function() {
                    return eq.getContractError
                }
            });
            var eH = r(27002);
            Object.defineProperty(t, "getEventSelector", {
                enumerable: !0,
                get: function() {
                    return eH.getEventSelector
                }
            });
            var e$ = r(48481);
            Object.defineProperty(t, "getEventSignature", {
                enumerable: !0,
                get: function() {
                    return e$.getEventSignature
                }
            });
            var ez = r(64332);
            Object.defineProperty(t, "getFunctionSelector", {
                enumerable: !0,
                get: function() {
                    return ez.getFunctionSelector
                }
            });
            var eV = r(25791);
            Object.defineProperty(t, "getFunctionSignature", {
                enumerable: !0,
                get: function() {
                    return eV.getFunctionSignature
                }
            });
            var eG = r(54066);
            Object.defineProperty(t, "hashMessage", {
                enumerable: !0,
                get: function() {
                    return eG.hashMessage
                }
            });
            var eW = r(54570);
            Object.defineProperty(t, "isAddress", {
                enumerable: !0,
                get: function() {
                    return eW.isAddress
                }
            });
            var eK = r(55493);
            Object.defineProperty(t, "isAddressEqual", {
                enumerable: !0,
                get: function() {
                    return eK.isAddressEqual
                }
            });
            var eJ = r(74479);
            Object.defineProperty(t, "isBytes", {
                enumerable: !0,
                get: function() {
                    return eJ.isBytes
                }
            });
            var eY = r(59536);
            Object.defineProperty(t, "isHash", {
                enumerable: !0,
                get: function() {
                    return eY.isHash
                }
            });
            var eZ = r(93918);
            Object.defineProperty(t, "isHex", {
                enumerable: !0,
                get: function() {
                    return eZ.isHex
                }
            });
            var eQ = r(45112);
            Object.defineProperty(t, "keccak256", {
                enumerable: !0,
                get: function() {
                    return eQ.keccak256
                }
            });
            var eX = r(46488);
            Object.defineProperty(t, "sha256", {
                enumerable: !0,
                get: function() {
                    return eX.sha256
                }
            });
            var e0 = r(23817);
            Object.defineProperty(t, "ripemd160", {
                enumerable: !0,
                get: function() {
                    return e0.ripemd160
                }
            });
            var e1 = r(85349);
            Object.defineProperty(t, "pad", {
                enumerable: !0,
                get: function() {
                    return e1.pad
                }
            }), Object.defineProperty(t, "padBytes", {
                enumerable: !0,
                get: function() {
                    return e1.padBytes
                }
            }), Object.defineProperty(t, "padHex", {
                enumerable: !0,
                get: function() {
                    return e1.padHex
                }
            });
            var e2 = r(32994);
            Object.defineProperty(t, "parseEther", {
                enumerable: !0,
                get: function() {
                    return e2.parseEther
                }
            });
            var e6 = r(59706);
            Object.defineProperty(t, "parseGwei", {
                enumerable: !0,
                get: function() {
                    return e6.parseGwei
                }
            });
            var e5 = r(86214);
            Object.defineProperty(t, "parseTransaction", {
                enumerable: !0,
                get: function() {
                    return e5.parseTransaction
                }
            });
            var e3 = r(12584);
            Object.defineProperty(t, "parseUnits", {
                enumerable: !0,
                get: function() {
                    return e3.parseUnits
                }
            });
            var e8 = r(49645);
            Object.defineProperty(t, "serializeAccessList", {
                enumerable: !0,
                get: function() {
                    return e8.serializeAccessList
                }
            });
            var e4 = r(20820);
            Object.defineProperty(t, "serializeTransaction", {
                enumerable: !0,
                get: function() {
                    return e4.serializeTransaction
                }
            });
            var e9 = r(6629);
            Object.defineProperty(t, "size", {
                enumerable: !0,
                get: function() {
                    return e9.size
                }
            });
            var e7 = r(42721);
            Object.defineProperty(t, "slice", {
                enumerable: !0,
                get: function() {
                    return e7.slice
                }
            }), Object.defineProperty(t, "sliceBytes", {
                enumerable: !0,
                get: function() {
                    return e7.sliceBytes
                }
            }), Object.defineProperty(t, "sliceHex", {
                enumerable: !0,
                get: function() {
                    return e7.sliceHex
                }
            });
            var te = r(63291);
            Object.defineProperty(t, "stringify", {
                enumerable: !0,
                get: function() {
                    return te.stringify
                }
            });
            var tt = r(84392);
            Object.defineProperty(t, "trim", {
                enumerable: !0,
                get: function() {
                    return tt.trim
                }
            });
            var tr = r(87054);
            Object.defineProperty(t, "validateTypedData", {
                enumerable: !0,
                get: function() {
                    return tr.validateTypedData
                }
            }), Object.defineProperty(t, "domainSeparator", {
                enumerable: !0,
                get: function() {
                    return tr.domainSeparator
                }
            }), Object.defineProperty(t, "getTypesForEIP712Domain", {
                enumerable: !0,
                get: function() {
                    return tr.getTypesForEIP712Domain
                }
            })
        },
        1739: (e, t, r) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.decodeAbiParameters = void 0;
            let n = r(51889),
                i = r(98067),
                o = r(6629),
                s = r(42721),
                a = r(84392),
                c = r(7506),
                u = r(34544);

            function l(e) {
                let {
                    type: t
                } = e;
                if ("string" === t || "bytes" === t || t.endsWith("[]")) return !0;
                if ("tuple" === t) return e.components ? .some(l);
                let r = (0, u.getArrayComponents)(e.type);
                return !!(r && l({ ...e,
                    type: r[1]
                }))
            }
            t.decodeAbiParameters = function(e, t) {
                if ("0x" === t && e.length > 0) throw new n.AbiDecodingZeroDataError;
                if ((0, o.size)(t) && 32 > (0, o.size)(t)) throw new n.AbiDecodingDataSizeTooSmallError({
                    data: t,
                    params: e,
                    size: (0, o.size)(t)
                });
                return function({
                    data: e,
                    params: t
                }) {
                    let r = [],
                        d = 0;
                    for (let h = 0; h < t.length; h++) {
                        if (d >= (0, o.size)(e)) throw new n.AbiDecodingDataSizeTooSmallError({
                            data: e,
                            params: t,
                            size: (0, o.size)(e)
                        });
                        let {
                            consumed: f,
                            value: p
                        } = function e({
                            data: t,
                            param: r,
                            position: o
                        }) {
                            let d = (0, u.getArrayComponents)(r.type);
                            if (d) {
                                let [n, i] = d;
                                return function(t, {
                                    param: r,
                                    length: n,
                                    position: i
                                }) {
                                    if (!n) {
                                        let n = (0, c.hexToNumber)((0, s.slice)(t, i, i + 32, {
                                                strict: !0
                                            })),
                                            o = (0, c.hexToNumber)((0, s.slice)(t, n, n + 32, {
                                                strict: !0
                                            })),
                                            a = 0,
                                            u = [];
                                        for (let i = 0; i < o; ++i) {
                                            let i = e({
                                                data: (0, s.slice)(t, n + 32),
                                                param: r,
                                                position: a
                                            });
                                            a += i.consumed, u.push(i.value)
                                        }
                                        return {
                                            value: u,
                                            consumed: 32
                                        }
                                    }
                                    if (l(r)) {
                                        let o = (0, u.getArrayComponents)(r.type),
                                            a = !o ? .[0],
                                            l = 0,
                                            d = [];
                                        for (let o = 0; o < n; ++o) {
                                            let n = (0, c.hexToNumber)((0, s.slice)(t, i, i + 32, {
                                                    strict: !0
                                                })),
                                                u = e({
                                                    data: (0, s.slice)(t, n),
                                                    param: r,
                                                    position: a ? l : 32 * o
                                                });
                                            l += u.consumed, d.push(u.value)
                                        }
                                        return {
                                            value: d,
                                            consumed: 32
                                        }
                                    }
                                    let o = 0,
                                        a = [];
                                    for (let s = 0; s < n; ++s) {
                                        let n = e({
                                            data: t,
                                            param: r,
                                            position: i + o
                                        });
                                        o += n.consumed, a.push(n.value)
                                    }
                                    return {
                                        value: a,
                                        consumed: o
                                    }
                                }(t, {
                                    length: n,
                                    param: { ...r,
                                        type: i
                                    },
                                    position: o
                                })
                            }
                            if ("tuple" === r.type) return function(t, {
                                param: r,
                                position: n
                            }) {
                                let i = 0 === r.components.length || r.components.some(({
                                        name: e
                                    }) => !e),
                                    o = i ? [] : {},
                                    a = 0;
                                if (l(r)) {
                                    let u = (0, c.hexToNumber)((0, s.slice)(t, n, n + 32, {
                                        strict: !0
                                    }));
                                    for (let n = 0; n < r.components.length; ++n) {
                                        let c = r.components[n],
                                            l = e({
                                                data: (0, s.slice)(t, u),
                                                param: c,
                                                position: a
                                            });
                                        a += l.consumed, o[i ? n : c ? .name] = l.value
                                    }
                                    return {
                                        consumed: 32,
                                        value: o
                                    }
                                }
                                for (let s = 0; s < r.components.length; ++s) {
                                    let c = r.components[s],
                                        u = e({
                                            data: t,
                                            param: c,
                                            position: n + a
                                        });
                                    a += u.consumed, o[i ? s : c ? .name] = u.value
                                }
                                return {
                                    consumed: a,
                                    value: o
                                }
                            }(t, {
                                param: r,
                                position: o
                            });
                            if ("string" === r.type) return function(e, {
                                position: t
                            }) {
                                let r = (0, c.hexToNumber)((0, s.slice)(e, t, t + 32, {
                                        strict: !0
                                    })),
                                    n = (0, c.hexToNumber)((0, s.slice)(e, r, r + 32, {
                                        strict: !0
                                    }));
                                return 0 === n ? {
                                    consumed: 32,
                                    value: ""
                                } : {
                                    consumed: 32,
                                    value: (0, c.hexToString)((0, a.trim)((0, s.slice)(e, r + 32, r + 32 + n, {
                                        strict: !0
                                    })))
                                }
                            }(t, {
                                position: o
                            });
                            if (r.type.startsWith("bytes")) return function(e, {
                                param: t,
                                position: r
                            }) {
                                let [n, i] = t.type.split("bytes");
                                if (!i) {
                                    let t = (0, c.hexToNumber)((0, s.slice)(e, r, r + 32, {
                                            strict: !0
                                        })),
                                        n = (0, c.hexToNumber)((0, s.slice)(e, t, t + 32, {
                                            strict: !0
                                        }));
                                    return 0 === n ? {
                                        consumed: 32,
                                        value: "0x"
                                    } : {
                                        consumed: 32,
                                        value: (0, s.slice)(e, t + 32, t + 32 + n, {
                                            strict: !0
                                        })
                                    }
                                }
                                return {
                                    consumed: 32,
                                    value: (0, s.slice)(e, r, r + parseInt(i), {
                                        strict: !0
                                    })
                                }
                            }(t, {
                                param: r,
                                position: o
                            });
                            let h = (0, s.slice)(t, o, o + 32, {
                                strict: !0
                            });
                            if (r.type.startsWith("uint") || r.type.startsWith("int")) return function(e, {
                                param: t
                            }) {
                                let r = t.type.startsWith("int");
                                return {
                                    consumed: 32,
                                    value: parseInt(t.type.split("int")[1] || "256") > 48 ? (0, c.hexToBigInt)(e, {
                                        signed: r
                                    }) : (0, c.hexToNumber)(e, {
                                        signed: r
                                    })
                                }
                            }(h, {
                                param: r
                            });
                            if ("address" === r.type) return {
                                consumed: 32,
                                value: (0, i.checksumAddress)((0, s.slice)(h, -20))
                            };
                            if ("bool" === r.type) return {
                                consumed: 32,
                                value: (0, c.hexToBool)(h)
                            };
                            throw new n.InvalidAbiDecodingTypeError(r.type, {
                                docsPath: "/docs/contract/decodeAbiParameters"
                            })
                        }({
                            data: e,
                            param: t[h],
                            position: d
                        });
                        r.push(p), d += f
                    }
                    return r
                }({
                    data: t,
                    params: e
                })
            }
        },
        25116: (e, t, r) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.decodeDeployData = void 0;
            let n = r(51889),
                i = r(1739),
                o = "/docs/contract/decodeDeployData";
            t.decodeDeployData = function({
                abi: e,
                bytecode: t,
                data: r
            }) {
                if (r === t) return {
                    bytecode: t
                };
                let s = e.find(e => "type" in e && "constructor" === e.type);
                if (!s) throw new n.AbiConstructorNotFoundError({
                    docsPath: o
                });
                if (!("inputs" in s) || !s.inputs || 0 === s.inputs.length) throw new n.AbiConstructorParamsNotFoundError({
                    docsPath: o
                });
                return {
                    args: (0, i.decodeAbiParameters)(s.inputs, `0x${r.replace(t,"")}`),
                    bytecode: t
                }
            }
        },
        64487: (e, t, r) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.decodeErrorResult = void 0;
            let n = r(17480),
                i = r(51889),
                o = r(42721),
                s = r(64332),
                a = r(1739),
                c = r(73735);
            t.decodeErrorResult = function({
                abi: e,
                data: t
            }) {
                let r = (0, o.slice)(t, 0, 4);
                if ("0x" === r) throw new i.AbiDecodingZeroDataError;
                let u = [...e || [], n.solidityError, n.solidityPanic].find(e => "error" === e.type && r === (0, s.getFunctionSelector)((0, c.formatAbiItem)(e)));
                if (!u) throw new i.AbiErrorSignatureNotFoundError(r, {
                    docsPath: "/docs/contract/decodeErrorResult"
                });
                return {
                    abiItem: u,
                    args: "inputs" in u && u.inputs && u.inputs.length > 0 ? (0, a.decodeAbiParameters)(u.inputs, (0, o.slice)(t, 4)) : void 0,
                    errorName: u.name
                }
            }
        },
        81403: (e, t, r) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.decodeEventLog = void 0;
            let n = r(51889),
                i = r(27002),
                o = r(1739),
                s = r(73735),
                a = "/docs/contract/decodeEventLog";
            t.decodeEventLog = function({
                abi: e,
                data: t,
                strict: r,
                topics: c
            }) {
                let u = r ? ? !0,
                    [l, ...d] = c;
                if (!l) throw new n.AbiEventSignatureEmptyTopicsError({
                    docsPath: a
                });
                let h = e.find(e => "event" === e.type && l === (0, i.getEventSelector)((0, s.formatAbiItem)(e)));
                if (!(h && "name" in h) || "event" !== h.type) throw new n.AbiEventSignatureNotFoundError(l, {
                    docsPath: a
                });
                let {
                    name: f,
                    inputs: p
                } = h, g = p ? .some(e => !("name" in e && e.name)), m = g ? [] : {}, b = p.filter(e => "indexed" in e && e.indexed);
                for (let e = 0; e < b.length; e++) {
                    let t = b[e],
                        r = d[e];
                    if (!r) throw new n.DecodeLogTopicsMismatch({
                        abiItem: h,
                        param: t
                    });
                    m[t.name || e] = function({
                        param: e,
                        value: t
                    }) {
                        return "string" === e.type || "bytes" === e.type || "tuple" === e.type || e.type.match(/^(.*)\[(\d+)?\]$/) ? t : ((0, o.decodeAbiParameters)([e], t) || [])[0]
                    }({
                        param: t,
                        value: r
                    })
                }
                let y = p.filter(e => !("indexed" in e && e.indexed));
                if (y.length > 0) {
                    if (t && "0x" !== t) try {
                        let e = (0, o.decodeAbiParameters)(y, t);
                        if (e) {
                            if (g) m = [...m, ...e];
                            else
                                for (let t = 0; t < y.length; t++) m[y[t].name] = e[t]
                        }
                    } catch (e) {
                        if (u) {
                            if (e instanceof n.AbiDecodingDataSizeTooSmallError) throw new n.DecodeLogDataMismatch({
                                abiItem: h,
                                data: e.data,
                                params: e.params,
                                size: e.size
                            });
                            throw e
                        }
                    } else if (u) throw new n.DecodeLogDataMismatch({
                        abiItem: h,
                        data: "0x",
                        params: y,
                        size: 0
                    })
                }
                return {
                    eventName: f,
                    args: Object.values(m).length > 0 ? m : void 0
                }
            }
        },
        81622: (e, t, r) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.decodeFunctionData = void 0;
            let n = r(51889),
                i = r(42721),
                o = r(64332),
                s = r(1739),
                a = r(73735);
            t.decodeFunctionData = function({
                abi: e,
                data: t
            }) {
                let r = (0, i.slice)(t, 0, 4),
                    c = e.find(e => "function" === e.type && r === (0, o.getFunctionSelector)((0, a.formatAbiItem)(e)));
                if (!c) throw new n.AbiFunctionSignatureNotFoundError(r, {
                    docsPath: "/docs/contract/decodeFunctionData"
                });
                return {
                    functionName: c.name,
                    args: "inputs" in c && c.inputs && c.inputs.length > 0 ? (0, s.decodeAbiParameters)(c.inputs, (0, i.slice)(t, 4)) : void 0
                }
            }
        },
        47318: (e, t, r) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.decodeFunctionResult = void 0;
            let n = r(51889),
                i = r(1739),
                o = r(57754),
                s = "/docs/contract/decodeFunctionResult";
            t.decodeFunctionResult = function({
                abi: e,
                args: t,
                functionName: r,
                data: a
            }) {
                let c = e[0];
                if (r && !(c = (0, o.getAbiItem)({
                        abi: e,
                        args: t,
                        name: r
                    }))) throw new n.AbiFunctionNotFoundError(r, {
                    docsPath: s
                });
                if ("function" !== c.type) throw new n.AbiFunctionNotFoundError(void 0, {
                    docsPath: s
                });
                if (!c.outputs) throw new n.AbiFunctionOutputsNotFoundError(c.name, {
                    docsPath: s
                });
                let u = (0, i.decodeAbiParameters)(c.outputs, a);
                return u && u.length > 1 ? u : u && 1 === u.length ? u[0] : void 0
            }
        },
        34544: (e, t, r) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.getArrayComponents = t.encodeAbiParameters = void 0;
            let n = r(51889),
                i = r(13411),
                o = r(54570),
                s = r(79763),
                a = r(85349),
                c = r(6629),
                u = r(42721),
                l = r(36373);

            function d(e) {
                let t = 0;
                for (let r = 0; r < e.length; r++) {
                    let {
                        dynamic: n,
                        encoded: i
                    } = e[r];
                    n ? t += 32 : t += (0, c.size)(i)
                }
                let r = [],
                    n = [],
                    i = 0;
                for (let o = 0; o < e.length; o++) {
                    let {
                        dynamic: s,
                        encoded: a
                    } = e[o];
                    s ? (r.push((0, l.numberToHex)(t + i, {
                        size: 32
                    })), n.push(a), i += (0, c.size)(a)) : r.push(a)
                }
                return (0, s.concat)([...r, ...n])
            }

            function h(e) {
                let t = e.match(/^(.*)\[(\d+)?\]$/);
                return t ? [t[2] ? Number(t[2]) : null, t[1]] : void 0
            }
            t.encodeAbiParameters = function(e, t) {
                if (e.length !== t.length) throw new n.AbiEncodingLengthMismatchError({
                    expectedLength: e.length,
                    givenLength: t.length
                });
                let r = d(function({
                    params: e,
                    values: t
                }) {
                    let r = [];
                    for (let f = 0; f < e.length; f++) r.push(function e({
                        param: t,
                        value: r
                    }) {
                        let f = h(t.type);
                        if (f) {
                            let [i, o] = f;
                            return function(t, {
                                length: r,
                                param: i
                            }) {
                                let o = null === r;
                                if (!Array.isArray(t)) throw new n.InvalidArrayError(t);
                                if (!o && t.length !== r) throw new n.AbiEncodingArrayLengthMismatchError({
                                    expectedLength: r,
                                    givenLength: t.length,
                                    type: `${i.type}[${r}]`
                                });
                                let a = !1,
                                    c = [];
                                for (let r = 0; r < t.length; r++) {
                                    let n = e({
                                        param: i,
                                        value: t[r]
                                    });
                                    n.dynamic && (a = !0), c.push(n)
                                }
                                if (o || a) {
                                    let e = d(c);
                                    if (o) {
                                        let t = (0, l.numberToHex)(c.length, {
                                            size: 32
                                        });
                                        return {
                                            dynamic: !0,
                                            encoded: c.length > 0 ? (0, s.concat)([t, e]) : t
                                        }
                                    }
                                    if (a) return {
                                        dynamic: !0,
                                        encoded: e
                                    }
                                }
                                return {
                                    dynamic: !1,
                                    encoded: (0, s.concat)(c.map(({
                                        encoded: e
                                    }) => e))
                                }
                            }(r, {
                                length: i,
                                param: { ...t,
                                    type: o
                                }
                            })
                        }
                        if ("tuple" === t.type) return function(t, {
                            param: r
                        }) {
                            let n = !1,
                                i = [];
                            for (let o = 0; o < r.components.length; o++) {
                                let s = r.components[o],
                                    a = Array.isArray(t) ? o : s.name,
                                    c = e({
                                        param: s,
                                        value: t[a]
                                    });
                                i.push(c), c.dynamic && (n = !0)
                            }
                            return {
                                dynamic: n,
                                encoded: n ? d(i) : (0, s.concat)(i.map(({
                                    encoded: e
                                }) => e))
                            }
                        }(r, {
                            param: t
                        });
                        if ("address" === t.type) return function(e) {
                            if (!(0, o.isAddress)(e)) throw new i.InvalidAddressError({
                                address: e
                            });
                            return {
                                dynamic: !1,
                                encoded: (0, a.padHex)(e.toLowerCase())
                            }
                        }(r);
                        if ("bool" === t.type) return {
                            dynamic: !1,
                            encoded: (0, a.padHex)((0, l.boolToHex)(r))
                        };
                        if (t.type.startsWith("uint") || t.type.startsWith("int")) return function(e, {
                            signed: t
                        }) {
                            return {
                                dynamic: !1,
                                encoded: (0, l.numberToHex)(e, {
                                    size: 32,
                                    signed: t
                                })
                            }
                        }(r, {
                            signed: t.type.startsWith("int")
                        });
                        if (t.type.startsWith("bytes")) return function(e, {
                            param: t
                        }) {
                            let [, r] = t.type.split("bytes"), i = (0, c.size)(e);
                            if (!r) {
                                let t = e;
                                return i % 32 != 0 && (t = (0, a.padHex)(t, {
                                    dir: "right",
                                    size: 32 * Math.ceil((e.length - 2) / 2 / 32)
                                })), {
                                    dynamic: !0,
                                    encoded: (0, s.concat)([(0, a.padHex)((0, l.numberToHex)(i, {
                                        size: 32
                                    })), t])
                                }
                            }
                            if (i !== parseInt(r)) throw new n.AbiEncodingBytesSizeMismatchError({
                                expectedSize: parseInt(r),
                                value: e
                            });
                            return {
                                dynamic: !1,
                                encoded: (0, a.padHex)(e, {
                                    dir: "right"
                                })
                            }
                        }(r, {
                            param: t
                        });
                        if ("string" === t.type) return function(e) {
                            let t = (0, l.stringToHex)(e),
                                r = Math.ceil((0, c.size)(t) / 32),
                                n = [];
                            for (let e = 0; e < r; e++) n.push((0, a.padHex)((0, u.slice)(t, 32 * e, (e + 1) * 32), {
                                dir: "right"
                            }));
                            return {
                                dynamic: !0,
                                encoded: (0, s.concat)([(0, a.padHex)((0, l.numberToHex)((0, c.size)(t), {
                                    size: 32
                                })), ...n])
                            }
                        }(r);
                        throw new n.InvalidAbiEncodingTypeError(t.type, {
                            docsPath: "/docs/contract/encodeAbiParameters"
                        })
                    }({
                        param: e[f],
                        value: t[f]
                    }));
                    return r
                }({
                    params: e,
                    values: t
                }));
                return 0 === r.length ? "0x" : r
            }, t.getArrayComponents = h
        },
        46050: (e, t, r) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.encodeDeployData = void 0;
            let n = r(51889),
                i = r(79763),
                o = r(34544),
                s = "/docs/contract/encodeDeployData";
            t.encodeDeployData = function({
                abi: e,
                args: t,
                bytecode: r
            }) {
                if (!t || 0 === t.length) return r;
                let a = e.find(e => "type" in e && "constructor" === e.type);
                if (!a) throw new n.AbiConstructorNotFoundError({
                    docsPath: s
                });
                if (!("inputs" in a) || !a.inputs || 0 === a.inputs.length) throw new n.AbiConstructorParamsNotFoundError({
                    docsPath: s
                });
                let c = (0, o.encodeAbiParameters)(a.inputs, t);
                return (0, i.concatHex)([r, c])
            }
        },
        65868: (e, t, r) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.encodeErrorResult = void 0;
            let n = r(51889),
                i = r(79763),
                o = r(64332),
                s = r(34544),
                a = r(73735),
                c = r(57754),
                u = "/docs/contract/encodeErrorResult";
            t.encodeErrorResult = function({
                abi: e,
                errorName: t,
                args: r
            }) {
                let l = e[0];
                if (t && !(l = (0, c.getAbiItem)({
                        abi: e,
                        args: r,
                        name: t
                    }))) throw new n.AbiErrorNotFoundError(t, {
                    docsPath: u
                });
                if ("error" !== l.type) throw new n.AbiErrorNotFoundError(void 0, {
                    docsPath: u
                });
                let d = (0, a.formatAbiItem)(l),
                    h = (0, o.getFunctionSelector)(d),
                    f = "0x";
                if (r && r.length > 0) {
                    if (!l.inputs) throw new n.AbiErrorInputsNotFoundError(l.name, {
                        docsPath: u
                    });
                    f = (0, s.encodeAbiParameters)(l.inputs, r)
                }
                return (0, i.concatHex)([h, f])
            }
        },
        15326: (e, t, r) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.encodeEventTopics = void 0;
            let n = r(51889),
                i = r(76588),
                o = r(33742),
                s = r(27002),
                a = r(45112),
                c = r(34544),
                u = r(73735),
                l = r(57754);

            function d({
                param: e,
                value: t
            }) {
                if ("string" === e.type || "bytes" === e.type) return (0, a.keccak256)((0, o.toBytes)(t));
                if ("tuple" === e.type || e.type.match(/^(.*)\[(\d+)?\]$/)) throw new i.FilterTypeNotSupportedError(e.type);
                return (0, c.encodeAbiParameters)([e], [t])
            }
            t.encodeEventTopics = function({
                abi: e,
                eventName: t,
                args: r
            }) {
                let i = e[0];
                if (t && !(i = (0, l.getAbiItem)({
                        abi: e,
                        args: r,
                        name: t
                    }))) throw new n.AbiEventNotFoundError(t, {
                    docsPath: "/docs/contract/encodeEventTopics"
                });
                if ("event" !== i.type) throw new n.AbiEventNotFoundError(void 0, {
                    docsPath: "/docs/contract/encodeEventTopics"
                });
                let o = (0, u.formatAbiItem)(i),
                    a = (0, s.getEventSelector)(o),
                    c = [];
                if (r && "inputs" in i) {
                    let e = i.inputs ? .filter(e => "indexed" in e && e.indexed),
                        t = Array.isArray(r) ? r : Object.values(r).length > 0 ? e ? .map(e => r[e.name]) ? ? [] : [];
                    t.length > 0 && (c = e ? .map((e, r) => Array.isArray(t[r]) ? t[r].map((n, i) => d({
                        param: e,
                        value: t[r][i]
                    })) : t[r] ? d({
                        param: e,
                        value: t[r]
                    }) : null) ? ? [])
                }
                return [a, ...c]
            }
        },
        92496: (e, t, r) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.encodeFunctionData = void 0;
            let n = r(51889),
                i = r(79763),
                o = r(64332),
                s = r(34544),
                a = r(73735),
                c = r(57754);
            t.encodeFunctionData = function({
                abi: e,
                args: t,
                functionName: r
            }) {
                let u = e[0];
                if (r && !(u = (0, c.getAbiItem)({
                        abi: e,
                        args: t,
                        name: r
                    }))) throw new n.AbiFunctionNotFoundError(r, {
                    docsPath: "/docs/contract/encodeFunctionData"
                });
                if ("function" !== u.type) throw new n.AbiFunctionNotFoundError(void 0, {
                    docsPath: "/docs/contract/encodeFunctionData"
                });
                let l = (0, a.formatAbiItem)(u),
                    d = (0, o.getFunctionSelector)(l),
                    h = "inputs" in u && u.inputs ? (0, s.encodeAbiParameters)(u.inputs, t ? ? []) : void 0;
                return (0, i.concatHex)([d, h ? ? "0x"])
            }
        },
        5724: (e, t, r) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.encodeFunctionResult = void 0;
            let n = r(51889),
                i = r(34544),
                o = r(57754);
            t.encodeFunctionResult = function({
                abi: e,
                functionName: t,
                result: r
            }) {
                let s = e[0];
                if (t && !(s = (0, o.getAbiItem)({
                        abi: e,
                        name: t
                    }))) throw new n.AbiFunctionNotFoundError(t, {
                    docsPath: "/docs/contract/encodeFunctionResult"
                });
                if ("function" !== s.type) throw new n.AbiFunctionNotFoundError(void 0, {
                    docsPath: "/docs/contract/encodeFunctionResult"
                });
                if (!s.outputs) throw new n.AbiFunctionOutputsNotFoundError(s.name, {
                    docsPath: "/docs/contract/encodeFunctionResult"
                });
                let a = Array.isArray(r) ? r : [r];
                return 0 !== s.outputs.length || a[0] || (a = []), (0, i.encodeAbiParameters)(s.outputs, a)
            }
        },
        26789: (e, t, r) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.encodePacked = void 0;
            let n = r(51889),
                i = r(13411),
                o = r(54570),
                s = r(79763),
                a = r(85349),
                c = r(36373),
                u = r(23117);
            t.encodePacked = function(e, t) {
                if (e.length !== t.length) throw new n.AbiEncodingLengthMismatchError({
                    expectedLength: e.length,
                    givenLength: t.length
                });
                let r = [];
                for (let l = 0; l < e.length; l++) {
                    let d = e[l],
                        h = t[l];
                    r.push(function e(t, r, l = !1) {
                        if ("address" === t) {
                            if (!(0, o.isAddress)(r)) throw new i.InvalidAddressError({
                                address: r
                            });
                            return (0, a.pad)(r.toLowerCase(), {
                                size: l ? 32 : null
                            })
                        }
                        if ("string" === t) return (0, c.stringToHex)(r);
                        if ("bytes" === t) return r;
                        if ("bool" === t) return (0, a.pad)((0, c.boolToHex)(r), {
                            size: l ? 32 : 1
                        });
                        let d = t.match(u.integerRegex);
                        if (d) {
                            let [e, t, n = "256"] = d, i = parseInt(n) / 8;
                            return (0, c.numberToHex)(r, {
                                size: l ? 32 : i,
                                signed: "int" === t
                            })
                        }
                        let h = t.match(u.bytesRegex);
                        if (h) {
                            let [e, t] = h;
                            if (parseInt(t) !== (r.length - 2) / 2) throw new n.BytesSizeMismatchError({
                                expectedSize: parseInt(t),
                                givenSize: (r.length - 2) / 2
                            });
                            return (0, a.pad)(r, {
                                dir: "right",
                                size: l ? 32 : null
                            })
                        }
                        let f = t.match(u.arrayRegex);
                        if (f && Array.isArray(r)) {
                            let [t, n] = f, i = [];
                            for (let t = 0; t < r.length; t++) i.push(e(n, r[t], !0));
                            return 0 === i.length ? "0x" : (0, s.concatHex)(i)
                        }
                        throw new n.UnsupportedPackedAbiType(t)
                    }(d, h))
                }
                return (0, s.concatHex)(r)
            }
        },
        73735: (e, t, r) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.formatAbiParams = t.formatAbiItem = void 0;
            let n = r(51889);

            function i(e, {
                includeName: t = !1
            } = {}) {
                return e ? e.map(e => (function(e, {
                    includeName: t
                }) {
                    return e.type.startsWith("tuple") ? `(${i(e.components,{includeName:t})})${e.type.slice(5)}` : e.type + (t && e.name ? ` ${e.name}` : "")
                })(e, {
                    includeName: t
                })).join(t ? ", " : ",") : ""
            }
            t.formatAbiItem = function(e, {
                includeName: t = !1
            } = {}) {
                if ("function" !== e.type && "event" !== e.type && "error" !== e.type) throw new n.InvalidDefinitionTypeError(e.type);
                return `${e.name}(${i(e.inputs,{includeName:t})})`
            }, t.formatAbiParams = i
        },
        54243: (e, t, r) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.formatAbiItemWithArgs = void 0;
            let n = r(63291);
            t.formatAbiItemWithArgs = function({
                abiItem: e,
                args: t,
                includeFunctionName: r = !0,
                includeName: i = !1
            }) {
                if ("name" in e && "inputs" in e && e.inputs) return `${r?e.name:""}(${e.inputs.map((e,r)=>`${i&&e.name?`${e.name}: `:""}${"object"==typeof t[r]?(0,n.stringify)(t[r]):t[r]}`).join(", ")})`
            }
        },
        57754: (e, t, r) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.getAmbiguousTypes = t.isArgOfType = t.getAbiItem = void 0;
            let n = r(51889),
                i = r(93918),
                o = r(27002),
                s = r(64332),
                a = r(54570);

            function c(e, t) {
                let r = typeof e,
                    n = t.type;
                switch (n) {
                    case "address":
                        return (0, a.isAddress)(e);
                    case "bool":
                        return "boolean" === r;
                    case "function":
                    case "string":
                        return "string" === r;
                    default:
                        if ("tuple" === n && "components" in t) return Object.values(t.components).every((t, r) => c(Object.values(e)[r], t));
                        if (/^u?int(8|16|24|32|40|48|56|64|72|80|88|96|104|112|120|128|136|144|152|160|168|176|184|192|200|208|216|224|232|240|248|256)?$/.test(n)) return "number" === r || "bigint" === r;
                        if (/^bytes([1-9]|1[0-9]|2[0-9]|3[0-2])?$/.test(n)) return "string" === r || e instanceof Uint8Array;
                        if (/[a-z]+[1-9]{0,3}(\[[0-9]{0,}\])+$/.test(n)) return Array.isArray(e) && e.every(e => c(e, { ...t,
                            type: n.replace(/(\[[0-9]{0,}\])$/, "")
                        }));
                        return !1
                }
            }

            function u(e, t, r) {
                for (let n in e) {
                    let i = e[n],
                        o = t[n];
                    if ("tuple" === i.type && "tuple" === o.type && "components" in i && "components" in o) return u(i.components, o.components, r[n]);
                    let s = [i.type, o.type];
                    if (s.includes("address") && s.includes("bytes20") || (s.includes("address") && s.includes("string") || s.includes("address") && s.includes("bytes")) && (0, a.isAddress)(r[n])) return s
                }
            }
            t.getAbiItem = function({
                abi: e,
                args: t = [],
                name: r
            }) {
                let a;
                let l = (0, i.isHex)(r, {
                        strict: !1
                    }),
                    d = e.filter(e => l ? "function" === e.type ? (0, s.getFunctionSelector)(e) === r : "event" === e.type && (0, o.getEventSelector)(e) === r : "name" in e && e.name === r);
                if (0 !== d.length) {
                    if (1 === d.length) return d[0];
                    for (let e of d)
                        if ("inputs" in e) {
                            if (!t || 0 === t.length) {
                                if (!e.inputs || 0 === e.inputs.length) return e;
                                continue
                            }
                            if (e.inputs && 0 !== e.inputs.length && e.inputs.length === t.length && t.every((t, r) => {
                                    let n = "inputs" in e && e.inputs[r];
                                    return !!n && c(t, n)
                                })) {
                                if (a && "inputs" in a && a.inputs) {
                                    let r = u(e.inputs, a.inputs, t);
                                    if (r) throw new n.AbiItemAmbiguityError({
                                        abiItem: e,
                                        type: r[0]
                                    }, {
                                        abiItem: a,
                                        type: r[1]
                                    })
                                }
                                a = e
                            }
                        }
                    return a || d[0]
                }
            }, t.isArgOfType = c, t.getAmbiguousTypes = u
        },
        47208: (e, t, r) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.publicKeyToAddress = t.parseAccount = void 0;
            var n = r(36401);
            Object.defineProperty(t, "parseAccount", {
                enumerable: !0,
                get: function() {
                    return n.parseAccount
                }
            });
            var i = r(86246);
            Object.defineProperty(t, "publicKeyToAddress", {
                enumerable: !0,
                get: function() {
                    return i.publicKeyToAddress
                }
            })
        },
        98067: (e, t, r) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.getAddress = t.checksumAddress = void 0;
            let n = r(13411),
                i = r(33742),
                o = r(45112),
                s = r(54570);

            function a(e, t) {
                let r = t ? `${t}${e.toLowerCase()}` : e.substring(2).toLowerCase(),
                    n = (0, o.keccak256)((0, i.stringToBytes)(r), "bytes"),
                    s = (t ? r.substring(`${t}0x`.length) : r).split("");
                for (let e = 0; e < 40; e += 2) n[e >> 1] >> 4 >= 8 && s[e] && (s[e] = s[e].toUpperCase()), (15 & n[e >> 1]) >= 8 && s[e + 1] && (s[e + 1] = s[e + 1].toUpperCase());
                return `0x${s.join("")}`
            }
            t.checksumAddress = a, t.getAddress = function(e, t) {
                if (!(0, s.isAddress)(e)) throw new n.InvalidAddressError({
                    address: e
                });
                return a(e, t)
            }
        },
        11605: (e, t, r) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.getCreate2Address = t.getCreateAddress = t.getContractAddress = void 0;
            let n = r(79763),
                i = r(74479),
                o = r(85349),
                s = r(42721),
                a = r(33742),
                c = r(50366),
                u = r(45112),
                l = r(98067);

            function d(e) {
                let t = (0, a.toBytes)((0, l.getAddress)(e.from)),
                    r = (0, a.toBytes)(e.nonce);
                return 0 === r[0] && (r = new Uint8Array([])), (0, l.getAddress)(`0x${(0,u.keccak256)((0,c.toRlp)([t,r],"bytes")).slice(26)}`)
            }

            function h(e) {
                let t = (0, a.toBytes)((0, l.getAddress)(e.from)),
                    r = (0, o.pad)((0, i.isBytes)(e.salt) ? e.salt : (0, a.toBytes)(e.salt), {
                        size: 32
                    }),
                    c = "bytecodeHash" in e ? (0, i.isBytes)(e.bytecodeHash) ? e.bytecodeHash : (0, a.toBytes)(e.bytecodeHash) : (0, u.keccak256)(e.bytecode, "bytes");
                return (0, l.getAddress)((0, s.slice)((0, u.keccak256)((0, n.concat)([(0, a.toBytes)("0xff"), t, r, c])), 12))
            }
            t.getContractAddress = function(e) {
                return "CREATE2" === e.opcode ? h(e) : d(e)
            }, t.getCreateAddress = d, t.getCreate2Address = h
        },
        54570: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.isAddress = void 0;
            let r = /^0x[a-fA-F0-9]{40}$/;
            t.isAddress = function(e) {
                return r.test(e)
            }
        },
        55493: (e, t, r) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.isAddressEqual = void 0;
            let n = r(13411),
                i = r(54570);
            t.isAddressEqual = function(e, t) {
                if (!(0, i.isAddress)(e)) throw new n.InvalidAddressError({
                    address: e
                });
                if (!(0, i.isAddress)(t)) throw new n.InvalidAddressError({
                    address: t
                });
                return e.toLowerCase() === t.toLowerCase()
            }
        },
        36810: (e, t, r) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.buildRequest = t.isDeterministicError = void 0;
            let n = r(72968),
                i = r(24187),
                o = r(56467),
                s = r(78967);
            t.isDeterministicError = e => "code" in e ? -1 !== e.code && -32004 !== e.code && -32005 !== e.code && -32042 !== e.code && -32603 !== e.code : e instanceof i.HttpRequestError && !!e.status && 403 !== e.status && 408 !== e.status && 413 !== e.status && 429 !== e.status && 500 !== e.status && 502 !== e.status && 503 !== e.status && 504 !== e.status, t.buildRequest = function(e, {
                retryDelay: r = 150,
                retryCount: a = 3
            } = {}) {
                return async c => (0, s.withRetry)(async () => {
                    try {
                        return await e(c)
                    } catch (e) {
                        switch (e.code) {
                            case o.ParseRpcError.code:
                                throw new o.ParseRpcError(e);
                            case o.InvalidRequestRpcError.code:
                                throw new o.InvalidRequestRpcError(e);
                            case o.MethodNotFoundRpcError.code:
                                throw new o.MethodNotFoundRpcError(e);
                            case o.InvalidParamsRpcError.code:
                                throw new o.InvalidParamsRpcError(e);
                            case o.InternalRpcError.code:
                                throw new o.InternalRpcError(e);
                            case o.InvalidInputRpcError.code:
                                throw new o.InvalidInputRpcError(e);
                            case o.ResourceNotFoundRpcError.code:
                                throw new o.ResourceNotFoundRpcError(e);
                            case o.ResourceUnavailableRpcError.code:
                                throw new o.ResourceUnavailableRpcError(e);
                            case o.TransactionRejectedRpcError.code:
                                throw new o.TransactionRejectedRpcError(e);
                            case o.MethodNotSupportedRpcError.code:
                                throw new o.MethodNotSupportedRpcError(e);
                            case o.LimitExceededRpcError.code:
                                throw new o.LimitExceededRpcError(e);
                            case o.JsonRpcVersionUnsupportedError.code:
                                throw new o.JsonRpcVersionUnsupportedError(e);
                            case o.UserRejectedRequestError.code:
                                throw new o.UserRejectedRequestError(e);
                            case o.UnauthorizedProviderError.code:
                                throw new o.UnauthorizedProviderError(e);
                            case o.UnsupportedProviderMethodError.code:
                                throw new o.UnsupportedProviderMethodError(e);
                            case o.ProviderDisconnectedError.code:
                                throw new o.ProviderDisconnectedError(e);
                            case o.ChainDisconnectedError.code:
                                throw new o.ChainDisconnectedError(e);
                            case o.SwitchChainError.code:
                                throw new o.SwitchChainError(e);
                            case 5e3:
                                throw new o.UserRejectedRequestError(e);
                            default:
                                if (e instanceof n.BaseError) throw e;
                                throw new o.UnknownRpcError(e)
                        }
                    }
                }, {
                    delay: ({
                        count: e,
                        error: t
                    }) => {
                        if (t && t instanceof i.HttpRequestError) {
                            let e = t ? .headers ? .get("Retry-After");
                            if (e ? .match(/\d/)) return 1e3 * parseInt(e)
                        }
                        return ~~(1 << e) * r
                    },
                    retryCount: a,
                    shouldRetry: ({
                        error: e
                    }) => !(0, t.isDeterministicError)(e)
                })
            }
        },
        44622: (e, t, r) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.ccipFetch = t.offchainLookup = t.offchainLookupAbiItem = t.offchainLookupSignature = void 0;
            let n = r(23683),
                i = r(17458),
                o = r(24187),
                s = r(64487),
                a = r(34544),
                c = r(55493),
                u = r(79763),
                l = r(93918),
                d = r(63291);
            async function h(e, {
                blockNumber: r,
                blockTag: o,
                data: l,
                to: d
            }) {
                let {
                    args: h
                } = (0, s.decodeErrorResult)({
                    data: l,
                    abi: [t.offchainLookupAbiItem]
                }), [p, g, m, b, y] = h;
                try {
                    if (!(0, c.isAddressEqual)(d, p)) throw new i.OffchainLookupSenderMismatchError({
                        sender: p,
                        to: d
                    });
                    let t = await f({
                            data: m,
                            sender: p,
                            urls: g
                        }),
                        {
                            data: s
                        } = await (0, n.call)(e, {
                            blockNumber: r,
                            blockTag: o,
                            data: (0, u.concat)([b, (0, a.encodeAbiParameters)([{
                                type: "bytes"
                            }, {
                                type: "bytes"
                            }], [t, y])]),
                            to: d
                        });
                    return s
                } catch (e) {
                    throw new i.OffchainLookupError({
                        callbackSelector: b,
                        cause: e,
                        data: l,
                        extraData: y,
                        sender: p,
                        urls: g
                    })
                }
            }
            async function f({
                data: e,
                sender: t,
                urls: r
            }) {
                let n = Error("An unknown error occurred.");
                for (let s = 0; s < r.length; s++) {
                    let a = r[s],
                        c = a.includes("{data}") ? "GET" : "POST",
                        u = "POST" === c ? {
                            data: e,
                            sender: t
                        } : void 0;
                    try {
                        let r;
                        let s = await fetch(a.replace("{sender}", t).replace("{data}", e), {
                            body: JSON.stringify(u),
                            method: c
                        });
                        if (r = s.headers.get("Content-Type") ? .startsWith("application/json") ? (await s.json()).data : await s.text(), !s.ok) {
                            n = new o.HttpRequestError({
                                body: u,
                                details: r ? .error ? (0, d.stringify)(r.error) : s.statusText,
                                headers: s.headers,
                                status: s.status,
                                url: a
                            });
                            continue
                        }
                        if (!(0, l.isHex)(r)) {
                            n = new i.OffchainLookupResponseMalformedError({
                                result: r,
                                url: a
                            });
                            continue
                        }
                        return r
                    } catch (e) {
                        n = new o.HttpRequestError({
                            body: u,
                            details: e.message,
                            url: a
                        })
                    }
                }
                throw n
            }
            t.offchainLookupSignature = "0x556f1830", t.offchainLookupAbiItem = {
                name: "OffchainLookup",
                type: "error",
                inputs: [{
                    name: "sender",
                    type: "address"
                }, {
                    name: "urls",
                    type: "string[]"
                }, {
                    name: "callData",
                    type: "bytes"
                }, {
                    name: "callbackFunction",
                    type: "bytes4"
                }, {
                    name: "extraData",
                    type: "bytes"
                }]
            }, t.offchainLookup = h, t.ccipFetch = f
        },
        19586: (e, t, r) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.assertCurrentChain = void 0;
            let n = r(1586);
            t.assertCurrentChain = function({
                chain: e,
                currentChainId: t
            }) {
                if (!e) throw new n.ChainNotFoundError;
                if (t !== e.id) throw new n.ChainMismatchError({
                    chain: e,
                    currentChainId: t
                })
            }
        },
        19165: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.defineChain = void 0, t.defineChain = function(e, t = {}) {
                let {
                    fees: r = e.fees,
                    formatters: n = e.formatters,
                    serializers: i = e.serializers
                } = t;
                return { ...e,
                    fees: r,
                    formatters: n,
                    serializers: i
                }
            }
        },
        32085: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.extractChain = void 0, t.extractChain = function({
                chains: e,
                id: t
            }) {
                return e.find(e => e.id === t)
            }
        },
        20913: (e, t, r) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.getChainContractAddress = void 0;
            let n = r(1586);
            t.getChainContractAddress = function({
                blockNumber: e,
                chain: t,
                contract: r
            }) {
                let i = t ? .contracts ? .[r];
                if (!i) throw new n.ChainDoesNotSupportContract({
                    chain: t,
                    contract: {
                        name: r
                    }
                });
                if (e && i.blockCreated && i.blockCreated > e) throw new n.ChainDoesNotSupportContract({
                    blockNumber: e,
                    chain: t,
                    contract: {
                        name: r,
                        blockCreated: i.blockCreated
                    }
                });
                return i.address
            }
        },
        89551: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.extractFunctionType = t.extractFunctionParams = t.extractFunctionName = t.extractFunctionParts = void 0;
            let r = /((function|event)\s)?(.*)(\((.*)\))/;

            function n(e) {
                let t = e.match(r);
                return {
                    type: t ? .[2] || void 0,
                    name: t ? .[3],
                    params: t ? .[5] || void 0
                }
            }
            t.extractFunctionParts = n, t.extractFunctionName = function(e) {
                return n(e).name
            }, t.extractFunctionParams = function(e) {
                let t = n(e).params,
                    r = t ? .split(",").map(e => e.trim().split(" "));
                return r ? .map(e => ({
                    type: e[0],
                    name: "indexed" === e[1] ? e[2] : e[1],
                    ..."indexed" === e[1] ? {
                        indexed: !0
                    } : {}
                }))
            }, t.extractFunctionType = function(e) {
                return n(e).type
            }
        },
        81151: (e, t, r) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.createCursor = void 0;
            let n = r(8904),
                i = {
                    bytes: new Uint8Array,
                    dataView: new DataView(new ArrayBuffer(0)),
                    position: 0,
                    assertPosition(e) {
                        if (e < 0 || e > this.bytes.length - 1) throw new n.PositionOutOfBoundsError({
                            length: this.bytes.length,
                            position: e
                        })
                    },
                    decrementPosition(e) {
                        if (e < 0) throw new n.NegativeOffsetError({
                            offset: e
                        });
                        let t = this.position - e;
                        this.assertPosition(t), this.position = t
                    },
                    incrementPosition(e) {
                        if (e < 0) throw new n.NegativeOffsetError({
                            offset: e
                        });
                        let t = this.position + e;
                        this.assertPosition(t), this.position = t
                    },
                    inspectByte(e) {
                        let t = e ? ? this.position;
                        return this.assertPosition(t), this.bytes[t]
                    },
                    inspectBytes(e, t) {
                        let r = t ? ? this.position;
                        return this.assertPosition(r + e - 1), this.bytes.subarray(r, r + e)
                    },
                    inspectUint8(e) {
                        let t = e ? ? this.position;
                        return this.assertPosition(t), this.bytes[t]
                    },
                    inspectUint16(e) {
                        let t = e ? ? this.position;
                        return this.assertPosition(t + 1), this.dataView.getUint16(t)
                    },
                    inspectUint24(e) {
                        let t = e ? ? this.position;
                        return this.assertPosition(t + 2), (this.dataView.getUint16(t) << 8) + this.dataView.getUint8(t + 2)
                    },
                    inspectUint32(e) {
                        let t = e ? ? this.position;
                        return this.assertPosition(t + 3), this.dataView.getUint32(t)
                    },
                    pushByte(e) {
                        this.assertPosition(this.position), this.bytes[this.position] = e, this.position++
                    },
                    pushBytes(e) {
                        this.assertPosition(this.position + e.length - 1), this.bytes.set(e, this.position), this.position += e.length
                    },
                    pushUint8(e) {
                        this.assertPosition(this.position), this.bytes[this.position] = e, this.position++
                    },
                    pushUint16(e) {
                        this.assertPosition(this.position + 1), this.dataView.setUint16(this.position, e), this.position += 2
                    },
                    pushUint24(e) {
                        this.assertPosition(this.position + 2), this.dataView.setUint16(this.position, e >> 8), this.dataView.setUint8(this.position + 2, 255 & e), this.position += 3
                    },
                    pushUint32(e) {
                        this.assertPosition(this.position + 3), this.dataView.setUint32(this.position, e), this.position += 4
                    },
                    readByte() {
                        let e = this.inspectByte();
                        return this.position++, e
                    },
                    readBytes(e) {
                        let t = this.inspectBytes(e);
                        return this.position += e, t
                    },
                    readUint8() {
                        let e = this.inspectUint8();
                        return this.position += 1, e
                    },
                    readUint16() {
                        let e = this.inspectUint16();
                        return this.position += 2, e
                    },
                    readUint24() {
                        let e = this.inspectUint24();
                        return this.position += 3, e
                    },
                    readUint32() {
                        let e = this.inspectUint32();
                        return this.position += 4, e
                    },
                    setPosition(e) {
                        this.assertPosition(e), this.position = e
                    }
                };
            t.createCursor = function(e) {
                let t = Object.create(i);
                return t.bytes = e, t.dataView = new DataView(e.buffer, e.byteOffset, e.byteLength), t
            }
        },
        79763: (e, t) => {
            "use strict";

            function r(e) {
                let t = 0;
                for (let r of e) t += r.length;
                let r = new Uint8Array(t),
                    n = 0;
                for (let t of e) r.set(t, n), n += t.length;
                return r
            }

            function n(e) {
                return `0x${e.reduce((e,t)=>e+t.replace("0x",""),"")}`
            }
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.concatHex = t.concatBytes = t.concat = void 0, t.concat = function(e) {
                return "string" == typeof e[0] ? n(e) : r(e)
            }, t.concatBytes = r, t.concatHex = n
        },
        74479: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.isBytes = void 0, t.isBytes = function(e) {
                return !!e && "object" == typeof e && "BYTES_PER_ELEMENT" in e && 1 === e.BYTES_PER_ELEMENT && "Uint8Array" === e.constructor.name
            }
        },
        74655: (e, t, r) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.isBytesEqual = void 0;
            let n = r(27341),
                i = r(33742),
                o = r(93918);
            t.isBytesEqual = function(e, t) {
                let r = (0, o.isHex)(e) ? (0, i.toBytes)(e) : e,
                    s = (0, o.isHex)(t) ? (0, i.toBytes)(t) : t;
                return (0, n.equalBytes)(r, s)
            }
        },
        93918: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.isHex = void 0, t.isHex = function(e, {
                strict: t = !0
            } = {}) {
                return !!e && "string" == typeof e && (t ? /^0x[0-9a-fA-F]*$/.test(e) : e.startsWith("0x"))
            }
        },
        85349: (e, t, r) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.padBytes = t.padHex = t.pad = void 0;
            let n = r(13319);

            function i(e, {
                dir: t,
                size: r = 32
            } = {}) {
                if (null === r) return e;
                let i = e.replace("0x", "");
                if (i.length > 2 * r) throw new n.SizeExceedsPaddingSizeError({
                    size: Math.ceil(i.length / 2),
                    targetSize: r,
                    type: "hex"
                });
                return `0x${i["right"===t?"padEnd":"padStart"](2*r,"0")}`
            }

            function o(e, {
                dir: t,
                size: r = 32
            } = {}) {
                if (null === r) return e;
                if (e.length > r) throw new n.SizeExceedsPaddingSizeError({
                    size: e.length,
                    targetSize: r,
                    type: "bytes"
                });
                let i = new Uint8Array(r);
                for (let n = 0; n < r; n++) {
                    let o = "right" === t;
                    i[o ? n : r - n - 1] = e[o ? n : e.length - n - 1]
                }
                return i
            }
            t.pad = function(e, {
                dir: t,
                size: r = 32
            } = {}) {
                return "string" == typeof e ? i(e, {
                    dir: t,
                    size: r
                }) : o(e, {
                    dir: t,
                    size: r
                })
            }, t.padHex = i, t.padBytes = o
        },
        6629: (e, t, r) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.size = void 0;
            let n = r(93918);
            t.size = function(e) {
                return (0, n.isHex)(e, {
                    strict: !1
                }) ? Math.ceil((e.length - 2) / 2) : e.length
            }
        },
        42721: (e, t, r) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.sliceHex = t.sliceBytes = t.slice = void 0;
            let n = r(13319),
                i = r(93918),
                o = r(6629);

            function s(e, t) {
                if ("number" == typeof t && t > 0 && t > (0, o.size)(e) - 1) throw new n.SliceOffsetOutOfBoundsError({
                    offset: t,
                    position: "start",
                    size: (0, o.size)(e)
                })
            }

            function a(e, t, r) {
                if ("number" == typeof t && "number" == typeof r && (0, o.size)(e) !== r - t) throw new n.SliceOffsetOutOfBoundsError({
                    offset: r,
                    position: "end",
                    size: (0, o.size)(e)
                })
            }

            function c(e, t, r, {
                strict: n
            } = {}) {
                s(e, t);
                let i = e.slice(t, r);
                return n && a(i, t, r), i
            }

            function u(e, t, r, {
                strict: n
            } = {}) {
                s(e, t);
                let i = `0x${e.replace("0x","").slice((t??0)*2,(r??e.length)*2)}`;
                return n && a(i, t, r), i
            }
            t.slice = function(e, t, r, {
                strict: n
            } = {}) {
                return (0, i.isHex)(e, {
                    strict: !1
                }) ? u(e, t, r, {
                    strict: n
                }) : c(e, t, r, {
                    strict: n
                })
            }, t.sliceBytes = c, t.sliceHex = u
        },
        84392: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.trim = void 0, t.trim = function(e, {
                dir: t = "left"
            } = {}) {
                let r = "string" == typeof e ? e.replace("0x", "") : e,
                    n = 0;
                for (let e = 0; e < r.length - 1 && "0" === r["left" === t ? e : r.length - e - 1].toString(); e++) n++;
                return (r = "left" === t ? r.slice(n) : r.slice(0, r.length - n), "string" == typeof e) ? (1 === r.length && "right" === t && (r = `${r}0`), `0x${r.length%2==1?`0${r}`:r}`) : r
            }
        },
        9045: (e, t, r) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.bytesToString = t.bytesToNumber = t.bytesToBool = t.bytesToBigInt = t.fromBytes = void 0;
            let n = r(1750),
                i = r(84392),
                o = r(7506),
                s = r(36373);

            function a(e, t = {}) {
                void 0 !== t.size && (0, o.assertSize)(e, {
                    size: t.size
                });
                let r = (0, s.bytesToHex)(e, t);
                return (0, o.hexToBigInt)(r)
            }

            function c(e, t = {}) {
                let r = e;
                if (void 0 !== t.size && ((0, o.assertSize)(r, {
                        size: t.size
                    }), r = (0, i.trim)(r)), r.length > 1 || r[0] > 1) throw new n.InvalidBytesBooleanError(r);
                return !!r[0]
            }

            function u(e, t = {}) {
                void 0 !== t.size && (0, o.assertSize)(e, {
                    size: t.size
                });
                let r = (0, s.bytesToHex)(e, t);
                return (0, o.hexToNumber)(r)
            }

            function l(e, t = {}) {
                let r = e;
                return void 0 !== t.size && ((0, o.assertSize)(r, {
                    size: t.size
                }), r = (0, i.trim)(r, {
                    dir: "right"
                })), new TextDecoder().decode(r)
            }
            t.fromBytes = function(e, t) {
                let r = "string" == typeof t ? {
                        to: t
                    } : t,
                    n = r.to;
                return "number" === n ? u(e, r) : "bigint" === n ? a(e, r) : "boolean" === n ? c(e, r) : "string" === n ? l(e, r) : (0, s.bytesToHex)(e, r)
            }, t.bytesToBigInt = a, t.bytesToBool = c, t.bytesToNumber = u, t.bytesToString = l
        },
        7506: (e, t, r) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.hexToString = t.hexToNumber = t.hexToBool = t.hexToBigInt = t.fromHex = t.assertSize = void 0;
            let n = r(1750),
                i = r(6629),
                o = r(84392),
                s = r(33742);

            function a(e, {
                size: t
            }) {
                if ((0, i.size)(e) > t) throw new n.SizeOverflowError({
                    givenSize: (0, i.size)(e),
                    maxSize: t
                })
            }

            function c(e, t = {}) {
                let {
                    signed: r
                } = t;
                t.size && a(e, {
                    size: t.size
                });
                let n = BigInt(e);
                if (!r) return n;
                let i = (e.length - 2) / 2;
                return n <= (1 n << 8 n * BigInt(i) - 1 n) - 1 n ? n : n - BigInt(`0x${"f".padStart(2*i,"f")}`) - 1 n
            }

            function u(e, t = {}) {
                let r = e;
                if (t.size && (a(r, {
                        size: t.size
                    }), r = (0, o.trim)(r)), "0x00" === (0, o.trim)(r)) return !1;
                if ("0x01" === (0, o.trim)(r)) return !0;
                throw new n.InvalidHexBooleanError(r)
            }

            function l(e, t = {}) {
                return Number(c(e, t))
            }

            function d(e, t = {}) {
                let r = (0, s.hexToBytes)(e);
                return t.size && (a(r, {
                    size: t.size
                }), r = (0, o.trim)(r, {
                    dir: "right"
                })), new TextDecoder().decode(r)
            }
            t.assertSize = a, t.fromHex = function(e, t) {
                let r = "string" == typeof t ? {
                        to: t
                    } : t,
                    n = r.to;
                return "number" === n ? l(e, r) : "bigint" === n ? c(e, r) : "string" === n ? d(e, r) : "boolean" === n ? u(e, r) : (0, s.hexToBytes)(e, r)
            }, t.hexToBigInt = c, t.hexToBool = u, t.hexToNumber = l, t.hexToString = d
        },
        2290: (e, t, r) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.rlpToHex = t.rlpToBytes = t.fromRlp = void 0;
            let n = r(72968),
                i = r(1750),
                o = r(81151),
                s = r(33742),
                a = r(36373);

            function c(e, t = "hex") {
                let r = (() => {
                    if ("string" == typeof e) {
                        if (e.length > 3 && e.length % 2 != 0) throw new i.InvalidHexValueError(e);
                        return (0, s.hexToBytes)(e)
                    }
                    return e
                })();
                return function e(t, r = "hex") {
                    if (0 === t.bytes.length) return "hex" === r ? (0, a.bytesToHex)(t.bytes) : t.bytes;
                    let n = t.readByte();
                    if (n < 128 && t.decrementPosition(1), n < 192) {
                        let e = u(t, n, 128),
                            i = t.readBytes(e);
                        return "hex" === r ? (0, a.bytesToHex)(i) : i
                    }
                    let i = u(t, n, 192);
                    return function(t, r, n) {
                        let i = t.position,
                            o = [];
                        for (; t.position - i < r;) o.push(e(t, n));
                        return o
                    }(t, i, r)
                }((0, o.createCursor)(r), t)
            }

            function u(e, t, r) {
                if (128 === r && t < 128) return 1;
                if (t <= r + 55) return t - r;
                if (t === r + 55 + 1) return e.readUint8();
                if (t === r + 55 + 2) return e.readUint16();
                if (t === r + 55 + 3) return e.readUint24();
                if (t === r + 55 + 4) return e.readUint32();
                throw new n.BaseError("Invalid RLP prefix")
            }
            t.fromRlp = c, t.rlpToBytes = function(e, t = "bytes") {
                return c(e, t)
            }, t.rlpToHex = function(e, t = "hex") {
                return c(e, t)
            }
        },
        33742: (e, t, r) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.stringToBytes = t.numberToBytes = t.hexToBytes = t.boolToBytes = t.toBytes = void 0;
            let n = r(72968),
                i = r(93918),
                o = r(85349),
                s = r(7506),
                a = r(36373),
                c = new TextEncoder;

            function u(e, t = {}) {
                let r = new Uint8Array(1);
                return (r[0] = Number(e), "number" == typeof t.size) ? ((0, s.assertSize)(r, {
                    size: t.size
                }), (0, o.pad)(r, {
                    size: t.size
                })) : r
            }
            t.toBytes = function(e, t = {}) {
                return "number" == typeof e || "bigint" == typeof e ? f(e, t) : "boolean" == typeof e ? u(e, t) : (0, i.isHex)(e) ? h(e, t) : p(e, t)
            }, t.boolToBytes = u;
            let l = {
                zero: 48,
                nine: 57,
                A: 65,
                F: 70,
                a: 97,
                f: 102
            };

            function d(e) {
                return e >= l.zero && e <= l.nine ? e - l.zero : e >= l.A && e <= l.F ? e - (l.A - 10) : e >= l.a && e <= l.f ? e - (l.a - 10) : void 0
            }

            function h(e, t = {}) {
                let r = e;
                t.size && ((0, s.assertSize)(r, {
                    size: t.size
                }), r = (0, o.pad)(r, {
                    dir: "right",
                    size: t.size
                }));
                let i = r.slice(2);
                i.length % 2 && (i = `0${i}`);
                let a = i.length / 2,
                    c = new Uint8Array(a);
                for (let e = 0, t = 0; e < a; e++) {
                    let r = d(i.charCodeAt(t++)),
                        o = d(i.charCodeAt(t++));
                    if (void 0 === r || void 0 === o) throw new n.BaseError(`Invalid byte sequence ("${i[t-2]}${i[t-1]}" in "${i}").`);
                    c[e] = 16 * r + o
                }
                return c
            }

            function f(e, t) {
                return h((0, a.numberToHex)(e, t))
            }

            function p(e, t = {}) {
                let r = c.encode(e);
                return "number" == typeof t.size ? ((0, s.assertSize)(r, {
                    size: t.size
                }), (0, o.pad)(r, {
                    dir: "right",
                    size: t.size
                })) : r
            }
            t.hexToBytes = h, t.numberToBytes = f, t.stringToBytes = p
        },
        36373: (e, t, r) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.stringToHex = t.numberToHex = t.bytesToHex = t.boolToHex = t.toHex = void 0;
            let n = r(1750),
                i = r(85349),
                o = r(7506),
                s = Array.from({
                    length: 256
                }, (e, t) => t.toString(16).padStart(2, "0"));

            function a(e, t = {}) {
                let r = `0x${Number(e)}`;
                return "number" == typeof t.size ? ((0, o.assertSize)(r, {
                    size: t.size
                }), (0, i.pad)(r, {
                    size: t.size
                })) : r
            }

            function c(e, t = {}) {
                let r = "";
                for (let t = 0; t < e.length; t++) r += s[e[t]];
                let n = `0x${r}`;
                return "number" == typeof t.size ? ((0, o.assertSize)(n, {
                    size: t.size
                }), (0, i.pad)(n, {
                    dir: "right",
                    size: t.size
                })) : n
            }

            function u(e, t = {}) {
                let r;
                let {
                    signed: o,
                    size: s
                } = t, a = BigInt(e);
                s ? r = o ? (1 n << 8 n * BigInt(s) - 1 n) - 1 n : 2 n ** (8 n * BigInt(s)) - 1 n : "number" == typeof e && (r = BigInt(Number.MAX_SAFE_INTEGER));
                let c = "bigint" == typeof r && o ? -r - 1 n : 0;
                if (r && a > r || a < c) {
                    let t = "bigint" == typeof e ? "n" : "";
                    throw new n.IntegerOutOfRangeError({
                        max: r ? `${r}${t}` : void 0,
                        min: `${c}${t}`,
                        signed: o,
                        size: s,
                        value: `${e}${t}`
                    })
                }
                let u = `0x${(o&&a<0?(1n<<BigInt(8*s))+BigInt(a):a).toString(16)}`;
                return s ? (0, i.pad)(u, {
                    size: s
                }) : u
            }
            t.toHex = function(e, t = {}) {
                return "number" == typeof e || "bigint" == typeof e ? u(e, t) : "string" == typeof e ? d(e, t) : "boolean" == typeof e ? a(e, t) : c(e, t)
            }, t.boolToHex = a, t.bytesToHex = c, t.numberToHex = u;
            let l = new TextEncoder;

            function d(e, t = {}) {
                return c(l.encode(e), t)
            }
            t.stringToHex = d
        },
        50366: (e, t, r) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.hexToRlp = t.bytesToRlp = t.toRlp = void 0;
            let n = r(5414),
                i = r(81151),
                o = r(33742),
                s = r(36373);

            function a(e, t = "hex") {
                let r = function e(t) {
                        return Array.isArray(t) ? function(e) {
                            let t = e.reduce((e, t) => e + t.length, 0),
                                r = c(t);
                            return {
                                length: t <= 55 ? 1 + t : 1 + r + t,
                                encode(n) {
                                    for (let {
                                            encode: i
                                        } of (t <= 55 ? n.pushByte(192 + t) : (n.pushByte(247 + r), 1 === r ? n.pushUint8(t) : 2 === r ? n.pushUint16(t) : 3 === r ? n.pushUint24(t) : n.pushUint32(t)), e)) i(n)
                                }
                            }
                        }(t.map(t => e(t))) : function(e) {
                            let t = "string" == typeof e ? (0, o.hexToBytes)(e) : e,
                                r = c(t.length);
                            return {
                                length: 1 === t.length && t[0] < 128 ? 1 : t.length <= 55 ? 1 + t.length : 1 + r + t.length,
                                encode(e) {
                                    1 === t.length && t[0] < 128 || (t.length <= 55 ? e.pushByte(128 + t.length) : (e.pushByte(183 + r), 1 === r ? e.pushUint8(t.length) : 2 === r ? e.pushUint16(t.length) : 3 === r ? e.pushUint24(t.length) : e.pushUint32(t.length))), e.pushBytes(t)
                                }
                            }
                        }(t)
                    }(e),
                    n = (0, i.createCursor)(new Uint8Array(r.length));
                return (r.encode(n), "hex" === t) ? (0, s.bytesToHex)(n.bytes) : n.bytes
            }

            function c(e) {
                if (e < 256) return 1;
                if (e < 65536) return 2;
                if (e < 16777216) return 3;
                if (e < 4294967296) return 4;
                throw new n.BaseError("Length is too large.")
            }
            t.toRlp = a, t.bytesToRlp = function(e, t = "bytes") {
                return a(e, t)
            }, t.hexToRlp = function(e, t = "hex") {
                return a(e, t)
            }
        },
        38394: (e, t, r) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.parseAvatarRecord = void 0;
            let n = r(89572);
            async function i(e, {
                gatewayUrls: t,
                record: r
            }) {
                return /eip155:/i.test(r) ? o(e, {
                    gatewayUrls: t,
                    record: r
                }) : (0, n.parseAvatarUri)({
                    uri: r,
                    gatewayUrls: t
                })
            }
            async function o(e, {
                gatewayUrls: t,
                record: r
            }) {
                let i = (0, n.parseNftUri)(r),
                    o = await (0, n.getNftTokenUri)(e, {
                        nft: i
                    }),
                    {
                        uri: s,
                        isOnChain: a,
                        isEncoded: c
                    } = (0, n.resolveAvatarUri)({
                        uri: o,
                        gatewayUrls: t
                    });
                if (a && (s.includes("data:application/json;base64,") || s.startsWith("{"))) {
                    let e = JSON.parse(c ? atob(s.replace("data:application/json;base64,", "")) : s);
                    return (0, n.parseAvatarUri)({
                        uri: (0, n.getJsonImage)(e),
                        gatewayUrls: t
                    })
                }
                let u = i.tokenID;
                return "erc1155" === i.namespace && (u = u.replace("0x", "").padStart(64, "0")), (0, n.getMetadataAvatarUri)({
                    gatewayUrls: t,
                    uri: s.replace(/(?:0x)?{id}/, u)
                })
            }
            t.parseAvatarRecord = i
        },
        89572: (e, t, r) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.getNftTokenUri = t.parseNftUri = t.parseAvatarUri = t.getMetadataAvatarUri = t.getJsonImage = t.resolveAvatarUri = t.getGateway = t.isImageUri = void 0;
            let n = r(67927),
                i = r(42119),
                o = RegExp("(?<protocol>https?:\\/\\/[^\\/]*|ipfs:\\/|ipns:\\/|ar:\\/)?(?<root>\\/)?(?<subpath>ipfs\\/|ipns\\/)?(?<target>[\\w\\-.]+)(?<subtarget>\\/.*)?"),
                s = RegExp("^(Qm[1-9A-HJ-NP-Za-km-z]{44,}|b[A-Za-z2-7]{58,}|B[A-Z2-7]{58,}|z[1-9A-HJ-NP-Za-km-z]{48,}|F[0-9A-F]{50,})(\\/(?<target>[\\w\\-.]+))?(?<subtarget>\\/.*)?$"),
                a = /^data:([a-zA-Z\-/+]*);base64,([^"].*)/,
                c = /^data:([a-zA-Z\-/+]*)?(;[a-zA-Z0-9].*?)?(,)/;
            async function u(e) {
                try {
                    let t = await fetch(e, {
                        method: "HEAD"
                    });
                    if (200 === t.status) {
                        let e = t.headers.get("content-type");
                        return e ? .startsWith("image/")
                    }
                    return !1
                } catch (t) {
                    if ("object" == typeof t && void 0 !== t.response || !globalThis.hasOwnProperty("Image")) return !1;
                    return new Promise(t => {
                        let r = new Image;
                        r.onload = () => {
                            t(!0)
                        }, r.onerror = () => {
                            t(!1)
                        }, r.src = e
                    })
                }
            }

            function l(e, t) {
                return e ? e.endsWith("/") ? e.slice(0, -1) : e : t
            }

            function d({
                uri: e,
                gatewayUrls: t
            }) {
                let r = a.test(e);
                if (r) return {
                    uri: e,
                    isOnChain: !0,
                    isEncoded: r
                };
                let n = l(t ? .ipfs, "https://ipfs.io"),
                    u = l(t ? .arweave, "https://arweave.net"),
                    d = e.match(o),
                    {
                        protocol: h,
                        subpath: f,
                        target: p,
                        subtarget: g = ""
                    } = d ? .groups || {},
                    m = "ipns:/" === h || "ipns/" === f,
                    b = "ipfs:/" === h || "ipfs/" === f || s.test(e);
                if (e.startsWith("http") && !m && !b) {
                    let r = e;
                    return t ? .arweave && (r = e.replace(/https:\/\/arweave.net/g, t ? .arweave)), {
                        uri: r,
                        isOnChain: !1,
                        isEncoded: !1
                    }
                }
                if ((m || b) && p) return {
                    uri: `${n}/${m?"ipns":"ipfs"}/${p}${g}`,
                    isOnChain: !1,
                    isEncoded: !1
                };
                if ("ar:/" === h && p) return {
                    uri: `${u}/${p}${g||""}`,
                    isOnChain: !1,
                    isEncoded: !1
                };
                let y = e.replace(c, "");
                if (y.startsWith("<svg") && (y = `data:image/svg+xml;base64,${btoa(y)}`), y.startsWith("data:") || y.startsWith("{")) return {
                    uri: y,
                    isOnChain: !0,
                    isEncoded: !1
                };
                throw new i.EnsAvatarUriResolutionError({
                    uri: e
                })
            }

            function h(e) {
                if ("object" != typeof e || !("image" in e) && !("image_url" in e) && !("image_data" in e)) throw new i.EnsAvatarInvalidMetadataError({
                    data: e
                });
                return e.image || e.image_url || e.image_data
            }
            async function f({
                gatewayUrls: e,
                uri: t
            }) {
                try {
                    let r = await fetch(t).then(e => e.json());
                    return await p({
                        gatewayUrls: e,
                        uri: h(r)
                    })
                } catch {
                    throw new i.EnsAvatarUriResolutionError({
                        uri: t
                    })
                }
            }
            async function p({
                gatewayUrls: e,
                uri: t
            }) {
                let {
                    uri: r,
                    isOnChain: n
                } = d({
                    uri: t,
                    gatewayUrls: e
                });
                if (n || await u(r)) return r;
                throw new i.EnsAvatarUriResolutionError({
                    uri: t
                })
            }
            async function g(e, {
                nft: t
            }) {
                if ("erc721" === t.namespace) return (0, n.readContract)(e, {
                    address: t.contractAddress,
                    abi: [{
                        name: "tokenURI",
                        type: "function",
                        stateMutability: "view",
                        inputs: [{
                            name: "tokenId",
                            type: "uint256"
                        }],
                        outputs: [{
                            name: "",
                            type: "string"
                        }]
                    }],
                    functionName: "tokenURI",
                    args: [BigInt(t.tokenID)]
                });
                if ("erc1155" === t.namespace) return (0, n.readContract)(e, {
                    address: t.contractAddress,
                    abi: [{
                        name: "uri",
                        type: "function",
                        stateMutability: "view",
                        inputs: [{
                            name: "_id",
                            type: "uint256"
                        }],
                        outputs: [{
                            name: "",
                            type: "string"
                        }]
                    }],
                    functionName: "uri",
                    args: [BigInt(t.tokenID)]
                });
                throw new i.EnsAvatarUnsupportedNamespaceError({
                    namespace: t.namespace
                })
            }
            t.isImageUri = u, t.getGateway = l, t.resolveAvatarUri = d, t.getJsonImage = h, t.getMetadataAvatarUri = f, t.parseAvatarUri = p, t.parseNftUri = function(e) {
                let t = e;
                t.startsWith("did:nft:") && (t = t.replace("did:nft:", "").replace(/_/g, "/"));
                let [r, n, o] = t.split("/"), [s, a] = r.split(":"), [c, u] = n.split(":");
                if (!s || "eip155" !== s.toLowerCase()) throw new i.EnsAvatarInvalidNftUriError({
                    reason: "Only EIP-155 supported"
                });
                if (!a) throw new i.EnsAvatarInvalidNftUriError({
                    reason: "Chain ID not found"
                });
                if (!u) throw new i.EnsAvatarInvalidNftUriError({
                    reason: "Contract address not found"
                });
                if (!o) throw new i.EnsAvatarInvalidNftUriError({
                    reason: "Token ID not found"
                });
                if (!c) throw new i.EnsAvatarInvalidNftUriError({
                    reason: "ERC namespace not found"
                });
                return {
                    chainID: parseInt(a),
                    namespace: c.toLowerCase(),
                    contractAddress: u,
                    tokenID: o
                }
            }, t.getNftTokenUri = g
        },
        5406: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.encodeLabelhash = void 0, t.encodeLabelhash = function(e) {
                return `[${e.slice(2)}]`
            }
        },
        32182: (e, t, r) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.encodedLabelToLabelhash = void 0;
            let n = r(93918);
            t.encodedLabelToLabelhash = function(e) {
                if (66 !== e.length || 0 !== e.indexOf("[") || 65 !== e.indexOf("]")) return null;
                let t = `0x${e.slice(1,65)}`;
                return (0, n.isHex)(t) ? t : null
            }
        },
        30892: (e, t, r) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.isNullUniversalResolverError = void 0;
            let n = r(17480),
                i = r(72968),
                o = r(30211);
            t.isNullUniversalResolverError = function(e, t) {
                if (!(e instanceof i.BaseError)) return !1;
                let r = e.walk(e => e instanceof o.ContractFunctionRevertedError);
                return r instanceof o.ContractFunctionRevertedError && (!!(r.data ? .errorName === "ResolverNotFound" || r.data ? .errorName === "ResolverWildcardNotSupported" || r.reason ? .includes("Wildcard on non-extended resolvers is not supported")) || "reverse" === t && r.reason === n.panicReasons[50])
            }
        },
        38457: (e, t, r) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.labelhash = void 0;
            let n = r(33742),
                i = r(36373),
                o = r(45112),
                s = r(32182);
            t.labelhash = function(e) {
                let t = new Uint8Array(32).fill(0);
                return e ? (0, s.encodedLabelToLabelhash)(e) || (0, o.keccak256)((0, n.stringToBytes)(e)) : (0, i.bytesToHex)(t)
            }
        },
        86175: (e, t, r) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.namehash = void 0;
            let n = r(79763),
                i = r(33742),
                o = r(36373),
                s = r(45112),
                a = r(32182);
            t.namehash = function(e) {
                let t = new Uint8Array(32).fill(0);
                if (!e) return (0, o.bytesToHex)(t);
                let r = e.split(".");
                for (let e = r.length - 1; e >= 0; e -= 1) {
                    let o = (0, a.encodedLabelToLabelhash)(r[e]),
                        c = o ? (0, i.toBytes)(o) : (0, s.keccak256)((0, i.stringToBytes)(r[e]), "bytes");
                    t = (0, s.keccak256)((0, n.concat)([t, c]), "bytes")
                }
                return (0, o.bytesToHex)(t)
            }
        },
        76921: (e, t, r) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.packetToBytes = void 0;
            let n = r(33742),
                i = r(5406),
                o = r(38457);
            t.packetToBytes = function(e) {
                let t = e.replace(/^\.|\.$/gm, "");
                if (0 === t.length) return new Uint8Array(1);
                let r = new Uint8Array((0, n.stringToBytes)(t).byteLength + 2),
                    s = 0,
                    a = t.split(".");
                for (let e = 0; e < a.length; e++) {
                    let t = (0, n.stringToBytes)(a[e]);
                    t.byteLength > 255 && (t = (0, n.stringToBytes)((0, i.encodeLabelhash)((0, o.labelhash)(a[e])))), r[s] = t.length, r.set(t, s + 1), s += t.length + 1
                }
                return r.byteLength !== s + 1 ? r.slice(0, s + 1) : r
            }
        },
        62767: (e, t, r) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.getCallError = void 0;
            let n = r(30211),
                i = r(69110),
                o = r(65476);
            t.getCallError = function(e, {
                docsPath: t,
                ...r
            }) {
                let s = (() => {
                    let t = (0, o.getNodeError)(e, r);
                    return t instanceof i.UnknownNodeError ? e : t
                })();
                return new n.CallExecutionError(s, {
                    docsPath: t,
                    ...r
                })
            }
        },
        19261: (e, t, r) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.getContractError = void 0;
            let n = r(51889),
                i = r(72968),
                o = r(30211),
                s = r(56467);
            t.getContractError = function(e, {
                abi: t,
                address: r,
                args: a,
                docsPath: c,
                functionName: u,
                sender: l
            }) {
                let {
                    code: d,
                    data: h,
                    message: f,
                    shortMessage: p
                } = e instanceof o.RawContractError ? e : e instanceof i.BaseError ? e.walk(e => "data" in e) || e.walk() : {}, g = e instanceof n.AbiDecodingZeroDataError ? new o.ContractFunctionZeroDataError({
                    functionName: u
                }) : [3, s.InternalRpcError.code].includes(d) && (h || f || p) ? new o.ContractFunctionRevertedError({
                    abi: t,
                    data: "object" == typeof h ? h.data : h,
                    functionName: u,
                    message: p ? ? f
                }) : e;
                return new o.ContractFunctionExecutionError(g, {
                    abi: t,
                    args: a,
                    contractAddress: r,
                    docsPath: c,
                    functionName: u,
                    sender: l
                })
            }
        },
        41007: (e, t, r) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.getEstimateGasError = void 0;
            let n = r(5853),
                i = r(69110),
                o = r(65476);
            t.getEstimateGasError = function(e, {
                docsPath: t,
                ...r
            }) {
                let s = (() => {
                    let t = (0, o.getNodeError)(e, r);
                    return t instanceof i.UnknownNodeError ? e : t
                })();
                return new n.EstimateGasExecutionError(s, {
                    docsPath: t,
                    ...r
                })
            }
        },
        65476: (e, t, r) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.getNodeError = t.containsNodeError = void 0;
            let n = r(72968),
                i = r(69110),
                o = r(24187),
                s = r(56467);
            t.containsNodeError = function(e) {
                return e instanceof s.TransactionRejectedRpcError || e instanceof s.InvalidInputRpcError || e instanceof o.RpcRequestError && e.code === i.ExecutionRevertedError.code
            }, t.getNodeError = function(e, t) {
                let r = (e.details || "").toLowerCase(),
                    o = e.walk(e => e.code === i.ExecutionRevertedError.code);
                return o instanceof n.BaseError ? new i.ExecutionRevertedError({
                    cause: e,
                    message: o.details
                }) : i.ExecutionRevertedError.nodeMessage.test(r) ? new i.ExecutionRevertedError({
                    cause: e,
                    message: e.details
                }) : i.FeeCapTooHighError.nodeMessage.test(r) ? new i.FeeCapTooHighError({
                    cause: e,
                    maxFeePerGas: t ? .maxFeePerGas
                }) : i.FeeCapTooLowError.nodeMessage.test(r) ? new i.FeeCapTooLowError({
                    cause: e,
                    maxFeePerGas: t ? .maxFeePerGas
                }) : i.NonceTooHighError.nodeMessage.test(r) ? new i.NonceTooHighError({
                    cause: e,
                    nonce: t ? .nonce
                }) : i.NonceTooLowError.nodeMessage.test(r) ? new i.NonceTooLowError({
                    cause: e,
                    nonce: t ? .nonce
                }) : i.NonceMaxValueError.nodeMessage.test(r) ? new i.NonceMaxValueError({
                    cause: e,
                    nonce: t ? .nonce
                }) : i.InsufficientFundsError.nodeMessage.test(r) ? new i.InsufficientFundsError({
                    cause: e
                }) : i.IntrinsicGasTooHighError.nodeMessage.test(r) ? new i.IntrinsicGasTooHighError({
                    cause: e,
                    gas: t ? .gas
                }) : i.IntrinsicGasTooLowError.nodeMessage.test(r) ? new i.IntrinsicGasTooLowError({
                    cause: e,
                    gas: t ? .gas
                }) : i.TransactionTypeNotSupportedError.nodeMessage.test(r) ? new i.TransactionTypeNotSupportedError({
                    cause: e
                }) : i.TipAboveFeeCapError.nodeMessage.test(r) ? new i.TipAboveFeeCapError({
                    cause: e,
                    maxFeePerGas: t ? .maxFeePerGas,
                    maxPriorityFeePerGas: t ? .maxPriorityFeePerGas
                }) : new i.UnknownNodeError({
                    cause: e
                })
            }
        },
        93424: (e, t, r) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.getTransactionError = void 0;
            let n = r(69110),
                i = r(99449),
                o = r(65476);
            t.getTransactionError = function(e, {
                docsPath: t,
                ...r
            }) {
                let s = (() => {
                    let t = (0, o.getNodeError)(e, r);
                    return t instanceof n.UnknownNodeError ? e : t
                })();
                return new i.TransactionExecutionError(s, {
                    docsPath: t,
                    ...r
                })
            }
        },
        24135: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.createFilterRequestScope = void 0, t.createFilterRequestScope = function(e, {
                method: t
            }) {
                let r = {};
                return "fallback" === e.transport.type && e.transport.onResponse ? .(({
                    method: e,
                    response: n,
                    status: i,
                    transport: o
                }) => {
                    "success" === i && t === e && (r[n] = o.request)
                }), t => r[t] || e.request
            }
        },
        1812: (e, t, r) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.defineBlock = t.formatBlock = void 0;
            let n = r(95804),
                i = r(31616);

            function o(e) {
                let t = e.transactions ? .map(e => "string" == typeof e ? e : i.formatTransaction(e));
                return { ...e,
                    baseFeePerGas: e.baseFeePerGas ? BigInt(e.baseFeePerGas) : null,
                    difficulty: e.difficulty ? BigInt(e.difficulty) : void 0,
                    gasLimit: e.gasLimit ? BigInt(e.gasLimit) : void 0,
                    gasUsed: e.gasUsed ? BigInt(e.gasUsed) : void 0,
                    hash: e.hash ? e.hash : null,
                    logsBloom: e.logsBloom ? e.logsBloom : null,
                    nonce: e.nonce ? e.nonce : null,
                    number: e.number ? BigInt(e.number) : null,
                    size: e.size ? BigInt(e.size) : void 0,
                    timestamp: e.timestamp ? BigInt(e.timestamp) : void 0,
                    transactions: t,
                    totalDifficulty: e.totalDifficulty ? BigInt(e.totalDifficulty) : null
                }
            }
            t.formatBlock = o, t.defineBlock = (0, n.defineFormatter)("block", o)
        },
        55613: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.extract = void 0, t.extract = function(e, {
                format: t
            }) {
                if (!t) return {};
                let r = {};
                return function t(n) {
                    for (let i of Object.keys(n)) i in e && (r[i] = e[i]), n[i] && "object" == typeof n[i] && !Array.isArray(n[i]) && t(n[i])
                }(t(e || {})), r
            }
        },
        19705: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.formatFeeHistory = void 0, t.formatFeeHistory = function(e) {
                return {
                    baseFeePerGas: e.baseFeePerGas.map(e => BigInt(e)),
                    gasUsedRatio: e.gasUsedRatio,
                    oldestBlock: BigInt(e.oldestBlock),
                    reward: e.reward ? .map(e => e.map(e => BigInt(e)))
                }
            }
        },
        95804: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.defineFormatter = void 0, t.defineFormatter = function(e, t) {
                return ({
                    exclude: r,
                    format: n
                }) => ({
                    exclude: r,
                    format: e => {
                        let i = t(e);
                        if (r)
                            for (let e of r) delete i[e];
                        return { ...i,
                            ...n(e)
                        }
                    },
                    type: e
                })
            }
        },
        99738: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.formatLog = void 0, t.formatLog = function(e, {
                args: t,
                eventName: r
            } = {}) {
                return { ...e,
                    blockHash: e.blockHash ? e.blockHash : null,
                    blockNumber: e.blockNumber ? BigInt(e.blockNumber) : null,
                    logIndex: e.logIndex ? Number(e.logIndex) : null,
                    transactionHash: e.transactionHash ? e.transactionHash : null,
                    transactionIndex: e.transactionIndex ? Number(e.transactionIndex) : null,
                    ...r ? {
                        args: t,
                        eventName: r
                    } : {}
                }
            }
        },
        35261: (e, t, r) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.formatProof = void 0;
            let n = r(83471);
            t.formatProof = function(e) {
                return { ...e,
                    balance: e.balance ? BigInt(e.balance) : void 0,
                    nonce: e.nonce ? (0, n.hexToNumber)(e.nonce) : void 0,
                    storageProof: e.storageProof ? e.storageProof.map(e => ({ ...e,
                        value: BigInt(e.value)
                    })) : void 0
                }
            }
        },
        31616: (e, t, r) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.defineTransaction = t.formatTransaction = t.transactionType = void 0;
            let n = r(7506),
                i = r(95804);

            function o(e) {
                let r = { ...e,
                    blockHash: e.blockHash ? e.blockHash : null,
                    blockNumber: e.blockNumber ? BigInt(e.blockNumber) : null,
                    chainId: e.chainId ? (0, n.hexToNumber)(e.chainId) : void 0,
                    gas: e.gas ? BigInt(e.gas) : void 0,
                    gasPrice: e.gasPrice ? BigInt(e.gasPrice) : void 0,
                    maxFeePerGas: e.maxFeePerGas ? BigInt(e.maxFeePerGas) : void 0,
                    maxPriorityFeePerGas: e.maxPriorityFeePerGas ? BigInt(e.maxPriorityFeePerGas) : void 0,
                    nonce: e.nonce ? (0, n.hexToNumber)(e.nonce) : void 0,
                    to: e.to ? e.to : null,
                    transactionIndex: e.transactionIndex ? Number(e.transactionIndex) : null,
                    type: e.type ? t.transactionType[e.type] : void 0,
                    typeHex: e.type ? e.type : void 0,
                    value: e.value ? BigInt(e.value) : void 0,
                    v: e.v ? BigInt(e.v) : void 0
                };
                return r.yParity = (() => {
                    if (e.yParity) return Number(e.yParity);
                    if ("bigint" == typeof r.v) {
                        if (0 n === r.v || 27 n === r.v) return 0;
                        if (1 n === r.v || 28 n === r.v) return 1;
                        if (r.v >= 35 n) return r.v % 2 n === 0 n ? 1 : 0
                    }
                })(), "legacy" === r.type && (delete r.accessList, delete r.maxFeePerGas, delete r.maxPriorityFeePerGas, delete r.yParity), "eip2930" === r.type && (delete r.maxFeePerGas, delete r.maxPriorityFeePerGas), r
            }
            t.transactionType = {
                "0x0": "legacy",
                "0x1": "eip2930",
                "0x2": "eip1559"
            }, t.formatTransaction = o, t.defineTransaction = (0, i.defineFormatter)("transaction", o)
        },
        12435: (e, t, r) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.defineTransactionReceipt = t.formatTransactionReceipt = void 0;
            let n = r(7506),
                i = r(95804),
                o = r(99738),
                s = r(31616),
                a = {
                    "0x0": "reverted",
                    "0x1": "success"
                };

            function c(e) {
                return { ...e,
                    blockNumber: e.blockNumber ? BigInt(e.blockNumber) : null,
                    contractAddress: e.contractAddress ? e.contractAddress : null,
                    cumulativeGasUsed: e.cumulativeGasUsed ? BigInt(e.cumulativeGasUsed) : null,
                    effectiveGasPrice: e.effectiveGasPrice ? BigInt(e.effectiveGasPrice) : null,
                    gasUsed: e.gasUsed ? BigInt(e.gasUsed) : null,
                    logs: e.logs ? e.logs.map(e => (0, o.formatLog)(e)) : null,
                    to: e.to ? e.to : null,
                    transactionIndex: e.transactionIndex ? (0, n.hexToNumber)(e.transactionIndex) : null,
                    status: e.status ? a[e.status] : null,
                    type: e.type ? s.transactionType[e.type] || e.type : null
                }
            }
            t.formatTransactionReceipt = c, t.defineTransactionReceipt = (0, i.defineFormatter)("transactionReceipt", c)
        },
        61033: (e, t, r) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.defineTransactionRequest = t.formatTransactionRequest = t.rpcTransactionType = void 0;
            let n = r(36373),
                i = r(95804);

            function o(e) {
                return { ...e,
                    gas: void 0 !== e.gas ? (0, n.numberToHex)(e.gas) : void 0,
                    gasPrice: void 0 !== e.gasPrice ? (0, n.numberToHex)(e.gasPrice) : void 0,
                    maxFeePerGas: void 0 !== e.maxFeePerGas ? (0, n.numberToHex)(e.maxFeePerGas) : void 0,
                    maxPriorityFeePerGas: void 0 !== e.maxPriorityFeePerGas ? (0, n.numberToHex)(e.maxPriorityFeePerGas) : void 0,
                    nonce: void 0 !== e.nonce ? (0, n.numberToHex)(e.nonce) : void 0,
                    type: void 0 !== e.type ? t.rpcTransactionType[e.type] : void 0,
                    value: void 0 !== e.value ? (0, n.numberToHex)(e.value) : void 0
                }
            }
            t.rpcTransactionType = {
                legacy: "0x0",
                eip2930: "0x1",
                eip1559: "0x2"
            }, t.formatTransactionRequest = o, t.defineTransactionRequest = (0, i.defineFormatter)("transactionRequest", o)
        },
        55891: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.getAction = void 0, t.getAction = function(e, t, r) {
                return n => e[t.name || r] ? .(n) ? ? t(e, n)
            }
        },
        27002: (e, t, r) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.getEventSelector = void 0;
            let n = r(33742),
                i = r(48481),
                o = r(45112),
                s = e => (0, o.keccak256)((0, n.toBytes)(e));
            t.getEventSelector = e => s((0, i.getEventSignature)(e))
        },
        48481: (e, t, r) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.getEventSignature = void 0;
            let n = r(25791);
            t.getEventSignature = e => (0, n.getFunctionSignature)(e)
        },
        64332: (e, t, r) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.getFunctionSelector = void 0;
            let n = r(42721),
                i = r(33742),
                o = r(25791),
                s = r(45112),
                a = e => (0, s.keccak256)((0, i.toBytes)(e));
            t.getFunctionSelector = e => (0, n.slice)(a((0, o.getFunctionSignature)(e)), 0, 4)
        },
        25791: (e, t, r) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.getFunctionSignature = void 0;
            let n = r(8017),
                i = r(56996);
            t.getFunctionSignature = e => {
                let t = "string" == typeof e ? e : (0, n.formatAbiItem)(e);
                return (0, i.normalizeSignature)(t)
            }
        },
        59536: (e, t, r) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.isHash = void 0;
            let n = r(93918),
                i = r(6629);
            t.isHash = function(e) {
                return (0, n.isHex)(e) && 32 === (0, i.size)(e)
            }
        },
        45112: (e, t, r) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.keccak256 = void 0;
            let n = r(20056),
                i = r(93918),
                o = r(33742),
                s = r(36373);
            t.keccak256 = function(e, t) {
                let r = (0, n.keccak_256)((0, i.isHex)(e, {
                    strict: !1
                }) ? (0, o.toBytes)(e) : e);
                return "bytes" === (t || "hex") ? r : (0, s.toHex)(r)
            }
        },
        56996: (e, t, r) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.normalizeSignature = void 0;
            let n = r(72968);
            t.normalizeSignature = function(e) {
                let t = !0,
                    r = "",
                    i = 0,
                    o = "",
                    s = !1;
                for (let n = 0; n < e.length; n++) {
                    let a = e[n];
                    if (["(", ")", ","].includes(a) && (t = !0), "(" === a && i++, ")" === a && i--, t) {
                        if (0 === i) {
                            if (" " === a && ["event", "function", ""].includes(o)) o = "";
                            else if (o += a, ")" === a) {
                                s = !0;
                                break
                            }
                            continue
                        }
                        if (" " === a) {
                            "," !== e[n - 1] && "," !== r && ",(" !== r && (r = "", t = !1);
                            continue
                        }
                        o += a, r += a
                    }
                }
                if (!s) throw new n.BaseError("Unable to normalize signature.");
                return o
            }
        },
        23817: (e, t, r) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.ripemd160 = void 0;
            let n = r(38142),
                i = r(93918),
                o = r(33742),
                s = r(36373);
            t.ripemd160 = function(e, t) {
                let r = (0, n.ripemd160)((0, i.isHex)(e, {
                    strict: !1
                }) ? (0, o.toBytes)(e) : e);
                return "bytes" === (t || "hex") ? r : (0, s.toHex)(r)
            }
        },
        46488: (e, t, r) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.sha256 = void 0;
            let n = r(77346),
                i = r(93918),
                o = r(33742),
                s = r(36373);
            t.sha256 = function(e, t) {
                let r = (0, n.sha256)((0, i.isHex)(e, {
                    strict: !1
                }) ? (0, o.toBytes)(e) : e);
                return "bytes" === (t || "hex") ? r : (0, s.toHex)(r)
            }
        },
        83471: (e, t, r) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.concat = t.extractFunctionParts = t.extractFunctionType = t.extractFunctionParams = t.extractFunctionName = t.isAddressEqual = t.isAddress = t.getAddress = t.getCreate2Address = t.getCreateAddress = t.getContractAddress = t.publicKeyToAddress = t.parseAccount = t.formatAbiParams = t.formatAbiItem = t.formatAbiItemWithArgs = t.encodePacked = t.parseAbiParameters = t.parseAbiParameter = t.parseAbiItem = t.parseAbi = t.getAbiItem = t.encodeFunctionResult = t.encodeFunctionData = t.encodeEventTopics = t.encodeErrorResult = t.encodeDeployData = t.encodeAbiParameters = t.decodeFunctionResult = t.decodeFunctionData = t.decodeEventLog = t.decodeErrorResult = t.decodeAbiParameters = t.validateTypedData = t.stringify = t.rpc = t.getSocket = t.integerRegex = t.bytesRegex = t.arrayRegex = t.getChainContractAddress = t.extractChain = t.defineChain = t.assertCurrentChain = t.offchainLookupSignature = t.offchainLookupAbiItem = t.offchainLookup = t.ccipFetch = t.buildRequest = t.isDeterministicError = void 0, t.getEstimateGasError = t.getContractError = t.getCallError = t.getNodeError = t.containsNodeError = t.fromRlp = t.hexToString = t.hexToNumber = t.hexToBigInt = t.hexToBool = t.fromHex = t.fromBytes = t.bytesToString = t.bytesToNumber = t.bytesToBool = t.bytesToBigint = t.bytesToBigInt = t.stringToHex = t.numberToHex = t.toHex = t.bytesToHex = t.boolToHex = t.stringToBytes = t.numberToBytes = t.hexToBytes = t.toBytes = t.boolToBytes = t.toRlp = t.extract = t.formatTransactionRequest = t.defineTransactionRequest = t.defineTransactionReceipt = t.formatLog = t.transactionType = t.formatTransaction = t.defineTransaction = t.formatBlock = t.defineBlock = t.trim = t.sliceHex = t.sliceBytes = t.slice = t.size = t.padHex = t.padBytes = t.pad = t.isHex = t.isBytes = t.concatHex = t.concatBytes = void 0, t.parseGwei = t.parseEther = t.parseUnits = t.formatUnits = t.formatGwei = t.formatEther = t.serializeAccessList = t.serializeTransaction = t.prepareTransactionRequest = t.parseTransaction = t.assertTransactionLegacy = t.assertTransactionEIP2930 = t.assertTransactionEIP1559 = t.assertRequest = t.getTransactionType = t.getSerializedTransactionType = t.hashMessage = t.verifyTypedData = t.verifyMessage = t.recoverTypedDataAddress = t.recoverPublicKey = t.recoverMessageAddress = t.recoverAddress = t.hashTypedData = t.ripemd160 = t.sha256 = t.keccak256 = t.isHash = t.getFunctionSelector = t.getEventSelector = t.defineFormatter = t.getTransactionError = void 0;
            var n = r(36810);
            Object.defineProperty(t, "isDeterministicError", {
                enumerable: !0,
                get: function() {
                    return n.isDeterministicError
                }
            }), Object.defineProperty(t, "buildRequest", {
                enumerable: !0,
                get: function() {
                    return n.buildRequest
                }
            });
            var i = r(44622);
            Object.defineProperty(t, "ccipFetch", {
                enumerable: !0,
                get: function() {
                    return i.ccipFetch
                }
            }), Object.defineProperty(t, "offchainLookup", {
                enumerable: !0,
                get: function() {
                    return i.offchainLookup
                }
            }), Object.defineProperty(t, "offchainLookupAbiItem", {
                enumerable: !0,
                get: function() {
                    return i.offchainLookupAbiItem
                }
            }), Object.defineProperty(t, "offchainLookupSignature", {
                enumerable: !0,
                get: function() {
                    return i.offchainLookupSignature
                }
            });
            var o = r(19586);
            Object.defineProperty(t, "assertCurrentChain", {
                enumerable: !0,
                get: function() {
                    return o.assertCurrentChain
                }
            });
            var s = r(19165);
            Object.defineProperty(t, "defineChain", {
                enumerable: !0,
                get: function() {
                    return s.defineChain
                }
            });
            var a = r(32085);
            Object.defineProperty(t, "extractChain", {
                enumerable: !0,
                get: function() {
                    return a.extractChain
                }
            });
            var c = r(20913);
            Object.defineProperty(t, "getChainContractAddress", {
                enumerable: !0,
                get: function() {
                    return c.getChainContractAddress
                }
            });
            var u = r(23117);
            Object.defineProperty(t, "arrayRegex", {
                enumerable: !0,
                get: function() {
                    return u.arrayRegex
                }
            }), Object.defineProperty(t, "bytesRegex", {
                enumerable: !0,
                get: function() {
                    return u.bytesRegex
                }
            }), Object.defineProperty(t, "integerRegex", {
                enumerable: !0,
                get: function() {
                    return u.integerRegex
                }
            });
            var l = r(48954);
            Object.defineProperty(t, "getSocket", {
                enumerable: !0,
                get: function() {
                    return l.getSocket
                }
            }), Object.defineProperty(t, "rpc", {
                enumerable: !0,
                get: function() {
                    return l.rpc
                }
            });
            var d = r(63291);
            Object.defineProperty(t, "stringify", {
                enumerable: !0,
                get: function() {
                    return d.stringify
                }
            });
            var h = r(87054);
            Object.defineProperty(t, "validateTypedData", {
                enumerable: !0,
                get: function() {
                    return h.validateTypedData
                }
            });
            var f = r(1739);
            Object.defineProperty(t, "decodeAbiParameters", {
                enumerable: !0,
                get: function() {
                    return f.decodeAbiParameters
                }
            });
            var p = r(64487);
            Object.defineProperty(t, "decodeErrorResult", {
                enumerable: !0,
                get: function() {
                    return p.decodeErrorResult
                }
            });
            var g = r(81403);
            Object.defineProperty(t, "decodeEventLog", {
                enumerable: !0,
                get: function() {
                    return g.decodeEventLog
                }
            });
            var m = r(81622);
            Object.defineProperty(t, "decodeFunctionData", {
                enumerable: !0,
                get: function() {
                    return m.decodeFunctionData
                }
            });
            var b = r(47318);
            Object.defineProperty(t, "decodeFunctionResult", {
                enumerable: !0,
                get: function() {
                    return b.decodeFunctionResult
                }
            });
            var y = r(34544);
            Object.defineProperty(t, "encodeAbiParameters", {
                enumerable: !0,
                get: function() {
                    return y.encodeAbiParameters
                }
            });
            var v = r(46050);
            Object.defineProperty(t, "encodeDeployData", {
                enumerable: !0,
                get: function() {
                    return v.encodeDeployData
                }
            });
            var w = r(65868);
            Object.defineProperty(t, "encodeErrorResult", {
                enumerable: !0,
                get: function() {
                    return w.encodeErrorResult
                }
            });
            var E = r(15326);
            Object.defineProperty(t, "encodeEventTopics", {
                enumerable: !0,
                get: function() {
                    return E.encodeEventTopics
                }
            });
            var _ = r(92496);
            Object.defineProperty(t, "encodeFunctionData", {
                enumerable: !0,
                get: function() {
                    return _.encodeFunctionData
                }
            });
            var P = r(5724);
            Object.defineProperty(t, "encodeFunctionResult", {
                enumerable: !0,
                get: function() {
                    return P.encodeFunctionResult
                }
            });
            var x = r(57754);
            Object.defineProperty(t, "getAbiItem", {
                enumerable: !0,
                get: function() {
                    return x.getAbiItem
                }
            });
            var I = r(8017);
            Object.defineProperty(t, "parseAbi", {
                enumerable: !0,
                get: function() {
                    return I.parseAbi
                }
            }), Object.defineProperty(t, "parseAbiItem", {
                enumerable: !0,
                get: function() {
                    return I.parseAbiItem
                }
            }), Object.defineProperty(t, "parseAbiParameter", {
                enumerable: !0,
                get: function() {
                    return I.parseAbiParameter
                }
            }), Object.defineProperty(t, "parseAbiParameters", {
                enumerable: !0,
                get: function() {
                    return I.parseAbiParameters
                }
            });
            var O = r(26789);
            Object.defineProperty(t, "encodePacked", {
                enumerable: !0,
                get: function() {
                    return O.encodePacked
                }
            });
            var T = r(54243);
            Object.defineProperty(t, "formatAbiItemWithArgs", {
                enumerable: !0,
                get: function() {
                    return T.formatAbiItemWithArgs
                }
            });
            var A = r(73735);
            Object.defineProperty(t, "formatAbiItem", {
                enumerable: !0,
                get: function() {
                    return A.formatAbiItem
                }
            }), Object.defineProperty(t, "formatAbiParams", {
                enumerable: !0,
                get: function() {
                    return A.formatAbiParams
                }
            });
            var S = r(36401);
            Object.defineProperty(t, "parseAccount", {
                enumerable: !0,
                get: function() {
                    return S.parseAccount
                }
            });
            var j = r(86246);
            Object.defineProperty(t, "publicKeyToAddress", {
                enumerable: !0,
                get: function() {
                    return j.publicKeyToAddress
                }
            });
            var R = r(11605);
            Object.defineProperty(t, "getContractAddress", {
                enumerable: !0,
                get: function() {
                    return R.getContractAddress
                }
            }), Object.defineProperty(t, "getCreateAddress", {
                enumerable: !0,
                get: function() {
                    return R.getCreateAddress
                }
            }), Object.defineProperty(t, "getCreate2Address", {
                enumerable: !0,
                get: function() {
                    return R.getCreate2Address
                }
            });
            var C = r(98067);
            Object.defineProperty(t, "getAddress", {
                enumerable: !0,
                get: function() {
                    return C.getAddress
                }
            });
            var N = r(54570);
            Object.defineProperty(t, "isAddress", {
                enumerable: !0,
                get: function() {
                    return N.isAddress
                }
            });
            var M = r(55493);
            Object.defineProperty(t, "isAddressEqual", {
                enumerable: !0,
                get: function() {
                    return M.isAddressEqual
                }
            });
            var B = r(89551);
            Object.defineProperty(t, "extractFunctionName", {
                enumerable: !0,
                get: function() {
                    return B.extractFunctionName
                }
            }), Object.defineProperty(t, "extractFunctionParams", {
                enumerable: !0,
                get: function() {
                    return B.extractFunctionParams
                }
            }), Object.defineProperty(t, "extractFunctionType", {
                enumerable: !0,
                get: function() {
                    return B.extractFunctionType
                }
            }), Object.defineProperty(t, "extractFunctionParts", {
                enumerable: !0,
                get: function() {
                    return B.extractFunctionParts
                }
            });
            var k = r(79763);
            Object.defineProperty(t, "concat", {
                enumerable: !0,
                get: function() {
                    return k.concat
                }
            }), Object.defineProperty(t, "concatBytes", {
                enumerable: !0,
                get: function() {
                    return k.concatBytes
                }
            }), Object.defineProperty(t, "concatHex", {
                enumerable: !0,
                get: function() {
                    return k.concatHex
                }
            });
            var D = r(74479);
            Object.defineProperty(t, "isBytes", {
                enumerable: !0,
                get: function() {
                    return D.isBytes
                }
            });
            var U = r(93918);
            Object.defineProperty(t, "isHex", {
                enumerable: !0,
                get: function() {
                    return U.isHex
                }
            });
            var L = r(85349);
            Object.defineProperty(t, "pad", {
                enumerable: !0,
                get: function() {
                    return L.pad
                }
            }), Object.defineProperty(t, "padBytes", {
                enumerable: !0,
                get: function() {
                    return L.padBytes
                }
            }), Object.defineProperty(t, "padHex", {
                enumerable: !0,
                get: function() {
                    return L.padHex
                }
            });
            var F = r(6629);
            Object.defineProperty(t, "size", {
                enumerable: !0,
                get: function() {
                    return F.size
                }
            });
            var q = r(42721);
            Object.defineProperty(t, "slice", {
                enumerable: !0,
                get: function() {
                    return q.slice
                }
            }), Object.defineProperty(t, "sliceBytes", {
                enumerable: !0,
                get: function() {
                    return q.sliceBytes
                }
            }), Object.defineProperty(t, "sliceHex", {
                enumerable: !0,
                get: function() {
                    return q.sliceHex
                }
            });
            var H = r(84392);
            Object.defineProperty(t, "trim", {
                enumerable: !0,
                get: function() {
                    return H.trim
                }
            });
            var $ = r(1812);
            Object.defineProperty(t, "defineBlock", {
                enumerable: !0,
                get: function() {
                    return $.defineBlock
                }
            }), Object.defineProperty(t, "formatBlock", {
                enumerable: !0,
                get: function() {
                    return $.formatBlock
                }
            });
            var z = r(31616);
            Object.defineProperty(t, "defineTransaction", {
                enumerable: !0,
                get: function() {
                    return z.defineTransaction
                }
            }), Object.defineProperty(t, "formatTransaction", {
                enumerable: !0,
                get: function() {
                    return z.formatTransaction
                }
            }), Object.defineProperty(t, "transactionType", {
                enumerable: !0,
                get: function() {
                    return z.transactionType
                }
            });
            var V = r(99738);
            Object.defineProperty(t, "formatLog", {
                enumerable: !0,
                get: function() {
                    return V.formatLog
                }
            });
            var G = r(12435);
            Object.defineProperty(t, "defineTransactionReceipt", {
                enumerable: !0,
                get: function() {
                    return G.defineTransactionReceipt
                }
            });
            var W = r(61033);
            Object.defineProperty(t, "defineTransactionRequest", {
                enumerable: !0,
                get: function() {
                    return W.defineTransactionRequest
                }
            }), Object.defineProperty(t, "formatTransactionRequest", {
                enumerable: !0,
                get: function() {
                    return W.formatTransactionRequest
                }
            });
            var K = r(55613);
            Object.defineProperty(t, "extract", {
                enumerable: !0,
                get: function() {
                    return K.extract
                }
            });
            var J = r(50366);
            Object.defineProperty(t, "toRlp", {
                enumerable: !0,
                get: function() {
                    return J.toRlp
                }
            });
            var Y = r(33742);
            Object.defineProperty(t, "boolToBytes", {
                enumerable: !0,
                get: function() {
                    return Y.boolToBytes
                }
            }), Object.defineProperty(t, "toBytes", {
                enumerable: !0,
                get: function() {
                    return Y.toBytes
                }
            }), Object.defineProperty(t, "hexToBytes", {
                enumerable: !0,
                get: function() {
                    return Y.hexToBytes
                }
            }), Object.defineProperty(t, "numberToBytes", {
                enumerable: !0,
                get: function() {
                    return Y.numberToBytes
                }
            }), Object.defineProperty(t, "stringToBytes", {
                enumerable: !0,
                get: function() {
                    return Y.stringToBytes
                }
            });
            var Z = r(36373);
            Object.defineProperty(t, "boolToHex", {
                enumerable: !0,
                get: function() {
                    return Z.boolToHex
                }
            }), Object.defineProperty(t, "bytesToHex", {
                enumerable: !0,
                get: function() {
                    return Z.bytesToHex
                }
            }), Object.defineProperty(t, "toHex", {
                enumerable: !0,
                get: function() {
                    return Z.toHex
                }
            }), Object.defineProperty(t, "numberToHex", {
                enumerable: !0,
                get: function() {
                    return Z.numberToHex
                }
            }), Object.defineProperty(t, "stringToHex", {
                enumerable: !0,
                get: function() {
                    return Z.stringToHex
                }
            });
            var Q = r(9045);
            Object.defineProperty(t, "bytesToBigInt", {
                enumerable: !0,
                get: function() {
                    return Q.bytesToBigInt
                }
            }), Object.defineProperty(t, "bytesToBigint", {
                enumerable: !0,
                get: function() {
                    return Q.bytesToBigInt
                }
            }), Object.defineProperty(t, "bytesToBool", {
                enumerable: !0,
                get: function() {
                    return Q.bytesToBool
                }
            }), Object.defineProperty(t, "bytesToNumber", {
                enumerable: !0,
                get: function() {
                    return Q.bytesToNumber
                }
            }), Object.defineProperty(t, "bytesToString", {
                enumerable: !0,
                get: function() {
                    return Q.bytesToString
                }
            }), Object.defineProperty(t, "fromBytes", {
                enumerable: !0,
                get: function() {
                    return Q.fromBytes
                }
            });
            var X = r(7506);
            Object.defineProperty(t, "fromHex", {
                enumerable: !0,
                get: function() {
                    return X.fromHex
                }
            }), Object.defineProperty(t, "hexToBool", {
                enumerable: !0,
                get: function() {
                    return X.hexToBool
                }
            }), Object.defineProperty(t, "hexToBigInt", {
                enumerable: !0,
                get: function() {
                    return X.hexToBigInt
                }
            }), Object.defineProperty(t, "hexToNumber", {
                enumerable: !0,
                get: function() {
                    return X.hexToNumber
                }
            }), Object.defineProperty(t, "hexToString", {
                enumerable: !0,
                get: function() {
                    return X.hexToString
                }
            });
            var ee = r(2290);
            Object.defineProperty(t, "fromRlp", {
                enumerable: !0,
                get: function() {
                    return ee.fromRlp
                }
            });
            var et = r(65476);
            Object.defineProperty(t, "containsNodeError", {
                enumerable: !0,
                get: function() {
                    return et.containsNodeError
                }
            }), Object.defineProperty(t, "getNodeError", {
                enumerable: !0,
                get: function() {
                    return et.getNodeError
                }
            });
            var er = r(62767);
            Object.defineProperty(t, "getCallError", {
                enumerable: !0,
                get: function() {
                    return er.getCallError
                }
            });
            var en = r(19261);
            Object.defineProperty(t, "getContractError", {
                enumerable: !0,
                get: function() {
                    return en.getContractError
                }
            });
            var ei = r(41007);
            Object.defineProperty(t, "getEstimateGasError", {
                enumerable: !0,
                get: function() {
                    return ei.getEstimateGasError
                }
            });
            var eo = r(93424);
            Object.defineProperty(t, "getTransactionError", {
                enumerable: !0,
                get: function() {
                    return eo.getTransactionError
                }
            });
            var es = r(95804);
            Object.defineProperty(t, "defineFormatter", {
                enumerable: !0,
                get: function() {
                    return es.defineFormatter
                }
            });
            var ea = r(27002);
            Object.defineProperty(t, "getEventSelector", {
                enumerable: !0,
                get: function() {
                    return ea.getEventSelector
                }
            });
            var ec = r(64332);
            Object.defineProperty(t, "getFunctionSelector", {
                enumerable: !0,
                get: function() {
                    return ec.getFunctionSelector
                }
            });
            var eu = r(59536);
            Object.defineProperty(t, "isHash", {
                enumerable: !0,
                get: function() {
                    return eu.isHash
                }
            });
            var el = r(45112);
            Object.defineProperty(t, "keccak256", {
                enumerable: !0,
                get: function() {
                    return el.keccak256
                }
            });
            var ed = r(46488);
            Object.defineProperty(t, "sha256", {
                enumerable: !0,
                get: function() {
                    return ed.sha256
                }
            });
            var eh = r(23817);
            Object.defineProperty(t, "ripemd160", {
                enumerable: !0,
                get: function() {
                    return eh.ripemd160
                }
            });
            var ef = r(67419);
            Object.defineProperty(t, "hashTypedData", {
                enumerable: !0,
                get: function() {
                    return ef.hashTypedData
                }
            });
            var ep = r(40798);
            Object.defineProperty(t, "recoverAddress", {
                enumerable: !0,
                get: function() {
                    return ep.recoverAddress
                }
            });
            var eg = r(28843);
            Object.defineProperty(t, "recoverMessageAddress", {
                enumerable: !0,
                get: function() {
                    return eg.recoverMessageAddress
                }
            });
            var em = r(19159);
            Object.defineProperty(t, "recoverPublicKey", {
                enumerable: !0,
                get: function() {
                    return em.recoverPublicKey
                }
            });
            var eb = r(70339);
            Object.defineProperty(t, "recoverTypedDataAddress", {
                enumerable: !0,
                get: function() {
                    return eb.recoverTypedDataAddress
                }
            });
            var ey = r(48255);
            Object.defineProperty(t, "verifyMessage", {
                enumerable: !0,
                get: function() {
                    return ey.verifyMessage
                }
            });
            var ev = r(6747);
            Object.defineProperty(t, "verifyTypedData", {
                enumerable: !0,
                get: function() {
                    return ev.verifyTypedData
                }
            });
            var ew = r(54066);
            Object.defineProperty(t, "hashMessage", {
                enumerable: !0,
                get: function() {
                    return ew.hashMessage
                }
            });
            var eE = r(17822);
            Object.defineProperty(t, "getSerializedTransactionType", {
                enumerable: !0,
                get: function() {
                    return eE.getSerializedTransactionType
                }
            });
            var e_ = r(50421);
            Object.defineProperty(t, "getTransactionType", {
                enumerable: !0,
                get: function() {
                    return e_.getTransactionType
                }
            });
            var eP = r(82897);
            Object.defineProperty(t, "assertRequest", {
                enumerable: !0,
                get: function() {
                    return eP.assertRequest
                }
            });
            var ex = r(7617);
            Object.defineProperty(t, "assertTransactionEIP1559", {
                enumerable: !0,
                get: function() {
                    return ex.assertTransactionEIP1559
                }
            }), Object.defineProperty(t, "assertTransactionEIP2930", {
                enumerable: !0,
                get: function() {
                    return ex.assertTransactionEIP2930
                }
            }), Object.defineProperty(t, "assertTransactionLegacy", {
                enumerable: !0,
                get: function() {
                    return ex.assertTransactionLegacy
                }
            });
            var eI = r(86214);
            Object.defineProperty(t, "parseTransaction", {
                enumerable: !0,
                get: function() {
                    return eI.parseTransaction
                }
            });
            var eO = r(52969);
            Object.defineProperty(t, "prepareTransactionRequest", {
                enumerable: !0,
                get: function() {
                    return eO.prepareTransactionRequest
                }
            });
            var eT = r(20820);
            Object.defineProperty(t, "serializeTransaction", {
                enumerable: !0,
                get: function() {
                    return eT.serializeTransaction
                }
            });
            var eA = r(49645);
            Object.defineProperty(t, "serializeAccessList", {
                enumerable: !0,
                get: function() {
                    return eA.serializeAccessList
                }
            });
            var eS = r(7838);
            Object.defineProperty(t, "formatEther", {
                enumerable: !0,
                get: function() {
                    return eS.formatEther
                }
            });
            var ej = r(74129);
            Object.defineProperty(t, "formatGwei", {
                enumerable: !0,
                get: function() {
                    return ej.formatGwei
                }
            });
            var eR = r(43385);
            Object.defineProperty(t, "formatUnits", {
                enumerable: !0,
                get: function() {
                    return eR.formatUnits
                }
            });
            var eC = r(12584);
            Object.defineProperty(t, "parseUnits", {
                enumerable: !0,
                get: function() {
                    return eC.parseUnits
                }
            });
            var eN = r(32994);
            Object.defineProperty(t, "parseEther", {
                enumerable: !0,
                get: function() {
                    return eN.parseEther
                }
            });
            var eM = r(59706);
            Object.defineProperty(t, "parseGwei", {
                enumerable: !0,
                get: function() {
                    return eM.parseGwei
                }
            })
        },
        17531: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.observe = t.cleanupCache = t.listenersCache = void 0, t.listenersCache = new Map, t.cleanupCache = new Map;
            let r = 0;
            t.observe = function(e, n, i) {
                let o = ++r,
                    s = () => t.listenersCache.get(e) || [],
                    a = () => {
                        let r = s();
                        t.listenersCache.set(e, r.filter(e => e.id !== o))
                    },
                    c = () => {
                        let r = t.cleanupCache.get(e);
                        1 === s().length && r && r(), a()
                    },
                    u = s();
                if (t.listenersCache.set(e, [...u, {
                        id: o,
                        fns: n
                    }]), u && u.length > 0) return c;
                let l = {};
                for (let e in n) l[e] = (...t) => {
                    let r = s();
                    if (0 !== r.length)
                        for (let n of r) n.fns[e] ? .(...t)
                };
                let d = i(l);
                return "function" == typeof d && t.cleanupCache.set(e, d), c
            }
        },
        69595: (e, t, r) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.poll = void 0;
            let n = r(72142);
            t.poll = function(e, {
                emitOnBegin: t,
                initialWaitTime: r,
                interval: i
            }) {
                let o = !0,
                    s = () => o = !1;
                return (async () => {
                    let a;
                    t && (a = await e({
                        unpoll: s
                    }));
                    let c = await r ? .(a) ? ? i;
                    await (0, n.wait)(c);
                    let u = async () => {
                        o && (await e({
                            unpoll: s
                        }), await (0, n.wait)(i), u())
                    };
                    u()
                })(), s
            }
        },
        36687: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.createBatchScheduler = void 0;
            let r = new Map;
            t.createBatchScheduler = function({
                fn: e,
                id: t,
                shouldSplitBatch: n,
                wait: i = 0,
                sort: o
            }) {
                let s = async () => {
                        let t = u();
                        a();
                        let r = t.map(({
                            args: e
                        }) => e);
                        0 !== r.length && e(r).then(e => {
                            o && Array.isArray(e) && e.sort(o);
                            for (let r = 0; r < t.length; r++) {
                                let {
                                    pendingPromise: n
                                } = t[r];
                                n.resolve ? .([e[r], e])
                            }
                        }).catch(e => {
                            for (let r = 0; r < t.length; r++) {
                                let {
                                    pendingPromise: n
                                } = t[r];
                                n.reject ? .(e)
                            }
                        })
                    },
                    a = () => r.delete(t),
                    c = () => u().map(({
                        args: e
                    }) => e),
                    u = () => r.get(t) || [],
                    l = e => r.set(t, [...u(), e]);
                return {
                    flush: a,
                    async schedule(e) {
                        let t = {},
                            r = new Promise((e, r) => {
                                t.resolve = e, t.reject = r
                            });
                        return (n ? .([...c(), e]) && s(), u().length > 0) ? l({
                            args: e,
                            pendingPromise: t
                        }) : (l({
                            args: e,
                            pendingPromise: t
                        }), setTimeout(s, i)), r
                    }
                }
            }
        },
        66573: (e, t) => {
            "use strict";

            function r(e) {
                let r = (e, t) => ({
                        clear: () => t.delete(e),
                        get: () => t.get(e),
                        set: r => t.set(e, r)
                    }),
                    n = r(e, t.promiseCache),
                    i = r(e, t.responseCache);
                return {
                    clear: () => {
                        n.clear(), i.clear()
                    },
                    promise: n,
                    response: i
                }
            }
            async function n(e, {
                cacheKey: t,
                cacheTime: n = 1 / 0
            }) {
                let i = r(t),
                    o = i.response.get();
                if (o && n > 0 && new Date().getTime() - o.created.getTime() < n) return o.data;
                let s = i.promise.get();
                s || (s = e(), i.promise.set(s));
                try {
                    let e = await s;
                    return i.response.set({
                        created: new Date,
                        data: e
                    }), e
                } finally {
                    i.promise.clear()
                }
            }
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.withCache = t.getCache = t.responseCache = t.promiseCache = void 0, t.promiseCache = new Map, t.responseCache = new Map, t.getCache = r, t.withCache = n
        },
        78967: (e, t, r) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.withRetry = void 0;
            let n = r(72142);
            t.withRetry = function(e, {
                delay: t = 100,
                retryCount: r = 2,
                shouldRetry: i = () => !0
            } = {}) {
                return new Promise((o, s) => {
                    let a = async ({
                        count: c = 0
                    } = {}) => {
                        let u = async ({
                            error: e
                        }) => {
                            let r = "function" == typeof t ? t({
                                count: c,
                                error: e
                            }) : t;
                            r && await (0, n.wait)(r), a({
                                count: c + 1
                            })
                        };
                        try {
                            let t = await e();
                            o(t)
                        } catch (e) {
                            if (c < r && await i({
                                    count: c,
                                    error: e
                                })) return u({
                                error: e
                            });
                            s(e)
                        }
                    };
                    a()
                })
            }
        },
        37069: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.withTimeout = void 0, t.withTimeout = function(e, {
                errorInstance: t = Error("timed out"),
                timeout: r,
                signal: n
            }) {
                return new Promise((i, o) => {
                    (async () => {
                        let s;
                        try {
                            let a = new AbortController;
                            r > 0 && (s = setTimeout(() => {
                                n ? a.abort() : o(t)
                            }, r)), i(await e({
                                signal: a ? .signal
                            }))
                        } catch (e) {
                            "AbortError" === e.name && o(t), o(e)
                        } finally {
                            clearTimeout(s)
                        }
                    })()
                })
            }
        },
        23117: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.integerRegex = t.bytesRegex = t.arrayRegex = void 0, t.arrayRegex = /^(.*)\[([0-9]*)\]$/, t.bytesRegex = /^bytes([1-9]|1[0-9]|2[0-9]|3[0-2])?$/, t.integerRegex = /^(u?int)(8|16|24|32|40|48|56|64|72|80|88|96|104|112|120|128|136|144|152|160|168|176|184|192|200|208|216|224|232|240|248|256)?$/
        },
        48954: (e, t, r) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.rpc = t.getSocket = t.socketsCache = void 0;
            let n = r(8666),
                i = r(24187),
                o = r(36687),
                s = r(37069),
                a = r(63291),
                c = 0;
            async function u(e, {
                body: t,
                fetchOptions: r = {},
                timeout: n = 1e4
            }) {
                let {
                    headers: o,
                    method: u,
                    signal: l
                } = r;
                try {
                    let d;
                    let h = await (0, s.withTimeout)(async ({
                        signal: i
                    }) => await fetch(e, { ...r,
                        body: Array.isArray(t) ? (0, a.stringify)(t.map(e => ({
                            jsonrpc: "2.0",
                            id: e.id ? ? c++,
                            ...e
                        }))) : (0, a.stringify)({
                            jsonrpc: "2.0",
                            id: t.id ? ? c++,
                            ...t
                        }),
                        headers: { ...o,
                            "Content-Type": "application/json"
                        },
                        method: u || "POST",
                        signal: l || (n > 0 ? i : void 0)
                    }), {
                        errorInstance: new i.TimeoutError({
                            body: t,
                            url: e
                        }),
                        timeout: n,
                        signal: !0
                    });
                    if (d = h.headers.get("Content-Type") ? .startsWith("application/json") ? await h.json() : await h.text(), !h.ok) throw new i.HttpRequestError({
                        body: t,
                        details: (0, a.stringify)(d.error) || h.statusText,
                        headers: h.headers,
                        status: h.status,
                        url: e
                    });
                    return d
                } catch (r) {
                    if (r instanceof i.HttpRequestError || r instanceof i.TimeoutError) throw r;
                    throw new i.HttpRequestError({
                        body: t,
                        details: r.message,
                        url: e
                    })
                }
            }
            async function l(e) {
                let r = t.socketsCache.get(e);
                if (r) return r;
                let {
                    schedule: i
                } = (0, o.createBatchScheduler)({
                    id: e,
                    fn: async () => {
                        let i = new n.WebSocket(e),
                            o = new Map,
                            s = new Map,
                            a = ({
                                data: e
                            }) => {
                                let t = JSON.parse(e),
                                    r = "eth_subscription" === t.method,
                                    n = r ? t.params.subscription : t.id,
                                    i = r ? s : o,
                                    a = i.get(n);
                                a && a({
                                    data: e
                                }), r || i.delete(n)
                            },
                            c = () => {
                                t.socketsCache.delete(e), i.removeEventListener("close", c), i.removeEventListener("message", a)
                            };
                        return i.addEventListener("close", c), i.addEventListener("message", a), i.readyState === n.WebSocket.CONNECTING && await new Promise((e, t) => {
                            i && (i.onopen = e, i.onerror = t)
                        }), r = Object.assign(i, {
                            requests: o,
                            subscriptions: s
                        }), t.socketsCache.set(e, r), [r]
                    }
                }), [s, [a]] = await i();
                return a
            }
            async function d(e, {
                body: r,
                timeout: n = 1e4
            }) {
                return (0, s.withTimeout)(() => new Promise(n => t.rpc.webSocket(e, {
                    body: r,
                    onResponse: n
                })), {
                    errorInstance: new i.TimeoutError({
                        body: r,
                        url: e.url
                    }),
                    timeout: n
                })
            }
            t.socketsCache = new Map, t.getSocket = l, t.rpc = {
                http: u,
                webSocket: function(e, {
                    body: t,
                    onResponse: r
                }) {
                    if (e.readyState === e.CLOSED || e.readyState === e.CLOSING) throw new i.WebSocketRequestError({
                        body: t,
                        url: e.url,
                        details: "Socket is closed."
                    });
                    let n = c++,
                        o = ({
                            data: i
                        }) => {
                            let s = JSON.parse(i);
                            ("number" != typeof s.id || n === s.id) && (r ? .(s), "eth_subscribe" === t.method && "string" == typeof s.result && e.subscriptions.set(s.result, o), "eth_unsubscribe" === t.method && e.subscriptions.delete(t.params ? .[0]))
                        };
                    return e.requests.set(n, o), e.send(JSON.stringify({
                        jsonrpc: "2.0",
                        ...t,
                        id: n
                    })), e
                },
                webSocketAsync: d
            }
        },
        56520: (e, t, r) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.compactSignatureToHex = void 0;
            let n = r(41483),
                i = r(7506);
            t.compactSignatureToHex = function({
                r: e,
                yParityAndS: t
            }) {
                return `0x${new n.secp256k1.Signature((0,i.hexToBigInt)(e),(0,i.hexToBigInt)(t)).toCompactHex()}`
            }
        },
        49364: (e, t, r) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.compactSignatureToSignature = void 0;
            let n = r(33742),
                i = r(36373);
            t.compactSignatureToSignature = function({
                r: e,
                yParityAndS: t
            }) {
                let r = (0, n.hexToBytes)(t),
                    o = 128 & r[0] ? 28 n : 27 n;
                return 28 n === o && (r[0] &= 127), {
                    r: e,
                    s: (0, i.bytesToHex)(r),
                    v: o
                }
            }
        },
        54066: (e, t, r) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.hashMessage = void 0;
            let n = r(88759),
                i = r(79763),
                o = r(33742),
                s = r(45112);
            t.hashMessage = function(e, t) {
                let r = "string" == typeof e ? (0, o.stringToBytes)(e) : e.raw instanceof Uint8Array ? e.raw : (0, o.toBytes)(e.raw),
                    a = (0, o.stringToBytes)(`${n.presignMessagePrefix}${r.length}`);
                return (0, s.keccak256)((0, i.concat)([a, r]), t)
            }
        },
        67419: (e, t, r) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.hashDomain = t.hashTypedData = void 0;
            let n = r(34544),
                i = r(79763),
                o = r(36373),
                s = r(45112),
                a = r(87054);

            function c({
                domain: e,
                types: t
            }) {
                return u({
                    data: e,
                    primaryType: "EIP712Domain",
                    types: t
                })
            }

            function u({
                data: e,
                primaryType: t,
                types: r
            }) {
                let i = function e({
                    data: t,
                    primaryType: r,
                    types: i
                }) {
                    let a = [{
                            type: "bytes32"
                        }],
                        c = [function({
                            primaryType: e,
                            types: t
                        }) {
                            let r = (0, o.toHex)(function({
                                primaryType: e,
                                types: t
                            }) {
                                let r = "",
                                    n = function e({
                                        primaryType: t,
                                        types: r
                                    }, n = new Set) {
                                        let i = t.match(/^\w*/u),
                                            o = i ? .[0];
                                        if (n.has(o) || void 0 === r[o]) return n;
                                        for (let t of (n.add(o), r[o])) e({
                                            primaryType: t.type,
                                            types: r
                                        }, n);
                                        return n
                                    }({
                                        primaryType: e,
                                        types: t
                                    });
                                for (let i of (n.delete(e), [e, ...Array.from(n).sort()])) r += `${i}(${t[i].map(({name:e,type:t})=>`
                                $ {
                                    t
                                }
                                $ {
                                    e
                                }
                                `).join(",")})`;
                                return r
                            }({
                                primaryType: e,
                                types: t
                            }));
                            return (0, s.keccak256)(r)
                        }({
                            primaryType: r,
                            types: i
                        })];
                    for (let u of i[r]) {
                        let [r, l] = function t({
                            types: r,
                            name: i,
                            type: a,
                            value: c
                        }) {
                            if (void 0 !== r[a]) return [{
                                type: "bytes32"
                            }, (0, s.keccak256)(e({
                                data: c,
                                primaryType: a,
                                types: r
                            }))];
                            if ("bytes" === a) {
                                let e = c.length % 2 ? "0" : "";
                                return c = `0x${e+c.slice(2)}`, [{
                                    type: "bytes32"
                                }, (0, s.keccak256)(c)]
                            }
                            if ("string" === a) return [{
                                type: "bytes32"
                            }, (0, s.keccak256)((0, o.toHex)(c))];
                            if (a.lastIndexOf("]") === a.length - 1) {
                                let e = a.slice(0, a.lastIndexOf("[")),
                                    o = c.map(n => t({
                                        name: i,
                                        type: e,
                                        types: r,
                                        value: n
                                    }));
                                return [{
                                    type: "bytes32"
                                }, (0, s.keccak256)((0, n.encodeAbiParameters)(o.map(([e]) => e), o.map(([, e]) => e)))]
                            }
                            return [{
                                type: a
                            }, c]
                        }({
                            types: i,
                            name: u.name,
                            type: u.type,
                            value: t[u.name]
                        });
                        a.push(r), c.push(l)
                    }
                    return (0, n.encodeAbiParameters)(a, c)
                }({
                    data: e,
                    primaryType: t,
                    types: r
                });
                return (0, s.keccak256)(i)
            }
            t.hashTypedData = function({
                domain: e,
                message: t,
                primaryType: r,
                types: n
            }) {
                let o = void 0 === e ? {} : e,
                    l = {
                        EIP712Domain: (0, a.getTypesForEIP712Domain)({
                            domain: o
                        }),
                        ...n
                    };
                (0, a.validateTypedData)({
                    domain: o,
                    message: t,
                    primaryType: r,
                    types: l
                });
                let d = ["0x1901"];
                return o && d.push(c({
                    domain: o,
                    types: l
                })), "EIP712Domain" !== r && d.push(u({
                    data: t,
                    primaryType: r,
                    types: l
                })), (0, s.keccak256)((0, i.concat)(d))
            }, t.hashDomain = c
        },
        60478: (e, t, r) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.hexToCompactSignature = void 0;
            let n = r(41483),
                i = r(36373);
            t.hexToCompactSignature = function(e) {
                let {
                    r: t,
                    s: r
                } = n.secp256k1.Signature.fromCompact(e.slice(2, 130));
                return {
                    r: (0, i.numberToHex)(t, {
                        size: 32
                    }),
                    yParityAndS: (0, i.numberToHex)(r, {
                        size: 32
                    })
                }
            }
        },
        67172: (e, t, r) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.hexToSignature = void 0;
            let n = r(41483),
                i = r(36373);
            t.hexToSignature = function(e) {
                let {
                    r: t,
                    s: r
                } = n.secp256k1.Signature.fromCompact(e.slice(2, 130)), o = BigInt(`0x${e.slice(130)}`);
                return {
                    r: (0, i.numberToHex)(t, {
                        size: 32
                    }),
                    s: (0, i.numberToHex)(r, {
                        size: 32
                    }),
                    v: o
                }
            }
        },
        40798: (e, t, r) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.recoverAddress = void 0;
            let n = r(86246),
                i = r(19159);
            async function o({
                hash: e,
                signature: t
            }) {
                return (0, n.publicKeyToAddress)(await (0, i.recoverPublicKey)({
                    hash: e,
                    signature: t
                }))
            }
            t.recoverAddress = o
        },
        28843: (e, t, r) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.recoverMessageAddress = void 0;
            let n = r(54066),
                i = r(40798);
            async function o({
                message: e,
                signature: t
            }) {
                return (0, i.recoverAddress)({
                    hash: (0, n.hashMessage)(e),
                    signature: t
                })
            }
            t.recoverMessageAddress = o
        },
        19159: (e, t, r) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.recoverPublicKey = void 0;
            let n = r(93918),
                i = r(7506),
                o = r(36373);
            async function s({
                hash: e,
                signature: t
            }) {
                let s = (0, n.isHex)(t) ? t : (0, o.toHex)(t),
                    a = (0, n.isHex)(e) ? e : (0, o.toHex)(e),
                    c = (0, i.hexToNumber)(`0x${s.slice(130)}`);
                (0 === c || 1 === c) && (c += 27);
                let {
                    secp256k1: u
                } = await Promise.resolve().then(() => r(41483)), l = u.Signature.fromCompact(s.substring(2, 130)).addRecoveryBit(c - 27).recoverPublicKey(a.substring(2)).toHex(!1);
                return `0x${l}`
            }
            t.recoverPublicKey = s
        },
        70339: (e, t, r) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.recoverTypedDataAddress = void 0;
            let n = r(67419),
                i = r(40798);
            async function o({
                domain: e,
                message: t,
                primaryType: r,
                signature: o,
                types: s
            }) {
                return (0, i.recoverAddress)({
                    hash: (0, n.hashTypedData)({
                        domain: e,
                        message: t,
                        primaryType: r,
                        types: s
                    }),
                    signature: o
                })
            }
            t.recoverTypedDataAddress = o
        },
        10381: (e, t, r) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.signatureToCompactSignature = void 0;
            let n = r(83471);
            t.signatureToCompactSignature = function(e) {
                let {
                    r: t,
                    s: r,
                    v: i
                } = e, o = r;
                if (1 n === i - 27 n) {
                    let e = (0, n.hexToBytes)(r);
                    e[0] |= 128, o = (0, n.bytesToHex)(e)
                }
                return {
                    r: t,
                    yParityAndS: o
                }
            }
        },
        13084: (e, t, r) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.signatureToHex = void 0;
            let n = r(41483),
                i = r(7506),
                o = r(36373);
            t.signatureToHex = function({
                r: e,
                s: t,
                v: r
            }) {
                return `0x${new n.secp256k1.Signature((0,i.hexToBigInt)(e),(0,i.hexToBigInt)(t)).toCompactHex()}${(0,o.toHex)(r).slice(2)}`
            }
        },
        48255: (e, t, r) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.verifyMessage = void 0;
            let n = r(98067),
                i = r(55493),
                o = r(28843);
            async function s({
                address: e,
                message: t,
                signature: r
            }) {
                return (0, i.isAddressEqual)((0, n.getAddress)(e), await (0, o.recoverMessageAddress)({
                    message: t,
                    signature: r
                }))
            }
            t.verifyMessage = s
        },
        6747: (e, t, r) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.verifyTypedData = void 0;
            let n = r(98067),
                i = r(55493),
                o = r(70339);
            async function s({
                address: e,
                domain: t,
                message: r,
                primaryType: s,
                signature: a,
                types: c
            }) {
                return (0, i.isAddressEqual)((0, n.getAddress)(e), await (0, o.recoverTypedDataAddress)({
                    domain: t,
                    message: r,
                    primaryType: s,
                    signature: a,
                    types: c
                }))
            }
            t.verifyTypedData = s
        },
        63291: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.stringify = void 0, t.stringify = (e, t, r) => JSON.stringify(e, (e, r) => {
                let n = "bigint" == typeof r ? r.toString() : r;
                return "function" == typeof t ? t(e, n) : n
            }, r)
        },
        82897: (e, t, r) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.assertRequest = void 0;
            let n = r(36401),
                i = r(13411),
                o = r(69110),
                s = r(99449),
                a = r(54570);
            t.assertRequest = function(e) {
                let {
                    account: t,
                    gasPrice: r,
                    maxFeePerGas: c,
                    maxPriorityFeePerGas: u,
                    to: l
                } = e, d = t ? (0, n.parseAccount)(t) : void 0;
                if (d && !(0, a.isAddress)(d.address)) throw new i.InvalidAddressError({
                    address: d.address
                });
                if (l && !(0, a.isAddress)(l)) throw new i.InvalidAddressError({
                    address: l
                });
                if (void 0 !== r && (void 0 !== c || void 0 !== u)) throw new s.FeeConflictError;
                if (c && c > 2 n ** 256 n - 1 n) throw new o.FeeCapTooHighError({
                    maxFeePerGas: c
                });
                if (u && c && u > c) throw new o.TipAboveFeeCapError({
                    maxFeePerGas: c,
                    maxPriorityFeePerGas: u
                })
            }
        },
        7617: (e, t, r) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.assertTransactionLegacy = t.assertTransactionEIP2930 = t.assertTransactionEIP1559 = void 0;
            let n = r(13411),
                i = r(72968),
                o = r(1586),
                s = r(69110),
                a = r(54570);
            t.assertTransactionEIP1559 = function(e) {
                let {
                    chainId: t,
                    maxPriorityFeePerGas: r,
                    gasPrice: c,
                    maxFeePerGas: u,
                    to: l
                } = e;
                if (t <= 0) throw new o.InvalidChainIdError({
                    chainId: t
                });
                if (l && !(0, a.isAddress)(l)) throw new n.InvalidAddressError({
                    address: l
                });
                if (c) throw new i.BaseError("`gasPrice` is not a valid EIP-1559 Transaction attribute.");
                if (u && u > 2 n ** 256 n - 1 n) throw new s.FeeCapTooHighError({
                    maxFeePerGas: u
                });
                if (r && u && r > u) throw new s.TipAboveFeeCapError({
                    maxFeePerGas: u,
                    maxPriorityFeePerGas: r
                })
            }, t.assertTransactionEIP2930 = function(e) {
                let {
                    chainId: t,
                    maxPriorityFeePerGas: r,
                    gasPrice: c,
                    maxFeePerGas: u,
                    to: l
                } = e;
                if (t <= 0) throw new o.InvalidChainIdError({
                    chainId: t
                });
                if (l && !(0, a.isAddress)(l)) throw new n.InvalidAddressError({
                    address: l
                });
                if (r || u) throw new i.BaseError("`maxFeePerGas`/`maxPriorityFeePerGas` is not a valid EIP-2930 Transaction attribute.");
                if (c && c > 2 n ** 256 n - 1 n) throw new s.FeeCapTooHighError({
                    maxFeePerGas: c
                })
            }, t.assertTransactionLegacy = function(e) {
                let {
                    chainId: t,
                    maxPriorityFeePerGas: r,
                    gasPrice: c,
                    maxFeePerGas: u,
                    to: l,
                    accessList: d
                } = e;
                if (l && !(0, a.isAddress)(l)) throw new n.InvalidAddressError({
                    address: l
                });
                if (void 0 !== t && t <= 0) throw new o.InvalidChainIdError({
                    chainId: t
                });
                if (r || u) throw new i.BaseError("`maxFeePerGas`/`maxPriorityFeePerGas` is not a valid Legacy Transaction attribute.");
                if (c && c > 2 n ** 256 n - 1 n) throw new s.FeeCapTooHighError({
                    maxFeePerGas: c
                });
                if (d) throw new i.BaseError("`accessList` is not a valid Legacy Transaction attribute.")
            }
        },
        17822: (e, t, r) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.getSerializedTransactionType = void 0;
            let n = r(99449),
                i = r(42721),
                o = r(7506);
            t.getSerializedTransactionType = function(e) {
                let t = (0, i.sliceHex)(e, 0, 1);
                if ("0x02" === t) return "eip1559";
                if ("0x01" === t) return "eip2930";
                if ("0x" !== t && (0, o.hexToNumber)(t) >= 192) return "legacy";
                throw new n.InvalidSerializedTransactionTypeError({
                    serializedType: t
                })
            }
        },
        50421: (e, t, r) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.getTransactionType = void 0;
            let n = r(99449);
            t.getTransactionType = function(e) {
                if (e.type) return e.type;
                if (void 0 !== e.maxFeePerGas || void 0 !== e.maxPriorityFeePerGas) return "eip1559";
                if (void 0 !== e.gasPrice) return void 0 !== e.accessList ? "eip2930" : "legacy";
                throw new n.InvalidSerializableTransactionError({
                    transaction: e
                })
            }
        },
        86214: (e, t, r) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.parseAccessList = t.toTransactionArray = t.parseTransaction = void 0;
            let n = r(13411),
                i = r(99449),
                o = r(54570),
                s = r(93918),
                a = r(85349),
                c = r(84392),
                u = r(7506),
                l = r(2290),
                d = r(59536),
                h = r(7617),
                f = r(17822);

            function p(e) {
                return (0, l.fromRlp)(`0x${e.slice(4)}`, "hex")
            }

            function g(e) {
                let t = [];
                for (let r = 0; r < e.length; r++) {
                    let [i, s] = e[r];
                    if (!(0, o.isAddress)(i)) throw new n.InvalidAddressError({
                        address: i
                    });
                    t.push({
                        address: i,
                        storageKeys: s.map(e => (0, d.isHash)(e) ? e : (0, c.trim)(e))
                    })
                }
                return t
            }

            function m(e) {
                let t = e.slice(-3),
                    r = "0x" === t[0] || 0 n === (0, u.hexToBigInt)(t[0]) ? 27 n : 28 n;
                return {
                    r: (0, a.padHex)(t[1], {
                        size: 32
                    }),
                    s: (0, a.padHex)(t[2], {
                        size: 32
                    }),
                    v: r,
                    yParity: 27 n === r ? 0 : 1
                }
            }
            t.parseTransaction = function(e) {
                let t = (0, f.getSerializedTransactionType)(e);
                return "eip1559" === t ? function(e) {
                    let t = p(e),
                        [r, n, o, a, c, l, d, f, b, y, v, w] = t;
                    if (!(9 === t.length || 12 === t.length)) throw new i.InvalidSerializedTransactionError({
                        attributes: {
                            chainId: r,
                            nonce: n,
                            maxPriorityFeePerGas: o,
                            maxFeePerGas: a,
                            gas: c,
                            to: l,
                            value: d,
                            data: f,
                            accessList: b,
                            ...t.length > 9 ? {
                                v: y,
                                r: v,
                                s: w
                            } : {}
                        },
                        serializedTransaction: e,
                        type: "eip1559"
                    });
                    let E = {
                        chainId: (0, u.hexToNumber)(r),
                        type: "eip1559"
                    };
                    return (0, s.isHex)(l) && "0x" !== l && (E.to = l), (0, s.isHex)(c) && "0x" !== c && (E.gas = (0, u.hexToBigInt)(c)), (0, s.isHex)(f) && "0x" !== f && (E.data = f), (0, s.isHex)(n) && "0x" !== n && (E.nonce = (0, u.hexToNumber)(n)), (0, s.isHex)(d) && "0x" !== d && (E.value = (0, u.hexToBigInt)(d)), (0, s.isHex)(a) && "0x" !== a && (E.maxFeePerGas = (0, u.hexToBigInt)(a)), (0, s.isHex)(o) && "0x" !== o && (E.maxPriorityFeePerGas = (0, u.hexToBigInt)(o)), 0 !== b.length && "0x" !== b && (E.accessList = g(b)), (0, h.assertTransactionEIP1559)(E), { ...12 === t.length ? m(t) : void 0,
                        ...E
                    }
                }(e) : "eip2930" === t ? function(e) {
                    let t = p(e),
                        [r, n, o, a, c, l, d, f, b, y, v] = t;
                    if (!(8 === t.length || 11 === t.length)) throw new i.InvalidSerializedTransactionError({
                        attributes: {
                            chainId: r,
                            nonce: n,
                            gasPrice: o,
                            gas: a,
                            to: c,
                            value: l,
                            data: d,
                            accessList: f,
                            ...t.length > 8 ? {
                                v: b,
                                r: y,
                                s: v
                            } : {}
                        },
                        serializedTransaction: e,
                        type: "eip2930"
                    });
                    let w = {
                        chainId: (0, u.hexToNumber)(r),
                        type: "eip2930"
                    };
                    return (0, s.isHex)(c) && "0x" !== c && (w.to = c), (0, s.isHex)(a) && "0x" !== a && (w.gas = (0, u.hexToBigInt)(a)), (0, s.isHex)(d) && "0x" !== d && (w.data = d), (0, s.isHex)(n) && "0x" !== n && (w.nonce = (0, u.hexToNumber)(n)), (0, s.isHex)(l) && "0x" !== l && (w.value = (0, u.hexToBigInt)(l)), (0, s.isHex)(o) && "0x" !== o && (w.gasPrice = (0, u.hexToBigInt)(o)), 0 !== f.length && "0x" !== f && (w.accessList = g(f)), (0, h.assertTransactionEIP2930)(w), { ...11 === t.length ? m(t) : void 0,
                        ...w
                    }
                }(e) : function(e) {
                    let t = (0, l.fromRlp)(e, "hex"),
                        [r, n, o, a, c, d, f, p, g] = t;
                    if (!(6 === t.length || 9 === t.length)) throw new i.InvalidSerializedTransactionError({
                        attributes: {
                            nonce: r,
                            gasPrice: n,
                            gas: o,
                            to: a,
                            value: c,
                            data: d,
                            ...t.length > 6 ? {
                                v: f,
                                r: p,
                                s: g
                            } : {}
                        },
                        serializedTransaction: e,
                        type: "legacy"
                    });
                    let m = {
                        type: "legacy"
                    };
                    if ((0, s.isHex)(a) && "0x" !== a && (m.to = a), (0, s.isHex)(o) && "0x" !== o && (m.gas = (0, u.hexToBigInt)(o)), (0, s.isHex)(d) && "0x" !== d && (m.data = d), (0, s.isHex)(r) && "0x" !== r && (m.nonce = (0, u.hexToNumber)(r)), (0, s.isHex)(c) && "0x" !== c && (m.value = (0, u.hexToBigInt)(c)), (0, s.isHex)(n) && "0x" !== n && (m.gasPrice = (0, u.hexToBigInt)(n)), (0, h.assertTransactionLegacy)(m), 6 === t.length) return m;
                    let b = (0, s.isHex)(f) && "0x" !== f ? (0, u.hexToBigInt)(f) : 0 n;
                    if ("0x" === g && "0x" === p) return b > 0 && (m.chainId = Number(b)), m;
                    let y = Number((b - 35 n) / 2 n);
                    if (y > 0) m.chainId = y;
                    else if (27 n !== b && 28 n !== b) throw new i.InvalidLegacyVError({
                        v: b
                    });
                    return m.v = b, m.s = g, m.r = p, m
                }(e)
            }, t.toTransactionArray = p, t.parseAccessList = g
        },
        49645: (e, t, r) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.serializeAccessList = void 0;
            let n = r(13411),
                i = r(99449),
                o = r(54570);
            t.serializeAccessList = function(e) {
                if (!e || 0 === e.length) return [];
                let t = [];
                for (let r = 0; r < e.length; r++) {
                    let {
                        address: s,
                        storageKeys: a
                    } = e[r];
                    for (let e = 0; e < a.length; e++)
                        if (a[e].length - 2 != 64) throw new i.InvalidStorageKeySizeError({
                            storageKey: a[e]
                        });
                    if (!(0, o.isAddress)(s)) throw new n.InvalidAddressError({
                        address: s
                    });
                    t.push([s, a])
                }
                return t
            }
        },
        20820: (e, t, r) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.serializeTransaction = void 0;
            let n = r(99449),
                i = r(79763),
                o = r(84392),
                s = r(36373),
                a = r(50366),
                c = r(7617),
                u = r(50421),
                l = r(49645);
            t.serializeTransaction = function(e, t) {
                let r = (0, u.getTransactionType)(e);
                return "eip1559" === r ? function(e, t) {
                    let {
                        chainId: r,
                        gas: n,
                        nonce: u,
                        to: d,
                        value: h,
                        maxFeePerGas: f,
                        maxPriorityFeePerGas: p,
                        accessList: g,
                        data: m
                    } = e;
                    (0, c.assertTransactionEIP1559)(e);
                    let b = (0, l.serializeAccessList)(g),
                        y = [(0, s.toHex)(r), u ? (0, s.toHex)(u) : "0x", p ? (0, s.toHex)(p) : "0x", f ? (0, s.toHex)(f) : "0x", n ? (0, s.toHex)(n) : "0x", d ? ? "0x", h ? (0, s.toHex)(h) : "0x", m ? ? "0x", b];
                    if (t) {
                        let e = 0 n === t.v ? "0x" : 1 n === t.v ? (0, s.toHex)(1) : 27 n === t.v ? "0x" : (0, s.toHex)(1);
                        y.push(e, (0, o.trim)(t.r), (0, o.trim)(t.s))
                    }
                    return (0, i.concatHex)(["0x02", (0, a.toRlp)(y)])
                }(e, t) : "eip2930" === r ? function(e, t) {
                    let {
                        chainId: r,
                        gas: n,
                        data: u,
                        nonce: d,
                        to: h,
                        value: f,
                        accessList: p,
                        gasPrice: g
                    } = e;
                    (0, c.assertTransactionEIP2930)(e);
                    let m = (0, l.serializeAccessList)(p),
                        b = [(0, s.toHex)(r), d ? (0, s.toHex)(d) : "0x", g ? (0, s.toHex)(g) : "0x", n ? (0, s.toHex)(n) : "0x", h ? ? "0x", f ? (0, s.toHex)(f) : "0x", u ? ? "0x", m];
                    if (t) {
                        let e = 0 n === t.v ? "0x" : 1 n === t.v ? (0, s.toHex)(1) : 27 n === t.v ? "0x" : (0, s.toHex)(1);
                        b.push(e, (0, o.trim)(t.r), (0, o.trim)(t.s))
                    }
                    return (0, i.concatHex)(["0x01", (0, a.toRlp)(b)])
                }(e, t) : function(e, t) {
                    let {
                        chainId: r = 0,
                        gas: i,
                        data: o,
                        nonce: u,
                        to: l,
                        value: d,
                        gasPrice: h
                    } = e;
                    (0, c.assertTransactionLegacy)(e);
                    let f = [u ? (0, s.toHex)(u) : "0x", h ? (0, s.toHex)(h) : "0x", i ? (0, s.toHex)(i) : "0x", l ? ? "0x", d ? (0, s.toHex)(d) : "0x", o ? ? "0x"];
                    if (t) {
                        let e = (() => {
                            if (r > 0) return BigInt(2 * r) + BigInt(35 n + t.v - 27 n);
                            if (t.v >= 35 n) return (t.v - 35 n) / 2 n > 0 ? t.v : 27 n + (35 n === t.v ? 0 n : 1 n);
                            let e = 27 n + (27 n === t.v ? 0 n : 1 n);
                            if (t.v !== e) throw new n.InvalidLegacyVError({
                                v: t.v
                            });
                            return e
                        })();
                        f = [...f, (0, s.toHex)(e), t.r, t.s]
                    } else r > 0 && (f = [...f, (0, s.toHex)(r), "0x", "0x"]);
                    return (0, a.toRlp)(f)
                }(e, t)
            }
        },
        87054: (e, t, r) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.domainSeparator = t.getTypesForEIP712Domain = t.validateTypedData = void 0;
            let n = r(51889),
                i = r(13411),
                o = r(54570),
                s = r(6629),
                a = r(36373),
                c = r(23117),
                u = r(67419);

            function l({
                domain: e
            }) {
                return ["string" == typeof e ? .name && {
                    name: "name",
                    type: "string"
                }, e ? .version && {
                    name: "version",
                    type: "string"
                }, "number" == typeof e ? .chainId && {
                    name: "chainId",
                    type: "uint256"
                }, e ? .verifyingContract && {
                    name: "verifyingContract",
                    type: "address"
                }, e ? .salt && {
                    name: "salt",
                    type: "bytes32"
                }].filter(Boolean)
            }
            t.validateTypedData = function({
                domain: e,
                message: t,
                primaryType: r,
                types: u
            }) {
                let l = (e, t) => {
                    for (let r of e) {
                        let {
                            name: e,
                            type: d
                        } = r, h = t[e], f = d.match(c.integerRegex);
                        if (f && ("number" == typeof h || "bigint" == typeof h)) {
                            let [e, t, r] = f;
                            (0, a.numberToHex)(h, {
                                signed: "int" === t,
                                size: parseInt(r) / 8
                            })
                        }
                        if ("address" === d && "string" == typeof h && !(0, o.isAddress)(h)) throw new i.InvalidAddressError({
                            address: h
                        });
                        let p = d.match(c.bytesRegex);
                        if (p) {
                            let [e, t] = p;
                            if (t && (0, s.size)(h) !== parseInt(t)) throw new n.BytesSizeMismatchError({
                                expectedSize: parseInt(t),
                                givenSize: (0, s.size)(h)
                            })
                        }
                        let g = u[d];
                        g && l(g, h)
                    }
                };
                u.EIP712Domain && e && l(u.EIP712Domain, e), "EIP712Domain" !== r && l(u[r], t)
            }, t.getTypesForEIP712Domain = l, t.domainSeparator = function({
                domain: e
            }) {
                return (0, u.hashDomain)({
                    domain: e,
                    types: {
                        EIP712Domain: l({
                            domain: e
                        })
                    }
                })
            }
        },
        42581: (e, t) => {
            "use strict";
            let r;
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.uid = void 0;
            let n = 256;
            t.uid = function(e = 11) {
                if (!r || n + e > 512) {
                    r = "", n = 0;
                    for (let e = 0; e < 256; e++) r += (256 + 256 * Math.random() | 0).toString(16).substring(1)
                }
                return r.substring(n, n++ + e)
            }
        },
        7838: (e, t, r) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.formatEther = void 0;
            let n = r(67888),
                i = r(43385);
            t.formatEther = function(e, t = "wei") {
                return (0, i.formatUnits)(e, n.etherUnits[t])
            }
        },
        74129: (e, t, r) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.formatGwei = void 0;
            let n = r(67888),
                i = r(43385);
            t.formatGwei = function(e, t = "wei") {
                return (0, i.formatUnits)(e, n.gweiUnits[t])
            }
        },
        43385: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.formatUnits = void 0, t.formatUnits = function(e, t) {
                let r = e.toString(),
                    n = r.startsWith("-");
                n && (r = r.slice(1));
                let [i, o] = [(r = r.padStart(t, "0")).slice(0, r.length - t), r.slice(r.length - t)];
                return o = o.replace(/(0+)$/, ""), `${n?"-":""}${i||"0"}${o?`.${o}`:""}`
            }
        },
        32994: (e, t, r) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.parseEther = void 0;
            let n = r(67888),
                i = r(12584);
            t.parseEther = function(e, t = "wei") {
                return (0, i.parseUnits)(e, n.etherUnits[t])
            }
        },
        59706: (e, t, r) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.parseGwei = void 0;
            let n = r(67888),
                i = r(12584);
            t.parseGwei = function(e, t = "wei") {
                return (0, i.parseUnits)(e, n.gweiUnits[t])
            }
        },
        12584: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.parseUnits = void 0, t.parseUnits = function(e, t) {
                let [r, n = "0"] = e.split("."), i = r.startsWith("-");
                if (i && (r = r.slice(1)), n = n.replace(/(0+)$/, ""), 0 === t) 1 === Math.round(Number(`.${n}`)) && (r = `${BigInt(r)+1n}`), n = "";
                else if (n.length > t) {
                    let [e, i, o] = [n.slice(0, t - 1), n.slice(t - 1, t), n.slice(t)], s = Math.round(Number(`${i}.${o}`));
                    (n = s > 9 ? `${BigInt(e)+BigInt(1)}0`.padStart(e.length + 1, "0") : `${e}${s}`).length > t && (n = n.slice(1), r = `${BigInt(r)+1n}`), n = n.slice(0, t)
                } else n = n.padEnd(t, "0");
                return BigInt(`${i?"-":""}${r}${n}`)
            }
        },
        72142: (e, t) => {
            "use strict";
            async function r(e) {
                return new Promise(t => setTimeout(t, e))
            }
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.wait = void 0, t.wait = r
        },
        10086: (e, t, r) => {
            "use strict";
            r.d(t, {
                M: () => i
            });
            let n = e => {
                    let t;
                    let r = new Set,
                        n = (e, n) => {
                            let i = "function" == typeof e ? e(t) : e;
                            if (!Object.is(i, t)) {
                                let e = t;
                                t = (null != n ? n : "object" != typeof i) ? i : Object.assign({}, t, i), r.forEach(r => r(t, e))
                            }
                        },
                        i = () => t,
                        o = {
                            setState: n,
                            getState: i,
                            subscribe: e => (r.add(e), () => r.delete(e)),
                            destroy: () => {
                                console.warn("[DEPRECATED] The `destroy` method will be unsupported in a future version. Instead use unsubscribe function returned by subscribe. Everything will be garbage-collected if store is garbage-collected."), r.clear()
                            }
                        };
                    return t = e(n, i, o), o
                },
                i = e => e ? n(e) : n
        },
        87706: (e, t, r) => {
            "use strict";

            function n() {}
            r.d(t, {
                e: () => i
            });
            class i {
                has(e) {
                    return this.map.has(e)
                }
                get(e) {
                    let t = this.getNode(e);
                    return t && t.value
                }
                get size() {
                    return this.map.size
                }
                getNode(e) {
                    let t = this.map.get(e);
                    if (t && t !== this.newest) {
                        let {
                            older: e,
                            newer: r
                        } = t;
                        r && (r.older = e), e && (e.newer = r), t.older = this.newest, t.older.newer = t, t.newer = null, this.newest = t, t === this.oldest && (this.oldest = r)
                    }
                    return t
                }
                set(e, t) {
                    let r = this.getNode(e);
                    return r ? r.value = t : (r = {
                        key: e,
                        value: t,
                        newer: null,
                        older: this.newest
                    }, this.newest && (this.newest.newer = r), this.newest = r, this.oldest = this.oldest || r, this.map.set(e, r), r.value)
                }
                clean() {
                    for (; this.oldest && this.map.size > this.max;) this.delete(this.oldest.key)
                }
                delete(e) {
                    let t = this.map.get(e);
                    return !!t && (t === this.newest && (this.newest = t.older), t === this.oldest && (this.oldest = t.newer), t.newer && (t.newer.older = t.older), t.older && (t.older.newer = t.newer), this.map.delete(e), this.dispose(t.value, e), !0)
                }
                constructor(e = 1 / 0, t = n) {
                    this.max = e, this.dispose = t, this.map = new Map, this.newest = null, this.oldest = null
                }
            }
        },
        20182: (e, t, r) => {
            "use strict";
            r.d(t, {
                g7: () => u
            });
            let n = null,
                i = {},
                o = 1;

            function s(e) {
                try {
                    return e()
                } catch (e) {}
            }
            let a = "@wry/context:Slot",
                c = s(() => globalThis) || s(() => global) || Object.create(null),
                u = c[a] || Array[a] || function(e) {
                    try {
                        Object.defineProperty(c, a, {
                            value: e,
                            enumerable: !1,
                            writable: !1,
                            configurable: !0
                        })
                    } finally {
                        return e
                    }
                }(class {
                    hasValue() {
                        for (let e = n; e; e = e.parent)
                            if (this.id in e.slots) {
                                let t = e.slots[this.id];
                                if (t === i) break;
                                return e !== n && (n.slots[this.id] = t), !0
                            }
                        return n && (n.slots[this.id] = i), !1
                    }
                    getValue() {
                        if (this.hasValue()) return n.slots[this.id]
                    }
                    withValue(e, t, r, i) {
                        let o = {
                                __proto__: null,
                                [this.id]: e
                            },
                            s = n;
                        n = {
                            parent: s,
                            slots: o
                        };
                        try {
                            return t.apply(i, r)
                        } finally {
                            n = s
                        }
                    }
                    static bind(e) {
                        let t = n;
                        return function() {
                            let r = n;
                            try {
                                return n = t, e.apply(this, arguments)
                            } finally {
                                n = r
                            }
                        }
                    }
                    static noContext(e, t, r) {
                        if (!n) return e.apply(r, t); {
                            let i = n;
                            try {
                                return n = null, e.apply(r, t)
                            } finally {
                                n = i
                            }
                        }
                    }
                    constructor() {
                        this.id = ["slot", o++, Date.now(), Math.random().toString(36).slice(2)].join(":")
                    }
                }),
                {
                    bind: l,
                    noContext: d
                } = u
        },
        21270: (e, t, r) => {
            "use strict";
            r.d(t, {
                D: () => a,
                Z: () => c
            });
            let {
                toString: n,
                hasOwnProperty: i
            } = Object.prototype, o = Function.prototype.toString, s = new Map;

            function a(e, t) {
                try {
                    return function e(t, r) {
                        if (t === r) return !0;
                        let s = n.call(t);
                        if (s !== n.call(r)) return !1;
                        switch (s) {
                            case "[object Array]":
                                if (t.length !== r.length) break;
                            case "[object Object]":
                                {
                                    if (h(t, r)) return !0;
                                    let n = u(t),
                                        o = u(r),
                                        s = n.length;
                                    if (s !== o.length) return !1;
                                    for (let e = 0; e < s; ++e)
                                        if (!i.call(r, n[e])) return !1;
                                    for (let i = 0; i < s; ++i) {
                                        let o = n[i];
                                        if (!e(t[o], r[o])) return !1
                                    }
                                    return !0
                                }
                            case "[object Error]":
                                return t.name === r.name && t.message === r.message;
                            case "[object Number]":
                                if (t != t) return r != r;
                            case "[object Boolean]":
                            case "[object Date]":
                                return +t == +r;
                            case "[object RegExp]":
                            case "[object String]":
                                return t == `${r}`;
                            case "[object Map]":
                            case "[object Set]":
                                {
                                    if (t.size !== r.size) return !1;
                                    if (h(t, r)) return !0;
                                    let n = t.entries(),
                                        i = "[object Map]" === s;
                                    for (;;) {
                                        let t = n.next();
                                        if (t.done) break;
                                        let [o, s] = t.value;
                                        if (!r.has(o) || i && !e(s, r.get(o))) return !1
                                    }
                                    return !0
                                }
                            case "[object Uint16Array]":
                            case "[object Uint8Array]":
                            case "[object Uint32Array]":
                            case "[object Int32Array]":
                            case "[object Int8Array]":
                            case "[object Int16Array]":
                            case "[object ArrayBuffer]":
                                t = new Uint8Array(t), r = new Uint8Array(r);
                            case "[object DataView]":
                                {
                                    let e = t.byteLength;
                                    if (e === r.byteLength)
                                        for (; e-- && t[e] === r[e];);
                                    return -1 === e
                                }
                            case "[object AsyncFunction]":
                            case "[object GeneratorFunction]":
                            case "[object AsyncGeneratorFunction]":
                            case "[object Function]":
                                {
                                    let e = o.call(t);
                                    if (e !== o.call(r)) return !1;
                                    return ! function(e, t) {
                                        let r = e.length - t.length;
                                        return r >= 0 && e.indexOf(t, r) === r
                                    }(e, d)
                                }
                        }
                        return !1
                    }(e, t)
                } finally {
                    s.clear()
                }
            }
            let c = a;

            function u(e) {
                return Object.keys(e).filter(l, e)
            }

            function l(e) {
                return void 0 !== this[e]
            }
            let d = "{ [native code] }";

            function h(e, t) {
                let r = s.get(e);
                if (r) {
                    if (r.has(t)) return !0
                } else s.set(e, r = new Set);
                return r.add(t), !1
            }
        },
        59993: (e, t, r) => {
            "use strict";
            r.d(t, {
                B: () => a
            });
            let n = () => Object.create(null),
                {
                    forEach: i,
                    slice: o
                } = Array.prototype,
                {
                    hasOwnProperty: s
                } = Object.prototype;
            class a {
                lookup() {
                    return this.lookupArray(arguments)
                }
                lookupArray(e) {
                    let t = this;
                    return i.call(e, e => t = t.getChildTrie(e)), s.call(t, "data") ? t.data : t.data = this.makeData(o.call(e))
                }
                peek() {
                    return this.peekArray(arguments)
                }
                peekArray(e) {
                    let t = this;
                    for (let r = 0, n = e.length; t && r < n; ++r) {
                        let n = t.mapFor(e[r], !1);
                        t = n && n.get(e[r])
                    }
                    return t && t.data
                }
                remove() {
                    return this.removeArray(arguments)
                }
                removeArray(e) {
                    let t;
                    if (e.length) {
                        let r = e[0],
                            n = this.mapFor(r, !1),
                            i = n && n.get(r);
                        !i || (t = i.removeArray(o.call(e, 1)), i.data || i.weak || i.strong && i.strong.size || n.delete(r))
                    } else t = this.data, delete this.data;
                    return t
                }
                getChildTrie(e) {
                    let t = this.mapFor(e, !0),
                        r = t.get(e);
                    return r || t.set(e, r = new a(this.weakness, this.makeData)), r
                }
                mapFor(e, t) {
                    return this.weakness && function(e) {
                        switch (typeof e) {
                            case "object":
                                if (null === e) break;
                            case "function":
                                return !0
                        }
                        return !1
                    }(e) ? this.weak || (t ? this.weak = new WeakMap : void 0) : this.strong || (t ? this.strong = new Map : void 0)
                }
                constructor(e = !0, t = n) {
                    this.weakness = e, this.makeData = t
                }
            }
        }
    }
]);