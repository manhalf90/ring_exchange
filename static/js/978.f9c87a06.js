(self.webpackChunk_few_interface = self.webpackChunk_few_interface || []).push([
    [978], {
        30592: (e, t, f) => {
            "use strict";
            f.d(t, {
                Zw: () => e8,
                yV: () => e3,
                j: () => e9
            });
            var n, r, i, a, o, s = f(51113);
            ! function(e) {
                e[e.None = 0] = "None", e[e.Error = 1] = "Error", e[e.Warn = 2] = "Warn", e[e.Verbose = 3] = "Verbose", e[e.Debug = 4] = "Debug"
            }(n || (n = {}));
            var u = function(e) {
                    return function() {
                        var t = (0, s.__assign)({}, e.config);
                        return {
                            logger: t.loggerProvider,
                            logLevel: t.logLevel
                        }
                    }
                },
                d = function(e, t) {
                    var f, n;
                    t = (t = t.replace(/\[(\w+)\]/g, ".$1")).replace(/^\./, "");
                    try {
                        for (var r = (0, s.__values)(t.split(".")), i = r.next(); !i.done; i = r.next()) {
                            var a = i.value;
                            if (!(a in e)) return;
                            e = e[a]
                        }
                    } catch (e) {
                        f = {
                            error: e
                        }
                    } finally {
                        try {
                            i && !i.done && (n = r.return) && n.call(r)
                        } finally {
                            if (f) throw f.error
                        }
                    }
                    return e
                },
                c = function(e, t) {
                    return function() {
                        var f, n, r = {};
                        try {
                            for (var i = (0, s.__values)(t), a = i.next(); !a.done; a = i.next()) {
                                var o = a.value;
                                r[o] = d(e, o)
                            }
                        } catch (e) {
                            f = {
                                error: e
                            }
                        } finally {
                            try {
                                a && !a.done && (n = i.return) && n.call(i)
                            } finally {
                                if (f) throw f.error
                            }
                        }
                        return r
                    }
                },
                l = function(e, t, f, r, i) {
                    return void 0 === i && (i = null),
                        function() {
                            for (var a = [], o = 0; o < arguments.length; o++) a[o] = arguments[o];
                            var s = f(),
                                u = s.logger,
                                d = s.logLevel;
                            if (d && d < n.Debug || !d || !u) return e.apply(i, a);
                            var c = {
                                type: "invoke public method",
                                name: t,
                                args: a,
                                stacktrace: (Error().stack || "").split("\n").slice(3).map(function(e) {
                                    return e.trim()
                                }),
                                time: {
                                    start: new Date().toISOString()
                                },
                                states: {}
                            };
                            r && c.states && (c.states.before = r());
                            var l = e.apply(i, a);
                            return l && l.promise ? l.promise.then(function() {
                                r && c.states && (c.states.after = r()), c.time && (c.time.end = new Date().toISOString()), u.debug(JSON.stringify(c, null, 2))
                            }) : (r && c.states && (c.states.after = r()), c.time && (c.time.end = new Date().toISOString()), u.debug(JSON.stringify(c, null, 2))), l
                        }
                },
                p = f(471),
                y = function(e, t, f) {
                    return void 0 === t && (t = ""), void 0 === f && (f = 10), [p.xp, t, e.substring(0, f)].filter(Boolean).join("_")
                },
                b = function() {
                    return "undefined" != typeof globalThis ? globalThis : "undefined" != typeof window ? window : "undefined" != typeof self ? self : void 0 !== f.g ? f.g : void 0
                },
                h = function() {
                    var e, t = b();
                    return (null === (e = null == t ? void 0 : t.location) || void 0 === e ? void 0 : e.search) ? t.location.search.substring(1).split("&").filter(Boolean).reduce(function(e, t) {
                        var f = t.split("=", 2),
                            n = m(f[0]),
                            r = m(f[1]);
                        return r && (e[n] = r), e
                    }, {}) : {}
                },
                m = function(e) {
                    void 0 === e && (e = "");
                    try {
                        return decodeURIComponent(e)
                    } catch (e) {
                        return ""
                    }
                },
                v = function() {
                    function e() {}
                    return e.prototype.getApplicationContext = function() {
                        return {
                            versionName: this.versionName,
                            language: T(),
                            platform: "Web",
                            os: void 0,
                            deviceModel: void 0
                        }
                    }, e
                }(),
                T = function() {
                    return "undefined" != typeof navigator && (navigator.languages && navigator.languages[0] || navigator.language) || ""
                },
                g = function() {
                    function e() {
                        this.queue = []
                    }
                    return e.prototype.logEvent = function(e) {
                        this.receiver ? this.receiver(e) : this.queue.length < 512 && this.queue.push(e)
                    }, e.prototype.setEventReceiver = function(e) {
                        this.receiver = e, this.queue.length > 0 && (this.queue.forEach(function(t) {
                            e(t)
                        }), this.queue = [])
                    }, e
                }(),
                w = function() {
                    return (w = Object.assign || function(e) {
                        for (var t, f = 1, n = arguments.length; f < n; f++)
                            for (var r in t = arguments[f]) Object.prototype.hasOwnProperty.call(t, r) && (e[r] = t[r]);
                        return e
                    }).apply(this, arguments)
                },
                A = function(e, t) {
                    var f = typeof e;
                    if (f !== typeof t) return !1;
                    for (var n = 0, r = ["string", "number", "boolean", "undefined"]; n < r.length; n++)
                        if (r[n] === f) return e === t;
                    if (null == e && null == t) return !0;
                    if (null == e || null == t || e.length !== t.length) return !1;
                    var i = Array.isArray(e),
                        a = Array.isArray(t);
                    if (i !== a) return !1;
                    if (i && a) {
                        for (var o = 0; o < e.length; o++)
                            if (!A(e[o], t[o])) return !1
                    } else {
                        if (!A(Object.keys(e).sort(), Object.keys(t).sort())) return !1;
                        var s = !0;
                        return Object.keys(e).forEach(function(f) {
                            A(e[f], t[f]) || (s = !1)
                        }), s
                    }
                    return !0
                };
            Object.entries || (Object.entries = function(e) {
                for (var t = Object.keys(e), f = t.length, n = Array(f); f--;) n[f] = [t[f], e[t[f]]];
                return n
            });
            var I = function() {
                    function e() {
                        this.identity = {
                            userProperties: {}
                        }, this.listeners = new Set
                    }
                    return e.prototype.editIdentity = function() {
                        var e = this,
                            t = w({}, this.identity.userProperties),
                            f = w(w({}, this.identity), {
                                userProperties: t
                            });
                        return {
                            setUserId: function(e) {
                                return f.userId = e, this
                            },
                            setDeviceId: function(e) {
                                return f.deviceId = e, this
                            },
                            setUserProperties: function(e) {
                                return f.userProperties = e, this
                            },
                            setOptOut: function(e) {
                                return f.optOut = e, this
                            },
                            updateUserProperties: function(e) {
                                for (var t = f.userProperties || {}, n = 0, r = Object.entries(e); n < r.length; n++) {
                                    var i = r[n],
                                        a = i[0],
                                        o = i[1];
                                    switch (a) {
                                        case "$set":
                                            for (var s = 0, u = Object.entries(o); s < u.length; s++) {
                                                var d = u[s],
                                                    c = d[0],
                                                    l = d[1];
                                                t[c] = l
                                            }
                                            break;
                                        case "$unset":
                                            for (var p = 0, y = Object.keys(o); p < y.length; p++) {
                                                var c = y[p];
                                                delete t[c]
                                            }
                                            break;
                                        case "$clearAll":
                                            t = {}
                                    }
                                }
                                return f.userProperties = t, this
                            },
                            commit: function() {
                                return e.setIdentity(f), this
                            }
                        }
                    }, e.prototype.getIdentity = function() {
                        return w({}, this.identity)
                    }, e.prototype.setIdentity = function(e) {
                        var t = w({}, this.identity);
                        this.identity = w({}, e), A(t, this.identity) || this.listeners.forEach(function(t) {
                            t(e)
                        })
                    }, e.prototype.addIdentityListener = function(e) {
                        this.listeners.add(e)
                    }, e.prototype.removeIdentityListener = function(e) {
                        this.listeners.delete(e)
                    }, e
                }(),
                E = "undefined" != typeof globalThis ? globalThis : void 0 !== f.g ? f.g : self,
                _ = function() {
                    function e() {
                        this.identityStore = new I, this.eventBridge = new g, this.applicationContextProvider = new v
                    }
                    return e.getInstance = function(t) {
                        return E.analyticsConnectorInstances || (E.analyticsConnectorInstances = {}), E.analyticsConnectorInstances[t] || (E.analyticsConnectorInstances[t] = new e), E.analyticsConnectorInstances[t]
                    }, e
                }(),
                k = function(e) {
                    return void 0 === e && (e = "$default_instance"), _.getInstance(e)
                },
                C = function(e, t) {
                    k(t).identityStore.editIdentity().setUserId(e).commit()
                },
                S = function(e, t) {
                    k(t).identityStore.editIdentity().setDeviceId(e).commit()
                },
                O = function(e, t) {
                    k(t).identityStore.editIdentity().setOptOut(e).commit()
                };
            ! function(e) {
                e.BEFORE = "before", e.ENRICHMENT = "enrichment", e.DESTINATION = "destination"
            }(r || (r = {}));
            var P = function() {
                    function e() {
                        this.name = "identity", this.type = r.BEFORE, this.identityStore = k().identityStore
                    }
                    return e.prototype.execute = function(e) {
                        return (0, s.__awaiter)(this, void 0, void 0, function() {
                            var t;
                            return (0, s.__generator)(this, function(f) {
                                return (t = e.user_properties) && this.identityStore.editIdentity().updateUserProperties(t).commit(), [2, e]
                            })
                        })
                    }, e.prototype.setup = function(e) {
                        return (0, s.__awaiter)(this, void 0, void 0, function() {
                            return (0, s.__generator)(this, function(t) {
                                return e.instanceName && (this.identityStore = k(e.instanceName).identityStore), [2]
                            })
                        })
                    }, e
                }(),
                M = function(e) {
                    var t, f, n = (null === (f = e.attribution) || void 0 === f ? void 0 : f.trackPageViews) ? "attribution" : function() {
                            return !1
                        },
                        r = void 0,
                        i = "Page View";
                    return ("boolean" == typeof(t = e.defaultTracking) ? t : (null == t ? void 0 : t.pageViews) === !0 || null != t && !!t.pageViews && "object" == typeof t.pageViews) && (n = void 0, i = void 0, e.defaultTracking && "object" == typeof e.defaultTracking && e.defaultTracking.pageViews && "object" == typeof e.defaultTracking.pageViews && ("trackOn" in e.defaultTracking.pageViews && (n = e.defaultTracking.pageViews.trackOn), "trackHistoryChanges" in e.defaultTracking.pageViews && (r = e.defaultTracking.pageViews.trackHistoryChanges), "eventType" in e.defaultTracking.pageViews && e.defaultTracking.pageViews.eventType && (i = e.defaultTracking.pageViews.eventType))), {
                        trackOn: n,
                        trackHistoryChanges: r,
                        eventType: i
                    }
                },
                x = function(e) {
                    return {
                        promise: e || Promise.resolve()
                    }
                };
            ! function(e) {
                e.Unknown = "unknown", e.Skipped = "skipped", e.Success = "success", e.RateLimit = "rate_limit", e.PayloadTooLarge = "payload_too_large", e.Invalid = "invalid", e.Failed = "failed", e.Timeout = "Timeout", e.SystemError = "SystemError"
            }(i || (i = {}));
            var R = function(e, t) {
                    var f = Math.max(t, 1);
                    return e.reduce(function(e, t, n) {
                        var r = Math.floor(n / f);
                        return e[r] || (e[r] = []), e[r].push(t), e
                    }, [])
                },
                F = function(e, t, f) {
                    return void 0 === t && (t = 0), void 0 === f && (f = i.Unknown), {
                        event: e,
                        code: t,
                        message: f
                    }
                };
            ! function(e) {
                e.US = "US", e.EU = "EU", e.STAGING = "STAGING"
            }(a || (a = {}));
            var D = "Amplitude Logger ",
                N = function() {
                    function e() {
                        this.logLevel = n.None
                    }
                    return e.prototype.disable = function() {
                        this.logLevel = n.None
                    }, e.prototype.enable = function(e) {
                        void 0 === e && (e = n.Warn), this.logLevel = e
                    }, e.prototype.log = function() {
                        for (var e = [], t = 0; t < arguments.length; t++) e[t] = arguments[t];
                        this.logLevel < n.Verbose || console.log("".concat(D, "[Log]: ").concat(e.join(" ")))
                    }, e.prototype.warn = function() {
                        for (var e = [], t = 0; t < arguments.length; t++) e[t] = arguments[t];
                        this.logLevel < n.Warn || console.warn("".concat(D, "[Warn]: ").concat(e.join(" ")))
                    }, e.prototype.error = function() {
                        for (var e = [], t = 0; t < arguments.length; t++) e[t] = arguments[t];
                        this.logLevel < n.Error || console.error("".concat(D, "[Error]: ").concat(e.join(" ")))
                    }, e.prototype.debug = function() {
                        for (var e = [], t = 0; t < arguments.length; t++) e[t] = arguments[t];
                        this.logLevel < n.Debug || console.log("".concat(D, "[Debug]: ").concat(e.join(" ")))
                    }, e
                }(),
                B = function() {
                    return {
                        flushMaxRetries: 12,
                        flushQueueSize: 200,
                        flushIntervalMillis: 1e4,
                        instanceName: "$default_instance",
                        logLevel: n.Warn,
                        loggerProvider: new N,
                        optOut: !1,
                        serverUrl: p.EG,
                        serverZone: a.US,
                        useBatch: !1
                    }
                },
                L = function() {
                    function e(e) {
                        this._optOut = !1;
                        var t, f, n, r, i = B();
                        this.apiKey = e.apiKey, this.flushIntervalMillis = null !== (t = e.flushIntervalMillis) && void 0 !== t ? t : i.flushIntervalMillis, this.flushMaxRetries = e.flushMaxRetries || i.flushMaxRetries, this.flushQueueSize = e.flushQueueSize || i.flushQueueSize, this.instanceName = e.instanceName || i.instanceName, this.loggerProvider = e.loggerProvider || i.loggerProvider, this.logLevel = null !== (f = e.logLevel) && void 0 !== f ? f : i.logLevel, this.minIdLength = e.minIdLength, this.plan = e.plan, this.ingestionMetadata = e.ingestionMetadata, this.optOut = null !== (n = e.optOut) && void 0 !== n ? n : i.optOut, this.serverUrl = e.serverUrl, this.serverZone = e.serverZone || i.serverZone, this.storageProvider = e.storageProvider, this.transportProvider = e.transportProvider, this.useBatch = null !== (r = e.useBatch) && void 0 !== r ? r : i.useBatch, this.loggerProvider.enable(this.logLevel);
                        var a = q(e.serverUrl, e.serverZone, e.useBatch);
                        this.serverZone = a.serverZone, this.serverUrl = a.serverUrl
                    }
                    return Object.defineProperty(e.prototype, "optOut", {
                        get: function() {
                            return this._optOut
                        },
                        set: function(e) {
                            this._optOut = e
                        },
                        enumerable: !1,
                        configurable: !0
                    }), e
                }(),
                q = function(e, t, f) {
                    if (void 0 === e && (e = ""), void 0 === t && (t = B().serverZone), void 0 === f && (f = B().useBatch), e) return {
                        serverUrl: e,
                        serverZone: void 0
                    };
                    var n, r = ["US", "EU"].includes(t) ? t : B().serverZone;
                    return {
                        serverZone: r,
                        serverUrl: (n = f, r === a.EU ? n ? p.RE : p.y_ : n ? p.h8 : p.EG)
                    }
                };

            function U(e) {
                var t = "";
                try {
                    "body" in e && (t = JSON.stringify(e.body))
                } catch (e) {}
                return t
            }
            var V = function() {
                    function e() {
                        this.name = "amplitude", this.type = r.DESTINATION, this.retryTimeout = 1e3, this.throttleTimeout = 3e4, this.storageKey = "", this.scheduled = null, this.queue = []
                    }
                    return e.prototype.setup = function(e) {
                        var t;
                        return (0, s.__awaiter)(this, void 0, void 0, function() {
                            var f, n = this;
                            return (0, s.__generator)(this, function(r) {
                                switch (r.label) {
                                    case 0:
                                        return this.config = e, this.storageKey = "".concat(p.f1, "_").concat(this.config.apiKey.substring(0, 10)), [4, null === (t = this.config.storageProvider) || void 0 === t ? void 0 : t.get(this.storageKey)];
                                    case 1:
                                        return f = r.sent(), this.saveEvents(), f && f.length > 0 && Promise.all(f.map(function(e) {
                                            return n.execute(e)
                                        })).catch(), [2, Promise.resolve(void 0)]
                                }
                            })
                        })
                    }, e.prototype.execute = function(e) {
                        var t = this;
                        return new Promise(function(f) {
                            t.addToQueue({
                                event: e,
                                attempts: 0,
                                callback: function(e) {
                                    return f(e)
                                },
                                timeout: 0
                            })
                        })
                    }, e.prototype.addToQueue = function() {
                        for (var e = this, t = [], f = 0; f < arguments.length; f++) t[f] = arguments[f];
                        t.filter(function(t) {
                            return t.attempts < e.config.flushMaxRetries ? (t.attempts += 1, !0) : (e.fulfillRequest([t], 500, "Event rejected due to exceeded retry count"), !1)
                        }).forEach(function(t) {
                            if (e.queue = e.queue.concat(t), 0 === t.timeout) {
                                e.schedule(e.config.flushIntervalMillis);
                                return
                            }
                            setTimeout(function() {
                                t.timeout = 0, e.schedule(0)
                            }, t.timeout)
                        }), this.saveEvents()
                    }, e.prototype.schedule = function(e) {
                        var t = this;
                        this.scheduled || (this.scheduled = setTimeout(function() {
                            t.flush(!0).then(function() {
                                t.queue.length > 0 && t.schedule(e)
                            })
                        }, e))
                    }, e.prototype.flush = function(e) {
                        return void 0 === e && (e = !1), (0, s.__awaiter)(this, void 0, void 0, function() {
                            var t, f, n = this;
                            return (0, s.__generator)(this, function(r) {
                                switch (r.label) {
                                    case 0:
                                        return t = [], f = [], this.queue.forEach(function(e) {
                                            return 0 === e.timeout ? t.push(e) : f.push(e)
                                        }), this.queue = f, this.scheduled && (clearTimeout(this.scheduled), this.scheduled = null), [4, Promise.all(R(t, this.config.flushQueueSize).map(function(t) {
                                            return n.send(t, e)
                                        }))];
                                    case 1:
                                        return r.sent(), [2]
                                }
                            })
                        })
                    }, e.prototype.send = function(e, t) {
                        return void 0 === t && (t = !0), (0, s.__awaiter)(this, void 0, void 0, function() {
                            var f, n, r, i, a;
                            return (0, s.__generator)(this, function(o) {
                                switch (o.label) {
                                    case 0:
                                        if (!this.config.apiKey) return [2, this.fulfillRequest(e, 400, "Event rejected due to missing API key")];
                                        f = {
                                            api_key: this.config.apiKey,
                                            events: e.map(function(e) {
                                                var t = e.event;
                                                return t.extra, (0, s.__rest)(t, ["extra"])
                                            }),
                                            options: {
                                                min_id_length: this.config.minIdLength
                                            }
                                        }, o.label = 1;
                                    case 1:
                                        return o.trys.push([1, 3, , 4]), n = q(this.config.serverUrl, this.config.serverZone, this.config.useBatch).serverUrl, [4, this.config.transportProvider.send(n, f)];
                                    case 2:
                                        if (null === (r = o.sent())) return this.fulfillRequest(e, 0, "Unexpected error occurred"), [2];
                                        if (!t) return "body" in r ? this.fulfillRequest(e, r.statusCode, "".concat(r.status, ": ").concat(U(r))) : this.fulfillRequest(e, r.statusCode, r.status), [2];
                                        return this.handleResponse(r, e), [3, 4];
                                    case 3:
                                        return i = o.sent(), this.config.loggerProvider.error(i), a = i instanceof Error ? i.message : String(i), this.fulfillRequest(e, 0, a), [3, 4];
                                    case 4:
                                        return [2]
                                }
                            })
                        })
                    }, e.prototype.handleResponse = function(e, t) {
                        var f = e.status;
                        switch (f) {
                            case i.Success:
                                this.handleSuccessResponse(e, t);
                                break;
                            case i.Invalid:
                                this.handleInvalidResponse(e, t);
                                break;
                            case i.PayloadTooLarge:
                                this.handlePayloadTooLargeResponse(e, t);
                                break;
                            case i.RateLimit:
                                this.handleRateLimitResponse(e, t);
                                break;
                            default:
                                this.config.loggerProvider.warn("{code: 0, error: \"Status '".concat(f, "' provided for ").concat(t.length, ' events"}')), this.handleOtherResponse(t)
                        }
                    }, e.prototype.handleSuccessResponse = function(e, t) {
                        this.fulfillRequest(t, e.statusCode, "Event tracked successfully")
                    }, e.prototype.handleInvalidResponse = function(e, t) {
                        var f = this;
                        if (e.body.missingField || e.body.error.startsWith("Invalid API key")) {
                            this.fulfillRequest(t, e.statusCode, e.body.error);
                            return
                        }
                        var n = (0, s.__spreadArray)((0, s.__spreadArray)((0, s.__spreadArray)((0, s.__spreadArray)([], (0, s.__read)(Object.values(e.body.eventsWithInvalidFields)), !1), (0, s.__read)(Object.values(e.body.eventsWithMissingFields)), !1), (0, s.__read)(Object.values(e.body.eventsWithInvalidIdLengths)), !1), (0, s.__read)(e.body.silencedEvents), !1).flat(),
                            r = new Set(n),
                            i = t.filter(function(t, n) {
                                if (r.has(n)) {
                                    f.fulfillRequest([t], e.statusCode, e.body.error);
                                    return
                                }
                                return !0
                            });
                        i.length > 0 && this.config.loggerProvider.warn(U(e)), this.addToQueue.apply(this, (0, s.__spreadArray)([], (0, s.__read)(i), !1))
                    }, e.prototype.handlePayloadTooLargeResponse = function(e, t) {
                        if (1 === t.length) {
                            this.fulfillRequest(t, e.statusCode, e.body.error);
                            return
                        }
                        this.config.loggerProvider.warn(U(e)), this.config.flushQueueSize /= 2, this.addToQueue.apply(this, (0, s.__spreadArray)([], (0, s.__read)(t), !1))
                    }, e.prototype.handleRateLimitResponse = function(e, t) {
                        var f = this,
                            n = Object.keys(e.body.exceededDailyQuotaUsers),
                            r = Object.keys(e.body.exceededDailyQuotaDevices),
                            i = e.body.throttledEvents,
                            a = new Set(n),
                            o = new Set(r),
                            u = new Set(i),
                            d = t.filter(function(t, n) {
                                if (t.event.user_id && a.has(t.event.user_id) || t.event.device_id && o.has(t.event.device_id)) {
                                    f.fulfillRequest([t], e.statusCode, e.body.error);
                                    return
                                }
                                return u.has(n) && (t.timeout = f.throttleTimeout), !0
                            });
                        d.length > 0 && this.config.loggerProvider.warn(U(e)), this.addToQueue.apply(this, (0, s.__spreadArray)([], (0, s.__read)(d), !1))
                    }, e.prototype.handleOtherResponse = function(e) {
                        var t = this;
                        this.addToQueue.apply(this, (0, s.__spreadArray)([], (0, s.__read)(e.map(function(e) {
                            return e.timeout = e.attempts * t.retryTimeout, e
                        })), !1))
                    }, e.prototype.fulfillRequest = function(e, t, f) {
                        this.saveEvents(), e.forEach(function(e) {
                            return e.callback(F(e.event, t, f))
                        })
                    }, e.prototype.saveEvents = function() {
                        if (this.config.storageProvider) {
                            var e = Array.from(this.queue.map(function(e) {
                                return e.event
                            }));
                            this.config.storageProvider.set(this.storageKey, e)
                        }
                    }, e
                }(),
                G = function(e) {
                    return e ? (e ^ 16 * Math.random() >> e / 4).toString(16) : (String(1e7) + String(-1e3) + String(-4e3) + String(-8e3) + String(-1e11)).replace(/[018]/g, G)
                },
                j = f(20524),
                $ = f(2199),
                H = f(80375),
                W = function() {
                    function e() {
                        this.productId = "", this.quantity = 1, this.price = 0
                    }
                    return e.prototype.setProductId = function(e) {
                        return this.productId = e, this
                    }, e.prototype.setQuantity = function(e) {
                        return e > 0 && (this.quantity = e), this
                    }, e.prototype.setPrice = function(e) {
                        return this.price = e, this
                    }, e.prototype.setRevenueType = function(e) {
                        return this.revenueType = e, this
                    }, e.prototype.setRevenue = function(e) {
                        return this.revenue = e, this
                    }, e.prototype.setEventProperties = function(e) {
                        return (0, H.L)(e) && (this.properties = e), this
                    }, e.prototype.getEventProperties = function() {
                        var e = this.properties ? (0, s.__assign)({}, this.properties) : {};
                        return e[$.al.REVENUE_PRODUCT_ID] = this.productId, e[$.al.REVENUE_QUANTITY] = this.quantity, e[$.al.REVENUE_PRICE] = this.price, e[$.al.REVENUE_TYPE] = this.revenueType, e[$.al.REVENUE] = this.revenue, e
                    }, e
                }(),
                Q = function(e, t) {
                    return (0, s.__assign)((0, s.__assign)({}, t), {
                        event_type: $.JU.IDENTIFY,
                        user_properties: e.getUserProperties()
                    })
                },
                X = function(e, t, f, n) {
                    var r;
                    return (0, s.__assign)((0, s.__assign)({}, n), {
                        event_type: $.JU.GROUP_IDENTIFY,
                        group_properties: f.getUserProperties(),
                        groups: ((r = {})[e] = t, r)
                    })
                },
                z = function(e, t, f) {
                    var n, r = new j.h;
                    return r.set(e, t), (0, s.__assign)((0, s.__assign)({}, f), {
                        event_type: $.JU.IDENTIFY,
                        user_properties: r.getUserProperties(),
                        groups: ((n = {})[e] = t, n)
                    })
                },
                K = function() {
                    function e(e) {
                        this.client = e, this.queue = [], this.applying = !1, this.plugins = []
                    }
                    return e.prototype.register = function(e, t) {
                        return (0, s.__awaiter)(this, void 0, void 0, function() {
                            return (0, s.__generator)(this, function(f) {
                                switch (f.label) {
                                    case 0:
                                        return [4, e.setup(t, this.client)];
                                    case 1:
                                        return f.sent(), this.plugins.push(e), [2]
                                }
                            })
                        })
                    }, e.prototype.deregister = function(e) {
                        var t;
                        return (0, s.__awaiter)(this, void 0, void 0, function() {
                            var f, n;
                            return (0, s.__generator)(this, function(r) {
                                switch (r.label) {
                                    case 0:
                                        return f = this.plugins.findIndex(function(t) {
                                            return t.name === e
                                        }), n = this.plugins[f], this.plugins.splice(f, 1), [4, null === (t = n.teardown) || void 0 === t ? void 0 : t.call(n)];
                                    case 1:
                                        return r.sent(), [2]
                                }
                            })
                        })
                    }, e.prototype.reset = function(e) {
                        this.applying = !1, this.plugins.map(function(e) {
                            var t;
                            return null === (t = e.teardown) || void 0 === t ? void 0 : t.call(e)
                        }), this.plugins = [], this.client = e
                    }, e.prototype.push = function(e) {
                        var t = this;
                        return new Promise(function(f) {
                            t.queue.push([e, f]), t.scheduleApply(0)
                        })
                    }, e.prototype.scheduleApply = function(e) {
                        var t = this;
                        this.applying || (this.applying = !0, setTimeout(function() {
                            t.apply(t.queue.shift()).then(function() {
                                t.applying = !1, t.queue.length > 0 && t.scheduleApply(0)
                            })
                        }, e))
                    }, e.prototype.apply = function(e) {
                        return (0, s.__awaiter)(this, void 0, void 0, function() {
                            var t, f, n, i, a, o, u, d, c, l, p, y, b;
                            return (0, s.__generator)(this, function(h) {
                                switch (h.label) {
                                    case 0:
                                        if (!e) return [2];
                                        t = (0, s.__read)(e, 1)[0], f = (0, s.__read)(e, 2)[1], n = this.plugins.filter(function(e) {
                                            return e.type === r.BEFORE
                                        }), h.label = 1;
                                    case 1:
                                        h.trys.push([1, 6, 7, 8]), a = (i = (0, s.__values)(n)).next(), h.label = 2;
                                    case 2:
                                        if (a.done) return [3, 5];
                                        return [4, (0, a.value).execute((0, s.__assign)({}, t))];
                                    case 3:
                                        if (null === (o = h.sent())) return f({
                                            event: t,
                                            code: 0,
                                            message: ""
                                        }), [2];
                                        t = o, h.label = 4;
                                    case 4:
                                        return a = i.next(), [3, 2];
                                    case 5:
                                        return [3, 8];
                                    case 6:
                                        return l = {
                                            error: h.sent()
                                        }, [3, 8];
                                    case 7:
                                        try {
                                            a && !a.done && (p = i.return) && p.call(i)
                                        } finally {
                                            if (l) throw l.error
                                        }
                                        return [7];
                                    case 8:
                                        u = this.plugins.filter(function(e) {
                                            return e.type === r.ENRICHMENT
                                        }), h.label = 9;
                                    case 9:
                                        h.trys.push([9, 14, 15, 16]), c = (d = (0, s.__values)(u)).next(), h.label = 10;
                                    case 10:
                                        if (c.done) return [3, 13];
                                        return [4, (0, c.value).execute((0, s.__assign)({}, t))];
                                    case 11:
                                        if (null === (o = h.sent())) return f({
                                            event: t,
                                            code: 0,
                                            message: ""
                                        }), [2];
                                        t = o, h.label = 12;
                                    case 12:
                                        return c = d.next(), [3, 10];
                                    case 13:
                                        return [3, 16];
                                    case 14:
                                        return y = {
                                            error: h.sent()
                                        }, [3, 16];
                                    case 15:
                                        try {
                                            c && !c.done && (b = d.return) && b.call(d)
                                        } finally {
                                            if (y) throw y.error
                                        }
                                        return [7];
                                    case 16:
                                        return Promise.all(this.plugins.filter(function(e) {
                                            return e.type === r.DESTINATION
                                        }).map(function(e) {
                                            var f = (0, s.__assign)({}, t);
                                            return e.execute(f).catch(function(e) {
                                                return F(f, 0, String(e))
                                            })
                                        })).then(function(e) {
                                            var t = (0, s.__read)(e, 1)[0];
                                            f(t)
                                        }), [2]
                                }
                            })
                        })
                    }, e.prototype.flush = function() {
                        return (0, s.__awaiter)(this, void 0, void 0, function() {
                            var e, t = this;
                            return (0, s.__generator)(this, function(f) {
                                switch (f.label) {
                                    case 0:
                                        return e = this.queue, this.queue = [], [4, Promise.all(e.map(function(e) {
                                            return t.apply(e)
                                        }))];
                                    case 1:
                                        return f.sent(), [4, Promise.all(this.plugins.filter(function(e) {
                                            return e.type === r.DESTINATION
                                        }).map(function(e) {
                                            return e.flush && e.flush()
                                        }))];
                                    case 2:
                                        return f.sent(), [2]
                                }
                            })
                        })
                    }, e
                }(),
                Y = function() {
                    function e(e) {
                        void 0 === e && (e = "$default"), this.initializing = !1, this.q = [], this.dispatchQ = [], this.logEvent = this.track.bind(this), this.timeline = new K(this), this.name = e
                    }
                    return e.prototype._init = function(e) {
                        return (0, s.__awaiter)(this, void 0, void 0, function() {
                            return (0, s.__generator)(this, function(t) {
                                switch (t.label) {
                                    case 0:
                                        return this.config = e, this.timeline.reset(this), [4, this.runQueuedFunctions("q")];
                                    case 1:
                                        return t.sent(), [2]
                                }
                            })
                        })
                    }, e.prototype.runQueuedFunctions = function(e) {
                        return (0, s.__awaiter)(this, void 0, void 0, function() {
                            var t, f, n, r, i;
                            return (0, s.__generator)(this, function(a) {
                                switch (a.label) {
                                    case 0:
                                        t = this[e], this[e] = [], a.label = 1;
                                    case 1:
                                        a.trys.push([1, 6, 7, 8]), n = (f = (0, s.__values)(t)).next(), a.label = 2;
                                    case 2:
                                        if (n.done) return [3, 5];
                                        return [4, (0, n.value)()];
                                    case 3:
                                        a.sent(), a.label = 4;
                                    case 4:
                                        return n = f.next(), [3, 2];
                                    case 5:
                                        return [3, 8];
                                    case 6:
                                        return r = {
                                            error: a.sent()
                                        }, [3, 8];
                                    case 7:
                                        try {
                                            n && !n.done && (i = f.return) && i.call(f)
                                        } finally {
                                            if (r) throw r.error
                                        }
                                        return [7];
                                    case 8:
                                        return [2]
                                }
                            })
                        })
                    }, e.prototype.track = function(e, t, f) {
                        var n = (0, s.__assign)((0, s.__assign)((0, s.__assign)({}, "string" == typeof e ? {
                            event_type: e
                        } : e), f), t && {
                            event_properties: t
                        });
                        return x(this.dispatch(n))
                    }, e.prototype.identify = function(e, t) {
                        var f = Q(e, t);
                        return x(this.dispatch(f))
                    }, e.prototype.groupIdentify = function(e, t, f, n) {
                        var r = X(e, t, f, n);
                        return x(this.dispatch(r))
                    }, e.prototype.setGroup = function(e, t, f) {
                        var n = z(e, t, f);
                        return x(this.dispatch(n))
                    }, e.prototype.revenue = function(e, t) {
                        var f = (0, s.__assign)((0, s.__assign)({}, t), {
                            event_type: $.JU.REVENUE,
                            event_properties: e.getEventProperties()
                        });
                        return x(this.dispatch(f))
                    }, e.prototype.add = function(e) {
                        return this.config ? x(this.timeline.register(e, this.config)) : (this.q.push(this.add.bind(this, e)), x())
                    }, e.prototype.remove = function(e) {
                        return this.config ? x(this.timeline.deregister(e)) : (this.q.push(this.remove.bind(this, e)), x())
                    }, e.prototype.dispatchWithCallback = function(e, t) {
                        if (!this.config) return t(F(e, 0, "Client not initialized"));
                        this.process(e).then(t)
                    }, e.prototype.dispatch = function(e) {
                        return (0, s.__awaiter)(this, void 0, void 0, function() {
                            var t = this;
                            return (0, s.__generator)(this, function(f) {
                                return this.config ? [2, this.process(e)] : [2, new Promise(function(f) {
                                    t.dispatchQ.push(t.dispatchWithCallback.bind(t, e, f))
                                })]
                            })
                        })
                    }, e.prototype.process = function(e) {
                        return (0, s.__awaiter)(this, void 0, void 0, function() {
                            var t, f;
                            return (0, s.__generator)(this, function(n) {
                                switch (n.label) {
                                    case 0:
                                        if (n.trys.push([0, 2, , 3]), this.config.optOut) return [2, F(e, 0, "Event skipped due to optOut config")];
                                        return [4, this.timeline.push(e)];
                                    case 1:
                                        return 200 === (t = n.sent()).code ? this.config.loggerProvider.log(t.message) : this.config.loggerProvider.error(t.message), [2, t];
                                    case 2:
                                        return f = n.sent(), this.config.loggerProvider.error(f), [2, t = F(e, 0, String(f))];
                                    case 3:
                                        return [2]
                                }
                            })
                        })
                    }, e.prototype.setOptOut = function(e) {
                        if (!this.config) {
                            this.q.push(this.setOptOut.bind(this, !!e));
                            return
                        }
                        this.config.optOut = !!e
                    }, e.prototype.flush = function() {
                        return x(this.timeline.flush())
                    }, e
                }(),
                J = "dclid",
                Z = "fbclid",
                ee = "gbraid",
                et = "gclid",
                ef = "ko_click_id",
                en = "li_fat_id",
                er = "msclkid",
                ei = "rtd_cid",
                ea = "ttclid",
                eo = "twclid",
                es = "wbraid",
                eu = {
                    utm_campaign: void 0,
                    utm_content: void 0,
                    utm_id: void 0,
                    utm_medium: void 0,
                    utm_source: void 0,
                    utm_term: void 0,
                    referrer: void 0,
                    referring_domain: void 0,
                    dclid: void 0,
                    gbraid: void 0,
                    gclid: void 0,
                    fbclid: void 0,
                    ko_click_id: void 0,
                    li_fat_id: void 0,
                    msclkid: void 0,
                    rtd_cid: void 0,
                    ttclid: void 0,
                    twclid: void 0,
                    wbraid: void 0
                },
                ed = function() {
                    function e() {}
                    return e.prototype.parse = function() {
                        return (0, s.__awaiter)(this, void 0, void 0, function() {
                            return (0, s.__generator)(this, function(e) {
                                return [2, (0, s.__assign)((0, s.__assign)((0, s.__assign)((0, s.__assign)({}, eu), this.getUtmParam()), this.getReferrer()), this.getClickIds())]
                            })
                        })
                    }, e.prototype.getUtmParam = function() {
                        var e = h();
                        return {
                            utm_campaign: e.utm_campaign,
                            utm_content: e.utm_content,
                            utm_id: e.utm_id,
                            utm_medium: e.utm_medium,
                            utm_source: e.utm_source,
                            utm_term: e.utm_term
                        }
                    }, e.prototype.getReferrer = function() {
                        var e, t, f = {
                            referrer: void 0,
                            referring_domain: void 0
                        };
                        try {
                            f.referrer = document.referrer || void 0, f.referring_domain = null !== (t = null === (e = f.referrer) || void 0 === e ? void 0 : e.split("/")[2]) && void 0 !== t ? t : void 0
                        } catch (e) {}
                        return f
                    }, e.prototype.getClickIds = function() {
                        var e, t = h();
                        return (e = {})[J] = t[J], e[Z] = t[Z], e[ee] = t[ee], e[et] = t[et], e[ef] = t[ef], e[en] = t[en], e[er] = t[er], e[ei] = t[ei], e[ea] = t[ea], e[eo] = t[eo], e[es] = t[es], e
                    }, e
                }(),
                ec = function(e) {
                    var t = {};
                    for (var f in e) {
                        var n = e[f];
                        n && (t[f] = n)
                    }
                    return t
                },
                el = function() {
                    for (var e, t, f = [], n = 0; n < arguments.length; n++) f[n] = arguments[n];
                    var i = {},
                        a = b(),
                        o = void 0,
                        u = (0, s.__read)(f, 2),
                        d = u[0],
                        c = u[1];
                    d && "init" in d ? (e = d, c && (i = c)) : d && (i = d);
                    var l = function() {
                            return (0, s.__awaiter)(void 0, void 0, void 0, function() {
                                var e, t, f;
                                return (0, s.__generator)(this, function(n) {
                                    switch (n.label) {
                                        case 0:
                                            return t = {
                                                event_type: null !== (f = i.eventType) && void 0 !== f ? f : "Page View"
                                            }, e = [{}], [4, ep()];
                                        case 1:
                                            return [2, (t.event_properties = s.__assign.apply(void 0, [s.__assign.apply(void 0, e.concat([n.sent()])), {
                                                page_domain: "undefined" != typeof location && location.hostname || "",
                                                page_location: "undefined" != typeof location && location.href || "",
                                                page_path: "undefined" != typeof location && location.pathname || "",
                                                page_title: "undefined" != typeof document && document.title || "",
                                                page_url: "undefined" != typeof location && location.href.split("?")[0] || ""
                                            }]), t)]
                                    }
                                })
                            })
                        },
                        p = function() {
                            return void 0 === i.trackOn || "function" == typeof i.trackOn && i.trackOn()
                        },
                        y = "undefined" != typeof location ? location.href : null,
                        h = function() {
                            return (0, s.__awaiter)(void 0, void 0, void 0, function() {
                                var t, f, n, r;
                                return (0, s.__generator)(this, function(a) {
                                    switch (a.label) {
                                        case 0:
                                            if (t = location.href, f = eb(i.trackHistoryChanges, t, y || "") && p(), y = t, !f) return [3, 4];
                                            if (null == o || o.log("Tracking page view event"), null != e) return [3, 1];
                                            return [3, 3];
                                        case 1:
                                            return r = (n = e).track, [4, l()];
                                        case 2:
                                            r.apply(n, [a.sent()]), a.label = 3;
                                        case 3:
                                            a.label = 4;
                                        case 4:
                                            return [2]
                                    }
                                })
                            })
                        },
                        m = function() {
                            h()
                        },
                        v = {
                            name: "page-view-tracking",
                            type: r.ENRICHMENT,
                            setup: function(f, n) {
                                return (0, s.__awaiter)(void 0, void 0, void 0, function() {
                                    var r, u, c, y, b;
                                    return (0, s.__generator)(this, function(v) {
                                        switch (v.label) {
                                            case 0:
                                                if (!(e = null != e ? e : n)) return r = d ? "Options" : "undefined", f.loggerProvider.error("Argument of type '".concat(r, "' is not assignable to parameter of type 'BrowserClient'.")), [2];
                                                if ((o = f.loggerProvider).log("Installing @amplitude/plugin-page-view-tracking-browser"), i.trackOn = (null === (y = f.attribution) || void 0 === y ? void 0 : y.trackPageViews) ? "attribution" : i.trackOn, !n && (null === (b = f.attribution) || void 0 === b ? void 0 : b.trackPageViews) && (o.warn("@amplitude/plugin-page-view-tracking-browser overrides page view tracking behavior defined in @amplitude/analytics-browser. Resolve by disabling page view tracking in @amplitude/analytics-browser."), f.attribution.trackPageViews = !1), i.trackHistoryChanges && a && (a.addEventListener("popstate", m), t = a.history.pushState, a.history.pushState = new Proxy(a.history.pushState, {
                                                        apply: function(e, t, f) {
                                                            var n = (0, s.__read)(f, 3),
                                                                r = n[0],
                                                                i = n[1],
                                                                a = n[2];
                                                            e.apply(t, [r, i, a]), h()
                                                        }
                                                    })), !p()) return [3, 2];
                                                return o.log("Tracking page view event"), c = (u = e).track, [4, l()];
                                            case 1:
                                                c.apply(u, [v.sent()]), v.label = 2;
                                            case 2:
                                                return [2]
                                        }
                                    })
                                })
                            },
                            execute: function(e) {
                                return (0, s.__awaiter)(void 0, void 0, void 0, function() {
                                    var t;
                                    return (0, s.__generator)(this, function(f) {
                                        switch (f.label) {
                                            case 0:
                                                if (!("attribution" === i.trackOn && ey(e))) return [3, 2];
                                                return null == o || o.log("Enriching campaign event to page view event with campaign parameters"), [4, l()];
                                            case 1:
                                                t = f.sent(), e.event_type = t.event_type, e.event_properties = (0, s.__assign)((0, s.__assign)({}, e.event_properties), t.event_properties), f.label = 2;
                                            case 2:
                                                return [2, e]
                                        }
                                    })
                                })
                            },
                            teardown: function() {
                                return (0, s.__awaiter)(void 0, void 0, void 0, function() {
                                    return (0, s.__generator)(this, function(e) {
                                        return a && (a.removeEventListener("popstate", m), t && (a.history.pushState = t)), [2]
                                    })
                                })
                            }
                        };
                    return v.__trackHistoryPageView = h, v
                },
                ep = function() {
                    return (0, s.__awaiter)(void 0, void 0, void 0, function() {
                        var e;
                        return (0, s.__generator)(this, function(t) {
                            switch (t.label) {
                                case 0:
                                    return e = ec, [4, new ed().parse()];
                                case 1:
                                    return [2, e.apply(void 0, [t.sent()])]
                            }
                        })
                    })
                },
                ey = function(e) {
                    if ("$identify" === e.event_type && e.user_properties) {
                        var t = e.user_properties,
                            f = t[$.h9.SET] || {},
                            n = t[$.h9.UNSET] || {},
                            r = (0, s.__spreadArray)((0, s.__spreadArray)([], (0, s.__read)(Object.keys(f)), !1), (0, s.__read)(Object.keys(n)), !1);
                        return Object.keys(eu).every(function(e) {
                            return r.includes(e)
                        })
                    }
                    return !1
                },
                eb = function(e, t, f) {
                    return "pathOnly" === e ? t.split("?")[0] !== f.split("?")[0] : t !== f
                },
                eh = function(e) {
                    var t = e.split(".");
                    return t.length <= 2 ? e : t.slice(t.length - 2, t.length).join(".")
                },
                em = function(e, t, f) {
                    e.referrer;
                    var n, r = e.referring_domain,
                        i = (0, s.__rest)(e, ["referrer", "referring_domain"]),
                        a = t || {},
                        o = (a.referrer, a.referring_domain),
                        u = (0, s.__rest)(a, ["referrer", "referring_domain"]);
                    if (e.referring_domain && (null === (n = f.excludeReferrers) || void 0 === n ? void 0 : n.includes(e.referring_domain))) return !1;
                    var d = JSON.stringify(i) !== JSON.stringify(u),
                        c = eh(r || "") !== eh(o || "");
                    return !t || d || c
                },
                ev = function() {
                    for (var e, t, f = this, n = [], i = 0; i < arguments.length; i++) n[i] = arguments[i];
                    var a = {},
                        o = (0, s.__read)(n, 2),
                        u = o[0],
                        d = o[1];
                    u && "init" in u ? (t = u, d && (a = d)) : u && (a = u);
                    var c = null !== (e = a.excludeReferrers) && void 0 !== e ? e : [];
                    "undefined" != typeof location && c.unshift(location.hostname), a = (0, s.__assign)((0, s.__assign)({
                        disabled: !1,
                        initialEmptyValue: "EMPTY",
                        resetSessionOnNewCampaign: !1
                    }, a), {
                        excludeReferrers: c
                    });
                    var l = {
                        name: "web-attribution",
                        type: r.BEFORE,
                        setup: function(e, f) {
                            var n;
                            return (0, s.__awaiter)(this, void 0, void 0, function() {
                                var r, i, o, d, c, l, y, b;
                                return (0, s.__generator)(this, function(h) {
                                    var m, v, T;
                                    switch (h.label) {
                                        case 0:
                                            if (!(t = null != t ? t : f)) return r = u ? "Options" : "undefined", e.loggerProvider.error("Argument of type '".concat(r, "' is not assignable to parameter of type 'BrowserClient'.")), [2];
                                            if (a.disabled) return e.loggerProvider.log("@amplitude/plugin-web-attribution-browser is disabled. Attribution is not tracked."), [2];
                                            return e.loggerProvider.log("Installing @amplitude/plugin-web-attribution-browser."), f || (null === (n = e.attribution) || void 0 === n ? void 0 : n.disabled) || (e.loggerProvider.warn("@amplitude/plugin-web-attribution-browser overrides web attribution behavior defined in @amplitude/analytics-browser. Resolve by disabling web attribution tracking in @amplitude/analytics-browser."), e.attribution = {
                                                disabled: !0
                                            }), i = e.cookieStorage, m = e.apiKey, void 0 === v && (v = 10), o = [p.xp, "MKTG", m.substring(0, v)].filter(Boolean).join("_"), [4, Promise.all([new ed().parse(), i.get(o)])];
                                        case 1:
                                            return c = (d = s.__read.apply(void 0, [h.sent(), 2]))[0], l = d[1], (null != (y = this.__pluginEnabledOverride) ? y : em(c, l, a)) && (a.resetSessionOnNewCampaign && (t.setSessionId(Date.now()), e.loggerProvider.log("Created a new session for new campaign.")), e.loggerProvider.log("Tracking attribution."), T = a, b = Q(Object.entries((0, s.__assign)((0, s.__assign)({}, eu), c)).reduce(function(e, t) {
                                                var f, n = (0, s.__read)(t, 2),
                                                    r = n[0],
                                                    i = n[1];
                                                return (e.setOnce("initial_".concat(r), null !== (f = null != i ? i : T.initialEmptyValue) && void 0 !== f ? f : "EMPTY"), i) ? e.set(r, i) : e.unset(r)
                                            }, new j.h)), t.track(b), i.set(o, c)), [2]
                                    }
                                })
                            })
                        },
                        execute: function(e) {
                            return (0, s.__awaiter)(f, void 0, void 0, function() {
                                return (0, s.__generator)(this, function(t) {
                                    return [2, e]
                                })
                            })
                        }
                    };
                    return l.__pluginEnabledOverride = void 0, l
                };
            ! function(e) {
                e.XHR = "xhr", e.SendBeacon = "beacon", e.Fetch = "fetch"
            }(o || (o = {}));
            var eT = function() {
                    function e() {
                        this.memoryStorage = new Map
                    }
                    return e.prototype.isEnabled = function() {
                        return (0, s.__awaiter)(this, void 0, void 0, function() {
                            return (0, s.__generator)(this, function(e) {
                                return [2, !0]
                            })
                        })
                    }, e.prototype.get = function(e) {
                        return (0, s.__awaiter)(this, void 0, void 0, function() {
                            return (0, s.__generator)(this, function(t) {
                                return [2, this.memoryStorage.get(e)]
                            })
                        })
                    }, e.prototype.getRaw = function(e) {
                        return (0, s.__awaiter)(this, void 0, void 0, function() {
                            var t;
                            return (0, s.__generator)(this, function(f) {
                                switch (f.label) {
                                    case 0:
                                        return [4, this.get(e)];
                                    case 1:
                                        return [2, (t = f.sent()) ? JSON.stringify(t) : void 0]
                                }
                            })
                        })
                    }, e.prototype.set = function(e, t) {
                        return (0, s.__awaiter)(this, void 0, void 0, function() {
                            return (0, s.__generator)(this, function(f) {
                                return this.memoryStorage.set(e, t), [2]
                            })
                        })
                    }, e.prototype.remove = function(e) {
                        return (0, s.__awaiter)(this, void 0, void 0, function() {
                            return (0, s.__generator)(this, function(t) {
                                return this.memoryStorage.delete(e), [2]
                            })
                        })
                    }, e.prototype.reset = function() {
                        return (0, s.__awaiter)(this, void 0, void 0, function() {
                            return (0, s.__generator)(this, function(e) {
                                return this.memoryStorage.clear(), [2]
                            })
                        })
                    }, e
                }(),
                eg = function() {
                    function e() {}
                    return e.prototype.send = function(e, t) {
                        return Promise.resolve(null)
                    }, e.prototype.buildResponse = function(e) {
                        if ("object" != typeof e) return null;
                        var t, f, n, r, a, o, s, u, d, c, l, p, y, b, h, m, v, T, g, w, A, I, E = e.code || 0,
                            _ = this.buildStatus(E);
                        switch (_) {
                            case i.Success:
                                return {
                                    status: _,
                                    statusCode: E,
                                    body: {
                                        eventsIngested: null !== (t = e.events_ingested) && void 0 !== t ? t : 0,
                                        payloadSizeBytes: null !== (f = e.payload_size_bytes) && void 0 !== f ? f : 0,
                                        serverUploadTime: null !== (n = e.server_upload_time) && void 0 !== n ? n : 0
                                    }
                                };
                            case i.Invalid:
                                return {
                                    status: _,
                                    statusCode: E,
                                    body: {
                                        error: null !== (r = e.error) && void 0 !== r ? r : "",
                                        missingField: null !== (a = e.missing_field) && void 0 !== a ? a : "",
                                        eventsWithInvalidFields: null !== (o = e.events_with_invalid_fields) && void 0 !== o ? o : {},
                                        eventsWithMissingFields: null !== (s = e.events_with_missing_fields) && void 0 !== s ? s : {},
                                        eventsWithInvalidIdLengths: null !== (u = e.events_with_invalid_id_lengths) && void 0 !== u ? u : {},
                                        epsThreshold: null !== (d = e.eps_threshold) && void 0 !== d ? d : 0,
                                        exceededDailyQuotaDevices: null !== (c = e.exceeded_daily_quota_devices) && void 0 !== c ? c : {},
                                        silencedDevices: null !== (l = e.silenced_devices) && void 0 !== l ? l : [],
                                        silencedEvents: null !== (p = e.silenced_events) && void 0 !== p ? p : [],
                                        throttledDevices: null !== (y = e.throttled_devices) && void 0 !== y ? y : {},
                                        throttledEvents: null !== (b = e.throttled_events) && void 0 !== b ? b : []
                                    }
                                };
                            case i.PayloadTooLarge:
                                return {
                                    status: _,
                                    statusCode: E,
                                    body: {
                                        error: null !== (h = e.error) && void 0 !== h ? h : ""
                                    }
                                };
                            case i.RateLimit:
                                return {
                                    status: _,
                                    statusCode: E,
                                    body: {
                                        error: null !== (m = e.error) && void 0 !== m ? m : "",
                                        epsThreshold: null !== (v = e.eps_threshold) && void 0 !== v ? v : 0,
                                        throttledDevices: null !== (T = e.throttled_devices) && void 0 !== T ? T : {},
                                        throttledUsers: null !== (g = e.throttled_users) && void 0 !== g ? g : {},
                                        exceededDailyQuotaDevices: null !== (w = e.exceeded_daily_quota_devices) && void 0 !== w ? w : {},
                                        exceededDailyQuotaUsers: null !== (A = e.exceeded_daily_quota_users) && void 0 !== A ? A : {},
                                        throttledEvents: null !== (I = e.throttled_events) && void 0 !== I ? I : []
                                    }
                                };
                            case i.Timeout:
                            default:
                                return {
                                    status: _,
                                    statusCode: E
                                }
                        }
                    }, e.prototype.buildStatus = function(e) {
                        return e >= 200 && e < 300 ? i.Success : 429 === e ? i.RateLimit : 413 === e ? i.PayloadTooLarge : 408 === e ? i.Timeout : e >= 400 && e < 500 ? i.Invalid : e >= 500 ? i.Failed : i.Unknown
                    }, e
                }(),
                ew = function(e) {
                    function t() {
                        return null !== e && e.apply(this, arguments) || this
                    }
                    return (0, s.__extends)(t, e), t.prototype.send = function(e, t) {
                        return (0, s.__awaiter)(this, void 0, void 0, function() {
                            var f, n;
                            return (0, s.__generator)(this, function(r) {
                                switch (r.label) {
                                    case 0:
                                        if ("undefined" == typeof fetch) throw Error("FetchTransport is not supported");
                                        return f = {
                                            headers: {
                                                "Content-Type": "application/json",
                                                Accept: "*/*"
                                            },
                                            body: JSON.stringify(t),
                                            method: "POST"
                                        }, [4, fetch(e, f)];
                                    case 1:
                                        return [4, r.sent().json()];
                                    case 2:
                                        return n = r.sent(), [2, this.buildResponse(n)]
                                }
                            })
                        })
                    }, t
                }(eg),
                eA = function() {
                    function e(e) {
                        this.options = (0, s.__assign)({}, e)
                    }
                    return e.prototype.isEnabled = function() {
                        return (0, s.__awaiter)(this, void 0, void 0, function() {
                            var t, f;
                            return (0, s.__generator)(this, function(n) {
                                switch (n.label) {
                                    case 0:
                                        if (!b()) return [2, !1];
                                        e.testValue = String(Date.now()), t = new e(this.options), f = "AMP_TEST", n.label = 1;
                                    case 1:
                                        return n.trys.push([1, 4, 5, 7]), [4, t.set(f, e.testValue)];
                                    case 2:
                                        return n.sent(), [4, t.get(f)];
                                    case 3:
                                        return [2, n.sent() === e.testValue];
                                    case 4:
                                        return n.sent(), [2, !1];
                                    case 5:
                                        return [4, t.remove(f)];
                                    case 6:
                                        return n.sent(), [7];
                                    case 7:
                                        return [2]
                                }
                            })
                        })
                    }, e.prototype.get = function(e) {
                        return (0, s.__awaiter)(this, void 0, void 0, function() {
                            var t;
                            return (0, s.__generator)(this, function(f) {
                                switch (f.label) {
                                    case 0:
                                        return [4, this.getRaw(e)];
                                    case 1:
                                        if (!(t = f.sent())) return [2, void 0];
                                        try {
                                            try {
                                                t = decodeURIComponent(atob(t))
                                            } catch (e) {}
                                            return [2, JSON.parse(t)]
                                        } catch (e) {
                                            return [2, void 0]
                                        }
                                        return [2]
                                }
                            })
                        })
                    }, e.prototype.getRaw = function(e) {
                        var t;
                        return (0, s.__awaiter)(this, void 0, void 0, function() {
                            var f, n;
                            return (0, s.__generator)(this, function(r) {
                                return (n = (null !== (t = null == (f = b()) ? void 0 : f.document.cookie.split("; ")) && void 0 !== t ? t : []).find(function(t) {
                                    return 0 === t.indexOf(e + "=")
                                })) ? [2, n.substring(e.length + 1)] : [2, void 0]
                            })
                        })
                    }, e.prototype.set = function(e, t) {
                        var f;
                        return (0, s.__awaiter)(this, void 0, void 0, function() {
                            var n, r, i, a, o, u;
                            return (0, s.__generator)(this, function(s) {
                                try {
                                    n = null !== (f = this.options.expirationDays) && void 0 !== f ? f : 0, r = null !== t ? n : -1, i = void 0, r && ((a = new Date).setTime(a.getTime() + 864e5 * r), i = a), o = "".concat(e, "=").concat(btoa(encodeURIComponent(JSON.stringify(t)))), i && (o += "; expires=".concat(i.toUTCString())), o += "; path=/", this.options.domain && (o += "; domain=".concat(this.options.domain)), this.options.secure && (o += "; Secure"), this.options.sameSite && (o += "; SameSite=".concat(this.options.sameSite)), (u = b()) && (u.document.cookie = o)
                                } catch (e) {}
                                return [2]
                            })
                        })
                    }, e.prototype.remove = function(e) {
                        return (0, s.__awaiter)(this, void 0, void 0, function() {
                            return (0, s.__generator)(this, function(t) {
                                switch (t.label) {
                                    case 0:
                                        return [4, this.set(e, null)];
                                    case 1:
                                        return t.sent(), [2]
                                }
                            })
                        })
                    }, e.prototype.reset = function() {
                        return (0, s.__awaiter)(this, void 0, void 0, function() {
                            return (0, s.__generator)(this, function(e) {
                                return [2]
                            })
                        })
                    }, e
                }(),
                eI = function() {
                    function e(e) {
                        this.loggerProvider = null == e ? void 0 : e.loggerProvider
                    }
                    return e.prototype.isEnabled = function() {
                        return (0, s.__awaiter)(this, void 0, void 0, function() {
                            var t, f, n;
                            return (0, s.__generator)(this, function(r) {
                                switch (r.label) {
                                    case 0:
                                        if (!b()) return [2, !1];
                                        t = String(Date.now()), f = new e, n = "AMP_TEST", r.label = 1;
                                    case 1:
                                        return r.trys.push([1, 4, 5, 7]), [4, f.set(n, t)];
                                    case 2:
                                        return r.sent(), [4, f.get(n)];
                                    case 3:
                                        return [2, r.sent() === t];
                                    case 4:
                                        return r.sent(), [2, !1];
                                    case 5:
                                        return [4, f.remove(n)];
                                    case 6:
                                        return r.sent(), [7];
                                    case 7:
                                        return [2]
                                }
                            })
                        })
                    }, e.prototype.get = function(e) {
                        return (0, s.__awaiter)(this, void 0, void 0, function() {
                            var t;
                            return (0, s.__generator)(this, function(f) {
                                switch (f.label) {
                                    case 0:
                                        return f.trys.push([0, 2, , 3]), [4, this.getRaw(e)];
                                    case 1:
                                        if (!(t = f.sent())) return [2, void 0];
                                        return [2, JSON.parse(t)];
                                    case 2:
                                        return f.sent(), [2, void 0];
                                    case 3:
                                        return [2]
                                }
                            })
                        })
                    }, e.prototype.getRaw = function(e) {
                        var t;
                        return (0, s.__awaiter)(this, void 0, void 0, function() {
                            return (0, s.__generator)(this, function(f) {
                                return [2, (null === (t = b()) || void 0 === t ? void 0 : t.localStorage.getItem(e)) || void 0]
                            })
                        })
                    }, e.prototype.set = function(e, t) {
                        var f, n;
                        return (0, s.__awaiter)(this, void 0, void 0, function() {
                            var r, i, a;
                            return (0, s.__generator)(this, function(o) {
                                r = Array.isArray(t) && t.length > 1e3;
                                try {
                                    i = r ? JSON.stringify(t.slice(0, 1e3)) : JSON.stringify(t), null === (f = b()) || void 0 === f || f.localStorage.setItem(e, i)
                                } catch (e) {}
                                return r && (a = t.length - 1e3, null === (n = this.loggerProvider) || void 0 === n || n.error("Failed to save ".concat(a, " events because the queue length exceeded ").concat(1e3, "."))), [2]
                            })
                        })
                    }, e.prototype.remove = function(e) {
                        var t;
                        return (0, s.__awaiter)(this, void 0, void 0, function() {
                            return (0, s.__generator)(this, function(f) {
                                try {
                                    null === (t = b()) || void 0 === t || t.localStorage.removeItem(e)
                                } catch (e) {}
                                return [2]
                            })
                        })
                    }, e.prototype.reset = function() {
                        var e;
                        return (0, s.__awaiter)(this, void 0, void 0, function() {
                            return (0, s.__generator)(this, function(t) {
                                try {
                                    null === (e = b()) || void 0 === e || e.localStorage.clear()
                                } catch (e) {}
                                return [2]
                            })
                        })
                    }, e
                }(),
                eE = function(e) {
                    function t() {
                        var t = null !== e && e.apply(this, arguments) || this;
                        return t.state = {
                            done: 4
                        }, t
                    }
                    return (0, s.__extends)(t, e), t.prototype.send = function(e, t) {
                        return (0, s.__awaiter)(this, void 0, void 0, function() {
                            var f = this;
                            return (0, s.__generator)(this, function(n) {
                                return [2, new Promise(function(n, r) {
                                    "undefined" == typeof XMLHttpRequest && r(Error("XHRTransport is not supported."));
                                    var i = new XMLHttpRequest;
                                    i.open("POST", e, !0), i.onreadystatechange = function() {
                                        if (i.readyState === f.state.done) try {
                                            var e = i.responseText,
                                                t = JSON.parse(e),
                                                a = f.buildResponse(t);
                                            n(a)
                                        } catch (e) {
                                            r(e)
                                        }
                                    }, i.setRequestHeader("Content-Type", "application/json"), i.setRequestHeader("Accept", "*/*"), i.send(JSON.stringify(t))
                                })]
                            })
                        })
                    }, t
                }(eg),
                e_ = function(e) {
                    function t() {
                        return null !== e && e.apply(this, arguments) || this
                    }
                    return (0, s.__extends)(t, e), t.prototype.send = function(e, t) {
                        return (0, s.__awaiter)(this, void 0, void 0, function() {
                            var f = this;
                            return (0, s.__generator)(this, function(n) {
                                return [2, new Promise(function(n, r) {
                                    var i = b();
                                    if (!(null == i ? void 0 : i.navigator.sendBeacon)) throw Error("SendBeaconTransport is not supported");
                                    try {
                                        var a = JSON.stringify(t);
                                        if (i.navigator.sendBeacon(e, JSON.stringify(t))) return n(f.buildResponse({
                                            code: 200,
                                            events_ingested: t.events.length,
                                            payload_size_bytes: a.length,
                                            server_upload_time: Date.now()
                                        }));
                                        return n(f.buildResponse({
                                            code: 500
                                        }))
                                    } catch (e) {
                                        r(e)
                                    }
                                })]
                            })
                        })
                    }, t
                }(eg),
                ek = function() {
                    return {
                        cookieExpiration: 365,
                        cookieSameSite: "Lax",
                        cookieSecure: !1,
                        cookieStorage: new eT,
                        cookieUpgrade: !0,
                        disableCookies: !1,
                        domain: "",
                        sessionTimeout: 18e5,
                        trackingOptions: {
                            deviceManufacturer: !0,
                            deviceModel: !0,
                            ipAddress: !0,
                            language: !0,
                            osName: !0,
                            osVersion: !0,
                            platform: !0
                        },
                        transportProvider: new ew
                    }
                },
                eC = function(e) {
                    function t(t, f) {
                        var n, r, i, a, o, u, d, c, l, p = this,
                            y = ek();
                        return (p = e.call(this, (0, s.__assign)((0, s.__assign)({
                            flushIntervalMillis: 1e3,
                            flushMaxRetries: 5,
                            flushQueueSize: 30,
                            transportProvider: y.transportProvider
                        }, f), {
                            apiKey: t
                        })) || this)._optOut = !1, p.cookieStorage = null !== (n = null == f ? void 0 : f.cookieStorage) && void 0 !== n ? n : y.cookieStorage, p.deviceId = null == f ? void 0 : f.deviceId, p.lastEventId = null == f ? void 0 : f.lastEventId, p.lastEventTime = null == f ? void 0 : f.lastEventTime, p.optOut = !!(null == f ? void 0 : f.optOut), p.sessionId = null == f ? void 0 : f.sessionId, p.userId = null == f ? void 0 : f.userId, p.appVersion = null == f ? void 0 : f.appVersion, p.attribution = null == f ? void 0 : f.attribution, p.cookieExpiration = null !== (r = null == f ? void 0 : f.cookieExpiration) && void 0 !== r ? r : y.cookieExpiration, p.cookieSameSite = null !== (i = null == f ? void 0 : f.cookieSameSite) && void 0 !== i ? i : y.cookieSameSite, p.cookieSecure = null !== (a = null == f ? void 0 : f.cookieSecure) && void 0 !== a ? a : y.cookieSecure, p.cookieUpgrade = null !== (o = null == f ? void 0 : f.cookieUpgrade) && void 0 !== o ? o : y.cookieUpgrade, p.defaultTracking = null == f ? void 0 : f.defaultTracking, p.disableCookies = null !== (u = null == f ? void 0 : f.disableCookies) && void 0 !== u ? u : y.disableCookies, p.defaultTracking = null == f ? void 0 : f.defaultTracking, p.domain = null !== (d = null == f ? void 0 : f.domain) && void 0 !== d ? d : y.domain, p.partnerId = null == f ? void 0 : f.partnerId, p.sessionTimeout = null !== (c = null == f ? void 0 : f.sessionTimeout) && void 0 !== c ? c : y.sessionTimeout, p.trackingOptions = null !== (l = null == f ? void 0 : f.trackingOptions) && void 0 !== l ? l : y.trackingOptions, p
                    }
                    return (0, s.__extends)(t, e), Object.defineProperty(t.prototype, "deviceId", {
                        get: function() {
                            return this._deviceId
                        },
                        set: function(e) {
                            this._deviceId !== e && (this._deviceId = e, this.updateStorage())
                        },
                        enumerable: !1,
                        configurable: !0
                    }), Object.defineProperty(t.prototype, "userId", {
                        get: function() {
                            return this._userId
                        },
                        set: function(e) {
                            this._userId !== e && (this._userId = e, this.updateStorage())
                        },
                        enumerable: !1,
                        configurable: !0
                    }), Object.defineProperty(t.prototype, "sessionId", {
                        get: function() {
                            return this._sessionId
                        },
                        set: function(e) {
                            this._sessionId !== e && (this._sessionId = e, this.updateStorage())
                        },
                        enumerable: !1,
                        configurable: !0
                    }), Object.defineProperty(t.prototype, "optOut", {
                        get: function() {
                            return this._optOut
                        },
                        set: function(e) {
                            this._optOut !== e && (this._optOut = e, this.updateStorage())
                        },
                        enumerable: !1,
                        configurable: !0
                    }), Object.defineProperty(t.prototype, "lastEventTime", {
                        get: function() {
                            return this._lastEventTime
                        },
                        set: function(e) {
                            this._lastEventTime !== e && (this._lastEventTime = e, this.updateStorage())
                        },
                        enumerable: !1,
                        configurable: !0
                    }), Object.defineProperty(t.prototype, "lastEventId", {
                        get: function() {
                            return this._lastEventId
                        },
                        set: function(e) {
                            this._lastEventId !== e && (this._lastEventId = e, this.updateStorage())
                        },
                        enumerable: !1,
                        configurable: !0
                    }), t.prototype.updateStorage = function() {
                        var e, t = {
                            deviceId: this._deviceId,
                            userId: this._userId,
                            sessionId: this._sessionId,
                            optOut: this._optOut,
                            lastEventTime: this._lastEventTime,
                            lastEventId: this._lastEventId
                        };
                        null === (e = this.cookieStorage) || void 0 === e || e.set(y(this.apiKey), t)
                    }, t
                }(L),
                eS = function(e, t) {
                    return void 0 === t && (t = ek()), (0, s.__awaiter)(void 0, void 0, void 0, function() {
                        var f, n, r;
                        return (0, s.__generator)(this, function(i) {
                            switch (i.label) {
                                case 0:
                                    if (f = (0, s.__assign)((0, s.__assign)({}, t), e), r = !(n = null == e ? void 0 : e.cookieStorage)) return [3, 2];
                                    return [4, n.isEnabled()];
                                case 1:
                                    r = !i.sent(), i.label = 2;
                                case 2:
                                    if (r) return [2, eO(f)];
                                    return [2, n]
                            }
                        })
                    })
                },
                eO = function(e) {
                    return (0, s.__awaiter)(void 0, void 0, void 0, function() {
                        var t, f;
                        return (0, s.__generator)(this, function(n) {
                            switch (n.label) {
                                case 0:
                                    if (t = new eA({
                                            domain: e.domain,
                                            expirationDays: e.cookieExpiration,
                                            sameSite: e.cookieSameSite,
                                            secure: e.cookieSecure
                                        }), f = e.disableCookies) return [3, 2];
                                    return [4, t.isEnabled()];
                                case 1:
                                    f = !n.sent(), n.label = 2;
                                case 2:
                                    if (!f) return [3, 4];
                                    return [4, (t = new eI).isEnabled()];
                                case 3:
                                    n.sent() || (t = new eT), n.label = 4;
                                case 4:
                                    return [2, t]
                            }
                        })
                    })
                },
                eP = function(e) {
                    return e === o.XHR ? new eE : e === o.SendBeacon ? new e_ : ek().transportProvider
                },
                eM = "[Amplitude]",
                ex = "".concat(eM, " Page Viewed"),
                eR = "".concat(eM, " Form Started"),
                eF = "".concat(eM, " Form Submitted"),
                eD = "".concat(eM, " File Downloaded"),
                eN = "session_start",
                eB = "session_end",
                eL = "".concat(eM, " File Extension"),
                eq = "".concat(eM, " File Name"),
                eU = "".concat(eM, " Link ID"),
                eV = "".concat(eM, " Link Text"),
                eG = "".concat(eM, " Link URL"),
                ej = "".concat(eM, " Form ID"),
                e$ = "".concat(eM, " Form Name"),
                eH = "".concat(eM, " Form Destination"),
                eW = function(e) {
                    var t = parseInt(e, 32);
                    if (!isNaN(t)) return t
                },
                eQ = function(e) {
                    if (atob && escape && e) try {
                        return decodeURIComponent(escape(atob(e)))
                    } catch (e) {
                        return
                    }
                },
                eX = f(21169),
                ez = f.n(eX),
                eK = function() {
                    if ("undefined" == typeof navigator) return "";
                    var e, t, f, n, r = navigator.userLanguage;
                    return null !== (n = null !== (f = null !== (t = null === (e = navigator.languages) || void 0 === e ? void 0 : e[0]) && void 0 !== t ? t : navigator.language) && void 0 !== f ? f : r) && void 0 !== n ? n : ""
                },
                eY = function() {
                    function e() {
                        this.name = "context", this.type = r.BEFORE, this.library = "amplitude-ts/".concat("1.13.4"), "undefined" != typeof navigator && (this.userAgent = navigator.userAgent), this.uaResult = new(ez())(this.userAgent).getResult()
                    }
                    return e.prototype.setup = function(e) {
                        return this.config = e, Promise.resolve(void 0)
                    }, e.prototype.execute = function(e) {
                        var t, f;
                        return (0, s.__awaiter)(this, void 0, void 0, function() {
                            var n, r, i, a, o, u, d;
                            return (0, s.__generator)(this, function(c) {
                                return n = new Date().getTime(), r = this.uaResult.browser.name, i = this.uaResult.browser.version, a = this.uaResult.device.model || this.uaResult.os.name, o = this.uaResult.device.vendor, u = null !== (t = this.config.lastEventId) && void 0 !== t ? t : -1, d = null !== (f = e.event_id) && void 0 !== f ? f : u + 1, this.config.lastEventId = d, e.time || (this.config.lastEventTime = n), [2, (0, s.__assign)((0, s.__assign)((0, s.__assign)((0, s.__assign)((0, s.__assign)((0, s.__assign)((0, s.__assign)((0, s.__assign)((0, s.__assign)((0, s.__assign)((0, s.__assign)((0, s.__assign)({
                                    user_id: this.config.userId,
                                    device_id: this.config.deviceId,
                                    session_id: this.config.sessionId,
                                    time: n
                                }, this.config.appVersion && {
                                    app_version: this.config.appVersion
                                }), this.config.trackingOptions.platform && {
                                    platform: "Web"
                                }), this.config.trackingOptions.osName && {
                                    os_name: r
                                }), this.config.trackingOptions.osVersion && {
                                    os_version: i
                                }), this.config.trackingOptions.deviceManufacturer && {
                                    device_manufacturer: o
                                }), this.config.trackingOptions.deviceModel && {
                                    device_model: a
                                }), this.config.trackingOptions.language && {
                                    language: eK()
                                }), this.config.trackingOptions.ipAddress && {
                                    ip: "$remote"
                                }), {
                                    insert_id: G(),
                                    partner_id: this.config.partnerId,
                                    plan: this.config.plan
                                }), this.config.ingestionMetadata && {
                                    ingestion_metadata: {
                                        source_name: this.config.ingestionMetadata.sourceName,
                                        source_version: this.config.ingestionMetadata.sourceVersion
                                    }
                                }), e), {
                                    event_id: d,
                                    library: this.library,
                                    user_agent: this.userAgent
                                })]
                            })
                        })
                    }, e
                }(),
                eJ = {
                    page_domain: "".concat(eM, " Page Domain"),
                    page_location: "".concat(eM, " Page Location"),
                    page_path: "".concat(eM, " Page Path"),
                    page_title: "".concat(eM, " Page Title"),
                    page_url: "".concat(eM, " Page URL")
                },
                eZ = function() {
                    var e, t = [],
                        f = function(e, f, n) {
                            e.addEventListener(f, n), t.push({
                                element: e,
                                type: f,
                                handler: n
                            })
                        },
                        n = function() {
                            t.forEach(function(e) {
                                var t = e.element,
                                    f = e.type,
                                    n = e.handler;
                                null == t || t.removeEventListener(f, n)
                            }), t = []
                        };
                    return {
                        name: "@amplitude/plugin-file-download-tracking-browser",
                        type: r.ENRICHMENT,
                        setup: function(t, n) {
                            return (0, s.__awaiter)(void 0, void 0, void 0, function() {
                                var r, i;
                                return (0, s.__generator)(this, function(a) {
                                    return n ? "undefined" == typeof document || (r = function(e) {
                                        try {
                                            t = new URL(e.href, window.location.href)
                                        } catch (e) {
                                            return
                                        }
                                        var t, r = i.exec(t.href),
                                            a = null == r ? void 0 : r[1];
                                        a && f(e, "click", function() {
                                            var f;
                                            a && n.track(eD, ((f = {})[eL] = a, f[eq] = t.pathname, f[eU] = e.id, f[eV] = e.text, f[eG] = e.href, f))
                                        })
                                    }, i = /\.(pdf|xlsx?|docx?|txt|rtf|csv|exe|key|pp(s|t|tx)|7z|pkg|rar|gz|zip|avi|mov|mp4|mpe?g|wmv|midi?|mp3|wav|wma)$/, Array.from(document.getElementsByTagName("a")).forEach(r), "undefined" != typeof MutationObserver && (e = new MutationObserver(function(e) {
                                        e.forEach(function(e) {
                                            e.addedNodes.forEach(function(e) {
                                                "A" === e.nodeName && r(e), "querySelectorAll" in e && "function" == typeof e.querySelectorAll && Array.from(e.querySelectorAll("a")).map(r)
                                            })
                                        })
                                    })).observe(document.body, {
                                        subtree: !0,
                                        childList: !0
                                    })) : t.loggerProvider.warn("File download tracking requires a later version of @amplitude/analytics-browser. File download events are not tracked."), [2]
                                })
                            })
                        },
                        execute: function(e) {
                            return (0, s.__awaiter)(void 0, void 0, void 0, function() {
                                return (0, s.__generator)(this, function(t) {
                                    return [2, e]
                                })
                            })
                        },
                        teardown: function() {
                            return (0, s.__awaiter)(void 0, void 0, void 0, function() {
                                return (0, s.__generator)(this, function(t) {
                                    return null == e || e.disconnect(), n(), [2]
                                })
                            })
                        }
                    }
                },
                e0 = function() {
                    var e, t = [],
                        f = function(e, f, n) {
                            e.addEventListener(f, n), t.push({
                                element: e,
                                type: f,
                                handler: n
                            })
                        },
                        n = function() {
                            t.forEach(function(e) {
                                var t = e.element,
                                    f = e.type,
                                    n = e.handler;
                                null == t || t.removeEventListener(f, n)
                            }), t = []
                        };
                    return {
                        name: "@amplitude/plugin-form-interaction-tracking-browser",
                        type: r.ENRICHMENT,
                        setup: function(t, n) {
                            return (0, s.__awaiter)(void 0, void 0, void 0, function() {
                                var r;
                                return (0, s.__generator)(this, function(i) {
                                    return n ? "undefined" == typeof document || (r = function(e) {
                                        var t = !1;
                                        f(e, "change", function() {
                                            var f;
                                            t || n.track(eR, ((f = {})[ej] = e.id, f[e$] = e.name, f[eH] = e.action, f)), t = !0
                                        }), f(e, "submit", function() {
                                            var f, r;
                                            t || n.track(eR, ((f = {})[ej] = e.id, f[e$] = e.name, f[eH] = e.action, f)), n.track(eF, ((r = {})[ej] = e.id, r[e$] = e.name, r[eH] = e.action, r)), t = !1
                                        })
                                    }, Array.from(document.getElementsByTagName("form")).forEach(r), "undefined" != typeof MutationObserver && (e = new MutationObserver(function(e) {
                                        e.forEach(function(e) {
                                            e.addedNodes.forEach(function(e) {
                                                "FORM" === e.nodeName && r(e), "querySelectorAll" in e && "function" == typeof e.querySelectorAll && Array.from(e.querySelectorAll("form")).map(r)
                                            })
                                        })
                                    })).observe(document.body, {
                                        subtree: !0,
                                        childList: !0
                                    })) : t.loggerProvider.warn("Form interaction tracking requires a later version of @amplitude/analytics-browser. Form interaction events are not tracked."), [2]
                                })
                            })
                        },
                        execute: function(e) {
                            return (0, s.__awaiter)(void 0, void 0, void 0, function() {
                                return (0, s.__generator)(this, function(t) {
                                    return [2, e]
                                })
                            })
                        },
                        teardown: function() {
                            return (0, s.__awaiter)(void 0, void 0, void 0, function() {
                                return (0, s.__generator)(this, function(t) {
                                    return null == e || e.disconnect(), n(), [2]
                                })
                            })
                        }
                    }
                },
                e1 = function(e, t) {
                    for (var f = 0; f < t.length; f++) {
                        var n = t[f],
                            r = n.name,
                            i = n.args,
                            a = n.resolve,
                            o = e && e[r];
                        if ("function" == typeof o) {
                            var s = o.apply(e, i);
                            "function" == typeof a && a(null == s ? void 0 : s.promise)
                        }
                    }
                    return e
                },
                e6 = function(e) {
                    return e && void 0 !== e._q
                },
                e5 = function(e) {
                    function t() {
                        return null !== e && e.apply(this, arguments) || this
                    }
                    return (0, s.__extends)(t, e), t.prototype.init = function(e, t, f) {
                        return void 0 === e && (e = ""), x(this._init((0, s.__assign)((0, s.__assign)({}, f), {
                            userId: t,
                            apiKey: e
                        })))
                    }, t.prototype._init = function(t) {
                        var f, n, i, a, o, u, d, c, l, b, m, v, T, g, w, A, I, E, _, C;
                        return (0, s.__awaiter)(this, void 0, void 0, function() {
                            var S, O, x, R, F, D, N, B, L, q, U, j, $, H, W, Q, X, z, K = this;
                            return (0, s.__generator)(this, function(Y) {
                                var J, Z, ee, et, ef, en;
                                switch (Y.label) {
                                    case 0:
                                        if (this.initializing) return [2];
                                        if (this.initializing = !0, S = t, !t.disableCookies) return [3, 1];
                                        return O = "", [3, 5];
                                    case 1:
                                        if (!(null !== (f = t.domain) && void 0 !== f)) return [3, 2];
                                        return x = f, [3, 4];
                                    case 2:
                                        return [4, (0, s.__awaiter)(void 0, void 0, void 0, function() {
                                            var e, t, f, n, r, i;
                                            return (0, s.__generator)(this, function(a) {
                                                switch (a.label) {
                                                    case 0:
                                                        return [4, new eA().isEnabled()];
                                                    case 1:
                                                        if (!a.sent() || !J && "undefined" == typeof location) return [2, ""];
                                                        for (e = (null != J ? J : location.hostname).split("."), t = [], f = "AMP_TLDTEST", n = e.length - 2; n >= 0; --n) t.push(e.slice(n).join("."));
                                                        n = 0, a.label = 2;
                                                    case 2:
                                                        if (!(n < t.length)) return [3, 7];
                                                        return [4, (i = new eA({
                                                            domain: "." + (r = t[n])
                                                        })).set(f, 1)];
                                                    case 3:
                                                        return a.sent(), [4, i.get(f)];
                                                    case 4:
                                                        if (!a.sent()) return [3, 6];
                                                        return [4, i.remove(f)];
                                                    case 5:
                                                        return a.sent(), [2, "." + r];
                                                    case 6:
                                                        return n++, [3, 2];
                                                    case 7:
                                                        return [2, ""]
                                                }
                                            })
                                        })];
                                    case 3:
                                        x = Y.sent(), Y.label = 4;
                                    case 4:
                                        O = x, Y.label = 5;
                                    case 5:
                                        return S.domain = O, [4, (Z = t.apiKey, (0, s.__awaiter)(void 0, void 0, void 0, function() {
                                            var e, f, n, r, i, a, o, u, d, c, l;
                                            return (0, s.__generator)(this, function(y) {
                                                switch (y.label) {
                                                    case 0:
                                                        return [4, eS(t)];
                                                    case 1:
                                                        return e = y.sent(), f = "".concat(p.xp.toLowerCase(), "_").concat(Z.substring(0, 6)), [4, e.getRaw(f)];
                                                    case 2:
                                                        if (!(n = y.sent())) return [2, {
                                                            optOut: !1
                                                        }];
                                                        if (!(null !== (l = t.cookieUpgrade) && void 0 !== l ? l : ek().cookieUpgrade)) return [3, 4];
                                                        return [4, e.remove(f)];
                                                    case 3:
                                                        y.sent(), y.label = 4;
                                                    case 4:
                                                        return i = (r = (0, s.__read)(n.split("."), 6))[0], a = r[1], o = r[2], u = r[3], d = r[4], c = r[5], [2, {
                                                            deviceId: i,
                                                            userId: eQ(a),
                                                            sessionId: eW(u),
                                                            lastEventId: eW(c),
                                                            lastEventTime: eW(d),
                                                            optOut: !!o
                                                        }]
                                                }
                                            })
                                        }))];
                                    case 6:
                                        return R = Y.sent(), [4, eS(t)];
                                    case 7:
                                        return [4, (F = Y.sent()).get(y(t.apiKey))];
                                    case 8:
                                        return D = Y.sent(), N = h(), B = null !== (a = null !== (i = null !== (n = t.deviceId) && void 0 !== n ? n : N.deviceId) && void 0 !== i ? i : null == D ? void 0 : D.deviceId) && void 0 !== a ? a : R.deviceId, L = null !== (o = null == D ? void 0 : D.sessionId) && void 0 !== o ? o : R.sessionId, q = null !== (d = null !== (u = t.optOut) && void 0 !== u ? u : null == D ? void 0 : D.optOut) && void 0 !== d ? d : R.optOut, U = null !== (c = null == D ? void 0 : D.lastEventId) && void 0 !== c ? c : R.lastEventId, j = null !== (l = null == D ? void 0 : D.lastEventTime) && void 0 !== l ? l : R.lastEventTime, $ = null !== (m = null !== (b = t.userId) && void 0 !== b ? b : null == D ? void 0 : D.userId) && void 0 !== m ? m : R.userId, this.previousSessionDeviceId = null !== (v = null == D ? void 0 : D.deviceId) && void 0 !== v ? v : R.deviceId, this.previousSessionUserId = null !== (T = null == D ? void 0 : D.userId) && void 0 !== T ? T : R.userId, [4, (ee = t.apiKey, et = (0, s.__assign)((0, s.__assign)({}, t), {
                                            deviceId: B,
                                            sessionId: L,
                                            optOut: q,
                                            lastEventId: U,
                                            lastEventTime: j,
                                            userId: $,
                                            cookieStorage: F
                                        }), (0, s.__awaiter)(void 0, void 0, void 0, function() {
                                            var e, t, f, n, r, i, a, o, u, d, c, l, p, y, b;
                                            return (0, s.__generator)(this, function(h) {
                                                switch (h.label) {
                                                    case 0:
                                                        return e = ek(), t = null !== (y = null == et ? void 0 : et.deviceId) && void 0 !== y ? y : G(), f = null == et ? void 0 : et.lastEventId, n = null == et ? void 0 : et.lastEventTime, r = null == et ? void 0 : et.optOut, i = null == et ? void 0 : et.sessionId, a = null == et ? void 0 : et.userId, o = null == et ? void 0 : et.cookieStorage, u = null == et ? void 0 : et.domain, d = eC.bind, c = [void 0, ee], l = [(0, s.__assign)({}, et)], p = {
                                                            cookieStorage: o,
                                                            deviceId: t,
                                                            domain: u,
                                                            lastEventId: f,
                                                            lastEventTime: n,
                                                            optOut: r,
                                                            sessionId: i
                                                        }, [4, (0, s.__awaiter)(void 0, void 0, void 0, function() {
                                                            var e, t, f, n, r, i, a, o;
                                                            return (0, s.__generator)(this, function(u) {
                                                                switch (u.label) {
                                                                    case 0:
                                                                        if (e = et && Object.prototype.hasOwnProperty.call(et, "storageProvider"), t = et && et.loggerProvider, !(!e || et.storageProvider)) return [3, 9];
                                                                        u.label = 1;
                                                                    case 1:
                                                                        u.trys.push([1, 7, 8, 9]), n = (f = (0, s.__values)([null == et ? void 0 : et.storageProvider, new eI({
                                                                            loggerProvider: t
                                                                        })])).next(), u.label = 2;
                                                                    case 2:
                                                                        if (n.done) return [3, 6];
                                                                        if (!(i = r = n.value)) return [3, 4];
                                                                        return [4, r.isEnabled()];
                                                                    case 3:
                                                                        i = u.sent(), u.label = 4;
                                                                    case 4:
                                                                        if (i) return [2, r];
                                                                        u.label = 5;
                                                                    case 5:
                                                                        return n = f.next(), [3, 2];
                                                                    case 6:
                                                                        return [3, 9];
                                                                    case 7:
                                                                        return a = {
                                                                            error: u.sent()
                                                                        }, [3, 9];
                                                                    case 8:
                                                                        try {
                                                                            n && !n.done && (o = f.return) && o.call(f)
                                                                        } finally {
                                                                            if (a) throw a.error
                                                                        }
                                                                        return [7];
                                                                    case 9:
                                                                        return [2, void 0]
                                                                }
                                                            })
                                                        })];
                                                    case 1:
                                                        return [2, new(d.apply(eC, c.concat([s.__assign.apply(void 0, l.concat([(p.storageProvider = h.sent(), p.trackingOptions = (0, s.__assign)((0, s.__assign)({}, e.trackingOptions), null == et ? void 0 : et.trackingOptions), p.transportProvider = null !== (b = null == et ? void 0 : et.transportProvider) && void 0 !== b ? b : eP(null == et ? void 0 : et.transport), p.userId = a, p)]))])))]
                                                }
                                            })
                                        }))];
                                    case 9:
                                        return H = Y.sent(), [4, e.prototype._init.call(this, H)];
                                    case 10:
                                        return Y.sent(), W = !1, (!this.config.lastEventTime || !this.config.sessionId || this.config.lastEventTime && Date.now() - this.config.lastEventTime > this.config.sessionTimeout) && (this.setSessionId(null !== (w = null !== (g = t.sessionId) && void 0 !== g ? g : this.config.sessionId) && void 0 !== w ? w : Date.now()), W = !0), (Q = k(t.instanceName)).identityStore.setIdentity({
                                            userId: this.config.userId,
                                            deviceId: this.config.deviceId
                                        }), [4, this.add(new V).promise];
                                    case 11:
                                        return Y.sent(), [4, this.add(new eY).promise];
                                    case 12:
                                        return Y.sent(), [4, this.add(new P).promise];
                                    case 13:
                                        if (Y.sent(), !("boolean" == typeof(ef = this.config.defaultTracking) ? ef : null != ef && !!ef.fileDownloads)) return [3, 15];
                                        return [4, this.add(eZ()).promise];
                                    case 14:
                                        Y.sent(), Y.label = 15;
                                    case 15:
                                        if (!("boolean" == typeof(en = this.config.defaultTracking) ? en : null != en && !!en.formInteractions)) return [3, 17];
                                        return [4, this.add(e0()).promise];
                                    case 16:
                                        Y.sent(), Y.label = 17;
                                    case 17:
                                        if (null === (A = this.config.attribution) || void 0 === A ? void 0 : A.disabled) return [3, 19];
                                        return (X = ev({
                                            excludeReferrers: null === (I = this.config.attribution) || void 0 === I ? void 0 : I.excludeReferrers,
                                            initialEmptyValue: null === (E = this.config.attribution) || void 0 === E ? void 0 : E.initialEmptyValue,
                                            resetSessionOnNewCampaign: null === (_ = this.config.attribution) || void 0 === _ ? void 0 : _.resetSessionOnNewCampaign
                                        })).__pluginEnabledOverride = (!!W || null !== (C = this.config.attribution) && void 0 !== C && !!C.trackNewCampaigns) && void 0, [4, this.add(X).promise];
                                    case 18:
                                        Y.sent(), Y.label = 19;
                                    case 19:
                                        return (z = M(this.config)).eventType = z.eventType || ex, [4, this.add(el(z)).promise];
                                    case 20:
                                        return Y.sent(), [4, this.add({
                                            name: "@amplitude/plugin-default-page-view-event-enrichment-browser",
                                            type: r.ENRICHMENT,
                                            setup: function() {
                                                return (0, s.__awaiter)(void 0, void 0, void 0, function() {
                                                    return (0, s.__generator)(this, function(e) {
                                                        return [2, void 0]
                                                    })
                                                })
                                            },
                                            execute: function(e) {
                                                return (0, s.__awaiter)(void 0, void 0, void 0, function() {
                                                    return (0, s.__generator)(this, function(t) {
                                                        return e.event_type === ex && e.event_properties && (e.event_properties = Object.entries(e.event_properties).reduce(function(e, t) {
                                                            var f = (0, s.__read)(t, 2),
                                                                n = f[0],
                                                                r = f[1],
                                                                i = eJ[n];
                                                            return i ? e[i] = r : e[n] = r, e
                                                        }, {})), [2, e]
                                                    })
                                                })
                                            }
                                        }).promise];
                                    case 21:
                                        return Y.sent(), this.initializing = !1, [4, this.runQueuedFunctions("dispatchQ")];
                                    case 22:
                                        return Y.sent(), Q.eventBridge.setEventReceiver(function(e) {
                                            K.track(e.eventType, e.eventProperties)
                                        }), [2]
                                }
                            })
                        })
                    }, t.prototype.getUserId = function() {
                        var e;
                        return null === (e = this.config) || void 0 === e ? void 0 : e.userId
                    }, t.prototype.setUserId = function(e) {
                        if (!this.config) {
                            this.q.push(this.setUserId.bind(this, e));
                            return
                        }(e !== this.config.userId || void 0 === e) && (this.config.userId = e, C(e, this.config.instanceName))
                    }, t.prototype.getDeviceId = function() {
                        var e;
                        return null === (e = this.config) || void 0 === e ? void 0 : e.deviceId
                    }, t.prototype.setDeviceId = function(e) {
                        if (!this.config) {
                            this.q.push(this.setDeviceId.bind(this, e));
                            return
                        }
                        this.config.deviceId = e, S(e, this.config.instanceName)
                    }, t.prototype.setOptOut = function(t) {
                        O(t, this.config.instanceName), e.prototype.setOptOut.call(this, t)
                    }, t.prototype.reset = function() {
                        this.setDeviceId(G()), this.setUserId(void 0)
                    }, t.prototype.getSessionId = function() {
                        var e;
                        return null === (e = this.config) || void 0 === e ? void 0 : e.sessionId
                    }, t.prototype.setSessionId = function(e) {
                        if (!this.config) {
                            this.q.push(this.setSessionId.bind(this, e));
                            return
                        }
                        if (e !== this.config.sessionId) {
                            var t, f, n = this.getSessionId(),
                                r = this.config.lastEventTime,
                                i = null !== (f = this.config.lastEventId) && void 0 !== f ? f : -1;
                            this.config.sessionId = e, this.config.lastEventTime = void 0, ("boolean" == typeof(t = this.config.defaultTracking) ? t : null != t && !!t.sessions) && (n && r && this.track(eB, void 0, {
                                device_id: this.previousSessionDeviceId,
                                event_id: ++i,
                                session_id: n,
                                time: r + 1,
                                user_id: this.previousSessionUserId
                            }), this.config.lastEventTime = this.config.sessionId, this.track(eN, void 0, {
                                event_id: ++i,
                                session_id: this.config.sessionId,
                                time: this.config.lastEventTime
                            })), this.previousSessionDeviceId = this.config.deviceId, this.previousSessionUserId = this.config.userId
                        }
                    }, t.prototype.extendSession = function() {
                        if (!this.config) {
                            this.q.push(this.extendSession.bind(this));
                            return
                        }
                        this.config.lastEventTime = Date.now()
                    }, t.prototype.setTransport = function(e) {
                        if (!this.config) {
                            this.q.push(this.setTransport.bind(this, e));
                            return
                        }
                        this.config.transportProvider = eP(e)
                    }, t.prototype.identify = function(t, f) {
                        if (e6(t)) {
                            var n = t._q;
                            t._q = [], t = e1(new j.h, n)
                        }
                        return (null == f ? void 0 : f.user_id) && this.setUserId(f.user_id), (null == f ? void 0 : f.device_id) && this.setDeviceId(f.device_id), e.prototype.identify.call(this, t, f)
                    }, t.prototype.groupIdentify = function(t, f, n, r) {
                        if (e6(n)) {
                            var i = n._q;
                            n._q = [], n = e1(new j.h, i)
                        }
                        return e.prototype.groupIdentify.call(this, t, f, n, r)
                    }, t.prototype.revenue = function(t, f) {
                        if (e6(t)) {
                            var n = t._q;
                            t._q = [], t = e1(new W, n)
                        }
                        return e.prototype.revenue.call(this, t, f)
                    }, t.prototype.process = function(t) {
                        return (0, s.__awaiter)(this, void 0, void 0, function() {
                            var f, n;
                            return (0, s.__generator)(this, function(r) {
                                return n = (f = Date.now()) - (this.config.lastEventTime || Date.now()), t.event_type !== eN && t.event_type !== eB && (!t.session_id || t.session_id === this.getSessionId()) && n > this.config.sessionTimeout && this.setSessionId(f), [2, e.prototype.process.call(this, t)]
                            })
                        })
                    }, t
                }(Y);
            let e2 = function() {
                var e = new e5;
                return {
                    init: l(e.init.bind(e), "init", u(e), c(e, ["config"])),
                    add: l(e.add.bind(e), "add", u(e), c(e, ["config.apiKey", "timeline.plugins"])),
                    remove: l(e.remove.bind(e), "remove", u(e), c(e, ["config.apiKey", "timeline.plugins"])),
                    track: l(e.track.bind(e), "track", u(e), c(e, ["config.apiKey", "timeline.queue.length"])),
                    logEvent: l(e.logEvent.bind(e), "logEvent", u(e), c(e, ["config.apiKey", "timeline.queue.length"])),
                    identify: l(e.identify.bind(e), "identify", u(e), c(e, ["config.apiKey", "timeline.queue.length"])),
                    groupIdentify: l(e.groupIdentify.bind(e), "groupIdentify", u(e), c(e, ["config.apiKey", "timeline.queue.length"])),
                    setGroup: l(e.setGroup.bind(e), "setGroup", u(e), c(e, ["config.apiKey", "timeline.queue.length"])),
                    revenue: l(e.revenue.bind(e), "revenue", u(e), c(e, ["config.apiKey", "timeline.queue.length"])),
                    flush: l(e.flush.bind(e), "flush", u(e), c(e, ["config.apiKey", "timeline.queue.length"])),
                    getUserId: l(e.getUserId.bind(e), "getUserId", u(e), c(e, ["config", "config.userId"])),
                    setUserId: l(e.setUserId.bind(e), "setUserId", u(e), c(e, ["config", "config.userId"])),
                    getDeviceId: l(e.getDeviceId.bind(e), "getDeviceId", u(e), c(e, ["config", "config.deviceId"])),
                    setDeviceId: l(e.setDeviceId.bind(e), "setDeviceId", u(e), c(e, ["config", "config.deviceId"])),
                    reset: l(e.reset.bind(e), "reset", u(e), c(e, ["config", "config.userId", "config.deviceId"])),
                    getSessionId: l(e.getSessionId.bind(e), "getSessionId", u(e), c(e, ["config"])),
                    setSessionId: l(e.setSessionId.bind(e), "setSessionId", u(e), c(e, ["config"])),
                    extendSession: l(e.extendSession.bind(e), "extendSession", u(e), c(e, ["config"])),
                    setOptOut: l(e.setOptOut.bind(e), "setOptOut", u(e), c(e, ["config"])),
                    setTransport: l(e.setTransport.bind(e), "setTransport", u(e), c(e, ["config"]))
                }
            }();
            e2.add, e2.extendSession, e2.flush;
            var e8 = e2.getDeviceId,
                e3 = (e2.getSessionId, e2.getUserId, e2.groupIdentify, e2.identify),
                e9 = (e2.init, e2.logEvent, e2.remove, e2.reset, e2.revenue, e2.setDeviceId, e2.setGroup, e2.setOptOut, e2.setSessionId, e2.setTransport, e2.setUserId, e2.track)
        },
        471: (e, t, f) => {
            "use strict";
            f.d(t, {
                EG: () => a,
                RE: () => u,
                f1: () => i,
                h8: () => s,
                q$: () => n,
                xp: () => r,
                y_: () => o
            });
            var n = "-",
                r = "AMP",
                i = "".concat(r, "_unsent"),
                a = "https://api2.amplitude.com/2/httpapi",
                o = "https://api.eu.amplitude.com/2/httpapi",
                s = "https://api2.amplitude.com/batch",
                u = "https://api.eu.amplitude.com/batch"
        },
        20524: (e, t, f) => {
            "use strict";
            f.d(t, {
                h: () => o
            });
            var n = f(51113),
                r = f(2199),
                i = f(471),
                a = f(80375),
                o = function() {
                    function e() {
                        this._propertySet = new Set, this._properties = {}
                    }
                    return e.prototype.getUserProperties = function() {
                        return (0, n.__assign)({}, this._properties)
                    }, e.prototype.set = function(e, t) {
                        return this._safeSet(r.h9.SET, e, t), this
                    }, e.prototype.setOnce = function(e, t) {
                        return this._safeSet(r.h9.SET_ONCE, e, t), this
                    }, e.prototype.append = function(e, t) {
                        return this._safeSet(r.h9.APPEND, e, t), this
                    }, e.prototype.prepend = function(e, t) {
                        return this._safeSet(r.h9.PREPEND, e, t), this
                    }, e.prototype.postInsert = function(e, t) {
                        return this._safeSet(r.h9.POSTINSERT, e, t), this
                    }, e.prototype.preInsert = function(e, t) {
                        return this._safeSet(r.h9.PREINSERT, e, t), this
                    }, e.prototype.remove = function(e, t) {
                        return this._safeSet(r.h9.REMOVE, e, t), this
                    }, e.prototype.add = function(e, t) {
                        return this._safeSet(r.h9.ADD, e, t), this
                    }, e.prototype.unset = function(e) {
                        return this._safeSet(r.h9.UNSET, e, i.q$), this
                    }, e.prototype.clearAll = function() {
                        return this._properties = {}, this._properties[r.h9.CLEAR_ALL] = i.q$, this
                    }, e.prototype._safeSet = function(e, t, f) {
                        if (this._validate(e, t, f)) {
                            var n = this._properties[e];
                            return void 0 === n && (n = {}, this._properties[e] = n), n[t] = f, this._propertySet.add(t), !0
                        }
                        return !1
                    }, e.prototype._validate = function(e, t, f) {
                        return !(void 0 !== this._properties[r.h9.CLEAR_ALL] || this._propertySet.has(t)) && (e === r.h9.ADD ? "number" == typeof f : e === r.h9.UNSET || e === r.h9.REMOVE || (0, a.T)(t, f))
                    }, e
                }()
        },
        80375: (e, t, f) => {
            "use strict";
            f.d(t, {
                L: () => r,
                T: () => i
            });
            var n = f(51113),
                r = function(e) {
                    if (Object.keys(e).length > 1e3) return !1;
                    for (var t in e) {
                        var f = e[t];
                        if (!i(t, f)) return !1
                    }
                    return !0
                },
                i = function(e, t) {
                    var f, i;
                    if ("string" != typeof e) return !1;
                    if (Array.isArray(t)) {
                        var a = !0;
                        try {
                            for (var o = (0, n.__values)(t), s = o.next(); !s.done; s = o.next()) {
                                var u = s.value;
                                if (Array.isArray(u)) return !1;
                                if ("object" == typeof u) a = a && r(u);
                                else if (!["number", "string"].includes(typeof u)) return !1;
                                if (!a) return !1
                            }
                        } catch (e) {
                            f = {
                                error: e
                            }
                        } finally {
                            try {
                                s && !s.done && (i = o.return) && i.call(o)
                            } finally {
                                if (f) throw f.error
                            }
                        }
                    } else if (null == t) return !1;
                    else if ("object" == typeof t) return r(t);
                    else if (!["number", "string", "boolean"].includes(typeof t)) return !1;
                    return !0
                }
        },
        2199: (e, t, f) => {
            "use strict";
            var n, r, i;
            f.d(t, {
                    JU: () => i,
                    al: () => r,
                    h9: () => n
                }),
                function(e) {
                    e.SET = "$set", e.SET_ONCE = "$setOnce", e.ADD = "$add", e.APPEND = "$append", e.PREPEND = "$prepend", e.REMOVE = "$remove", e.PREINSERT = "$preInsert", e.POSTINSERT = "$postInsert", e.UNSET = "$unset", e.CLEAR_ALL = "$clearAll"
                }(n || (n = {})),
                function(e) {
                    e.REVENUE_PRODUCT_ID = "$productId", e.REVENUE_QUANTITY = "$quantity", e.REVENUE_PRICE = "$price", e.REVENUE_TYPE = "$revenueType", e.REVENUE = "$revenue"
                }(r || (r = {})),
                function(e) {
                    e.IDENTIFY = "$identify", e.GROUP_IDENTIFY = "$groupidentify", e.REVENUE = "revenue_amount"
                }(i || (i = {}))
        },
        21169: function(e, t, f) {
            var n;
            ! function(r, i) {
                "use strict";
                var a = "function",
                    o = "undefined",
                    s = "object",
                    u = "string",
                    d = "model",
                    c = "name",
                    l = "type",
                    p = "vendor",
                    y = "version",
                    b = "architecture",
                    h = "console",
                    m = "mobile",
                    v = "tablet",
                    T = "smarttv",
                    g = "wearable",
                    w = "embedded",
                    A = "Amazon",
                    I = "Apple",
                    E = "ASUS",
                    _ = "BlackBerry",
                    k = "Browser",
                    C = "Chrome",
                    S = "Firefox",
                    O = "Google",
                    P = "Huawei",
                    M = "Microsoft",
                    x = "Motorola",
                    R = "Opera",
                    F = "Samsung",
                    D = "Sharp",
                    N = "Sony",
                    B = "Xiaomi",
                    L = "Zebra",
                    q = "Facebook",
                    U = function(e, t) {
                        var f = {};
                        for (var n in e) t[n] && t[n].length % 2 == 0 ? f[n] = t[n].concat(e[n]) : f[n] = e[n];
                        return f
                    },
                    V = function(e) {
                        for (var t = {}, f = 0; f < e.length; f++) t[e[f].toUpperCase()] = e[f];
                        return t
                    },
                    G = function(e, t) {
                        return typeof e === u && -1 !== j(t).indexOf(j(e))
                    },
                    j = function(e) {
                        return e.toLowerCase()
                    },
                    $ = function(e, t) {
                        if (typeof e === u) return e = e.replace(/^\s\s*/, ""), typeof t === o ? e : e.substring(0, 350)
                    },
                    H = function(e, t) {
                        for (var f, n, r, o, u, d, c = 0; c < t.length && !u;) {
                            var l = t[c],
                                p = t[c + 1];
                            for (f = n = 0; f < l.length && !u;)
                                if (u = l[f++].exec(e))
                                    for (r = 0; r < p.length; r++) d = u[++n], typeof(o = p[r]) === s && o.length > 0 ? 2 === o.length ? typeof o[1] == a ? this[o[0]] = o[1].call(this, d) : this[o[0]] = o[1] : 3 === o.length ? typeof o[1] !== a || o[1].exec && o[1].test ? this[o[0]] = d ? d.replace(o[1], o[2]) : i : this[o[0]] = d ? o[1].call(this, d, o[2]) : i : 4 === o.length && (this[o[0]] = d ? o[3].call(this, d.replace(o[1], o[2])) : i) : this[o] = d || i;
                            c += 2
                        }
                    },
                    W = function(e, t) {
                        for (var f in t)
                            if (typeof t[f] === s && t[f].length > 0) {
                                for (var n = 0; n < t[f].length; n++)
                                    if (G(t[f][n], e)) return "?" === f ? i : f
                            } else if (G(t[f], e)) return "?" === f ? i : f;
                        return e
                    },
                    Q = {
                        ME: "4.90",
                        "NT 3.11": "NT3.51",
                        "NT 4.0": "NT4.0",
                        2e3: "NT 5.0",
                        XP: ["NT 5.1", "NT 5.2"],
                        Vista: "NT 6.0",
                        7: "NT 6.1",
                        8: "NT 6.2",
                        8.1: "NT 6.3",
                        10: ["NT 6.4", "NT 10.0"],
                        RT: "ARM"
                    },
                    X = {
                        browser: [
                            [/\b(?:crmo|crios)\/([\w\.]+)/i],
                            [y, [c, "Chrome"]],
                            [/edg(?:e|ios|a)?\/([\w\.]+)/i],
                            [y, [c, "Edge"]],
                            [/(opera mini)\/([-\w\.]+)/i, /(opera [mobiletab]{3,6})\b.+version\/([-\w\.]+)/i, /(opera)(?:.+version\/|[\/ ]+)([\w\.]+)/i],
                            [c, y],
                            [/opios[\/ ]+([\w\.]+)/i],
                            [y, [c, R + " Mini"]],
                            [/\bopr\/([\w\.]+)/i],
                            [y, [c, R]],
                            [/(kindle)\/([\w\.]+)/i, /(lunascape|maxthon|netfront|jasmine|blazer)[\/ ]?([\w\.]*)/i, /(avant |iemobile|slim)(?:browser)?[\/ ]?([\w\.]*)/i, /(ba?idubrowser)[\/ ]?([\w\.]+)/i, /(?:ms|\()(ie) ([\w\.]+)/i, /(flock|rockmelt|midori|epiphany|silk|skyfire|ovibrowser|bolt|iron|vivaldi|iridium|phantomjs|bowser|quark|qupzilla|falkon|rekonq|puffin|brave|whale|qqbrowserlite|qq|duckduckgo)\/([-\w\.]+)/i, /(weibo)__([\d\.]+)/i],
                            [c, y],
                            [/(?:\buc? ?browser|(?:juc.+)ucweb)[\/ ]?([\w\.]+)/i],
                            [y, [c, "UC" + k]],
                            [/microm.+\bqbcore\/([\w\.]+)/i, /\bqbcore\/([\w\.]+).+microm/i],
                            [y, [c, "WeChat(Win) Desktop"]],
                            [/micromessenger\/([\w\.]+)/i],
                            [y, [c, "WeChat"]],
                            [/konqueror\/([\w\.]+)/i],
                            [y, [c, "Konqueror"]],
                            [/trident.+rv[: ]([\w\.]{1,9})\b.+like gecko/i],
                            [y, [c, "IE"]],
                            [/yabrowser\/([\w\.]+)/i],
                            [y, [c, "Yandex"]],
                            [/(avast|avg)\/([\w\.]+)/i],
                            [
                                [c, /(.+)/, "$1 Secure " + k], y
                            ],
                            [/\bfocus\/([\w\.]+)/i],
                            [y, [c, S + " Focus"]],
                            [/\bopt\/([\w\.]+)/i],
                            [y, [c, R + " Touch"]],
                            [/coc_coc\w+\/([\w\.]+)/i],
                            [y, [c, "Coc Coc"]],
                            [/dolfin\/([\w\.]+)/i],
                            [y, [c, "Dolphin"]],
                            [/coast\/([\w\.]+)/i],
                            [y, [c, R + " Coast"]],
                            [/miuibrowser\/([\w\.]+)/i],
                            [y, [c, "MIUI " + k]],
                            [/fxios\/([-\w\.]+)/i],
                            [y, [c, S]],
                            [/\bqihu|(qi?ho?o?|360)browser/i],
                            [
                                [c, "360 " + k]
                            ],
                            [/(oculus|samsung|sailfish|huawei)browser\/([\w\.]+)/i],
                            [
                                [c, /(.+)/, "$1 " + k], y
                            ],
                            [/(comodo_dragon)\/([\w\.]+)/i],
                            [
                                [c, /_/g, " "], y
                            ],
                            [/(electron)\/([\w\.]+) safari/i, /(tesla)(?: qtcarbrowser|\/(20\d\d\.[-\w\.]+))/i, /m?(qqbrowser|baiduboxapp|2345Explorer)[\/ ]?([\w\.]+)/i],
                            [c, y],
                            [/(metasr)[\/ ]?([\w\.]+)/i, /(lbbrowser)/i, /\[(linkedin)app\]/i],
                            [c],
                            [/((?:fban\/fbios|fb_iab\/fb4a)(?!.+fbav)|;fbav\/([\w\.]+);)/i],
                            [
                                [c, q], y
                            ],
                            [/safari (line)\/([\w\.]+)/i, /\b(line)\/([\w\.]+)\/iab/i, /(chromium|instagram)[\/ ]([-\w\.]+)/i],
                            [c, y],
                            [/\bgsa\/([\w\.]+) .*safari\//i],
                            [y, [c, "GSA"]],
                            [/headlesschrome(?:\/([\w\.]+)| )/i],
                            [y, [c, C + " Headless"]],
                            [/ wv\).+(chrome)\/([\w\.]+)/i],
                            [
                                [c, C + " WebView"], y
                            ],
                            [/droid.+ version\/([\w\.]+)\b.+(?:mobile safari|safari)/i],
                            [y, [c, "Android " + k]],
                            [/(chrome|omniweb|arora|[tizenoka]{5} ?browser)\/v?([\w\.]+)/i],
                            [c, y],
                            [/version\/([\w\.\,]+) .*mobile\/\w+ (safari)/i],
                            [y, [c, "Mobile Safari"]],
                            [/version\/([\w(\.|\,)]+) .*(mobile ?safari|safari)/i],
                            [y, c],
                            [/webkit.+?(mobile ?safari|safari)(\/[\w\.]+)/i],
                            [c, [y, W, {
                                "1.0": "/8",
                                1.2: "/1",
                                1.3: "/3",
                                "2.0": "/412",
                                "2.0.2": "/416",
                                "2.0.3": "/417",
                                "2.0.4": "/419",
                                "?": "/"
                            }]],
                            [/(webkit|khtml)\/([\w\.]+)/i],
                            [c, y],
                            [/(navigator|netscape\d?)\/([-\w\.]+)/i],
                            [
                                [c, "Netscape"], y
                            ],
                            [/mobile vr; rv:([\w\.]+)\).+firefox/i],
                            [y, [c, S + " Reality"]],
                            [/ekiohf.+(flow)\/([\w\.]+)/i, /(swiftfox)/i, /(icedragon|iceweasel|camino|chimera|fennec|maemo browser|minimo|conkeror|klar)[\/ ]?([\w\.\+]+)/i, /(seamonkey|k-meleon|icecat|iceape|firebird|phoenix|palemoon|basilisk|waterfox)\/([-\w\.]+)$/i, /(firefox)\/([\w\.]+)/i, /(mozilla)\/([\w\.]+) .+rv\:.+gecko\/\d+/i, /(polaris|lynx|dillo|icab|doris|amaya|w3m|netsurf|sleipnir|obigo|mosaic|(?:go|ice|up)[\. ]?browser)[-\/ ]?v?([\w\.]+)/i, /(links) \(([\w\.]+)/i],
                            [c, y],
                            [/(cobalt)\/([\w\.]+)/i],
                            [c, [y, /master.|lts./, ""]]
                        ],
                        cpu: [
                            [/(?:(amd|x(?:(?:86|64)[-_])?|wow|win)64)[;\)]/i],
                            [
                                [b, "amd64"]
                            ],
                            [/(ia32(?=;))/i],
                            [
                                [b, j]
                            ],
                            [/((?:i[346]|x)86)[;\)]/i],
                            [
                                [b, "ia32"]
                            ],
                            [/\b(aarch64|arm(v?8e?l?|_?64))\b/i],
                            [
                                [b, "arm64"]
                            ],
                            [/\b(arm(?:v[67])?ht?n?[fl]p?)\b/i],
                            [
                                [b, "armhf"]
                            ],
                            [/windows (ce|mobile); ppc;/i],
                            [
                                [b, "arm"]
                            ],
                            [/((?:ppc|powerpc)(?:64)?)(?: mac|;|\))/i],
                            [
                                [b, /ower/, "", j]
                            ],
                            [/(sun4\w)[;\)]/i],
                            [
                                [b, "sparc"]
                            ],
                            [/((?:avr32|ia64(?=;))|68k(?=\))|\barm(?=v(?:[1-7]|[5-7]1)l?|;|eabi)|(?=atmel )avr|(?:irix|mips|sparc)(?:64)?\b|pa-risc)/i],
                            [
                                [b, j]
                            ]
                        ],
                        device: [
                            [/\b(sch-i[89]0\d|shw-m380s|sm-[ptx]\w{2,4}|gt-[pn]\d{2,4}|sgh-t8[56]9|nexus 10)/i],
                            [d, [p, F],
                                [l, v]
                            ],
                            [/\b((?:s[cgp]h|gt|sm)-\w+|galaxy nexus)/i, /samsung[- ]([-\w]+)/i, /sec-(sgh\w+)/i],
                            [d, [p, F],
                                [l, m]
                            ],
                            [/((ipod|iphone)\d+,\d+)/i],
                            [d, [p, I],
                                [l, m]
                            ],
                            [/(ipad\d+,\d+)/i],
                            [d, [p, I],
                                [l, v]
                            ],
                            [/\((ip(?:hone|od)[\w ]*);/i],
                            [d, [p, I],
                                [l, m]
                            ],
                            [/\((ipad);[-\w\),; ]+apple/i, /applecoremedia\/[\w\.]+ \((ipad)/i, /\b(ipad)\d\d?,\d\d?[;\]].+ios/i],
                            [d, [p, I],
                                [l, v]
                            ],
                            [/(macintosh);/i],
                            [d, [p, I]],
                            [/\b((?:ag[rs][23]?|bah2?|sht?|btv)-a?[lw]\d{2})\b(?!.+d\/s)/i],
                            [d, [p, P],
                                [l, v]
                            ],
                            [/(?:huawei|honor)([-\w ]+)[;\)]/i, /\b(nexus 6p|\w{2,4}e?-[atu]?[ln][\dx][012359c][adn]?)\b(?!.+d\/s)/i],
                            [d, [p, P],
                                [l, m]
                            ],
                            [/\b(poco[\w ]+)(?: bui|\))/i, /\b; (\w+) build\/hm\1/i, /\b(hm[-_ ]?note?[_ ]?(?:\d\w)?) bui/i, /\b(redmi[\-_ ]?(?:note|k)?[\w_ ]+)(?: bui|\))/i, /\b(mi[-_ ]?(?:a\d|one|one[_ ]plus|note lte|max|cc)?[_ ]?(?:\d?\w?)[_ ]?(?:plus|se|lite)?)(?: bui|\))/i],
                            [
                                [d, /_/g, " "],
                                [p, B],
                                [l, m]
                            ],
                            [/\b(mi[-_ ]?(?:pad)(?:[\w_ ]+))(?: bui|\))/i],
                            [
                                [d, /_/g, " "],
                                [p, B],
                                [l, v]
                            ],
                            [/; (\w+) bui.+ oppo/i, /\b(cph[12]\d{3}|p(?:af|c[al]|d\w|e[ar])[mt]\d0|x9007|a101op)\b/i],
                            [d, [p, "OPPO"],
                                [l, m]
                            ],
                            [/vivo (\w+)(?: bui|\))/i, /\b(v[12]\d{3}\w?[at])(?: bui|;)/i],
                            [d, [p, "Vivo"],
                                [l, m]
                            ],
                            [/\b(rmx[12]\d{3})(?: bui|;|\))/i],
                            [d, [p, "Realme"],
                                [l, m]
                            ],
                            [/\b(milestone|droid(?:[2-4x]| (?:bionic|x2|pro|razr))?:?( 4g)?)\b[\w ]+build\//i, /\bmot(?:orola)?[- ](\w*)/i, /((?:moto[\w\(\) ]+|xt\d{3,4}|nexus 6)(?= bui|\)))/i],
                            [d, [p, x],
                                [l, m]
                            ],
                            [/\b(mz60\d|xoom[2 ]{0,2}) build\//i],
                            [d, [p, x],
                                [l, v]
                            ],
                            [/((?=lg)?[vl]k\-?\d{3}) bui| 3\.[-\w; ]{10}lg?-([06cv9]{3,4})/i],
                            [d, [p, "LG"],
                                [l, v]
                            ],
                            [/(lm(?:-?f100[nv]?|-[\w\.]+)(?= bui|\))|nexus [45])/i, /\blg[-e;\/ ]+((?!browser|netcast|android tv)\w+)/i, /\blg-?([\d\w]+) bui/i],
                            [d, [p, "LG"],
                                [l, m]
                            ],
                            [/(ideatab[-\w ]+)/i, /lenovo ?(s[56]000[-\w]+|tab(?:[\w ]+)|yt[-\d\w]{6}|tb[-\d\w]{6})/i],
                            [d, [p, "Lenovo"],
                                [l, v]
                            ],
                            [/(?:maemo|nokia).*(n900|lumia \d+)/i, /nokia[-_ ]?([-\w\.]*)/i],
                            [
                                [d, /_/g, " "],
                                [p, "Nokia"],
                                [l, m]
                            ],
                            [/(pixel c)\b/i],
                            [d, [p, O],
                                [l, v]
                            ],
                            [/droid.+; (pixel[\daxl ]{0,6})(?: bui|\))/i],
                            [d, [p, O],
                                [l, m]
                            ],
                            [/droid.+ (a?\d[0-2]{2}so|[c-g]\d{4}|so[-gl]\w+|xq-a\w[4-7][12])(?= bui|\).+chrome\/(?![1-6]{0,1}\d\.))/i],
                            [d, [p, N],
                                [l, m]
                            ],
                            [/sony tablet [ps]/i, /\b(?:sony)?sgp\w+(?: bui|\))/i],
                            [
                                [d, "Xperia Tablet"],
                                [p, N],
                                [l, v]
                            ],
                            [/ (kb2005|in20[12]5|be20[12][59])\b/i, /(?:one)?(?:plus)? (a\d0\d\d)(?: b|\))/i],
                            [d, [p, "OnePlus"],
                                [l, m]
                            ],
                            [/(alexa)webm/i, /(kf[a-z]{2}wi)( bui|\))/i, /(kf[a-z]+)( bui|\)).+silk\//i],
                            [d, [p, A],
                                [l, v]
                            ],
                            [/((?:sd|kf)[0349hijorstuw]+)( bui|\)).+silk\//i],
                            [
                                [d, /(.+)/g, "Fire Phone $1"],
                                [p, A],
                                [l, m]
                            ],
                            [/(playbook);[-\w\),; ]+(rim)/i],
                            [d, p, [l, v]],
                            [/\b((?:bb[a-f]|st[hv])100-\d)/i, /\(bb10; (\w+)/i],
                            [d, [p, _],
                                [l, m]
                            ],
                            [/(?:\b|asus_)(transfo[prime ]{4,10} \w+|eeepc|slider \w+|nexus 7|padfone|p00[cj])/i],
                            [d, [p, E],
                                [l, v]
                            ],
                            [/ (z[bes]6[027][012][km][ls]|zenfone \d\w?)\b/i],
                            [d, [p, E],
                                [l, m]
                            ],
                            [/(nexus 9)/i],
                            [d, [p, "HTC"],
                                [l, v]
                            ],
                            [/(htc)[-;_ ]{1,2}([\w ]+(?=\)| bui)|\w+)/i, /(zte)[- ]([\w ]+?)(?: bui|\/|\))/i, /(alcatel|geeksphone|nexian|panasonic|sony(?!-bra))[-_ ]?([-\w]*)/i],
                            [p, [d, /_/g, " "],
                                [l, m]
                            ],
                            [/droid.+; ([ab][1-7]-?[0178a]\d\d?)/i],
                            [d, [p, "Acer"],
                                [l, v]
                            ],
                            [/droid.+; (m[1-5] note) bui/i, /\bmz-([-\w]{2,})/i],
                            [d, [p, "Meizu"],
                                [l, m]
                            ],
                            [/\b(sh-?[altvz]?\d\d[a-ekm]?)/i],
                            [d, [p, D],
                                [l, m]
                            ],
                            [/(blackberry|benq|palm(?=\-)|sonyericsson|acer|asus|dell|meizu|motorola|polytron)[-_ ]?([-\w]*)/i, /(hp) ([\w ]+\w)/i, /(asus)-?(\w+)/i, /(microsoft); (lumia[\w ]+)/i, /(lenovo)[-_ ]?([-\w]+)/i, /(jolla)/i, /(oppo) ?([\w ]+) bui/i],
                            [p, d, [l, m]],
                            [/(archos) (gamepad2?)/i, /(hp).+(touchpad(?!.+tablet)|tablet)/i, /(kindle)\/([\w\.]+)/i, /(nook)[\w ]+build\/(\w+)/i, /(dell) (strea[kpr\d ]*[\dko])/i, /(le[- ]+pan)[- ]+(\w{1,9}) bui/i, /(trinity)[- ]*(t\d{3}) bui/i, /(gigaset)[- ]+(q\w{1,9}) bui/i, /(vodafone) ([\w ]+)(?:\)| bui)/i],
                            [p, d, [l, v]],
                            [/(surface duo)/i],
                            [d, [p, M],
                                [l, v]
                            ],
                            [/droid [\d\.]+; (fp\du?)(?: b|\))/i],
                            [d, [p, "Fairphone"],
                                [l, m]
                            ],
                            [/(u304aa)/i],
                            [d, [p, "AT&T"],
                                [l, m]
                            ],
                            [/\bsie-(\w*)/i],
                            [d, [p, "Siemens"],
                                [l, m]
                            ],
                            [/\b(rct\w+) b/i],
                            [d, [p, "RCA"],
                                [l, v]
                            ],
                            [/\b(venue[\d ]{2,7}) b/i],
                            [d, [p, "Dell"],
                                [l, v]
                            ],
                            [/\b(q(?:mv|ta)\w+) b/i],
                            [d, [p, "Verizon"],
                                [l, v]
                            ],
                            [/\b(?:barnes[& ]+noble |bn[rt])([\w\+ ]*) b/i],
                            [d, [p, "Barnes & Noble"],
                                [l, v]
                            ],
                            [/\b(tm\d{3}\w+) b/i],
                            [d, [p, "NuVision"],
                                [l, v]
                            ],
                            [/\b(k88) b/i],
                            [d, [p, "ZTE"],
                                [l, v]
                            ],
                            [/\b(nx\d{3}j) b/i],
                            [d, [p, "ZTE"],
                                [l, m]
                            ],
                            [/\b(gen\d{3}) b.+49h/i],
                            [d, [p, "Swiss"],
                                [l, m]
                            ],
                            [/\b(zur\d{3}) b/i],
                            [d, [p, "Swiss"],
                                [l, v]
                            ],
                            [/\b((zeki)?tb.*\b) b/i],
                            [d, [p, "Zeki"],
                                [l, v]
                            ],
                            [/\b([yr]\d{2}) b/i, /\b(dragon[- ]+touch |dt)(\w{5}) b/i],
                            [
                                [p, "Dragon Touch"], d, [l, v]
                            ],
                            [/\b(ns-?\w{0,9}) b/i],
                            [d, [p, "Insignia"],
                                [l, v]
                            ],
                            [/\b((nxa|next)-?\w{0,9}) b/i],
                            [d, [p, "NextBook"],
                                [l, v]
                            ],
                            [/\b(xtreme\_)?(v(1[045]|2[015]|[3469]0|7[05])) b/i],
                            [
                                [p, "Voice"], d, [l, m]
                            ],
                            [/\b(lvtel\-)?(v1[12]) b/i],
                            [
                                [p, "LvTel"], d, [l, m]
                            ],
                            [/\b(ph-1) /i],
                            [d, [p, "Essential"],
                                [l, m]
                            ],
                            [/\b(v(100md|700na|7011|917g).*\b) b/i],
                            [d, [p, "Envizen"],
                                [l, v]
                            ],
                            [/\b(trio[-\w\. ]+) b/i],
                            [d, [p, "MachSpeed"],
                                [l, v]
                            ],
                            [/\btu_(1491) b/i],
                            [d, [p, "Rotor"],
                                [l, v]
                            ],
                            [/(shield[\w ]+) b/i],
                            [d, [p, "Nvidia"],
                                [l, v]
                            ],
                            [/(sprint) (\w+)/i],
                            [p, d, [l, m]],
                            [/(kin\.[onetw]{3})/i],
                            [
                                [d, /\./g, " "],
                                [p, M],
                                [l, m]
                            ],
                            [/droid.+; (cc6666?|et5[16]|mc[239][23]x?|vc8[03]x?)\)/i],
                            [d, [p, L],
                                [l, v]
                            ],
                            [/droid.+; (ec30|ps20|tc[2-8]\d[kx])\)/i],
                            [d, [p, L],
                                [l, m]
                            ],
                            [/(ouya)/i, /(nintendo) ([wids3utch]+)/i],
                            [p, d, [l, h]],
                            [/droid.+; (shield) bui/i],
                            [d, [p, "Nvidia"],
                                [l, h]
                            ],
                            [/(playstation [345portablevi]+)/i],
                            [d, [p, N],
                                [l, h]
                            ],
                            [/\b(xbox(?: one)?(?!; xbox))[\); ]/i],
                            [d, [p, M],
                                [l, h]
                            ],
                            [/smart-tv.+(samsung)/i],
                            [p, [l, T]],
                            [/hbbtv.+maple;(\d+)/i],
                            [
                                [d, /^/, "SmartTV"],
                                [p, F],
                                [l, T]
                            ],
                            [/(nux; netcast.+smarttv|lg (netcast\.tv-201\d|android tv))/i],
                            [
                                [p, "LG"],
                                [l, T]
                            ],
                            [/(apple) ?tv/i],
                            [p, [d, I + " TV"],
                                [l, T]
                            ],
                            [/crkey/i],
                            [
                                [d, C + "cast"],
                                [p, O],
                                [l, T]
                            ],
                            [/droid.+aft(\w)( bui|\))/i],
                            [d, [p, A],
                                [l, T]
                            ],
                            [/\(dtv[\);].+(aquos)/i, /(aquos-tv[\w ]+)\)/i],
                            [d, [p, D],
                                [l, T]
                            ],
                            [/(bravia[\w ]+)( bui|\))/i],
                            [d, [p, N],
                                [l, T]
                            ],
                            [/(mitv-\w{5}) bui/i],
                            [d, [p, B],
                                [l, T]
                            ],
                            [/\b(roku)[\dx]*[\)\/]((?:dvp-)?[\d\.]*)/i, /hbbtv\/\d+\.\d+\.\d+ +\([\w ]*; *(\w[^;]*);([^;]*)/i],
                            [
                                [p, $],
                                [d, $],
                                [l, T]
                            ],
                            [/\b(android tv|smart[- ]?tv|opera tv|tv; rv:)\b/i],
                            [
                                [l, T]
                            ],
                            [/((pebble))app/i],
                            [p, d, [l, g]],
                            [/droid.+; (glass) \d/i],
                            [d, [p, O],
                                [l, g]
                            ],
                            [/droid.+; (wt63?0{2,3})\)/i],
                            [d, [p, L],
                                [l, g]
                            ],
                            [/(quest( 2)?)/i],
                            [d, [p, q],
                                [l, g]
                            ],
                            [/(tesla)(?: qtcarbrowser|\/[-\w\.]+)/i],
                            [p, [l, w]],
                            [/droid .+?; ([^;]+?)(?: bui|\) applew).+? mobile safari/i],
                            [d, [l, m]],
                            [/droid .+?; ([^;]+?)(?: bui|\) applew).+?(?! mobile) safari/i],
                            [d, [l, v]],
                            [/\b((tablet|tab)[;\/]|focus\/\d(?!.+mobile))/i],
                            [
                                [l, v]
                            ],
                            [/(phone|mobile(?:[;\/]| [ \w\/\.]*safari)|pda(?=.+windows ce))/i],
                            [
                                [l, m]
                            ],
                            [/(android[-\w\. ]{0,9});.+buil/i],
                            [d, [p, "Generic"]]
                        ],
                        engine: [
                            [/windows.+ edge\/([\w\.]+)/i],
                            [y, [c, "EdgeHTML"]],
                            [/webkit\/537\.36.+chrome\/(?!27)([\w\.]+)/i],
                            [y, [c, "Blink"]],
                            [/(presto)\/([\w\.]+)/i, /(webkit|trident|netfront|netsurf|amaya|lynx|w3m|goanna)\/([\w\.]+)/i, /ekioh(flow)\/([\w\.]+)/i, /(khtml|tasman|links)[\/ ]\(?([\w\.]+)/i, /(icab)[\/ ]([23]\.[\d\.]+)/i],
                            [c, y],
                            [/rv\:([\w\.]{1,9})\b.+(gecko)/i],
                            [y, c]
                        ],
                        os: [
                            [/microsoft (windows) (vista|xp)/i],
                            [c, y],
                            [/(windows) nt 6\.2; (arm)/i, /(windows (?:phone(?: os)?|mobile))[\/ ]?([\d\.\w ]*)/i, /(windows)[\/ ]?([ntce\d\. ]+\w)(?!.+xbox)/i],
                            [c, [y, W, Q]],
                            [/(win(?=3|9|n)|win 9x )([nt\d\.]+)/i],
                            [
                                [c, "Windows"],
                                [y, W, Q]
                            ],
                            [/ip[honead]{2,4}\b(?:.*os ([\w]+) like mac|; opera)/i, /cfnetwork\/.+darwin/i],
                            [
                                [y, /_/g, "."],
                                [c, "iOS"]
                            ],
                            [/(mac os x) ?([\w\. ]*)/i, /(macintosh|mac_powerpc\b)(?!.+haiku)/i],
                            [
                                [c, "Mac OS"],
                                [y, /_/g, "."]
                            ],
                            [/droid ([\w\.]+)\b.+(android[- ]x86|harmonyos)/i],
                            [y, c],
                            [/(android|webos|qnx|bada|rim tablet os|maemo|meego|sailfish)[-\/ ]?([\w\.]*)/i, /(blackberry)\w*\/([\w\.]*)/i, /(tizen|kaios)[\/ ]([\w\.]+)/i, /\((series40);/i],
                            [c, y],
                            [/\(bb(10);/i],
                            [y, [c, _]],
                            [/(?:symbian ?os|symbos|s60(?=;)|series60)[-\/ ]?([\w\.]*)/i],
                            [y, [c, "Symbian"]],
                            [/mozilla\/[\d\.]+ \((?:mobile|tablet|tv|mobile; [\w ]+); rv:.+ gecko\/([\w\.]+)/i],
                            [y, [c, S + " OS"]],
                            [/web0s;.+rt(tv)/i, /\b(?:hp)?wos(?:browser)?\/([\w\.]+)/i],
                            [y, [c, "webOS"]],
                            [/crkey\/([\d\.]+)/i],
                            [y, [c, C + "cast"]],
                            [/(cros) [\w]+ ([\w\.]+\w)/i],
                            [
                                [c, "Chromium OS"], y
                            ],
                            [/(nintendo|playstation) ([wids345portablevuch]+)/i, /(xbox); +xbox ([^\);]+)/i, /\b(joli|palm)\b ?(?:os)?\/?([\w\.]*)/i, /(mint)[\/\(\) ]?(\w*)/i, /(mageia|vectorlinux)[; ]/i, /([kxln]?ubuntu|debian|suse|opensuse|gentoo|arch(?= linux)|slackware|fedora|mandriva|centos|pclinuxos|red ?hat|zenwalk|linpus|raspbian|plan 9|minix|risc os|contiki|deepin|manjaro|elementary os|sabayon|linspire)(?: gnu\/linux)?(?: enterprise)?(?:[- ]linux)?(?:-gnu)?[-\/ ]?(?!chrom|package)([-\w\.]*)/i, /(hurd|linux) ?([\w\.]*)/i, /(gnu) ?([\w\.]*)/i, /\b([-frentopcghs]{0,5}bsd|dragonfly)[\/ ]?(?!amd|[ix346]{1,2}86)([\w\.]*)/i, /(haiku) (\w+)/i],
                            [c, y],
                            [/(sunos) ?([\w\.\d]*)/i],
                            [
                                [c, "Solaris"], y
                            ],
                            [/((?:open)?solaris)[-\/ ]?([\w\.]*)/i, /(aix) ((\d)(?=\.|\)| )[\w\.])*/i, /\b(beos|os\/2|amigaos|morphos|openvms|fuchsia|hp-ux)/i, /(unix) ?([\w\.]*)/i],
                            [c, y]
                        ]
                    },
                    z = function(e, t) {
                        if (typeof e === s && (t = e, e = i), !(this instanceof z)) return new z(e, t).getResult();
                        var f = e || (typeof r !== o && r.navigator && r.navigator.userAgent ? r.navigator.userAgent : ""),
                            n = t ? U(X, t) : X;
                        return this.getBrowser = function() {
                            var e, t = {};
                            return t[c] = i, t[y] = i, H.call(t, f, n.browser), t.major = typeof(e = t.version) === u ? e.replace(/[^\d\.]/g, "").split(".")[0] : i, t
                        }, this.getCPU = function() {
                            var e = {};
                            return e[b] = i, H.call(e, f, n.cpu), e
                        }, this.getDevice = function() {
                            var e = {};
                            return e[p] = i, e[d] = i, e[l] = i, H.call(e, f, n.device), e
                        }, this.getEngine = function() {
                            var e = {};
                            return e[c] = i, e[y] = i, H.call(e, f, n.engine), e
                        }, this.getOS = function() {
                            var e = {};
                            return e[c] = i, e[y] = i, H.call(e, f, n.os), e
                        }, this.getResult = function() {
                            return {
                                ua: this.getUA(),
                                browser: this.getBrowser(),
                                engine: this.getEngine(),
                                os: this.getOS(),
                                device: this.getDevice(),
                                cpu: this.getCPU()
                            }
                        }, this.getUA = function() {
                            return f
                        }, this.setUA = function(e) {
                            return f = typeof e === u && e.length > 350 ? $(e, 350) : e, this
                        }, this.setUA(f), this
                    };
                z.VERSION = "0.7.33", z.BROWSER = V([c, y, "major"]), z.CPU = V([b]), z.DEVICE = V([d, p, l, h, m, T, v, g, w]), z.ENGINE = z.OS = V([c, y]), typeof t !== o ? (e.exports && (t = e.exports = z), t.UAParser = z) : f.amdO ? i !== (n = (function() {
                    return z
                }).call(t, f, t, e)) && (e.exports = n) : typeof r !== o && (r.UAParser = z);
                var K = typeof r !== o && (r.jQuery || r.Zepto);
                if (K && !K.ua) {
                    var Y = new z;
                    K.ua = Y.getResult(), K.ua.get = function() {
                        return Y.getUA()
                    }, K.ua.set = function(e) {
                        Y.setUA(e);
                        var t = Y.getResult();
                        for (var f in t) K.ua[f] = t[f]
                    }
                }
            }("object" == typeof window ? window : this)
        },
        71072: function(e) {
            "use strict";
            ! function(t) {
                function f(e) {
                    return parseInt(e) === e
                }

                function n(e) {
                    if (!f(e.length)) return !1;
                    for (var t = 0; t < e.length; t++)
                        if (!f(e[t]) || e[t] < 0 || e[t] > 255) return !1;
                    return !0
                }

                function r(e, t) {
                    if (e.buffer && ArrayBuffer.isView(e) && "Uint8Array" === e.name) return t && (e = e.slice ? e.slice() : Array.prototype.slice.call(e)), e;
                    if (Array.isArray(e)) {
                        if (!n(e)) throw Error("Array contains invalid value: " + e);
                        return new Uint8Array(e)
                    }
                    if (f(e.length) && n(e)) return new Uint8Array(e);
                    throw Error("unsupported array-like object")
                }

                function i(e) {
                    return new Uint8Array(e)
                }

                function a(e, t, f, n, r) {
                    (null != n || null != r) && (e = e.slice ? e.slice(n, r) : Array.prototype.slice.call(e, n, r)), t.set(e, f)
                }
                var o, s = (o = "0123456789abcdef", {
                        toBytes: function(e) {
                            for (var t = [], f = 0; f < e.length; f += 2) t.push(parseInt(e.substr(f, 2), 16));
                            return t
                        },
                        fromBytes: function(e) {
                            for (var t = [], f = 0; f < e.length; f++) {
                                var n = e[f];
                                t.push(o[(240 & n) >> 4] + o[15 & n])
                            }
                            return t.join("")
                        }
                    }),
                    u = {
                        16: 10,
                        24: 12,
                        32: 14
                    },
                    d = [1, 2, 4, 8, 16, 32, 64, 128, 27, 54, 108, 216, 171, 77, 154, 47, 94, 188, 99, 198, 151, 53, 106, 212, 179, 125, 250, 239, 197, 145],
                    c = [99, 124, 119, 123, 242, 107, 111, 197, 48, 1, 103, 43, 254, 215, 171, 118, 202, 130, 201, 125, 250, 89, 71, 240, 173, 212, 162, 175, 156, 164, 114, 192, 183, 253, 147, 38, 54, 63, 247, 204, 52, 165, 229, 241, 113, 216, 49, 21, 4, 199, 35, 195, 24, 150, 5, 154, 7, 18, 128, 226, 235, 39, 178, 117, 9, 131, 44, 26, 27, 110, 90, 160, 82, 59, 214, 179, 41, 227, 47, 132, 83, 209, 0, 237, 32, 252, 177, 91, 106, 203, 190, 57, 74, 76, 88, 207, 208, 239, 170, 251, 67, 77, 51, 133, 69, 249, 2, 127, 80, 60, 159, 168, 81, 163, 64, 143, 146, 157, 56, 245, 188, 182, 218, 33, 16, 255, 243, 210, 205, 12, 19, 236, 95, 151, 68, 23, 196, 167, 126, 61, 100, 93, 25, 115, 96, 129, 79, 220, 34, 42, 144, 136, 70, 238, 184, 20, 222, 94, 11, 219, 224, 50, 58, 10, 73, 6, 36, 92, 194, 211, 172, 98, 145, 149, 228, 121, 231, 200, 55, 109, 141, 213, 78, 169, 108, 86, 244, 234, 101, 122, 174, 8, 186, 120, 37, 46, 28, 166, 180, 198, 232, 221, 116, 31, 75, 189, 139, 138, 112, 62, 181, 102, 72, 3, 246, 14, 97, 53, 87, 185, 134, 193, 29, 158, 225, 248, 152, 17, 105, 217, 142, 148, 155, 30, 135, 233, 206, 85, 40, 223, 140, 161, 137, 13, 191, 230, 66, 104, 65, 153, 45, 15, 176, 84, 187, 22],
                    l = [82, 9, 106, 213, 48, 54, 165, 56, 191, 64, 163, 158, 129, 243, 215, 251, 124, 227, 57, 130, 155, 47, 255, 135, 52, 142, 67, 68, 196, 222, 233, 203, 84, 123, 148, 50, 166, 194, 35, 61, 238, 76, 149, 11, 66, 250, 195, 78, 8, 46, 161, 102, 40, 217, 36, 178, 118, 91, 162, 73, 109, 139, 209, 37, 114, 248, 246, 100, 134, 104, 152, 22, 212, 164, 92, 204, 93, 101, 182, 146, 108, 112, 72, 80, 253, 237, 185, 218, 94, 21, 70, 87, 167, 141, 157, 132, 144, 216, 171, 0, 140, 188, 211, 10, 247, 228, 88, 5, 184, 179, 69, 6, 208, 44, 30, 143, 202, 63, 15, 2, 193, 175, 189, 3, 1, 19, 138, 107, 58, 145, 17, 65, 79, 103, 220, 234, 151, 242, 207, 206, 240, 180, 230, 115, 150, 172, 116, 34, 231, 173, 53, 133, 226, 249, 55, 232, 28, 117, 223, 110, 71, 241, 26, 113, 29, 41, 197, 137, 111, 183, 98, 14, 170, 24, 190, 27, 252, 86, 62, 75, 198, 210, 121, 32, 154, 219, 192, 254, 120, 205, 90, 244, 31, 221, 168, 51, 136, 7, 199, 49, 177, 18, 16, 89, 39, 128, 236, 95, 96, 81, 127, 169, 25, 181, 74, 13, 45, 229, 122, 159, 147, 201, 156, 239, 160, 224, 59, 77, 174, 42, 245, 176, 200, 235, 187, 60, 131, 83, 153, 97, 23, 43, 4, 126, 186, 119, 214, 38, 225, 105, 20, 99, 85, 33, 12, 125],
                    p = [3328402341, 4168907908, 4000806809, 4135287693, 4294111757, 3597364157, 3731845041, 2445657428, 1613770832, 33620227, 3462883241, 1445669757, 3892248089, 3050821474, 1303096294, 3967186586, 2412431941, 528646813, 2311702848, 4202528135, 4026202645, 2992200171, 2387036105, 4226871307, 1101901292, 3017069671, 1604494077, 1169141738, 597466303, 1403299063, 3832705686, 2613100635, 1974974402, 3791519004, 1033081774, 1277568618, 1815492186, 2118074177, 4126668546, 2211236943, 1748251740, 1369810420, 3521504564, 4193382664, 3799085459, 2883115123, 1647391059, 706024767, 134480908, 2512897874, 1176707941, 2646852446, 806885416, 932615841, 168101135, 798661301, 235341577, 605164086, 461406363, 3756188221, 3454790438, 1311188841, 2142417613, 3933566367, 302582043, 495158174, 1479289972, 874125870, 907746093, 3698224818, 3025820398, 1537253627, 2756858614, 1983593293, 3084310113, 2108928974, 1378429307, 3722699582, 1580150641, 327451799, 2790478837, 3117535592, 0, 3253595436, 1075847264, 3825007647, 2041688520, 3059440621, 3563743934, 2378943302, 1740553945, 1916352843, 2487896798, 2555137236, 2958579944, 2244988746, 3151024235, 3320835882, 1336584933, 3992714006, 2252555205, 2588757463, 1714631509, 293963156, 2319795663, 3925473552, 67240454, 4269768577, 2689618160, 2017213508, 631218106, 1269344483, 2723238387, 1571005438, 2151694528, 93294474, 1066570413, 563977660, 1882732616, 4059428100, 1673313503, 2008463041, 2950355573, 1109467491, 537923632, 3858759450, 4260623118, 3218264685, 2177748300, 403442708, 638784309, 3287084079, 3193921505, 899127202, 2286175436, 773265209, 2479146071, 1437050866, 4236148354, 2050833735, 3362022572, 3126681063, 840505643, 3866325909, 3227541664, 427917720, 2655997905, 2749160575, 1143087718, 1412049534, 999329963, 193497219, 2353415882, 3354324521, 1807268051, 672404540, 2816401017, 3160301282, 369822493, 2916866934, 3688947771, 1681011286, 1949973070, 336202270, 2454276571, 201721354, 1210328172, 3093060836, 2680341085, 3184776046, 1135389935, 3294782118, 965841320, 831886756, 3554993207, 4068047243, 3588745010, 2345191491, 1849112409, 3664604599, 26054028, 2983581028, 2622377682, 1235855840, 3630984372, 2891339514, 4092916743, 3488279077, 3395642799, 4101667470, 1202630377, 268961816, 1874508501, 4034427016, 1243948399, 1546530418, 941366308, 1470539505, 1941222599, 2546386513, 3421038627, 2715671932, 3899946140, 1042226977, 2521517021, 1639824860, 227249030, 260737669, 3765465232, 2084453954, 1907733956, 3429263018, 2420656344, 100860677, 4160157185, 470683154, 3261161891, 1781871967, 2924959737, 1773779408, 394692241, 2579611992, 974986535, 664706745, 3655459128, 3958962195, 731420851, 571543859, 3530123707, 2849626480, 126783113, 865375399, 765172662, 1008606754, 361203602, 3387549984, 2278477385, 2857719295, 1344809080, 2782912378, 59542671, 1503764984, 160008576, 437062935, 1707065306, 3622233649, 2218934982, 3496503480, 2185314755, 697932208, 1512910199, 504303377, 2075177163, 2824099068, 1841019862, 739644986],
                    y = [2781242211, 2230877308, 2582542199, 2381740923, 234877682, 3184946027, 2984144751, 1418839493, 1348481072, 50462977, 2848876391, 2102799147, 434634494, 1656084439, 3863849899, 2599188086, 1167051466, 2636087938, 1082771913, 2281340285, 368048890, 3954334041, 3381544775, 201060592, 3963727277, 1739838676, 4250903202, 3930435503, 3206782108, 4149453988, 2531553906, 1536934080, 3262494647, 484572669, 2923271059, 1783375398, 1517041206, 1098792767, 49674231, 1334037708, 1550332980, 4098991525, 886171109, 150598129, 2481090929, 1940642008, 1398944049, 1059722517, 201851908, 1385547719, 1699095331, 1587397571, 674240536, 2704774806, 252314885, 3039795866, 151914247, 908333586, 2602270848, 1038082786, 651029483, 1766729511, 3447698098, 2682942837, 454166793, 2652734339, 1951935532, 775166490, 758520603, 3000790638, 4004797018, 4217086112, 4137964114, 1299594043, 1639438038, 3464344499, 2068982057, 1054729187, 1901997871, 2534638724, 4121318227, 1757008337, 0, 750906861, 1614815264, 535035132, 3363418545, 3988151131, 3201591914, 1183697867, 3647454910, 1265776953, 3734260298, 3566750796, 3903871064, 1250283471, 1807470800, 717615087, 3847203498, 384695291, 3313910595, 3617213773, 1432761139, 2484176261, 3481945413, 283769337, 100925954, 2180939647, 4037038160, 1148730428, 3123027871, 3813386408, 4087501137, 4267549603, 3229630528, 2315620239, 2906624658, 3156319645, 1215313976, 82966005, 3747855548, 3245848246, 1974459098, 1665278241, 807407632, 451280895, 251524083, 1841287890, 1283575245, 337120268, 891687699, 801369324, 3787349855, 2721421207, 3431482436, 959321879, 1469301956, 4065699751, 2197585534, 1199193405, 2898814052, 3887750493, 724703513, 2514908019, 2696962144, 2551808385, 3516813135, 2141445340, 1715741218, 2119445034, 2872807568, 2198571144, 3398190662, 700968686, 3547052216, 1009259540, 2041044702, 3803995742, 487983883, 1991105499, 1004265696, 1449407026, 1316239930, 504629770, 3683797321, 168560134, 1816667172, 3837287516, 1570751170, 1857934291, 4014189740, 2797888098, 2822345105, 2754712981, 936633572, 2347923833, 852879335, 1133234376, 1500395319, 3084545389, 2348912013, 1689376213, 3533459022, 3762923945, 3034082412, 4205598294, 133428468, 634383082, 2949277029, 2398386810, 3913789102, 403703816, 3580869306, 2297460856, 1867130149, 1918643758, 607656988, 4049053350, 3346248884, 1368901318, 600565992, 2090982877, 2632479860, 557719327, 3717614411, 3697393085, 2249034635, 2232388234, 2430627952, 1115438654, 3295786421, 2865522278, 3633334344, 84280067, 33027830, 303828494, 2747425121, 1600795957, 4188952407, 3496589753, 2434238086, 1486471617, 658119965, 3106381470, 953803233, 334231800, 3005978776, 857870609, 3151128937, 1890179545, 2298973838, 2805175444, 3056442267, 574365214, 2450884487, 550103529, 1233637070, 4289353045, 2018519080, 2057691103, 2399374476, 4166623649, 2148108681, 387583245, 3664101311, 836232934, 3330556482, 3100665960, 3280093505, 2955516313, 2002398509, 287182607, 3413881008, 4238890068, 3597515707, 975967766],
                    b = [1671808611, 2089089148, 2006576759, 2072901243, 4061003762, 1807603307, 1873927791, 3310653893, 810573872, 16974337, 1739181671, 729634347, 4263110654, 3613570519, 2883997099, 1989864566, 3393556426, 2191335298, 3376449993, 2106063485, 4195741690, 1508618841, 1204391495, 4027317232, 2917941677, 3563566036, 2734514082, 2951366063, 2629772188, 2767672228, 1922491506, 3227229120, 3082974647, 4246528509, 2477669779, 644500518, 911895606, 1061256767, 4144166391, 3427763148, 878471220, 2784252325, 3845444069, 4043897329, 1905517169, 3631459288, 827548209, 356461077, 67897348, 3344078279, 593839651, 3277757891, 405286936, 2527147926, 84871685, 2595565466, 118033927, 305538066, 2157648768, 3795705826, 3945188843, 661212711, 2999812018, 1973414517, 152769033, 2208177539, 745822252, 439235610, 455947803, 1857215598, 1525593178, 2700827552, 1391895634, 994932283, 3596728278, 3016654259, 695947817, 3812548067, 795958831, 2224493444, 1408607827, 3513301457, 0, 3979133421, 543178784, 4229948412, 2982705585, 1542305371, 1790891114, 3410398667, 3201918910, 961245753, 1256100938, 1289001036, 1491644504, 3477767631, 3496721360, 4012557807, 2867154858, 4212583931, 1137018435, 1305975373, 861234739, 2241073541, 1171229253, 4178635257, 33948674, 2139225727, 1357946960, 1011120188, 2679776671, 2833468328, 1374921297, 2751356323, 1086357568, 2408187279, 2460827538, 2646352285, 944271416, 4110742005, 3168756668, 3066132406, 3665145818, 560153121, 271589392, 4279952895, 4077846003, 3530407890, 3444343245, 202643468, 322250259, 3962553324, 1608629855, 2543990167, 1154254916, 389623319, 3294073796, 2817676711, 2122513534, 1028094525, 1689045092, 1575467613, 422261273, 1939203699, 1621147744, 2174228865, 1339137615, 3699352540, 577127458, 712922154, 2427141008, 2290289544, 1187679302, 3995715566, 3100863416, 339486740, 3732514782, 1591917662, 186455563, 3681988059, 3762019296, 844522546, 978220090, 169743370, 1239126601, 101321734, 611076132, 1558493276, 3260915650, 3547250131, 2901361580, 1655096418, 2443721105, 2510565781, 3828863972, 2039214713, 3878868455, 3359869896, 928607799, 1840765549, 2374762893, 3580146133, 1322425422, 2850048425, 1823791212, 1459268694, 4094161908, 3928346602, 1706019429, 2056189050, 2934523822, 135794696, 3134549946, 2022240376, 628050469, 779246638, 472135708, 2800834470, 3032970164, 3327236038, 3894660072, 3715932637, 1956440180, 522272287, 1272813131, 3185336765, 2340818315, 2323976074, 1888542832, 1044544574, 3049550261, 1722469478, 1222152264, 50660867, 4127324150, 236067854, 1638122081, 895445557, 1475980887, 3117443513, 2257655686, 3243809217, 489110045, 2662934430, 3778599393, 4162055160, 2561878936, 288563729, 1773916777, 3648039385, 2391345038, 2493985684, 2612407707, 505560094, 2274497927, 3911240169, 3460925390, 1442818645, 678973480, 3749357023, 2358182796, 2717407649, 2306869641, 219617805, 3218761151, 3862026214, 1120306242, 1756942440, 1103331905, 2578459033, 762796589, 252780047, 2966125488, 1425844308, 3151392187, 372911126],
                    h = [1667474886, 2088535288, 2004326894, 2071694838, 4075949567, 1802223062, 1869591006, 3318043793, 808472672, 16843522, 1734846926, 724270422, 4278065639, 3621216949, 2880169549, 1987484396, 3402253711, 2189597983, 3385409673, 2105378810, 4210693615, 1499065266, 1195886990, 4042263547, 2913856577, 3570689971, 2728590687, 2947541573, 2627518243, 2762274643, 1920112356, 3233831835, 3082273397, 4261223649, 2475929149, 640051788, 909531756, 1061110142, 4160160501, 3435941763, 875846760, 2779116625, 3857003729, 4059105529, 1903268834, 3638064043, 825316194, 353713962, 67374088, 3351728789, 589522246, 3284360861, 404236336, 2526454071, 84217610, 2593830191, 117901582, 303183396, 2155911963, 3806477791, 3958056653, 656894286, 2998062463, 1970642922, 151591698, 2206440989, 741110872, 437923380, 454765878, 1852748508, 1515908788, 2694904667, 1381168804, 993742198, 3604373943, 3014905469, 690584402, 3823320797, 791638366, 2223281939, 1398011302, 3520161977, 0, 3991743681, 538992704, 4244381667, 2981218425, 1532751286, 1785380564, 3419096717, 3200178535, 960056178, 1246420628, 1280103576, 1482221744, 3486468741, 3503319995, 4025428677, 2863326543, 4227536621, 1128514950, 1296947098, 859002214, 2240123921, 1162203018, 4193849577, 33687044, 2139062782, 1347481760, 1010582648, 2678045221, 2829640523, 1364325282, 2745433693, 1077985408, 2408548869, 2459086143, 2644360225, 943212656, 4126475505, 3166494563, 3065430391, 3671750063, 555836226, 269496352, 4294908645, 4092792573, 3537006015, 3452783745, 202118168, 320025894, 3974901699, 1600119230, 2543297077, 1145359496, 387397934, 3301201811, 2812801621, 2122220284, 1027426170, 1684319432, 1566435258, 421079858, 1936954854, 1616945344, 2172753945, 1330631070, 3705438115, 572679748, 707427924, 2425400123, 2290647819, 1179044492, 4008585671, 3099120491, 336870440, 3739122087, 1583276732, 185277718, 3688593069, 3772791771, 842159716, 976899700, 168435220, 1229577106, 101059084, 606366792, 1549591736, 3267517855, 3553849021, 2897014595, 1650632388, 2442242105, 2509612081, 3840161747, 2038008818, 3890688725, 3368567691, 926374254, 1835907034, 2374863873, 3587531953, 1313788572, 2846482505, 1819063512, 1448540844, 4109633523, 3941213647, 1701162954, 2054852340, 2930698567, 134748176, 3132806511, 2021165296, 623210314, 774795868, 471606328, 2795958615, 3031746419, 3334885783, 3907527627, 3722280097, 1953799400, 522133822, 1263263126, 3183336545, 2341176845, 2324333839, 1886425312, 1044267644, 3048588401, 1718004428, 1212733584, 50529542, 4143317495, 235803164, 1633788866, 892690282, 1465383342, 3115962473, 2256965911, 3250673817, 488449850, 2661202215, 3789633753, 4177007595, 2560144171, 286339874, 1768537042, 3654906025, 2391705863, 2492770099, 2610673197, 505291324, 2273808917, 3924369609, 3469625735, 1431699370, 673740880, 3755965093, 2358021891, 2711746649, 2307489801, 218961690, 3217021541, 3873845719, 1111672452, 1751693520, 1094828930, 2576986153, 757954394, 252645662, 2964376443, 1414855848, 3149649517, 370555436],
                    m = [1374988112, 2118214995, 437757123, 975658646, 1001089995, 530400753, 2902087851, 1273168787, 540080725, 2910219766, 2295101073, 4110568485, 1340463100, 3307916247, 641025152, 3043140495, 3736164937, 632953703, 1172967064, 1576976609, 3274667266, 2169303058, 2370213795, 1809054150, 59727847, 361929877, 3211623147, 2505202138, 3569255213, 1484005843, 1239443753, 2395588676, 1975683434, 4102977912, 2572697195, 666464733, 3202437046, 4035489047, 3374361702, 2110667444, 1675577880, 3843699074, 2538681184, 1649639237, 2976151520, 3144396420, 4269907996, 4178062228, 1883793496, 2403728665, 2497604743, 1383856311, 2876494627, 1917518562, 3810496343, 1716890410, 3001755655, 800440835, 2261089178, 3543599269, 807962610, 599762354, 33778362, 3977675356, 2328828971, 2809771154, 4077384432, 1315562145, 1708848333, 101039829, 3509871135, 3299278474, 875451293, 2733856160, 92987698, 2767645557, 193195065, 1080094634, 1584504582, 3178106961, 1042385657, 2531067453, 3711829422, 1306967366, 2438237621, 1908694277, 67556463, 1615861247, 429456164, 3602770327, 2302690252, 1742315127, 2968011453, 126454664, 3877198648, 2043211483, 2709260871, 2084704233, 4169408201, 0, 159417987, 841739592, 504459436, 1817866830, 4245618683, 260388950, 1034867998, 908933415, 168810852, 1750902305, 2606453969, 607530554, 202008497, 2472011535, 3035535058, 463180190, 2160117071, 1641816226, 1517767529, 470948374, 3801332234, 3231722213, 1008918595, 303765277, 235474187, 4069246893, 766945465, 337553864, 1475418501, 2943682380, 4003061179, 2743034109, 4144047775, 1551037884, 1147550661, 1543208500, 2336434550, 3408119516, 3069049960, 3102011747, 3610369226, 1113818384, 328671808, 2227573024, 2236228733, 3535486456, 2935566865, 3341394285, 496906059, 3702665459, 226906860, 2009195472, 733156972, 2842737049, 294930682, 1206477858, 2835123396, 2700099354, 1451044056, 573804783, 2269728455, 3644379585, 2362090238, 2564033334, 2801107407, 2776292904, 3669462566, 1068351396, 742039012, 1350078989, 1784663195, 1417561698, 4136440770, 2430122216, 775550814, 2193862645, 2673705150, 1775276924, 1876241833, 3475313331, 3366754619, 270040487, 3902563182, 3678124923, 3441850377, 1851332852, 3969562369, 2203032232, 3868552805, 2868897406, 566021896, 4011190502, 3135740889, 1248802510, 3936291284, 699432150, 832877231, 708780849, 3332740144, 899835584, 1951317047, 4236429990, 3767586992, 866637845, 4043610186, 1106041591, 2144161806, 395441711, 1984812685, 1139781709, 3433712980, 3835036895, 2664543715, 1282050075, 3240894392, 1181045119, 2640243204, 25965917, 4203181171, 4211818798, 3009879386, 2463879762, 3910161971, 1842759443, 2597806476, 933301370, 1509430414, 3943906441, 3467192302, 3076639029, 3776767469, 2051518780, 2631065433, 1441952575, 404016761, 1942435775, 1408749034, 1610459739, 3745345300, 2017778566, 3400528769, 3110650942, 941896748, 3265478751, 371049330, 3168937228, 675039627, 4279080257, 967311729, 135050206, 3635733660, 1683407248, 2076935265, 3576870512, 1215061108, 3501741890],
                    v = [1347548327, 1400783205, 3273267108, 2520393566, 3409685355, 4045380933, 2880240216, 2471224067, 1428173050, 4138563181, 2441661558, 636813900, 4233094615, 3620022987, 2149987652, 2411029155, 1239331162, 1730525723, 2554718734, 3781033664, 46346101, 310463728, 2743944855, 3328955385, 3875770207, 2501218972, 3955191162, 3667219033, 768917123, 3545789473, 692707433, 1150208456, 1786102409, 2029293177, 1805211710, 3710368113, 3065962831, 401639597, 1724457132, 3028143674, 409198410, 2196052529, 1620529459, 1164071807, 3769721975, 2226875310, 486441376, 2499348523, 1483753576, 428819965, 2274680428, 3075636216, 598438867, 3799141122, 1474502543, 711349675, 129166120, 53458370, 2592523643, 2782082824, 4063242375, 2988687269, 3120694122, 1559041666, 730517276, 2460449204, 4042459122, 2706270690, 3446004468, 3573941694, 533804130, 2328143614, 2637442643, 2695033685, 839224033, 1973745387, 957055980, 2856345839, 106852767, 1371368976, 4181598602, 1033297158, 2933734917, 1179510461, 3046200461, 91341917, 1862534868, 4284502037, 605657339, 2547432937, 3431546947, 2003294622, 3182487618, 2282195339, 954669403, 3682191598, 1201765386, 3917234703, 3388507166, 0, 2198438022, 1211247597, 2887651696, 1315723890, 4227665663, 1443857720, 507358933, 657861945, 1678381017, 560487590, 3516619604, 975451694, 2970356327, 261314535, 3535072918, 2652609425, 1333838021, 2724322336, 1767536459, 370938394, 182621114, 3854606378, 1128014560, 487725847, 185469197, 2918353863, 3106780840, 3356761769, 2237133081, 1286567175, 3152976349, 4255350624, 2683765030, 3160175349, 3309594171, 878443390, 1988838185, 3704300486, 1756818940, 1673061617, 3403100636, 272786309, 1075025698, 545572369, 2105887268, 4174560061, 296679730, 1841768865, 1260232239, 4091327024, 3960309330, 3497509347, 1814803222, 2578018489, 4195456072, 575138148, 3299409036, 446754879, 3629546796, 4011996048, 3347532110, 3252238545, 4270639778, 915985419, 3483825537, 681933534, 651868046, 2755636671, 3828103837, 223377554, 2607439820, 1649704518, 3270937875, 3901806776, 1580087799, 4118987695, 3198115200, 2087309459, 2842678573, 3016697106, 1003007129, 2802849917, 1860738147, 2077965243, 164439672, 4100872472, 32283319, 2827177882, 1709610350, 2125135846, 136428751, 3874428392, 3652904859, 3460984630, 3572145929, 3593056380, 2939266226, 824852259, 818324884, 3224740454, 930369212, 2801566410, 2967507152, 355706840, 1257309336, 4148292826, 243256656, 790073846, 2373340630, 1296297904, 1422699085, 3756299780, 3818836405, 457992840, 3099667487, 2135319889, 77422314, 1560382517, 1945798516, 788204353, 1521706781, 1385356242, 870912086, 325965383, 2358957921, 2050466060, 2388260884, 2313884476, 4006521127, 901210569, 3990953189, 1014646705, 1503449823, 1062597235, 2031621326, 3212035895, 3931371469, 1533017514, 350174575, 2256028891, 2177544179, 1052338372, 741876788, 1606591296, 1914052035, 213705253, 2334669897, 1107234197, 1899603969, 3725069491, 2631447780, 2422494913, 1635502980, 1893020342, 1950903388, 1120974935],
                    T = [2807058932, 1699970625, 2764249623, 1586903591, 1808481195, 1173430173, 1487645946, 59984867, 4199882800, 1844882806, 1989249228, 1277555970, 3623636965, 3419915562, 1149249077, 2744104290, 1514790577, 459744698, 244860394, 3235995134, 1963115311, 4027744588, 2544078150, 4190530515, 1608975247, 2627016082, 2062270317, 1507497298, 2200818878, 567498868, 1764313568, 3359936201, 2305455554, 2037970062, 1047239e3, 1910319033, 1337376481, 2904027272, 2892417312, 984907214, 1243112415, 830661914, 861968209, 2135253587, 2011214180, 2927934315, 2686254721, 731183368, 1750626376, 4246310725, 1820824798, 4172763771, 3542330227, 48394827, 2404901663, 2871682645, 671593195, 3254988725, 2073724613, 145085239, 2280796200, 2779915199, 1790575107, 2187128086, 472615631, 3029510009, 4075877127, 3802222185, 4107101658, 3201631749, 1646252340, 4270507174, 1402811438, 1436590835, 3778151818, 3950355702, 3963161475, 4020912224, 2667994737, 273792366, 2331590177, 104699613, 95345982, 3175501286, 2377486676, 1560637892, 3564045318, 369057872, 4213447064, 3919042237, 1137477952, 2658625497, 1119727848, 2340947849, 1530455833, 4007360968, 172466556, 266959938, 516552836, 0, 2256734592, 3980931627, 1890328081, 1917742170, 4294704398, 945164165, 3575528878, 958871085, 3647212047, 2787207260, 1423022939, 775562294, 1739656202, 3876557655, 2530391278, 2443058075, 3310321856, 547512796, 1265195639, 437656594, 3121275539, 719700128, 3762502690, 387781147, 218828297, 3350065803, 2830708150, 2848461854, 428169201, 122466165, 3720081049, 1627235199, 648017665, 4122762354, 1002783846, 2117360635, 695634755, 3336358691, 4234721005, 4049844452, 3704280881, 2232435299, 574624663, 287343814, 612205898, 1039717051, 840019705, 2708326185, 793451934, 821288114, 1391201670, 3822090177, 376187827, 3113855344, 1224348052, 1679968233, 2361698556, 1058709744, 752375421, 2431590963, 1321699145, 3519142200, 2734591178, 188127444, 2177869557, 3727205754, 2384911031, 3215212461, 2648976442, 2450346104, 3432737375, 1180849278, 331544205, 3102249176, 4150144569, 2952102595, 2159976285, 2474404304, 766078933, 313773861, 2570832044, 2108100632, 1668212892, 3145456443, 2013908262, 418672217, 3070356634, 2594734927, 1852171925, 3867060991, 3473416636, 3907448597, 2614737639, 919489135, 164948639, 2094410160, 2997825956, 590424639, 2486224549, 1723872674, 3157750862, 3399941250, 3501252752, 3625268135, 2555048196, 3673637356, 1343127501, 4130281361, 3599595085, 2957853679, 1297403050, 81781910, 3051593425, 2283490410, 532201772, 1367295589, 3926170974, 895287692, 1953757831, 1093597963, 492483431, 3528626907, 1446242576, 1192455638, 1636604631, 209336225, 344873464, 1015671571, 669961897, 3375740769, 3857572124, 2973530695, 3747192018, 1933530610, 3464042516, 935293895, 3454686199, 2858115069, 1863638845, 3683022916, 4085369519, 3292445032, 875313188, 1080017571, 3279033885, 621591778, 1233856572, 2504130317, 24197544, 3017672716, 3835484340, 3247465558, 2220981195, 3060847922, 1551124588, 1463996600],
                    g = [4104605777, 1097159550, 396673818, 660510266, 2875968315, 2638606623, 4200115116, 3808662347, 821712160, 1986918061, 3430322568, 38544885, 3856137295, 718002117, 893681702, 1654886325, 2975484382, 3122358053, 3926825029, 4274053469, 796197571, 1290801793, 1184342925, 3556361835, 2405426947, 2459735317, 1836772287, 1381620373, 3196267988, 1948373848, 3764988233, 3385345166, 3263785589, 2390325492, 1480485785, 3111247143, 3780097726, 2293045232, 548169417, 3459953789, 3746175075, 439452389, 1362321559, 1400849762, 1685577905, 1806599355, 2174754046, 137073913, 1214797936, 1174215055, 3731654548, 2079897426, 1943217067, 1258480242, 529487843, 1437280870, 3945269170, 3049390895, 3313212038, 923313619, 679998e3, 3215307299, 57326082, 377642221, 3474729866, 2041877159, 133361907, 1776460110, 3673476453, 96392454, 878845905, 2801699524, 777231668, 4082475170, 2330014213, 4142626212, 2213296395, 1626319424, 1906247262, 1846563261, 562755902, 3708173718, 1040559837, 3871163981, 1418573201, 3294430577, 114585348, 1343618912, 2566595609, 3186202582, 1078185097, 3651041127, 3896688048, 2307622919, 425408743, 3371096953, 2081048481, 1108339068, 2216610296, 0, 2156299017, 736970802, 292596766, 1517440620, 251657213, 2235061775, 2933202493, 758720310, 265905162, 1554391400, 1532285339, 908999204, 174567692, 1474760595, 4002861748, 2610011675, 3234156416, 3693126241, 2001430874, 303699484, 2478443234, 2687165888, 585122620, 454499602, 151849742, 2345119218, 3064510765, 514443284, 4044981591, 1963412655, 2581445614, 2137062819, 19308535, 1928707164, 1715193156, 4219352155, 1126790795, 600235211, 3992742070, 3841024952, 836553431, 1669664834, 2535604243, 3323011204, 1243905413, 3141400786, 4180808110, 698445255, 2653899549, 2989552604, 2253581325, 3252932727, 3004591147, 1891211689, 2487810577, 3915653703, 4237083816, 4030667424, 2100090966, 865136418, 1229899655, 953270745, 3399679628, 3557504664, 4118925222, 2061379749, 3079546586, 2915017791, 983426092, 2022837584, 1607244650, 2118541908, 2366882550, 3635996816, 972512814, 3283088770, 1568718495, 3499326569, 3576539503, 621982671, 2895723464, 410887952, 2623762152, 1002142683, 645401037, 1494807662, 2595684844, 1335535747, 2507040230, 4293295786, 3167684641, 367585007, 3885750714, 1865862730, 2668221674, 2960971305, 2763173681, 1059270954, 2777952454, 2724642869, 1320957812, 2194319100, 2429595872, 2815956275, 77089521, 3973773121, 3444575871, 2448830231, 1305906550, 4021308739, 2857194700, 2516901860, 3518358430, 1787304780, 740276417, 1699839814, 1592394909, 2352307457, 2272556026, 188821243, 1729977011, 3687994002, 274084841, 3594982253, 3613494426, 2701949495, 4162096729, 322734571, 2837966542, 1640576439, 484830689, 1202797690, 3537852828, 4067639125, 349075736, 3342319475, 4157467219, 4255800159, 1030690015, 1155237496, 2951971274, 1757691577, 607398968, 2738905026, 499347990, 3794078908, 1011452712, 227885567, 2818666809, 213114376, 3034881240, 1455525988, 3414450555, 850817237, 1817998408, 3092726480],
                    w = [0, 235474187, 470948374, 303765277, 941896748, 908933415, 607530554, 708780849, 1883793496, 2118214995, 1817866830, 1649639237, 1215061108, 1181045119, 1417561698, 1517767529, 3767586992, 4003061179, 4236429990, 4069246893, 3635733660, 3602770327, 3299278474, 3400528769, 2430122216, 2664543715, 2362090238, 2193862645, 2835123396, 2801107407, 3035535058, 3135740889, 3678124923, 3576870512, 3341394285, 3374361702, 3810496343, 3977675356, 4279080257, 4043610186, 2876494627, 2776292904, 3076639029, 3110650942, 2472011535, 2640243204, 2403728665, 2169303058, 1001089995, 899835584, 666464733, 699432150, 59727847, 226906860, 530400753, 294930682, 1273168787, 1172967064, 1475418501, 1509430414, 1942435775, 2110667444, 1876241833, 1641816226, 2910219766, 2743034109, 2976151520, 3211623147, 2505202138, 2606453969, 2302690252, 2269728455, 3711829422, 3543599269, 3240894392, 3475313331, 3843699074, 3943906441, 4178062228, 4144047775, 1306967366, 1139781709, 1374988112, 1610459739, 1975683434, 2076935265, 1775276924, 1742315127, 1034867998, 866637845, 566021896, 800440835, 92987698, 193195065, 429456164, 395441711, 1984812685, 2017778566, 1784663195, 1683407248, 1315562145, 1080094634, 1383856311, 1551037884, 101039829, 135050206, 437757123, 337553864, 1042385657, 807962610, 573804783, 742039012, 2531067453, 2564033334, 2328828971, 2227573024, 2935566865, 2700099354, 3001755655, 3168937228, 3868552805, 3902563182, 4203181171, 4102977912, 3736164937, 3501741890, 3265478751, 3433712980, 1106041591, 1340463100, 1576976609, 1408749034, 2043211483, 2009195472, 1708848333, 1809054150, 832877231, 1068351396, 766945465, 599762354, 159417987, 126454664, 361929877, 463180190, 2709260871, 2943682380, 3178106961, 3009879386, 2572697195, 2538681184, 2236228733, 2336434550, 3509871135, 3745345300, 3441850377, 3274667266, 3910161971, 3877198648, 4110568485, 4211818798, 2597806476, 2497604743, 2261089178, 2295101073, 2733856160, 2902087851, 3202437046, 2968011453, 3936291284, 3835036895, 4136440770, 4169408201, 3535486456, 3702665459, 3467192302, 3231722213, 2051518780, 1951317047, 1716890410, 1750902305, 1113818384, 1282050075, 1584504582, 1350078989, 168810852, 67556463, 371049330, 404016761, 841739592, 1008918595, 775550814, 540080725, 3969562369, 3801332234, 4035489047, 4269907996, 3569255213, 3669462566, 3366754619, 3332740144, 2631065433, 2463879762, 2160117071, 2395588676, 2767645557, 2868897406, 3102011747, 3069049960, 202008497, 33778362, 270040487, 504459436, 875451293, 975658646, 675039627, 641025152, 2084704233, 1917518562, 1615861247, 1851332852, 1147550661, 1248802510, 1484005843, 1451044056, 933301370, 967311729, 733156972, 632953703, 260388950, 25965917, 328671808, 496906059, 1206477858, 1239443753, 1543208500, 1441952575, 2144161806, 1908694277, 1675577880, 1842759443, 3610369226, 3644379585, 3408119516, 3307916247, 4011190502, 3776767469, 4077384432, 4245618683, 2809771154, 2842737049, 3144396420, 3043140495, 2673705150, 2438237621, 2203032232, 2370213795],
                    A = [0, 185469197, 370938394, 487725847, 741876788, 657861945, 975451694, 824852259, 1483753576, 1400783205, 1315723890, 1164071807, 1950903388, 2135319889, 1649704518, 1767536459, 2967507152, 3152976349, 2801566410, 2918353863, 2631447780, 2547432937, 2328143614, 2177544179, 3901806776, 3818836405, 4270639778, 4118987695, 3299409036, 3483825537, 3535072918, 3652904859, 2077965243, 1893020342, 1841768865, 1724457132, 1474502543, 1559041666, 1107234197, 1257309336, 598438867, 681933534, 901210569, 1052338372, 261314535, 77422314, 428819965, 310463728, 3409685355, 3224740454, 3710368113, 3593056380, 3875770207, 3960309330, 4045380933, 4195456072, 2471224067, 2554718734, 2237133081, 2388260884, 3212035895, 3028143674, 2842678573, 2724322336, 4138563181, 4255350624, 3769721975, 3955191162, 3667219033, 3516619604, 3431546947, 3347532110, 2933734917, 2782082824, 3099667487, 3016697106, 2196052529, 2313884476, 2499348523, 2683765030, 1179510461, 1296297904, 1347548327, 1533017514, 1786102409, 1635502980, 2087309459, 2003294622, 507358933, 355706840, 136428751, 53458370, 839224033, 957055980, 605657339, 790073846, 2373340630, 2256028891, 2607439820, 2422494913, 2706270690, 2856345839, 3075636216, 3160175349, 3573941694, 3725069491, 3273267108, 3356761769, 4181598602, 4063242375, 4011996048, 3828103837, 1033297158, 915985419, 730517276, 545572369, 296679730, 446754879, 129166120, 213705253, 1709610350, 1860738147, 1945798516, 2029293177, 1239331162, 1120974935, 1606591296, 1422699085, 4148292826, 4233094615, 3781033664, 3931371469, 3682191598, 3497509347, 3446004468, 3328955385, 2939266226, 2755636671, 3106780840, 2988687269, 2198438022, 2282195339, 2501218972, 2652609425, 1201765386, 1286567175, 1371368976, 1521706781, 1805211710, 1620529459, 2105887268, 1988838185, 533804130, 350174575, 164439672, 46346101, 870912086, 954669403, 636813900, 788204353, 2358957921, 2274680428, 2592523643, 2441661558, 2695033685, 2880240216, 3065962831, 3182487618, 3572145929, 3756299780, 3270937875, 3388507166, 4174560061, 4091327024, 4006521127, 3854606378, 1014646705, 930369212, 711349675, 560487590, 272786309, 457992840, 106852767, 223377554, 1678381017, 1862534868, 1914052035, 2031621326, 1211247597, 1128014560, 1580087799, 1428173050, 32283319, 182621114, 401639597, 486441376, 768917123, 651868046, 1003007129, 818324884, 1503449823, 1385356242, 1333838021, 1150208456, 1973745387, 2125135846, 1673061617, 1756818940, 2970356327, 3120694122, 2802849917, 2887651696, 2637442643, 2520393566, 2334669897, 2149987652, 3917234703, 3799141122, 4284502037, 4100872472, 3309594171, 3460984630, 3545789473, 3629546796, 2050466060, 1899603969, 1814803222, 1730525723, 1443857720, 1560382517, 1075025698, 1260232239, 575138148, 692707433, 878443390, 1062597235, 243256656, 91341917, 409198410, 325965383, 3403100636, 3252238545, 3704300486, 3620022987, 3874428392, 3990953189, 4042459122, 4227665663, 2460449204, 2578018489, 2226875310, 2411029155, 3198115200, 3046200461, 2827177882, 2743944855],
                    I = [0, 218828297, 437656594, 387781147, 875313188, 958871085, 775562294, 590424639, 1750626376, 1699970625, 1917742170, 2135253587, 1551124588, 1367295589, 1180849278, 1265195639, 3501252752, 3720081049, 3399941250, 3350065803, 3835484340, 3919042237, 4270507174, 4085369519, 3102249176, 3051593425, 2734591178, 2952102595, 2361698556, 2177869557, 2530391278, 2614737639, 3145456443, 3060847922, 2708326185, 2892417312, 2404901663, 2187128086, 2504130317, 2555048196, 3542330227, 3727205754, 3375740769, 3292445032, 3876557655, 3926170974, 4246310725, 4027744588, 1808481195, 1723872674, 1910319033, 2094410160, 1608975247, 1391201670, 1173430173, 1224348052, 59984867, 244860394, 428169201, 344873464, 935293895, 984907214, 766078933, 547512796, 1844882806, 1627235199, 2011214180, 2062270317, 1507497298, 1423022939, 1137477952, 1321699145, 95345982, 145085239, 532201772, 313773861, 830661914, 1015671571, 731183368, 648017665, 3175501286, 2957853679, 2807058932, 2858115069, 2305455554, 2220981195, 2474404304, 2658625497, 3575528878, 3625268135, 3473416636, 3254988725, 3778151818, 3963161475, 4213447064, 4130281361, 3599595085, 3683022916, 3432737375, 3247465558, 3802222185, 4020912224, 4172763771, 4122762354, 3201631749, 3017672716, 2764249623, 2848461854, 2331590177, 2280796200, 2431590963, 2648976442, 104699613, 188127444, 472615631, 287343814, 840019705, 1058709744, 671593195, 621591778, 1852171925, 1668212892, 1953757831, 2037970062, 1514790577, 1463996600, 1080017571, 1297403050, 3673637356, 3623636965, 3235995134, 3454686199, 4007360968, 3822090177, 4107101658, 4190530515, 2997825956, 3215212461, 2830708150, 2779915199, 2256734592, 2340947849, 2627016082, 2443058075, 172466556, 122466165, 273792366, 492483431, 1047239e3, 861968209, 612205898, 695634755, 1646252340, 1863638845, 2013908262, 1963115311, 1446242576, 1530455833, 1277555970, 1093597963, 1636604631, 1820824798, 2073724613, 1989249228, 1436590835, 1487645946, 1337376481, 1119727848, 164948639, 81781910, 331544205, 516552836, 1039717051, 821288114, 669961897, 719700128, 2973530695, 3157750862, 2871682645, 2787207260, 2232435299, 2283490410, 2667994737, 2450346104, 3647212047, 3564045318, 3279033885, 3464042516, 3980931627, 3762502690, 4150144569, 4199882800, 3070356634, 3121275539, 2904027272, 2686254721, 2200818878, 2384911031, 2570832044, 2486224549, 3747192018, 3528626907, 3310321856, 3359936201, 3950355702, 3867060991, 4049844452, 4234721005, 1739656202, 1790575107, 2108100632, 1890328081, 1402811438, 1586903591, 1233856572, 1149249077, 266959938, 48394827, 369057872, 418672217, 1002783846, 919489135, 567498868, 752375421, 209336225, 24197544, 376187827, 459744698, 945164165, 895287692, 574624663, 793451934, 1679968233, 1764313568, 2117360635, 1933530610, 1343127501, 1560637892, 1243112415, 1192455638, 3704280881, 3519142200, 3336358691, 3419915562, 3907448597, 3857572124, 4075877127, 4294704398, 3029510009, 3113855344, 2927934315, 2744104290, 2159976285, 2377486676, 2594734927, 2544078150],
                    E = [0, 151849742, 303699484, 454499602, 607398968, 758720310, 908999204, 1059270954, 1214797936, 1097159550, 1517440620, 1400849762, 1817998408, 1699839814, 2118541908, 2001430874, 2429595872, 2581445614, 2194319100, 2345119218, 3034881240, 3186202582, 2801699524, 2951971274, 3635996816, 3518358430, 3399679628, 3283088770, 4237083816, 4118925222, 4002861748, 3885750714, 1002142683, 850817237, 698445255, 548169417, 529487843, 377642221, 227885567, 77089521, 1943217067, 2061379749, 1640576439, 1757691577, 1474760595, 1592394909, 1174215055, 1290801793, 2875968315, 2724642869, 3111247143, 2960971305, 2405426947, 2253581325, 2638606623, 2487810577, 3808662347, 3926825029, 4044981591, 4162096729, 3342319475, 3459953789, 3576539503, 3693126241, 1986918061, 2137062819, 1685577905, 1836772287, 1381620373, 1532285339, 1078185097, 1229899655, 1040559837, 923313619, 740276417, 621982671, 439452389, 322734571, 137073913, 19308535, 3871163981, 4021308739, 4104605777, 4255800159, 3263785589, 3414450555, 3499326569, 3651041127, 2933202493, 2815956275, 3167684641, 3049390895, 2330014213, 2213296395, 2566595609, 2448830231, 1305906550, 1155237496, 1607244650, 1455525988, 1776460110, 1626319424, 2079897426, 1928707164, 96392454, 213114376, 396673818, 514443284, 562755902, 679998e3, 865136418, 983426092, 3708173718, 3557504664, 3474729866, 3323011204, 4180808110, 4030667424, 3945269170, 3794078908, 2507040230, 2623762152, 2272556026, 2390325492, 2975484382, 3092726480, 2738905026, 2857194700, 3973773121, 3856137295, 4274053469, 4157467219, 3371096953, 3252932727, 3673476453, 3556361835, 2763173681, 2915017791, 3064510765, 3215307299, 2156299017, 2307622919, 2459735317, 2610011675, 2081048481, 1963412655, 1846563261, 1729977011, 1480485785, 1362321559, 1243905413, 1126790795, 878845905, 1030690015, 645401037, 796197571, 274084841, 425408743, 38544885, 188821243, 3613494426, 3731654548, 3313212038, 3430322568, 4082475170, 4200115116, 3780097726, 3896688048, 2668221674, 2516901860, 2366882550, 2216610296, 3141400786, 2989552604, 2837966542, 2687165888, 1202797690, 1320957812, 1437280870, 1554391400, 1669664834, 1787304780, 1906247262, 2022837584, 265905162, 114585348, 499347990, 349075736, 736970802, 585122620, 972512814, 821712160, 2595684844, 2478443234, 2293045232, 2174754046, 3196267988, 3079546586, 2895723464, 2777952454, 3537852828, 3687994002, 3234156416, 3385345166, 4142626212, 4293295786, 3841024952, 3992742070, 174567692, 57326082, 410887952, 292596766, 777231668, 660510266, 1011452712, 893681702, 1108339068, 1258480242, 1343618912, 1494807662, 1715193156, 1865862730, 1948373848, 2100090966, 2701949495, 2818666809, 3004591147, 3122358053, 2235061775, 2352307457, 2535604243, 2653899549, 3915653703, 3764988233, 4219352155, 4067639125, 3444575871, 3294430577, 3746175075, 3594982253, 836553431, 953270745, 600235211, 718002117, 367585007, 484830689, 133361907, 251657213, 2041877159, 1891211689, 1806599355, 1654886325, 1568718495, 1418573201, 1335535747, 1184342925];

                function _(e) {
                    for (var t = [], f = 0; f < e.length; f += 4) t.push(e[f] << 24 | e[f + 1] << 16 | e[f + 2] << 8 | e[f + 3]);
                    return t
                }
                var k = function(e) {
                    if (!(this instanceof k)) throw Error("AES must be instanitated with `new`");
                    Object.defineProperty(this, "key", {
                        value: r(e, !0)
                    }), this._prepare()
                };
                k.prototype._prepare = function() {
                    var e = u[this.key.length];
                    if (null == e) throw Error("invalid key size (must be 16, 24 or 32 bytes)");
                    this._Ke = [], this._Kd = [];
                    for (var t = 0; t <= e; t++) this._Ke.push([0, 0, 0, 0]), this._Kd.push([0, 0, 0, 0]);
                    for (var f = (e + 1) * 4, n = this.key.length / 4, r = _(this.key), t = 0; t < n; t++) i = t >> 2, this._Ke[i][t % 4] = r[t], this._Kd[e - i][t % 4] = r[t];
                    for (var i, a, o = 0, s = n; s < f;) {
                        if (a = r[n - 1], r[0] ^= c[a >> 16 & 255] << 24 ^ c[a >> 8 & 255] << 16 ^ c[255 & a] << 8 ^ c[a >> 24 & 255] ^ d[o] << 24, o += 1, 8 != n)
                            for (var t = 1; t < n; t++) r[t] ^= r[t - 1];
                        else {
                            for (var t = 1; t < n / 2; t++) r[t] ^= r[t - 1];
                            a = r[n / 2 - 1], r[n / 2] ^= c[255 & a] ^ c[a >> 8 & 255] << 8 ^ c[a >> 16 & 255] << 16 ^ c[a >> 24 & 255] << 24;
                            for (var t = n / 2 + 1; t < n; t++) r[t] ^= r[t - 1]
                        }
                        for (var l, p, t = 0; t < n && s < f;) l = s >> 2, p = s % 4, this._Ke[l][p] = r[t], this._Kd[e - l][p] = r[t++], s++
                    }
                    for (var l = 1; l < e; l++)
                        for (var p = 0; p < 4; p++) a = this._Kd[l][p], this._Kd[l][p] = w[a >> 24 & 255] ^ A[a >> 16 & 255] ^ I[a >> 8 & 255] ^ E[255 & a]
                }, k.prototype.encrypt = function(e) {
                    if (16 != e.length) throw Error("invalid plaintext size (must be 16 bytes)");
                    for (var t = this._Ke.length - 1, f = [0, 0, 0, 0], n = _(e), r = 0; r < 4; r++) n[r] ^= this._Ke[0][r];
                    for (var a = 1; a < t; a++) {
                        for (var r = 0; r < 4; r++) f[r] = p[n[r] >> 24 & 255] ^ y[n[(r + 1) % 4] >> 16 & 255] ^ b[n[(r + 2) % 4] >> 8 & 255] ^ h[255 & n[(r + 3) % 4]] ^ this._Ke[a][r];
                        n = f.slice()
                    }
                    for (var o, s = i(16), r = 0; r < 4; r++) o = this._Ke[t][r], s[4 * r] = (c[n[r] >> 24 & 255] ^ o >> 24) & 255, s[4 * r + 1] = (c[n[(r + 1) % 4] >> 16 & 255] ^ o >> 16) & 255, s[4 * r + 2] = (c[n[(r + 2) % 4] >> 8 & 255] ^ o >> 8) & 255, s[4 * r + 3] = (c[255 & n[(r + 3) % 4]] ^ o) & 255;
                    return s
                }, k.prototype.decrypt = function(e) {
                    if (16 != e.length) throw Error("invalid ciphertext size (must be 16 bytes)");
                    for (var t = this._Kd.length - 1, f = [0, 0, 0, 0], n = _(e), r = 0; r < 4; r++) n[r] ^= this._Kd[0][r];
                    for (var a = 1; a < t; a++) {
                        for (var r = 0; r < 4; r++) f[r] = m[n[r] >> 24 & 255] ^ v[n[(r + 3) % 4] >> 16 & 255] ^ T[n[(r + 2) % 4] >> 8 & 255] ^ g[255 & n[(r + 1) % 4]] ^ this._Kd[a][r];
                        n = f.slice()
                    }
                    for (var o, s = i(16), r = 0; r < 4; r++) o = this._Kd[t][r], s[4 * r] = (l[n[r] >> 24 & 255] ^ o >> 24) & 255, s[4 * r + 1] = (l[n[(r + 3) % 4] >> 16 & 255] ^ o >> 16) & 255, s[4 * r + 2] = (l[n[(r + 2) % 4] >> 8 & 255] ^ o >> 8) & 255, s[4 * r + 3] = (l[255 & n[(r + 1) % 4]] ^ o) & 255;
                    return s
                };
                var C = function(e) {
                    if (!(this instanceof C)) throw Error("AES must be instanitated with `new`");
                    this.description = "Electronic Code Block", this.name = "ecb", this._aes = new k(e)
                };
                C.prototype.encrypt = function(e) {
                    if ((e = r(e)).length % 16 != 0) throw Error("invalid plaintext size (must be multiple of 16 bytes)");
                    for (var t = i(e.length), f = i(16), n = 0; n < e.length; n += 16) a(e, f, 0, n, n + 16), a(f = this._aes.encrypt(f), t, n);
                    return t
                }, C.prototype.decrypt = function(e) {
                    if ((e = r(e)).length % 16 != 0) throw Error("invalid ciphertext size (must be multiple of 16 bytes)");
                    for (var t = i(e.length), f = i(16), n = 0; n < e.length; n += 16) a(e, f, 0, n, n + 16), a(f = this._aes.decrypt(f), t, n);
                    return t
                };
                var S = function(e, t) {
                    if (!(this instanceof S)) throw Error("AES must be instanitated with `new`");
                    if (this.description = "Cipher Block Chaining", this.name = "cbc", t) {
                        if (16 != t.length) throw Error("invalid initialation vector size (must be 16 bytes)")
                    } else t = i(16);
                    this._lastCipherblock = r(t, !0), this._aes = new k(e)
                };
                S.prototype.encrypt = function(e) {
                    if ((e = r(e)).length % 16 != 0) throw Error("invalid plaintext size (must be multiple of 16 bytes)");
                    for (var t = i(e.length), f = i(16), n = 0; n < e.length; n += 16) {
                        a(e, f, 0, n, n + 16);
                        for (var o = 0; o < 16; o++) f[o] ^= this._lastCipherblock[o];
                        this._lastCipherblock = this._aes.encrypt(f), a(this._lastCipherblock, t, n)
                    }
                    return t
                }, S.prototype.decrypt = function(e) {
                    if ((e = r(e)).length % 16 != 0) throw Error("invalid ciphertext size (must be multiple of 16 bytes)");
                    for (var t = i(e.length), f = i(16), n = 0; n < e.length; n += 16) {
                        a(e, f, 0, n, n + 16), f = this._aes.decrypt(f);
                        for (var o = 0; o < 16; o++) t[n + o] = f[o] ^ this._lastCipherblock[o];
                        a(e, this._lastCipherblock, 0, n, n + 16)
                    }
                    return t
                };
                var O = function(e, t, f) {
                    if (!(this instanceof O)) throw Error("AES must be instanitated with `new`");
                    if (this.description = "Cipher Feedback", this.name = "cfb", t) {
                        if (16 != t.length) throw Error("invalid initialation vector size (must be 16 size)")
                    } else t = i(16);
                    f || (f = 1), this.segmentSize = f, this._shiftRegister = r(t, !0), this._aes = new k(e)
                };
                O.prototype.encrypt = function(e) {
                    if (e.length % this.segmentSize != 0) throw Error("invalid plaintext size (must be segmentSize bytes)");
                    for (var t, f = r(e, !0), n = 0; n < f.length; n += this.segmentSize) {
                        t = this._aes.encrypt(this._shiftRegister);
                        for (var i = 0; i < this.segmentSize; i++) f[n + i] ^= t[i];
                        a(this._shiftRegister, this._shiftRegister, 0, this.segmentSize), a(f, this._shiftRegister, 16 - this.segmentSize, n, n + this.segmentSize)
                    }
                    return f
                }, O.prototype.decrypt = function(e) {
                    if (e.length % this.segmentSize != 0) throw Error("invalid ciphertext size (must be segmentSize bytes)");
                    for (var t, f = r(e, !0), n = 0; n < f.length; n += this.segmentSize) {
                        t = this._aes.encrypt(this._shiftRegister);
                        for (var i = 0; i < this.segmentSize; i++) f[n + i] ^= t[i];
                        a(this._shiftRegister, this._shiftRegister, 0, this.segmentSize), a(e, this._shiftRegister, 16 - this.segmentSize, n, n + this.segmentSize)
                    }
                    return f
                };
                var P = function(e, t) {
                    if (!(this instanceof P)) throw Error("AES must be instanitated with `new`");
                    if (this.description = "Output Feedback", this.name = "ofb", t) {
                        if (16 != t.length) throw Error("invalid initialation vector size (must be 16 bytes)")
                    } else t = i(16);
                    this._lastPrecipher = r(t, !0), this._lastPrecipherIndex = 16, this._aes = new k(e)
                };
                P.prototype.encrypt = function(e) {
                    for (var t = r(e, !0), f = 0; f < t.length; f++) 16 === this._lastPrecipherIndex && (this._lastPrecipher = this._aes.encrypt(this._lastPrecipher), this._lastPrecipherIndex = 0), t[f] ^= this._lastPrecipher[this._lastPrecipherIndex++];
                    return t
                }, P.prototype.decrypt = P.prototype.encrypt;
                var M = function(e) {
                    if (!(this instanceof M)) throw Error("Counter must be instanitated with `new`");
                    0 === e || e || (e = 1), "number" == typeof e ? (this._counter = i(16), this.setValue(e)) : this.setBytes(e)
                };
                M.prototype.setValue = function(e) {
                    if ("number" != typeof e || parseInt(e) != e) throw Error("invalid counter value (must be an integer)");
                    for (var t = 15; t >= 0; --t) this._counter[t] = e % 256, e >>= 8
                }, M.prototype.setBytes = function(e) {
                    if (16 != (e = r(e, !0)).length) throw Error("invalid counter bytes size (must be 16 bytes)");
                    this._counter = e
                }, M.prototype.increment = function() {
                    for (var e = 15; e >= 0; e--)
                        if (255 === this._counter[e]) this._counter[e] = 0;
                        else {
                            this._counter[e]++;
                            break
                        }
                };
                var x = function(e, t) {
                    if (!(this instanceof x)) throw Error("AES must be instanitated with `new`");
                    this.description = "Counter", this.name = "ctr", t instanceof M || (t = new M(t)), this._counter = t, this._remainingCounter = null, this._remainingCounterIndex = 16, this._aes = new k(e)
                };
                x.prototype.encrypt = function(e) {
                    for (var t = r(e, !0), f = 0; f < t.length; f++) 16 === this._remainingCounterIndex && (this._remainingCounter = this._aes.encrypt(this._counter._counter), this._remainingCounterIndex = 0, this._counter.increment()), t[f] ^= this._remainingCounter[this._remainingCounterIndex++];
                    return t
                }, x.prototype.decrypt = x.prototype.encrypt, e.exports = {
                    AES: k,
                    Counter: M,
                    ModeOfOperation: {
                        ecb: C,
                        cbc: S,
                        cfb: O,
                        ofb: P,
                        ctr: x
                    },
                    utils: {
                        hex: s,
                        utf8: {
                            toBytes: function(e) {
                                var t = [],
                                    f = 0;
                                for (e = encodeURI(e); f < e.length;) {
                                    var n = e.charCodeAt(f++);
                                    37 === n ? (t.push(parseInt(e.substr(f, 2), 16)), f += 2) : t.push(n)
                                }
                                return r(t)
                            },
                            fromBytes: function(e) {
                                for (var t = [], f = 0; f < e.length;) {
                                    var n = e[f];
                                    n < 128 ? (t.push(String.fromCharCode(n)), f++) : n > 191 && n < 224 ? (t.push(String.fromCharCode((31 & n) << 6 | 63 & e[f + 1])), f += 2) : (t.push(String.fromCharCode((15 & n) << 12 | (63 & e[f + 1]) << 6 | 63 & e[f + 2])), f += 3)
                                }
                                return t.join("")
                            }
                        }
                    },
                    padding: {
                        pkcs7: {
                            pad: function(e) {
                                var t = 16 - (e = r(e, !0)).length % 16,
                                    f = i(e.length + t);
                                a(e, f);
                                for (var n = e.length; n < f.length; n++) f[n] = t;
                                return f
                            },
                            strip: function(e) {
                                if ((e = r(e, !0)).length < 16) throw Error("PKCS#7 invalid length");
                                var t = e[e.length - 1];
                                if (t > 16) throw Error("PKCS#7 padding byte out of range");
                                for (var f = e.length - t, n = 0; n < t; n++)
                                    if (e[f + n] !== t) throw Error("PKCS#7 invalid padding byte");
                                var o = i(f);
                                return a(e, o, 0, 0, f), o
                            }
                        }
                    },
                    _arrayTest: {
                        coerceArray: r,
                        createArray: i,
                        copyArray: a
                    }
                }
            }(0)
        },
        91167: (e, t, f) => {
            "use strict";
            var n = f(74927),
                r = f(84770),
                i = f(38319),
                a = f(99404),
                o = f(7877),
                s = f(78756);
            e.exports = function() {
                var e = s(this),
                    t = o(i(e, "length")),
                    f = 1;
                arguments.length > 0 && void 0 !== arguments[0] && (f = a(arguments[0]));
                var u = n(e, 0);
                return r(u, e, t, 0, f), u
            }
        },
        97505: (e, t, f) => {
            "use strict";
            var n = f(53262),
                r = f(96084),
                i = f(91167),
                a = f(57780),
                o = a(),
                s = f(48051),
                u = r(o);
            n(u, {
                getPolyfill: a,
                implementation: i,
                shim: s
            }), e.exports = u
        },
        57780: (e, t, f) => {
            "use strict";
            var n = f(91167);
            e.exports = function() {
                return Array.prototype.flat || n
            }
        },
        48051: (e, t, f) => {
            "use strict";
            var n = f(53262),
                r = f(35422),
                i = f(57780);
            e.exports = function() {
                var e = i();
                return n(Array.prototype, {
                    flat: e
                }, {
                    flat: function() {
                        return Array.prototype.flat !== e
                    }
                }), r("flat"), e
            }
        },
        25254: (e, t, f) => {
            "use strict";
            var n = f(74927),
                r = f(84770),
                i = f(38319),
                a = f(4539),
                o = f(7877),
                s = f(78756);
            e.exports = function(e) {
                var t, f = s(this),
                    u = o(i(f, "length"));
                if (!a(e)) throw TypeError("mapperFunction must be a function");
                arguments.length > 1 && (t = arguments[1]);
                var d = n(f, 0);
                return r(d, f, u, 0, 1, e, t), d
            }
        },
        82820: (e, t, f) => {
            "use strict";
            var n = f(53262),
                r = f(96084),
                i = f(25254),
                a = f(30564),
                o = a(),
                s = f(986),
                u = r(o);
            n(u, {
                getPolyfill: a,
                implementation: i,
                shim: s
            }), e.exports = u
        },
        30564: (e, t, f) => {
            "use strict";
            var n = f(25254);
            e.exports = function() {
                return Array.prototype.flatMap || n
            }
        },
        986: (e, t, f) => {
            "use strict";
            var n = f(53262),
                r = f(35422),
                i = f(30564);
            e.exports = function() {
                var e = i();
                return n(Array.prototype, {
                    flatMap: e
                }, {
                    flatMap: function() {
                        return Array.prototype.flatMap !== e
                    }
                }), r("flatMap"), e
            }
        },
        69867: (e, t, f) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            });
            var n = f(51113),
                r = f(9102),
                i = function() {
                    function e() {
                        this._semaphore = new r.default(1)
                    }
                    return e.prototype.acquire = function() {
                        return n.__awaiter(this, void 0, void 0, function() {
                            return n.__generator(this, function(e) {
                                switch (e.label) {
                                    case 0:
                                        return [4, this._semaphore.acquire()];
                                    case 1:
                                        return [2, e.sent()[1]]
                                }
                            })
                        })
                    }, e.prototype.runExclusive = function(e) {
                        return this._semaphore.runExclusive(function() {
                            return e()
                        })
                    }, e.prototype.isLocked = function() {
                        return this._semaphore.isLocked()
                    }, e.prototype.release = function() {
                        this._semaphore.release()
                    }, e
                }();
            t.default = i
        },
        9102: (e, t, f) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            });
            var n = f(51113),
                r = function() {
                    function e(e) {
                        if (this._maxConcurrency = e, this._queue = [], e <= 0) throw Error("semaphore must be initialized to a positive value");
                        this._value = e
                    }
                    return e.prototype.acquire = function() {
                        var e = this,
                            t = this.isLocked(),
                            f = new Promise(function(t) {
                                return e._queue.push(t)
                            });
                        return t || this._dispatch(), f
                    }, e.prototype.runExclusive = function(e) {
                        return n.__awaiter(this, void 0, void 0, function() {
                            var t, f, r;
                            return n.__generator(this, function(n) {
                                switch (n.label) {
                                    case 0:
                                        return [4, this.acquire()];
                                    case 1:
                                        f = (t = n.sent())[0], r = t[1], n.label = 2;
                                    case 2:
                                        return n.trys.push([2, , 4, 5]), [4, e(f)];
                                    case 3:
                                        return [2, n.sent()];
                                    case 4:
                                        return r(), [7];
                                    case 5:
                                        return [2]
                                }
                            })
                        })
                    }, e.prototype.isLocked = function() {
                        return this._value <= 0
                    }, e.prototype.release = function() {
                        if (this._maxConcurrency > 1) throw Error("this method is unavailabel on semaphores with concurrency > 1; use the scoped release returned by acquire instead");
                        if (this._currentReleaser) {
                            var e = this._currentReleaser;
                            this._currentReleaser = void 0, e()
                        }
                    }, e.prototype._dispatch = function() {
                        var e = this,
                            t = this._queue.shift();
                        if (t) {
                            var f = !1;
                            this._currentReleaser = function() {
                                f || (f = !0, e._value++, e._dispatch())
                            }, t([this._value--, this._currentReleaser])
                        }
                    }, e
                }();
            t.default = r
        },
        90446: (e, t, f) => {
            "use strict";
            t.WU = void 0;
            var n = f(69867);
            Object.defineProperty(t, "WU", {
                enumerable: !0,
                get: function() {
                    return n.default
                }
            }), f(9102), f(41416)
        },
        41416: (e, t, f) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.withTimeout = void 0;
            var n = f(51113);
            t.withTimeout = function(e, t, f) {
                var r = this;
                return void 0 === f && (f = Error("timeout")), {
                    acquire: function() {
                        return new Promise(function(i, a) {
                            return n.__awaiter(r, void 0, void 0, function() {
                                var r, o;
                                return n.__generator(this, function(n) {
                                    switch (n.label) {
                                        case 0:
                                            return r = !1, setTimeout(function() {
                                                r = !0, a(f)
                                            }, t), [4, e.acquire()];
                                        case 1:
                                            return o = n.sent(), r ? (Array.isArray(o) ? o[1] : o)() : i(o), [2]
                                    }
                                })
                            })
                        })
                    },
                    runExclusive: function(e) {
                        return n.__awaiter(this, void 0, void 0, function() {
                            var t, f;
                            return n.__generator(this, function(n) {
                                switch (n.label) {
                                    case 0:
                                        t = function() {}, n.label = 1;
                                    case 1:
                                        return n.trys.push([1, , 7, 8]), [4, this.acquire()];
                                    case 2:
                                        if (!Array.isArray(f = n.sent())) return [3, 4];
                                        return t = f[1], [4, e(f[0])];
                                    case 3:
                                    case 5:
                                        return [2, n.sent()];
                                    case 4:
                                        return t = f, [4, e()];
                                    case 6:
                                        return [3, 8];
                                    case 7:
                                        return t(), [7];
                                    case 8:
                                        return [2]
                                }
                            })
                        })
                    },
                    release: function() {
                        e.release()
                    },
                    isLocked: function() {
                        return e.isLocked()
                    }
                }
            }
        },
        79673: (e, t, f) => {
            var n = f(87229);
            e.exports = function(e, t) {
                return new Promise(function(f, r) {
                    var i, a = t || {};

                    function o(e) {
                        r(e || Error("Aborted"))
                    }

                    function s(e, t) {
                        if (e.bail) {
                            o(e);
                            return
                        }
                        i.retry(e) ? a.onRetry && a.onRetry(e, t) : r(i.mainError())
                    }
                    "randomize" in a || (a.randomize = !0), (i = n.operation(a)).attempt(function(t) {
                        var n;
                        try {
                            n = e(o, t)
                        } catch (e) {
                            s(e, t);
                            return
                        }
                        Promise.resolve(n).then(f).catch(function(e) {
                            s(e, t)
                        })
                    })
                })
            }
        },
        2286: (e, t, f) => {
            let {
                promiseFinally: n,
                toError: r
            } = f(62805);
            e.exports = class e {
                static set(t, f) {
                    return new e().set(t, f)
                }
                static wrap(t, f, n) {
                    return new e().wrap(t, f, n)
                }
                get id() {
                    return this._id
                }
                get delay() {
                    return this._delay
                }
                set(e, t = "") {
                    return new Promise((f, n) => {
                        this.clear();
                        let i = t ? () => n(r(t)) : f;
                        this._id = setTimeout(i, e), this._delay = e
                    })
                }
                wrap(e, t, f = "") {
                    return Promise.race([n(e, () => this.clear()), this.set(t, f)])
                }
                clear() {
                    this._id && clearTimeout(this._id)
                }
                constructor() {
                    this._id = null, this._delay = null
                }
            }
        },
        62805: (e, t) => {
            t.promiseFinally = (e, t) => Promise.resolve(e).then(e => (t(), e), e => (t(), Promise.reject(e))), t.toError = e => "string" == typeof(e = "function" == typeof e ? e() : e) ? Error(e) : e
        },
        21787: (e, t, f) => {
            e.exports = f(5004)
        },
        89480: (e, t, f) => {
            "use strict";
            var n = f(93161),
                r = f(34130),
                i = f(89661),
                a = f(41955),
                o = f(54259),
                s = f(19585),
                u = f(88255),
                d = f(77634);
            e.exports = function(e) {
                return new Promise(function(t, f) {
                    var c = e.data,
                        l = e.headers,
                        p = e.responseType;
                    n.isFormData(c) && delete l["Content-Type"];
                    var y = new XMLHttpRequest;
                    if (e.auth) {
                        var b = e.auth.username || "",
                            h = e.auth.password ? unescape(encodeURIComponent(e.auth.password)) : "";
                        l.Authorization = "Basic " + btoa(b + ":" + h)
                    }
                    var m = o(e.baseURL, e.url);

                    function v() {
                        if (y) {
                            var n = "getAllResponseHeaders" in y ? s(y.getAllResponseHeaders()) : null;
                            r(t, f, {
                                data: p && "text" !== p && "json" !== p ? y.response : y.responseText,
                                status: y.status,
                                statusText: y.statusText,
                                headers: n,
                                config: e,
                                request: y
                            }), y = null
                        }
                    }
                    if (y.open(e.method.toUpperCase(), a(m, e.params, e.paramsSerializer), !0), y.timeout = e.timeout, "onloadend" in y ? y.onloadend = v : y.onreadystatechange = function() {
                            y && 4 === y.readyState && (0 !== y.status || y.responseURL && 0 === y.responseURL.indexOf("file:")) && setTimeout(v)
                        }, y.onabort = function() {
                            y && (f(d("Request aborted", e, "ECONNABORTED", y)), y = null)
                        }, y.onerror = function() {
                            f(d("Network Error", e, null, y)), y = null
                        }, y.ontimeout = function() {
                            var t = "timeout of " + e.timeout + "ms exceeded";
                            e.timeoutErrorMessage && (t = e.timeoutErrorMessage), f(d(t, e, e.transitional && e.transitional.clarifyTimeoutError ? "ETIMEDOUT" : "ECONNABORTED", y)), y = null
                        }, n.isStandardBrowserEnv()) {
                        var T = (e.withCredentials || u(m)) && e.xsrfCookieName ? i.read(e.xsrfCookieName) : void 0;
                        T && (l[e.xsrfHeaderName] = T)
                    }
                    "setRequestHeader" in y && n.forEach(l, function(e, t) {
                        void 0 === c && "content-type" === t.toLowerCase() ? delete l[t] : y.setRequestHeader(t, e)
                    }), n.isUndefined(e.withCredentials) || (y.withCredentials = !!e.withCredentials), p && "json" !== p && (y.responseType = e.responseType), "function" == typeof e.onDownloadProgress && y.addEventListener("progress", e.onDownloadProgress), "function" == typeof e.onUploadProgress && y.upload && y.upload.addEventListener("progress", e.onUploadProgress), e.cancelToken && e.cancelToken.promise.then(function(e) {
                        y && (y.abort(), f(e), y = null)
                    }), c || (c = null), y.send(c)
                })
            }
        },
        5004: (e, t, f) => {
            "use strict";
            var n = f(93161),
                r = f(84110),
                i = f(62431),
                a = f(41115);

            function o(e) {
                var t = new i(e),
                    f = r(i.prototype.request, t);
                return n.extend(f, i.prototype, t), n.extend(f, t), f
            }
            var s = o(f(73030));
            s.Axios = i, s.create = function(e) {
                return o(a(s.defaults, e))
            }, s.Cancel = f(17296), s.CancelToken = f(83161), s.isCancel = f(58122), s.all = function(e) {
                return Promise.all(e)
            }, s.spread = f(97135), s.isAxiosError = f(40320), e.exports = s, e.exports.default = s
        },
        17296: e => {
            "use strict";

            function t(e) {
                this.message = e
            }
            t.prototype.toString = function() {
                return "Cancel" + (this.message ? ": " + this.message : "")
            }, t.prototype.__CANCEL__ = !0, e.exports = t
        },
        83161: (e, t, f) => {
            "use strict";
            var n = f(17296);

            function r(e) {
                if ("function" != typeof e) throw TypeError("executor must be a function.");
                this.promise = new Promise(function(e) {
                    t = e
                });
                var t, f = this;
                e(function(e) {
                    f.reason || (f.reason = new n(e), t(f.reason))
                })
            }
            r.prototype.throwIfRequested = function() {
                if (this.reason) throw this.reason
            }, r.source = function() {
                var e;
                return {
                    token: new r(function(t) {
                        e = t
                    }),
                    cancel: e
                }
            }, e.exports = r
        },
        58122: e => {
            "use strict";
            e.exports = function(e) {
                return !!(e && e.__CANCEL__)
            }
        },
        62431: (e, t, f) => {
            "use strict";
            var n = f(93161),
                r = f(41955),
                i = f(60786),
                a = f(94026),
                o = f(41115),
                s = f(62348),
                u = s.validators;

            function d(e) {
                this.defaults = e, this.interceptors = {
                    request: new i,
                    response: new i
                }
            }
            d.prototype.request = function(e) {
                "string" == typeof e ? (e = arguments[1] || {}, e.url = arguments[0]) : e = e || {}, (e = o(this.defaults, e)).method ? e.method = e.method.toLowerCase() : this.defaults.method ? e.method = this.defaults.method.toLowerCase() : e.method = "get";
                var t, f = e.transitional;
                void 0 !== f && s.assertOptions(f, {
                    silentJSONParsing: u.transitional(u.boolean, "1.0.0"),
                    forcedJSONParsing: u.transitional(u.boolean, "1.0.0"),
                    clarifyTimeoutError: u.transitional(u.boolean, "1.0.0")
                }, !1);
                var n = [],
                    r = !0;
                this.interceptors.request.forEach(function(t) {
                    ("function" != typeof t.runWhen || !1 !== t.runWhen(e)) && (r = r && t.synchronous, n.unshift(t.fulfilled, t.rejected))
                });
                var i = [];
                if (this.interceptors.response.forEach(function(e) {
                        i.push(e.fulfilled, e.rejected)
                    }), !r) {
                    var d = [a, void 0];
                    for (Array.prototype.unshift.apply(d, n), d = d.concat(i), t = Promise.resolve(e); d.length;) t = t.then(d.shift(), d.shift());
                    return t
                }
                for (var c = e; n.length;) {
                    var l = n.shift(),
                        p = n.shift();
                    try {
                        c = l(c)
                    } catch (e) {
                        p(e);
                        break
                    }
                }
                try {
                    t = a(c)
                } catch (e) {
                    return Promise.reject(e)
                }
                for (; i.length;) t = t.then(i.shift(), i.shift());
                return t
            }, d.prototype.getUri = function(e) {
                return r((e = o(this.defaults, e)).url, e.params, e.paramsSerializer).replace(/^\?/, "")
            }, n.forEach(["delete", "get", "head", "options"], function(e) {
                d.prototype[e] = function(t, f) {
                    return this.request(o(f || {}, {
                        method: e,
                        url: t,
                        data: (f || {}).data
                    }))
                }
            }), n.forEach(["post", "put", "patch"], function(e) {
                d.prototype[e] = function(t, f, n) {
                    return this.request(o(n || {}, {
                        method: e,
                        url: t,
                        data: f
                    }))
                }
            }), e.exports = d
        },
        60786: (e, t, f) => {
            "use strict";
            var n = f(93161);

            function r() {
                this.handlers = []
            }
            r.prototype.use = function(e, t, f) {
                return this.handlers.push({
                    fulfilled: e,
                    rejected: t,
                    synchronous: !!f && f.synchronous,
                    runWhen: f ? f.runWhen : null
                }), this.handlers.length - 1
            }, r.prototype.eject = function(e) {
                this.handlers[e] && (this.handlers[e] = null)
            }, r.prototype.forEach = function(e) {
                n.forEach(this.handlers, function(t) {
                    null !== t && e(t)
                })
            }, e.exports = r
        },
        54259: (e, t, f) => {
            "use strict";
            var n = f(42710),
                r = f(52483);
            e.exports = function(e, t) {
                return e && !n(t) ? r(e, t) : t
            }
        },
        77634: (e, t, f) => {
            "use strict";
            var n = f(24294);
            e.exports = function(e, t, f, r, i) {
                return n(Error(e), t, f, r, i)
            }
        },
        94026: (e, t, f) => {
            "use strict";
            var n = f(93161),
                r = f(38117),
                i = f(58122),
                a = f(73030);

            function o(e) {
                e.cancelToken && e.cancelToken.throwIfRequested()
            }
            e.exports = function(e) {
                return o(e), e.headers = e.headers || {}, e.data = r.call(e, e.data, e.headers, e.transformRequest), e.headers = n.merge(e.headers.common || {}, e.headers[e.method] || {}, e.headers), n.forEach(["delete", "get", "head", "post", "put", "patch", "common"], function(t) {
                    delete e.headers[t]
                }), (e.adapter || a.adapter)(e).then(function(t) {
                    return o(e), t.data = r.call(e, t.data, t.headers, e.transformResponse), t
                }, function(t) {
                    return !i(t) && (o(e), t && t.response && (t.response.data = r.call(e, t.response.data, t.response.headers, e.transformResponse))), Promise.reject(t)
                })
            }
        },
        24294: e => {
            "use strict";
            e.exports = function(e, t, f, n, r) {
                return e.config = t, f && (e.code = f), e.request = n, e.response = r, e.isAxiosError = !0, e.toJSON = function() {
                    return {
                        message: this.message,
                        name: this.name,
                        description: this.description,
                        number: this.number,
                        fileName: this.fileName,
                        lineNumber: this.lineNumber,
                        columnNumber: this.columnNumber,
                        stack: this.stack,
                        config: this.config,
                        code: this.code
                    }
                }, e
            }
        },
        41115: (e, t, f) => {
            "use strict";
            var n = f(93161);
            e.exports = function(e, t) {
                t = t || {};
                var f = {},
                    r = ["url", "method", "data"],
                    i = ["headers", "auth", "proxy", "params"],
                    a = ["baseURL", "transformRequest", "transformResponse", "paramsSerializer", "timeout", "timeoutMessage", "withCredentials", "adapter", "responseType", "xsrfCookieName", "xsrfHeaderName", "onUploadProgress", "onDownloadProgress", "decompress", "maxContentLength", "maxBodyLength", "maxRedirects", "transport", "httpAgent", "httpsAgent", "cancelToken", "socketPath", "responseEncoding"],
                    o = ["validateStatus"];

                function s(e, t) {
                    return n.isPlainObject(e) && n.isPlainObject(t) ? n.merge(e, t) : n.isPlainObject(t) ? n.merge({}, t) : n.isArray(t) ? t.slice() : t
                }

                function u(r) {
                    n.isUndefined(t[r]) ? n.isUndefined(e[r]) || (f[r] = s(void 0, e[r])) : f[r] = s(e[r], t[r])
                }
                n.forEach(r, function(e) {
                    n.isUndefined(t[e]) || (f[e] = s(void 0, t[e]))
                }), n.forEach(i, u), n.forEach(a, function(r) {
                    n.isUndefined(t[r]) ? n.isUndefined(e[r]) || (f[r] = s(void 0, e[r])) : f[r] = s(void 0, t[r])
                }), n.forEach(o, function(n) {
                    n in t ? f[n] = s(e[n], t[n]) : n in e && (f[n] = s(void 0, e[n]))
                });
                var d = r.concat(i).concat(a).concat(o),
                    c = Object.keys(e).concat(Object.keys(t)).filter(function(e) {
                        return -1 === d.indexOf(e)
                    });
                return n.forEach(c, u), f
            }
        },
        34130: (e, t, f) => {
            "use strict";
            var n = f(77634);
            e.exports = function(e, t, f) {
                var r = f.config.validateStatus;
                !f.status || !r || r(f.status) ? e(f) : t(n("Request failed with status code " + f.status, f.config, null, f.request, f))
            }
        },
        38117: (e, t, f) => {
            "use strict";
            var n = f(93161),
                r = f(73030);
            e.exports = function(e, t, f) {
                var i = this || r;
                return n.forEach(f, function(f) {
                    e = f.call(i, e, t)
                }), e
            }
        },
        73030: (e, t, f) => {
            "use strict";
            var n = f(41544),
                r = f(93161),
                i = f(2795),
                a = f(24294),
                o = {
                    "Content-Type": "application/x-www-form-urlencoded"
                };

            function s(e, t) {
                !r.isUndefined(e) && r.isUndefined(e["Content-Type"]) && (e["Content-Type"] = t)
            }
            var u = {
                transitional: {
                    silentJSONParsing: !0,
                    forcedJSONParsing: !0,
                    clarifyTimeoutError: !1
                },
                adapter: function() {
                    var e;
                    return "undefined" != typeof XMLHttpRequest ? e = f(89480) : void 0 !== n && "[object process]" === Object.prototype.toString.call(n) && (e = f(89480)), e
                }(),
                transformRequest: [function(e, t) {
                    return (i(t, "Accept"), i(t, "Content-Type"), r.isFormData(e) || r.isArrayBuffer(e) || r.isBuffer(e) || r.isStream(e) || r.isFile(e) || r.isBlob(e)) ? e : r.isArrayBufferView(e) ? e.buffer : r.isURLSearchParams(e) ? (s(t, "application/x-www-form-urlencoded;charset=utf-8"), e.toString()) : r.isObject(e) || t && "application/json" === t["Content-Type"] ? (s(t, "application/json"), function(e, t, f) {
                        if (r.isString(e)) try {
                            return (0, JSON.parse)(e), r.trim(e)
                        } catch (e) {
                            if ("SyntaxError" !== e.name) throw e
                        }
                        return (0, JSON.stringify)(e)
                    }(e)) : e
                }],
                transformResponse: [function(e) {
                    var t = this.transitional,
                        f = t && t.silentJSONParsing,
                        n = t && t.forcedJSONParsing,
                        i = !f && "json" === this.responseType;
                    if (i || n && r.isString(e) && e.length) try {
                        return JSON.parse(e)
                    } catch (e) {
                        if (i) {
                            if ("SyntaxError" === e.name) throw a(e, this, "E_JSON_PARSE");
                            throw e
                        }
                    }
                    return e
                }],
                timeout: 0,
                xsrfCookieName: "XSRF-TOKEN",
                xsrfHeaderName: "X-XSRF-TOKEN",
                maxContentLength: -1,
                maxBodyLength: -1,
                validateStatus: function(e) {
                    return e >= 200 && e < 300
                }
            };
            u.headers = {
                common: {
                    Accept: "application/json, text/plain, */*"
                }
            }, r.forEach(["delete", "get", "head"], function(e) {
                u.headers[e] = {}
            }), r.forEach(["post", "put", "patch"], function(e) {
                u.headers[e] = r.merge(o)
            }), e.exports = u
        },
        84110: e => {
            "use strict";
            e.exports = function(e, t) {
                return function() {
                    for (var f = Array(arguments.length), n = 0; n < f.length; n++) f[n] = arguments[n];
                    return e.apply(t, f)
                }
            }
        },
        41955: (e, t, f) => {
            "use strict";
            var n = f(93161);

            function r(e) {
                return encodeURIComponent(e).replace(/%3A/gi, ":").replace(/%24/g, "$").replace(/%2C/gi, ",").replace(/%20/g, "+").replace(/%5B/gi, "[").replace(/%5D/gi, "]")
            }
            e.exports = function(e, t, f) {
                if (!t) return e;
                if (f) i = f(t);
                else if (n.isURLSearchParams(t)) i = t.toString();
                else {
                    var i, a = [];
                    n.forEach(t, function(e, t) {
                        null != e && (n.isArray(e) ? t += "[]" : e = [e], n.forEach(e, function(e) {
                            n.isDate(e) ? e = e.toISOString() : n.isObject(e) && (e = JSON.stringify(e)), a.push(r(t) + "=" + r(e))
                        }))
                    }), i = a.join("&")
                }
                if (i) {
                    var o = e.indexOf("#"); - 1 !== o && (e = e.slice(0, o)), e += (-1 === e.indexOf("?") ? "?" : "&") + i
                }
                return e
            }
        },
        52483: e => {
            "use strict";
            e.exports = function(e, t) {
                return t ? e.replace(/\/+$/, "") + "/" + t.replace(/^\/+/, "") : e
            }
        },
        89661: (e, t, f) => {
            "use strict";
            var n = f(93161);
            e.exports = n.isStandardBrowserEnv() ? {
                write: function(e, t, f, r, i, a) {
                    var o = [];
                    o.push(e + "=" + encodeURIComponent(t)), n.isNumber(f) && o.push("expires=" + new Date(f).toGMTString()), n.isString(r) && o.push("path=" + r), n.isString(i) && o.push("domain=" + i), !0 === a && o.push("secure"), document.cookie = o.join("; ")
                },
                read: function(e) {
                    var t = document.cookie.match(RegExp("(^|;\\s*)(" + e + ")=([^;]*)"));
                    return t ? decodeURIComponent(t[3]) : null
                },
                remove: function(e) {
                    this.write(e, "", Date.now() - 864e5)
                }
            } : {
                write: function() {},
                read: function() {
                    return null
                },
                remove: function() {}
            }
        },
        42710: e => {
            "use strict";
            e.exports = function(e) {
                return /^([a-z][a-z\d\+\-\.]*:)?\/\//i.test(e)
            }
        },
        40320: e => {
            "use strict";
            e.exports = function(e) {
                return "object" == typeof e && !0 === e.isAxiosError
            }
        },
        88255: (e, t, f) => {
            "use strict";
            var n = f(93161);
            e.exports = n.isStandardBrowserEnv() ? function() {
                var e, t = /(msie|trident)/i.test(navigator.userAgent),
                    f = document.createElement("a");

                function r(e) {
                    var n = e;
                    return t && (f.setAttribute("href", n), n = f.href), f.setAttribute("href", n), {
                        href: f.href,
                        protocol: f.protocol ? f.protocol.replace(/:$/, "") : "",
                        host: f.host,
                        search: f.search ? f.search.replace(/^\?/, "") : "",
                        hash: f.hash ? f.hash.replace(/^#/, "") : "",
                        hostname: f.hostname,
                        port: f.port,
                        pathname: "/" === f.pathname.charAt(0) ? f.pathname : "/" + f.pathname
                    }
                }
                return e = r(window.location.href),
                    function(t) {
                        var f = n.isString(t) ? r(t) : t;
                        return f.protocol === e.protocol && f.host === e.host
                    }
            }() : function() {
                return !0
            }
        },
        2795: (e, t, f) => {
            "use strict";
            var n = f(93161);
            e.exports = function(e, t) {
                n.forEach(e, function(f, n) {
                    n !== t && n.toUpperCase() === t.toUpperCase() && (e[t] = f, delete e[n])
                })
            }
        },
        19585: (e, t, f) => {
            "use strict";
            var n = f(93161),
                r = ["age", "authorization", "content-length", "content-type", "etag", "expires", "from", "host", "if-modified-since", "if-unmodified-since", "last-modified", "location", "max-forwards", "proxy-authorization", "referer", "retry-after", "user-agent"];
            e.exports = function(e) {
                var t, f, i, a = {};
                return e && n.forEach(e.split("\n"), function(e) {
                    i = e.indexOf(":"), t = n.trim(e.substr(0, i)).toLowerCase(), f = n.trim(e.substr(i + 1)), t && !(a[t] && r.indexOf(t) >= 0) && ("set-cookie" === t ? a[t] = (a[t] ? a[t] : []).concat([f]) : a[t] = a[t] ? a[t] + ", " + f : f)
                }), a
            }
        },
        97135: e => {
            "use strict";
            e.exports = function(e) {
                return function(t) {
                    return e.apply(null, t)
                }
            }
        },
        62348: (e, t, f) => {
            "use strict";
            var n = f(88593),
                r = {};
            ["object", "boolean", "number", "function", "string", "symbol"].forEach(function(e, t) {
                r[e] = function(f) {
                    return typeof f === e || "a" + (t < 1 ? "n " : " ") + e
                }
            });
            var i = {},
                a = n.version.split(".");

            function o(e, t) {
                for (var f = t ? t.split(".") : a, n = e.split("."), r = 0; r < 3; r++) {
                    if (f[r] > n[r]) return !0;
                    if (f[r] < n[r]) break
                }
                return !1
            }
            r.transitional = function(e, t, f) {
                var r = t && o(t);

                function a(e, t) {
                    return "[Axios v" + n.version + "] Transitional option '" + e + "'" + t + (f ? ". " + f : "")
                }
                return function(f, n, o) {
                    if (!1 === e) throw Error(a(n, " has been removed in " + t));
                    return r && !i[n] && (i[n] = !0, console.warn(a(n, " has been deprecated since v" + t + " and will be removed in the near future"))), !e || e(f, n, o)
                }
            }, e.exports = {
                isOlderVersion: o,
                assertOptions: function(e, t, f) {
                    if ("object" != typeof e) throw TypeError("options must be an object");
                    for (var n = Object.keys(e), r = n.length; r-- > 0;) {
                        var i = n[r],
                            a = t[i];
                        if (a) {
                            var o = e[i],
                                s = void 0 === o || a(o, i, e);
                            if (!0 !== s) throw TypeError("option " + i + " must be " + s);
                            continue
                        }
                        if (!0 !== f) throw Error("Unknown option " + i)
                    }
                },
                validators: r
            }
        },
        93161: (e, t, f) => {
            "use strict";
            var n = f(84110),
                r = Object.prototype.toString;

            function i(e) {
                return "[object Array]" === r.call(e)
            }

            function a(e) {
                return void 0 === e
            }

            function o(e) {
                return null !== e && "object" == typeof e
            }

            function s(e) {
                if ("[object Object]" !== r.call(e)) return !1;
                var t = Object.getPrototypeOf(e);
                return null === t || t === Object.prototype
            }

            function u(e) {
                return "[object Function]" === r.call(e)
            }

            function d(e, t) {
                if (null != e) {
                    if ("object" != typeof e && (e = [e]), i(e))
                        for (var f = 0, n = e.length; f < n; f++) t.call(null, e[f], f, e);
                    else
                        for (var r in e) Object.prototype.hasOwnProperty.call(e, r) && t.call(null, e[r], r, e)
                }
            }
            e.exports = {
                isArray: i,
                isArrayBuffer: function(e) {
                    return "[object ArrayBuffer]" === r.call(e)
                },
                isBuffer: function(e) {
                    return null !== e && !a(e) && null !== e.constructor && !a(e.constructor) && "function" == typeof e.constructor.isBuffer && e.constructor.isBuffer(e)
                },
                isFormData: function(e) {
                    return "undefined" != typeof FormData && e instanceof FormData
                },
                isArrayBufferView: function(e) {
                    return "undefined" != typeof ArrayBuffer && ArrayBuffer.isView ? ArrayBuffer.isView(e) : e && e.buffer && e.buffer instanceof ArrayBuffer
                },
                isString: function(e) {
                    return "string" == typeof e
                },
                isNumber: function(e) {
                    return "number" == typeof e
                },
                isObject: o,
                isPlainObject: s,
                isUndefined: a,
                isDate: function(e) {
                    return "[object Date]" === r.call(e)
                },
                isFile: function(e) {
                    return "[object File]" === r.call(e)
                },
                isBlob: function(e) {
                    return "[object Blob]" === r.call(e)
                },
                isFunction: u,
                isStream: function(e) {
                    return o(e) && u(e.pipe)
                },
                isURLSearchParams: function(e) {
                    return "undefined" != typeof URLSearchParams && e instanceof URLSearchParams
                },
                isStandardBrowserEnv: function() {
                    return ("undefined" == typeof navigator || "ReactNative" !== navigator.product && "NativeScript" !== navigator.product && "NS" !== navigator.product) && "undefined" != typeof window && "undefined" != typeof document
                },
                forEach: d,
                merge: function e() {
                    var t = {};

                    function f(f, n) {
                        s(t[n]) && s(f) ? t[n] = e(t[n], f) : s(f) ? t[n] = e({}, f) : i(f) ? t[n] = f.slice() : t[n] = f
                    }
                    for (var n = 0, r = arguments.length; n < r; n++) d(arguments[n], f);
                    return t
                },
                extend: function(e, t, f) {
                    return d(t, function(t, r) {
                        f && "function" == typeof t ? e[r] = n(t, f) : e[r] = t
                    }), e
                },
                trim: function(e) {
                    return e.trim ? e.trim() : e.replace(/^\s+|\s+$/g, "")
                },
                stripBOM: function(e) {
                    return 65279 === e.charCodeAt(0) && (e = e.slice(1)), e
                }
            }
        },
        68478: (e, t) => {
            "use strict";
            t.byteLength = function(e) {
                var t = s(e),
                    f = t[0],
                    n = t[1];
                return (f + n) * 3 / 4 - n
            }, t.toByteArray = function(e) {
                var t, f, i = s(e),
                    a = i[0],
                    o = i[1],
                    u = new r((a + o) * 3 / 4 - o),
                    d = 0,
                    c = o > 0 ? a - 4 : a;
                for (f = 0; f < c; f += 4) t = n[e.charCodeAt(f)] << 18 | n[e.charCodeAt(f + 1)] << 12 | n[e.charCodeAt(f + 2)] << 6 | n[e.charCodeAt(f + 3)], u[d++] = t >> 16 & 255, u[d++] = t >> 8 & 255, u[d++] = 255 & t;
                return 2 === o && (t = n[e.charCodeAt(f)] << 2 | n[e.charCodeAt(f + 1)] >> 4, u[d++] = 255 & t), 1 === o && (t = n[e.charCodeAt(f)] << 10 | n[e.charCodeAt(f + 1)] << 4 | n[e.charCodeAt(f + 2)] >> 2, u[d++] = t >> 8 & 255, u[d++] = 255 & t), u
            }, t.fromByteArray = function(e) {
                for (var t, n = e.length, r = n % 3, i = [], a = 0, o = n - r; a < o; a += 16383) i.push(function(e, t, n) {
                    for (var r, i = [], a = t; a < n; a += 3) i.push(f[(r = (e[a] << 16 & 16711680) + (e[a + 1] << 8 & 65280) + (255 & e[a + 2])) >> 18 & 63] + f[r >> 12 & 63] + f[r >> 6 & 63] + f[63 & r]);
                    return i.join("")
                }(e, a, a + 16383 > o ? o : a + 16383));
                return 1 === r ? i.push(f[(t = e[n - 1]) >> 2] + f[t << 4 & 63] + "==") : 2 === r && i.push(f[(t = (e[n - 2] << 8) + e[n - 1]) >> 10] + f[t >> 4 & 63] + f[t << 2 & 63] + "="), i.join("")
            };
            for (var f = [], n = [], r = "undefined" != typeof Uint8Array ? Uint8Array : Array, i = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/", a = 0, o = i.length; a < o; ++a) f[a] = i[a], n[i.charCodeAt(a)] = a;

            function s(e) {
                var t = e.length;
                if (t % 4 > 0) throw Error("Invalid string. Length must be a multiple of 4");
                var f = e.indexOf("="); - 1 === f && (f = t);
                var n = f === t ? 0 : 4 - f % 4;
                return [f, n]
            }
            n["-".charCodeAt(0)] = 62, n["_".charCodeAt(0)] = 63
        },
        59310: e => {
            "use strict";
            for (var t = "qpzry9x8gf2tvdw0s3jn54khce6mua7l", f = {}, n = 0; n < t.length; n++) {
                var r = t.charAt(n);
                if (void 0 !== f[r]) throw TypeError(r + " is ambiguous");
                f[r] = n
            }

            function i(e) {
                var t = e >> 25;
                return (33554431 & e) << 5 ^ 996825010 & -(t >> 0 & 1) ^ 642813549 & -(t >> 1 & 1) ^ 513874426 & -(t >> 2 & 1) ^ 1027748829 & -(t >> 3 & 1) ^ 705979059 & -(t >> 4 & 1)
            }

            function a(e) {
                for (var t = 1, f = 0; f < e.length; ++f) {
                    var n = e.charCodeAt(f);
                    if (n < 33 || n > 126) return "Invalid prefix (" + e + ")";
                    t = i(t) ^ n >> 5
                }
                for (f = 0, t = i(t); f < e.length; ++f) {
                    var r = e.charCodeAt(f);
                    t = i(t) ^ 31 & r
                }
                return t
            }

            function o(e, t) {
                if (t = t || 90, e.length < 8) return e + " too short";
                if (e.length > t) return "Exceeds length limit";
                var n = e.toLowerCase(),
                    r = e.toUpperCase();
                if (e !== n && e !== r) return "Mixed-case string " + e;
                var o = (e = n).lastIndexOf("1");
                if (-1 === o) return "No separator character for " + e;
                if (0 === o) return "Missing prefix for " + e;
                var s = e.slice(0, o),
                    u = e.slice(o + 1);
                if (u.length < 6) return "Data too short";
                var d = a(s);
                if ("string" == typeof d) return d;
                for (var c = [], l = 0; l < u.length; ++l) {
                    var p = u.charAt(l),
                        y = f[p];
                    if (void 0 === y) return "Unknown character " + p;
                    d = i(d) ^ y, l + 6 >= u.length || c.push(y)
                }
                return 1 !== d ? "Invalid checksum for " + e : {
                    prefix: s,
                    words: c
                }
            }

            function s(e, t, f, n) {
                for (var r = 0, i = 0, a = (1 << f) - 1, o = [], s = 0; s < e.length; ++s)
                    for (r = r << t | e[s], i += t; i >= f;) o.push(r >> (i -= f) & a);
                if (n) i > 0 && o.push(r << f - i & a);
                else {
                    if (i >= t) return "Excess padding";
                    if (r << f - i & a) return "Non-zero padding"
                }
                return o
            }
            e.exports = {
                decodeUnsafe: function() {
                    var e = o.apply(null, arguments);
                    if ("object" == typeof e) return e
                },
                decode: function(e) {
                    var t = o.apply(null, arguments);
                    if ("object" == typeof t) return t;
                    throw Error(t)
                },
                encode: function(e, f, n) {
                    if (n = n || 90, e.length + 7 + f.length > n) throw TypeError("Exceeds length limit");
                    var r = a(e = e.toLowerCase());
                    if ("string" == typeof r) throw Error(r);
                    for (var o = e + "1", s = 0; s < f.length; ++s) {
                        var u = f[s];
                        if (u >> 5 != 0) throw Error("Non 5-bit word");
                        r = i(r) ^ u, o += t.charAt(u)
                    }
                    for (s = 0; s < 6; ++s) r = i(r);
                    for (r ^= 1, s = 0; s < 6; ++s) {
                        var d = r >> (5 - s) * 5 & 31;
                        o += t.charAt(d)
                    }
                    return o
                },
                toWordsUnsafe: function(e) {
                    var t = s(e, 8, 5, !0);
                    if (Array.isArray(t)) return t
                },
                toWords: function(e) {
                    var t = s(e, 8, 5, !0);
                    if (Array.isArray(t)) return t;
                    throw Error(t)
                },
                fromWordsUnsafe: function(e) {
                    var t = s(e, 5, 8, !1);
                    if (Array.isArray(t)) return t
                },
                fromWords: function(e) {
                    var t = s(e, 5, 8, !1);
                    if (Array.isArray(t)) return t;
                    throw Error(t)
                }
            }
        },
        45201: function(e, t, f) {
            var n;
            ! function(r) {
                "use strict";
                var i, a = "[big.js] ",
                    o = a + "Invalid ",
                    s = o + "decimal places",
                    u = o + "rounding mode",
                    d = a + "Division by zero",
                    c = {},
                    l = void 0,
                    p = /^-?(\d+(\.\d*)?|\.\d+)(e[+-]?\d+)?$/i;

                function y(e, t, f, n) {
                    var r = e.c,
                        i = e.e + t + 1;
                    if (i < r.length) {
                        if (1 === f) n = r[i] >= 5;
                        else if (2 === f) n = r[i] > 5 || 5 == r[i] && (n || i < 0 || r[i + 1] !== l || 1 & r[i - 1]);
                        else if (3 === f) n = n || !!r[0];
                        else if (n = !1, 0 !== f) throw Error(u);
                        if (i < 1) r.length = 1, n ? (e.e = -t, r[0] = 1) : r[0] = e.e = 0;
                        else {
                            if (r.length = i--, n)
                                for (; ++r[i] > 9;) r[i] = 0, i-- || (++e.e, r.unshift(1));
                            for (i = r.length; !r[--i];) r.pop()
                        }
                    } else if (f < 0 || f > 3 || f !== ~~f) throw Error(u);
                    return e
                }

                function b(e, t, f, n) {
                    var r, i, a = e.constructor,
                        u = !e.c[0];
                    if (f !== l) {
                        if (f !== ~~f || f < (3 == t) || f > 1e6) throw Error(3 == t ? o + "precision" : s);
                        for (f = n - (e = new a(e)).e, e.c.length > ++n && y(e, f, a.RM), 2 == t && (n = e.e + f + 1); e.c.length < n;) e.c.push(0)
                    }
                    if (r = e.e, f = (i = e.c.join("")).length, 2 != t && (1 == t || 3 == t && n <= r || r <= a.NE || r >= a.PE)) i = i.charAt(0) + (f > 1 ? "." + i.slice(1) : "") + (r < 0 ? "e" : "e+") + r;
                    else if (r < 0) {
                        for (; ++r;) i = "0" + i;
                        i = "0." + i
                    } else if (r > 0) {
                        if (++r > f)
                            for (r -= f; r--;) i += "0";
                        else r < f && (i = i.slice(0, r) + "." + i.slice(r))
                    } else f > 1 && (i = i.charAt(0) + "." + i.slice(1));
                    return e.s < 0 && (!u || 4 == t) ? "-" + i : i
                }
                c.abs = function() {
                    var e = new this.constructor(this);
                    return e.s = 1, e
                }, c.cmp = function(e) {
                    var t, f = this.c,
                        n = (e = new this.constructor(e)).c,
                        r = this.s,
                        i = e.s,
                        a = this.e,
                        o = e.e;
                    if (!f[0] || !n[0]) return f[0] ? r : n[0] ? -i : 0;
                    if (r != i) return r;
                    if (t = r < 0, a != o) return a > o ^ t ? 1 : -1;
                    for (r = -1, i = (a = f.length) < (o = n.length) ? a : o; ++r < i;)
                        if (f[r] != n[r]) return f[r] > n[r] ^ t ? 1 : -1;
                    return a == o ? 0 : a > o ^ t ? 1 : -1
                }, c.div = function(e) {
                    var t = this.constructor,
                        f = this.c,
                        n = (e = new t(e)).c,
                        r = this.s == e.s ? 1 : -1,
                        i = t.DP;
                    if (i !== ~~i || i < 0 || i > 1e6) throw Error(s);
                    if (!n[0]) throw Error(d);
                    if (!f[0]) return new t(0 * r);
                    var a, o, u, c, p, b = n.slice(),
                        h = a = n.length,
                        m = f.length,
                        v = f.slice(0, a),
                        T = v.length,
                        g = e,
                        w = g.c = [],
                        A = 0,
                        I = i + (g.e = this.e - e.e) + 1;
                    for (g.s = r, r = I < 0 ? 0 : I, b.unshift(0); T++ < a;) v.push(0);
                    do {
                        for (u = 0; u < 10; u++) {
                            if (a != (T = v.length)) c = a > T ? 1 : -1;
                            else
                                for (p = -1, c = 0; ++p < a;)
                                    if (n[p] != v[p]) {
                                        c = n[p] > v[p] ? 1 : -1;
                                        break
                                    } if (c < 0) {
                                for (o = T == a ? n : b; T;) {
                                    if (v[--T] < o[T]) {
                                        for (p = T; p && !v[--p];) v[p] = 9;
                                        --v[p], v[T] += 10
                                    }
                                    v[T] -= o[T]
                                }
                                for (; !v[0];) v.shift()
                            } else break
                        }
                        w[A++] = c ? u : ++u, v[0] && c ? v[T] = f[h] || 0 : v = [f[h]]
                    } while ((h++ < m || v[0] !== l) && r--) return !w[0] && 1 != A && (w.shift(), g.e--), A > I && y(g, i, t.RM, v[0] !== l), g
                }, c.eq = function(e) {
                    return !this.cmp(e)
                }, c.gt = function(e) {
                    return this.cmp(e) > 0
                }, c.gte = function(e) {
                    return this.cmp(e) > -1
                }, c.lt = function(e) {
                    return 0 > this.cmp(e)
                }, c.lte = function(e) {
                    return 1 > this.cmp(e)
                }, c.minus = c.sub = function(e) {
                    var t, f, n, r, i = this.constructor,
                        a = this.s,
                        o = (e = new i(e)).s;
                    if (a != o) return e.s = -o, this.plus(e);
                    var s = this.c.slice(),
                        u = this.e,
                        d = e.c,
                        c = e.e;
                    if (!s[0] || !d[0]) return d[0] ? (e.s = -o, e) : new i(s[0] ? this : 0);
                    if (a = u - c) {
                        for ((r = a < 0) ? (a = -a, n = s) : (c = u, n = d), n.reverse(), o = a; o--;) n.push(0);
                        n.reverse()
                    } else
                        for (f = ((r = s.length < d.length) ? s : d).length, a = o = 0; o < f; o++)
                            if (s[o] != d[o]) {
                                r = s[o] < d[o];
                                break
                            } if (r && (n = s, s = d, d = n, e.s = -e.s), (o = (f = d.length) - (t = s.length)) > 0)
                        for (; o--;) s[t++] = 0;
                    for (o = t; f > a;) {
                        if (s[--f] < d[f]) {
                            for (t = f; t && !s[--t];) s[t] = 9;
                            --s[t], s[f] += 10
                        }
                        s[f] -= d[f]
                    }
                    for (; 0 === s[--o];) s.pop();
                    for (; 0 === s[0];) s.shift(), --c;
                    return s[0] || (e.s = 1, s = [c = 0]), e.c = s, e.e = c, e
                }, c.mod = function(e) {
                    var t, f = this,
                        n = f.constructor,
                        r = f.s,
                        i = (e = new n(e)).s;
                    if (!e.c[0]) throw Error(d);
                    return (f.s = e.s = 1, t = 1 == e.cmp(f), f.s = r, e.s = i, t) ? new n(f) : (r = n.DP, i = n.RM, n.DP = n.RM = 0, f = f.div(e), n.DP = r, n.RM = i, this.minus(f.times(e)))
                }, c.plus = c.add = function(e) {
                    var t, f = this.constructor,
                        n = this.s,
                        r = (e = new f(e)).s;
                    if (n != r) return e.s = -r, this.minus(e);
                    var i = this.e,
                        a = this.c,
                        o = e.e,
                        s = e.c;
                    if (!a[0] || !s[0]) return s[0] ? e : new f(a[0] ? this : 0 * n);
                    if (a = a.slice(), n = i - o) {
                        for (n > 0 ? (o = i, t = s) : (n = -n, t = a), t.reverse(); n--;) t.push(0);
                        t.reverse()
                    }
                    for (a.length - s.length < 0 && (t = s, s = a, a = t), n = s.length, r = 0; n; a[n] %= 10) r = (a[--n] = a[n] + s[n] + r) / 10 | 0;
                    for (r && (a.unshift(r), ++o), n = a.length; 0 === a[--n];) a.pop();
                    return e.c = a, e.e = o, e
                }, c.pow = function(e) {
                    var t = this,
                        f = new t.constructor(1),
                        n = f,
                        r = e < 0;
                    if (e !== ~~e || e < -1e6 || e > 1e6) throw Error(o + "exponent");
                    for (r && (e = -e); 1 & e && (n = n.times(t)), e >>= 1;) t = t.times(t);
                    return r ? f.div(n) : n
                }, c.round = function(e, t) {
                    var f = this.constructor;
                    if (e === l) e = 0;
                    else if (e !== ~~e || e < -1e6 || e > 1e6) throw Error(s);
                    return y(new f(this), e, t === l ? f.RM : t)
                }, c.sqrt = function() {
                    var e, t, f, n = this.constructor,
                        r = this.s,
                        i = this.e,
                        o = new n(.5);
                    if (!this.c[0]) return new n(this);
                    if (r < 0) throw Error(a + "No square root");
                    0 === (r = Math.sqrt(this + "")) || r === 1 / 0 ? ((t = this.c.join("")).length + i & 1 || (t += "0"), i = ((i + 1) / 2 | 0) - (i < 0 || 1 & i), e = new n(((r = Math.sqrt(t)) == 1 / 0 ? "1e" : (r = r.toExponential()).slice(0, r.indexOf("e") + 1)) + i)) : e = new n(r), i = e.e + (n.DP += 4);
                    do f = e, e = o.times(f.plus(this.div(f))); while (f.c.slice(0, i).join("") !== e.c.slice(0, i).join("")) return y(e, n.DP -= 4, n.RM)
                }, c.times = c.mul = function(e) {
                    var t, f = this.constructor,
                        n = this.c,
                        r = (e = new f(e)).c,
                        i = n.length,
                        a = r.length,
                        o = this.e,
                        s = e.e;
                    if (e.s = this.s == e.s ? 1 : -1, !n[0] || !r[0]) return new f(0 * e.s);
                    for (e.e = o + s, i < a && (t = n, n = r, r = t, s = i, i = a, a = s), t = Array(s = i + a); s--;) t[s] = 0;
                    for (o = a; o--;) {
                        for (a = 0, s = i + o; s > o;) a = t[s] + r[o] * n[s - o - 1] + a, t[s--] = a % 10, a = a / 10 | 0;
                        t[s] = (t[s] + a) % 10
                    }
                    for (a ? ++e.e : t.shift(), o = t.length; !t[--o];) t.pop();
                    return e.c = t, e
                }, c.toExponential = function(e) {
                    return b(this, 1, e, e)
                }, c.toFixed = function(e) {
                    return b(this, 2, e, this.e + e)
                }, c.toPrecision = function(e) {
                    return b(this, 3, e, e - 1)
                }, c.toString = function() {
                    return b(this)
                }, c.valueOf = c.toJSON = function() {
                    return b(this, 4)
                }, (i = function e() {
                    function t(f) {
                        if (!(this instanceof t)) return f === l ? e() : new t(f);
                        f instanceof t ? (this.s = f.s, this.e = f.e, this.c = f.c.slice()) : function(e, t) {
                            var f, n, r;
                            if (0 === t && 1 / t < 0) t = "-0";
                            else if (!p.test(t += "")) throw Error(o + "number");
                            for (e.s = "-" == t.charAt(0) ? (t = t.slice(1), -1) : 1, (f = t.indexOf(".")) > -1 && (t = t.replace(".", "")), (n = t.search(/e/i)) > 0 ? (f < 0 && (f = n), f += +t.slice(n + 1), t = t.substring(0, n)) : f < 0 && (f = t.length), r = t.length, n = 0; n < r && "0" == t.charAt(n);) ++n;
                            if (n == r) e.c = [e.e = 0];
                            else {
                                for (; r > 0 && "0" == t.charAt(--r););
                                for (e.e = f - n - 1, e.c = [], f = 0; n <= r;) e.c[f++] = +t.charAt(n++)
                            }
                            return e
                        }(this, f), this.constructor = t
                    }
                    return t.prototype = c, t.DP = 20, t.RM = 1, t.NE = -7, t.PE = 21, t.version = "5.2.2", t
                }()).default = i.Big = i, void 0 !== (n = (function() {
                    return i
                }).call(t, f, t, e)) && (e.exports = n)
            }(0)
        },
        67658: function(e, t, f) {
            var n;
            ! function(r) {
                "use strict";
                var i, a = /^-?(?:\d+(?:\.\d*)?|\.\d+)(?:e[+-]?\d+)?$/i,
                    o = Math.ceil,
                    s = Math.floor,
                    u = "[BigNumber Error] ",
                    d = u + "Number primitive has more than 15 significant digits: ",
                    c = [1, 10, 100, 1e3, 1e4, 1e5, 1e6, 1e7, 1e8, 1e9, 1e10, 1e11, 1e12, 1e13];

                function l(e) {
                    var t = 0 | e;
                    return e > 0 || e === t ? t : t - 1
                }

                function p(e) {
                    for (var t, f, n = 1, r = e.length, i = e[0] + ""; n < r;) {
                        for (f = 14 - (t = e[n++] + "").length; f--; t = "0" + t);
                        i += t
                    }
                    for (r = i.length; 48 === i.charCodeAt(--r););
                    return i.slice(0, r + 1 || 1)
                }

                function y(e, t) {
                    var f, n, r = e.c,
                        i = t.c,
                        a = e.s,
                        o = t.s,
                        s = e.e,
                        u = t.e;
                    if (!a || !o) return null;
                    if (f = r && !r[0], n = i && !i[0], f || n) return f ? n ? 0 : -o : a;
                    if (a != o) return a;
                    if (f = a < 0, n = s == u, !r || !i) return n ? 0 : !r ^ f ? 1 : -1;
                    if (!n) return s > u ^ f ? 1 : -1;
                    for (a = 0, o = (s = r.length) < (u = i.length) ? s : u; a < o; a++)
                        if (r[a] != i[a]) return r[a] > i[a] ^ f ? 1 : -1;
                    return s == u ? 0 : s > u ^ f ? 1 : -1
                }

                function b(e, t, f, n) {
                    if (e < t || e > f || e !== s(e)) throw Error(u + (n || "Argument") + ("number" == typeof e ? e < t || e > f ? " out of range: " : " not an integer: " : " not a primitive number: ") + String(e))
                }

                function h(e) {
                    var t = e.c.length - 1;
                    return l(e.e / 14) == t && e.c[t] % 2 != 0
                }

                function m(e, t) {
                    return (e.length > 1 ? e.charAt(0) + "." + e.slice(1) : e) + (t < 0 ? "e" : "e+") + t
                }

                function v(e, t, f) {
                    var n, r;
                    if (t < 0) {
                        for (r = f + "."; ++t; r += f);
                        e = r + e
                    } else if (n = e.length, ++t > n) {
                        for (r = f, t -= n; --t; r += f);
                        e += r
                    } else t < n && (e = e.slice(0, t) + "." + e.slice(t));
                    return e
                }(i = function e(t) {
                    var f, n, r, i, T, g, w, A, I, E = L.prototype = {
                            constructor: L,
                            toString: null,
                            valueOf: null
                        },
                        _ = new L(1),
                        k = 20,
                        C = 4,
                        S = -7,
                        O = 21,
                        P = -1e7,
                        M = 1e7,
                        x = !1,
                        R = 1,
                        F = 0,
                        D = {
                            prefix: "",
                            groupSize: 3,
                            secondaryGroupSize: 0,
                            groupSeparator: ",",
                            decimalSeparator: ".",
                            fractionGroupSize: 0,
                            fractionGroupSeparator: " ",
                            suffix: ""
                        },
                        N = "0123456789abcdefghijklmnopqrstuvwxyz",
                        B = !0;

                    function L(e, t) {
                        var f, n, r, i, o, u, c, l, p = this;
                        if (!(p instanceof L)) return new L(e, t);
                        if (null == t) {
                            if (e && !0 === e._isBigNumber) {
                                p.s = e.s, !e.c || e.e > M ? p.c = p.e = null : e.e < P ? p.c = [p.e = 0] : (p.e = e.e, p.c = e.c.slice());
                                return
                            }
                            if ((u = "number" == typeof e) && 0 * e == 0) {
                                if (p.s = 1 / e < 0 ? (e = -e, -1) : 1, e === ~~e) {
                                    for (i = 0, o = e; o >= 10; o /= 10, i++);
                                    i > M ? p.c = p.e = null : (p.e = i, p.c = [e]);
                                    return
                                }
                                l = String(e)
                            } else {
                                if (!a.test(l = String(e))) return I(p, l, u);
                                p.s = 45 == l.charCodeAt(0) ? (l = l.slice(1), -1) : 1
                            }(i = l.indexOf(".")) > -1 && (l = l.replace(".", "")), (o = l.search(/e/i)) > 0 ? (i < 0 && (i = o), i += +l.slice(o + 1), l = l.substring(0, o)) : i < 0 && (i = l.length)
                        } else {
                            if (b(t, 2, N.length, "Base"), 10 == t && B) return G(p = new L(e), k + p.e + 1, C);
                            if (l = String(e), u = "number" == typeof e) {
                                if (0 * e != 0) return I(p, l, u, t);
                                if (p.s = 1 / e < 0 ? (l = l.slice(1), -1) : 1, L.DEBUG && l.replace(/^0\.0*|\./, "").length > 15) throw Error(d + e)
                            } else p.s = 45 === l.charCodeAt(0) ? (l = l.slice(1), -1) : 1;
                            for (f = N.slice(0, t), i = o = 0, c = l.length; o < c; o++)
                                if (0 > f.indexOf(n = l.charAt(o))) {
                                    if ("." == n) {
                                        if (o > i) {
                                            i = c;
                                            continue
                                        }
                                    } else if (!r && (l == l.toUpperCase() && (l = l.toLowerCase()) || l == l.toLowerCase() && (l = l.toUpperCase()))) {
                                        r = !0, o = -1, i = 0;
                                        continue
                                    }
                                    return I(p, String(e), u, t)
                                }
                            u = !1, (i = (l = A(l, t, 10, p.s)).indexOf(".")) > -1 ? l = l.replace(".", "") : i = l.length
                        }
                        for (o = 0; 48 === l.charCodeAt(o); o++);
                        for (c = l.length; 48 === l.charCodeAt(--c););
                        if (l = l.slice(o, ++c)) {
                            if (c -= o, u && L.DEBUG && c > 15 && (e > 9007199254740991 || e !== s(e))) throw Error(d + p.s * e);
                            if ((i = i - o - 1) > M) p.c = p.e = null;
                            else if (i < P) p.c = [p.e = 0];
                            else {
                                if (p.e = i, p.c = [], o = (i + 1) % 14, i < 0 && (o += 14), o < c) {
                                    for (o && p.c.push(+l.slice(0, o)), c -= 14; o < c;) p.c.push(+l.slice(o, o += 14));
                                    o = 14 - (l = l.slice(o)).length
                                } else o -= c;
                                for (; o--; l += "0");
                                p.c.push(+l)
                            }
                        } else p.c = [p.e = 0]
                    }

                    function q(e, t, f, n) {
                        var r, i, a, o, s;
                        if (null == f ? f = C : b(f, 0, 8), !e.c) return e.toString();
                        if (r = e.c[0], a = e.e, null == t) s = p(e.c), s = 1 == n || 2 == n && (a <= S || a >= O) ? m(s, a) : v(s, a, "0");
                        else if (i = (e = G(new L(e), t, f)).e, o = (s = p(e.c)).length, 1 == n || 2 == n && (t <= i || i <= S)) {
                            for (; o < t; s += "0", o++);
                            s = m(s, i)
                        } else if (t -= a, s = v(s, i, "0"), i + 1 > o) {
                            if (--t > 0)
                                for (s += "."; t--; s += "0");
                        } else if ((t += i - o) > 0)
                            for (i + 1 == o && (s += "."); t--; s += "0");
                        return e.s < 0 && r ? "-" + s : s
                    }

                    function U(e, t) {
                        for (var f, n, r = 1, i = new L(e[0]); r < e.length; r++)(n = new L(e[r])).s && (f = y(i, n)) !== t && (0 !== f || i.s !== t) || (i = n);
                        return i
                    }

                    function V(e, t, f) {
                        for (var n = 1, r = t.length; !t[--r]; t.pop());
                        for (r = t[0]; r >= 10; r /= 10, n++);
                        return (f = n + 14 * f - 1) > M ? e.c = e.e = null : f < P ? e.c = [e.e = 0] : (e.e = f, e.c = t), e
                    }

                    function G(e, t, f, n) {
                        var r, i, a, u, d, l, p, y = e.c;
                        if (y) {
                            e: {
                                for (r = 1, u = y[0]; u >= 10; u /= 10, r++);
                                if ((i = t - r) < 0) i += 14,
                                a = t,
                                p = s((d = y[l = 0]) / c[r - a - 1] % 10);
                                else if ((l = o((i + 1) / 14)) >= y.length) {
                                    if (n) {
                                        for (; y.length <= l; y.push(0));
                                        d = p = 0, r = 1, i %= 14, a = i - 14 + 1
                                    } else break e
                                } else {
                                    for (r = 1, d = u = y[l]; u >= 10; u /= 10, r++);
                                    i %= 14, p = (a = i - 14 + r) < 0 ? 0 : s(d / c[r - a - 1] % 10)
                                }
                                if (n = n || t < 0 || null != y[l + 1] || (a < 0 ? d : d % c[r - a - 1]), n = f < 4 ? (p || n) && (0 == f || f == (e.s < 0 ? 3 : 2)) : p > 5 || 5 == p && (4 == f || n || 6 == f && (i > 0 ? a > 0 ? d / c[r - a] : 0 : y[l - 1]) % 10 & 1 || f == (e.s < 0 ? 8 : 7)), t < 1 || !y[0]) return y.length = 0, n ? (t -= e.e + 1, y[0] = c[(14 - t % 14) % 14], e.e = -t || 0) : y[0] = e.e = 0, e;
                                if (0 == i ? (y.length = l, u = 1, l--) : (y.length = l + 1, u = c[14 - i], y[l] = a > 0 ? s(d / c[r - a] % c[a]) * u : 0), n)
                                    for (;;) {
                                        if (0 == l) {
                                            for (i = 1, a = y[0]; a >= 10; a /= 10, i++);
                                            for (a = y[0] += u, u = 1; a >= 10; a /= 10, u++);
                                            i != u && (e.e++, 1e14 == y[0] && (y[0] = 1));
                                            break
                                        }
                                        if (y[l] += u, 1e14 != y[l]) break;
                                        y[l--] = 0, u = 1
                                    }
                                for (i = y.length; 0 === y[--i]; y.pop());
                            }
                            e.e > M ? e.c = e.e = null : e.e < P && (e.c = [e.e = 0])
                        }
                        return e
                    }

                    function j(e) {
                        var t, f = e.e;
                        return null === f ? e.toString() : (t = p(e.c), t = f <= S || f >= O ? m(t, f) : v(t, f, "0"), e.s < 0 ? "-" + t : t)
                    }
                    return L.clone = e, L.ROUND_UP = 0, L.ROUND_DOWN = 1, L.ROUND_CEIL = 2, L.ROUND_FLOOR = 3, L.ROUND_HALF_UP = 4, L.ROUND_HALF_DOWN = 5, L.ROUND_HALF_EVEN = 6, L.ROUND_HALF_CEIL = 7, L.ROUND_HALF_FLOOR = 8, L.EUCLID = 9, L.config = L.set = function(e) {
                        var t, f;
                        if (null != e) {
                            if ("object" == typeof e) {
                                if (e.hasOwnProperty(t = "DECIMAL_PLACES") && (b(f = e[t], 0, 1e9, t), k = f), e.hasOwnProperty(t = "ROUNDING_MODE") && (b(f = e[t], 0, 8, t), C = f), e.hasOwnProperty(t = "EXPONENTIAL_AT") && ((f = e[t]) && f.pop ? (b(f[0], -1e9, 0, t), b(f[1], 0, 1e9, t), S = f[0], O = f[1]) : (b(f, -1e9, 1e9, t), S = -(O = f < 0 ? -f : f))), e.hasOwnProperty(t = "RANGE")) {
                                    if ((f = e[t]) && f.pop) b(f[0], -1e9, -1, t), b(f[1], 1, 1e9, t), P = f[0], M = f[1];
                                    else if (b(f, -1e9, 1e9, t), f) P = -(M = f < 0 ? -f : f);
                                    else throw Error(u + t + " cannot be zero: " + f)
                                }
                                if (e.hasOwnProperty(t = "CRYPTO")) {
                                    if (!!(f = e[t]) === f) {
                                        if (f) {
                                            if ("undefined" != typeof crypto && crypto && (crypto.getRandomValues || crypto.randomBytes)) x = f;
                                            else throw x = !f, Error(u + "crypto unavailable")
                                        } else x = f
                                    } else throw Error(u + t + " not true or false: " + f)
                                }
                                if (e.hasOwnProperty(t = "MODULO_MODE") && (b(f = e[t], 0, 9, t), R = f), e.hasOwnProperty(t = "POW_PRECISION") && (b(f = e[t], 0, 1e9, t), F = f), e.hasOwnProperty(t = "FORMAT")) {
                                    if ("object" == typeof(f = e[t])) D = f;
                                    else throw Error(u + t + " not an object: " + f)
                                }
                                if (e.hasOwnProperty(t = "ALPHABET")) {
                                    if ("string" != typeof(f = e[t]) || /^.?$|[+\-.\s]|(.).*\1/.test(f)) throw Error(u + t + " invalid: " + f);
                                    B = "0123456789" == f.slice(0, 10), N = f
                                }
                            } else throw Error(u + "Object expected: " + e)
                        }
                        return {
                            DECIMAL_PLACES: k,
                            ROUNDING_MODE: C,
                            EXPONENTIAL_AT: [S, O],
                            RANGE: [P, M],
                            CRYPTO: x,
                            MODULO_MODE: R,
                            POW_PRECISION: F,
                            FORMAT: D,
                            ALPHABET: N
                        }
                    }, L.isBigNumber = function(e) {
                        if (!e || !0 !== e._isBigNumber) return !1;
                        if (!L.DEBUG) return !0;
                        var t, f, n = e.c,
                            r = e.e,
                            i = e.s;
                        e: if ("[object Array]" == ({}).toString.call(n)) {
                            if ((1 === i || -1 === i) && r >= -1e9 && r <= 1e9 && r === s(r)) {
                                if (0 === n[0]) {
                                    if (0 === r && 1 === n.length) return !0;
                                    break e
                                }
                                if ((t = (r + 1) % 14) < 1 && (t += 14), String(n[0]).length == t) {
                                    for (t = 0; t < n.length; t++)
                                        if ((f = n[t]) < 0 || f >= 1e14 || f !== s(f)) break e;
                                    if (0 !== f) return !0
                                }
                            }
                        } else
                        if (null === n && null === r && (null === i || 1 === i || -1 === i)) return !0;
                        throw Error(u + "Invalid BigNumber: " + e)
                    }, L.maximum = L.max = function() {
                        return U(arguments, -1)
                    }, L.minimum = L.min = function() {
                        return U(arguments, 1)
                    }, L.random = (f = 9007199254740992 * Math.random() & 2097151 ? function() {
                        return s(9007199254740992 * Math.random())
                    } : function() {
                        return (1073741824 * Math.random() | 0) * 8388608 + (8388608 * Math.random() | 0)
                    }, function(e) {
                        var t, n, r, i, a, d = 0,
                            l = [],
                            p = new L(_);
                        if (null == e ? e = k : b(e, 0, 1e9), i = o(e / 14), x) {
                            if (crypto.getRandomValues) {
                                for (t = crypto.getRandomValues(new Uint32Array(i *= 2)); d < i;)(a = 131072 * t[d] + (t[d + 1] >>> 11)) >= 9e15 ? (n = crypto.getRandomValues(new Uint32Array(2)), t[d] = n[0], t[d + 1] = n[1]) : (l.push(a % 1e14), d += 2);
                                d = i / 2
                            } else if (crypto.randomBytes) {
                                for (t = crypto.randomBytes(i *= 7); d < i;)(a = (31 & t[d]) * 281474976710656 + 1099511627776 * t[d + 1] + 4294967296 * t[d + 2] + 16777216 * t[d + 3] + (t[d + 4] << 16) + (t[d + 5] << 8) + t[d + 6]) >= 9e15 ? crypto.randomBytes(7).copy(t, d) : (l.push(a % 1e14), d += 7);
                                d = i / 7
                            } else throw x = !1, Error(u + "crypto unavailable")
                        }
                        if (!x)
                            for (; d < i;)(a = f()) < 9e15 && (l[d++] = a % 1e14);
                        for (i = l[--d], e %= 14, i && e && (a = c[14 - e], l[d] = s(i / a) * a); 0 === l[d]; l.pop(), d--);
                        if (d < 0) l = [r = 0];
                        else {
                            for (r = -1; 0 === l[0]; l.splice(0, 1), r -= 14);
                            for (d = 1, a = l[0]; a >= 10; a /= 10, d++);
                            d < 14 && (r -= 14 - d)
                        }
                        return p.e = r, p.c = l, p
                    }), L.sum = function() {
                        for (var e = 1, t = arguments, f = new L(t[0]); e < t.length;) f = f.plus(t[e++]);
                        return f
                    }, A = function() {
                        var e = "0123456789";

                        function t(e, t, f, n) {
                            for (var r, i, a = [0], o = 0, s = e.length; o < s;) {
                                for (i = a.length; i--; a[i] *= t);
                                for (a[0] += n.indexOf(e.charAt(o++)), r = 0; r < a.length; r++) a[r] > f - 1 && (null == a[r + 1] && (a[r + 1] = 0), a[r + 1] += a[r] / f | 0, a[r] %= f)
                            }
                            return a.reverse()
                        }
                        return function(f, n, r, i, a) {
                            var o, s, u, d, c, l, y, b, h = f.indexOf("."),
                                m = k,
                                T = C;
                            for (h >= 0 && (d = F, F = 0, f = f.replace(".", ""), l = (b = new L(n)).pow(f.length - h), F = d, b.c = t(v(p(l.c), l.e, "0"), 10, r, e), b.e = b.c.length), u = d = (y = t(f, n, r, a ? (o = N, e) : (o = e, N))).length; 0 == y[--d]; y.pop());
                            if (!y[0]) return o.charAt(0);
                            if (h < 0 ? --u : (l.c = y, l.e = u, l.s = i, y = (l = w(l, b, m, T, r)).c, c = l.r, u = l.e), h = y[s = u + m + 1], d = r / 2, c = c || s < 0 || null != y[s + 1], c = T < 4 ? (null != h || c) && (0 == T || T == (l.s < 0 ? 3 : 2)) : h > d || h == d && (4 == T || c || 6 == T && 1 & y[s - 1] || T == (l.s < 0 ? 8 : 7)), s < 1 || !y[0]) f = c ? v(o.charAt(1), -m, o.charAt(0)) : o.charAt(0);
                            else {
                                if (y.length = s, c)
                                    for (--r; ++y[--s] > r;) y[s] = 0, s || (++u, y = [1].concat(y));
                                for (d = y.length; !y[--d];);
                                for (h = 0, f = ""; h <= d; f += o.charAt(y[h++]));
                                f = v(f, u, o.charAt(0))
                            }
                            return f
                        }
                    }(), w = function() {
                        function e(e, t, f) {
                            var n, r, i, a, o = 0,
                                s = e.length,
                                u = t % 1e7,
                                d = t / 1e7 | 0;
                            for (e = e.slice(); s--;) n = d * (i = e[s] % 1e7) + (a = e[s] / 1e7 | 0) * u, o = ((r = u * i + n % 1e7 * 1e7 + o) / f | 0) + (n / 1e7 | 0) + d * a, e[s] = r % f;
                            return o && (e = [o].concat(e)), e
                        }

                        function t(e, t, f, n) {
                            var r, i;
                            if (f != n) i = f > n ? 1 : -1;
                            else
                                for (r = i = 0; r < f; r++)
                                    if (e[r] != t[r]) {
                                        i = e[r] > t[r] ? 1 : -1;
                                        break
                                    } return i
                        }

                        function f(e, t, f, n) {
                            for (var r = 0; f--;) e[f] -= r, r = e[f] < t[f] ? 1 : 0, e[f] = r * n + e[f] - t[f];
                            for (; !e[0] && e.length > 1; e.splice(0, 1));
                        }
                        return function(n, r, i, a, o) {
                            var u, d, c, p, y, b, h, m, v, T, g, w, A, I, E, _, k, C = n.s == r.s ? 1 : -1,
                                S = n.c,
                                O = r.c;
                            if (!S || !S[0] || !O || !O[0]) return new L(n.s && r.s && (S ? !O || S[0] != O[0] : O) ? S && 0 == S[0] || !O ? 0 * C : C / 0 : NaN);
                            for (v = (m = new L(C)).c = [], C = i + (d = n.e - r.e) + 1, o || (o = 1e14, d = l(n.e / 14) - l(r.e / 14), C = C / 14 | 0), c = 0; O[c] == (S[c] || 0); c++);
                            if (O[c] > (S[c] || 0) && d--, C < 0) v.push(1), p = !0;
                            else {
                                for (I = S.length, _ = O.length, c = 0, C += 2, (y = s(o / (O[0] + 1))) > 1 && (O = e(O, y, o), S = e(S, y, o), _ = O.length, I = S.length), A = _, g = (T = S.slice(0, _)).length; g < _; T[g++] = 0);
                                k = [0].concat(k = O.slice()), E = O[0], O[1] >= o / 2 && E++;
                                do {
                                    if (y = 0, (u = t(O, T, _, g)) < 0) {
                                        if (w = T[0], _ != g && (w = w * o + (T[1] || 0)), (y = s(w / E)) > 1)
                                            for (y >= o && (y = o - 1), h = (b = e(O, y, o)).length, g = T.length; 1 == t(b, T, h, g);) y--, f(b, _ < h ? k : O, h, o), h = b.length, u = 1;
                                        else 0 == y && (u = y = 1), h = (b = O.slice()).length;
                                        if (h < g && (b = [0].concat(b)), f(T, b, g, o), g = T.length, -1 == u)
                                            for (; 1 > t(O, T, _, g);) y++, f(T, _ < g ? k : O, g, o), g = T.length
                                    } else 0 === u && (y++, T = [0]);
                                    v[c++] = y, T[0] ? T[g++] = S[A] || 0 : (T = [S[A]], g = 1)
                                } while ((A++ < I || null != T[0]) && C--) p = null != T[0], v[0] || v.splice(0, 1)
                            }
                            if (1e14 == o) {
                                for (c = 1, C = v[0]; C >= 10; C /= 10, c++);
                                G(m, i + (m.e = c + 14 * d - 1) + 1, a, p)
                            } else m.e = d, m.r = +p;
                            return m
                        }
                    }(), n = /^(-?)0([xbo])(?=\w[\w.]*$)/i, r = /^([^.]+)\.$/, i = /^\.([^.]+)$/, T = /^-?(Infinity|NaN)$/, g = /^\s*\+(?=[\w.])|^\s+|\s+$/g, I = function(e, t, f, a) {
                        var o, s = f ? t : t.replace(g, "");
                        if (T.test(s)) e.s = isNaN(s) ? null : s < 0 ? -1 : 1;
                        else {
                            if (!f && (s = s.replace(n, function(e, t, f) {
                                    return o = "x" == (f = f.toLowerCase()) ? 16 : "b" == f ? 2 : 8, a && a != o ? e : t
                                }), a && (o = a, s = s.replace(r, "$1").replace(i, "0.$1")), t != s)) return new L(s, o);
                            if (L.DEBUG) throw Error(u + "Not a" + (a ? " base " + a : "") + " number: " + t);
                            e.s = null
                        }
                        e.c = e.e = null
                    }, E.absoluteValue = E.abs = function() {
                        var e = new L(this);
                        return e.s < 0 && (e.s = 1), e
                    }, E.comparedTo = function(e, t) {
                        return y(this, new L(e, t))
                    }, E.decimalPlaces = E.dp = function(e, t) {
                        var f, n, r;
                        if (null != e) return b(e, 0, 1e9), null == t ? t = C : b(t, 0, 8), G(new L(this), e + this.e + 1, t);
                        if (!(f = this.c)) return null;
                        if (n = ((r = f.length - 1) - l(this.e / 14)) * 14, r = f[r])
                            for (; r % 10 == 0; r /= 10, n--);
                        return n < 0 && (n = 0), n
                    }, E.dividedBy = E.div = function(e, t) {
                        return w(this, new L(e, t), k, C)
                    }, E.dividedToIntegerBy = E.idiv = function(e, t) {
                        return w(this, new L(e, t), 0, 1)
                    }, E.exponentiatedBy = E.pow = function(e, t) {
                        var f, n, r, i, a, d, c, l, p, y = this;
                        if ((e = new L(e)).c && !e.isInteger()) throw Error(u + "Exponent not an integer: " + j(e));
                        if (null != t && (t = new L(t)), d = e.e > 14, !y.c || !y.c[0] || 1 == y.c[0] && !y.e && 1 == y.c.length || !e.c || !e.c[0]) return p = new L(Math.pow(+j(y), d ? e.s * (2 - h(e)) : +j(e))), t ? p.mod(t) : p;
                        if (c = e.s < 0, t) {
                            if (t.c ? !t.c[0] : !t.s) return new L(NaN);
                            (n = !c && y.isInteger() && t.isInteger()) && (y = y.mod(t))
                        } else {
                            if (e.e > 9 && (y.e > 0 || y.e < -1 || (0 == y.e ? y.c[0] > 1 || d && y.c[1] >= 24e7 : y.c[0] < 8e13 || d && y.c[0] <= 9999975e7))) return i = y.s < 0 && h(e) ? -0 : 0, y.e > -1 && (i = 1 / i), new L(c ? 1 / i : i);
                            F && (i = o(F / 14 + 2))
                        }
                        for (d ? (f = new L(.5), c && (e.s = 1), l = h(e)) : l = (r = Math.abs(+j(e))) % 2, p = new L(_);;) {
                            if (l) {
                                if (!(p = p.times(y)).c) break;
                                i ? p.c.length > i && (p.c.length = i) : n && (p = p.mod(t))
                            }
                            if (r) {
                                if (0 === (r = s(r / 2))) break;
                                l = r % 2
                            } else if (G(e = e.times(f), e.e + 1, 1), e.e > 14) l = h(e);
                            else {
                                if (0 == (r = +j(e))) break;
                                l = r % 2
                            }
                            y = y.times(y), i ? y.c && y.c.length > i && (y.c.length = i) : n && (y = y.mod(t))
                        }
                        return n ? p : (c && (p = _.div(p)), t ? p.mod(t) : i ? G(p, F, C, a) : p)
                    }, E.integerValue = function(e) {
                        var t = new L(this);
                        return null == e ? e = C : b(e, 0, 8), G(t, t.e + 1, e)
                    }, E.isEqualTo = E.eq = function(e, t) {
                        return 0 === y(this, new L(e, t))
                    }, E.isFinite = function() {
                        return !!this.c
                    }, E.isGreaterThan = E.gt = function(e, t) {
                        return y(this, new L(e, t)) > 0
                    }, E.isGreaterThanOrEqualTo = E.gte = function(e, t) {
                        return 1 === (t = y(this, new L(e, t))) || 0 === t
                    }, E.isInteger = function() {
                        return !!this.c && l(this.e / 14) > this.c.length - 2
                    }, E.isLessThan = E.lt = function(e, t) {
                        return 0 > y(this, new L(e, t))
                    }, E.isLessThanOrEqualTo = E.lte = function(e, t) {
                        return -1 === (t = y(this, new L(e, t))) || 0 === t
                    }, E.isNaN = function() {
                        return !this.s
                    }, E.isNegative = function() {
                        return this.s < 0
                    }, E.isPositive = function() {
                        return this.s > 0
                    }, E.isZero = function() {
                        return !!this.c && 0 == this.c[0]
                    }, E.minus = function(e, t) {
                        var f, n, r, i, a = this.s;
                        if (t = (e = new L(e, t)).s, !a || !t) return new L(NaN);
                        if (a != t) return e.s = -t, this.plus(e);
                        var o = this.e / 14,
                            s = e.e / 14,
                            u = this.c,
                            d = e.c;
                        if (!o || !s) {
                            if (!u || !d) return u ? (e.s = -t, e) : new L(d ? this : NaN);
                            if (!u[0] || !d[0]) return d[0] ? (e.s = -t, e) : new L(u[0] ? this : 3 == C ? -0 : 0)
                        }
                        if (o = l(o), s = l(s), u = u.slice(), a = o - s) {
                            for ((i = a < 0) ? (a = -a, r = u) : (s = o, r = d), r.reverse(), t = a; t--; r.push(0));
                            r.reverse()
                        } else
                            for (n = (i = (a = u.length) < (t = d.length)) ? a : t, a = t = 0; t < n; t++)
                                if (u[t] != d[t]) {
                                    i = u[t] < d[t];
                                    break
                                } if (i && (r = u, u = d, d = r, e.s = -e.s), (t = (n = d.length) - (f = u.length)) > 0)
                            for (; t--; u[f++] = 0);
                        for (t = 1e14 - 1; n > a;) {
                            if (u[--n] < d[n]) {
                                for (f = n; f && !u[--f]; u[f] = t);
                                --u[f], u[n] += 1e14
                            }
                            u[n] -= d[n]
                        }
                        for (; 0 == u[0]; u.splice(0, 1), --s);
                        return u[0] ? V(e, u, s) : (e.s = 3 == C ? -1 : 1, e.c = [e.e = 0], e)
                    }, E.modulo = E.mod = function(e, t) {
                        var f, n;
                        return (e = new L(e, t), this.c && e.s && (!e.c || e.c[0])) ? e.c && (!this.c || this.c[0]) ? (9 == R ? (n = e.s, e.s = 1, f = w(this, e, 0, 3), e.s = n, f.s *= n) : f = w(this, e, 0, R), (e = this.minus(f.times(e))).c[0] || 1 != R || (e.s = this.s), e) : new L(this) : new L(NaN)
                    }, E.multipliedBy = E.times = function(e, t) {
                        var f, n, r, i, a, o, s, u, d, c, p, y, b, h = this.c,
                            m = (e = new L(e, t)).c;
                        if (!h || !m || !h[0] || !m[0]) return this.s && e.s && (!h || h[0] || m) && (!m || m[0] || h) ? (e.s *= this.s, h && m ? (e.c = [0], e.e = 0) : e.c = e.e = null) : e.c = e.e = e.s = null, e;
                        for (n = l(this.e / 14) + l(e.e / 14), e.s *= this.s, (s = h.length) < (c = m.length) && (b = h, h = m, m = b, r = s, s = c, c = r), r = s + c, b = []; r--; b.push(0));
                        for (r = c; --r >= 0;) {
                            for (f = 0, p = m[r] % 1e7, y = m[r] / 1e7 | 0, i = r + (a = s); i > r;) o = y * (u = h[--a] % 1e7) + (d = h[a] / 1e7 | 0) * p, f = ((u = p * u + o % 1e7 * 1e7 + b[i] + f) / 1e14 | 0) + (o / 1e7 | 0) + y * d, b[i--] = u % 1e14;
                            b[i] = f
                        }
                        return f ? ++n : b.splice(0, 1), V(e, b, n)
                    }, E.negated = function() {
                        var e = new L(this);
                        return e.s = -e.s || null, e
                    }, E.plus = function(e, t) {
                        var f, n = this.s;
                        if (t = (e = new L(e, t)).s, !n || !t) return new L(NaN);
                        if (n != t) return e.s = -t, this.minus(e);
                        var r = this.e / 14,
                            i = e.e / 14,
                            a = this.c,
                            o = e.c;
                        if (!r || !i) {
                            if (!a || !o) return new L(n / 0);
                            if (!a[0] || !o[0]) return o[0] ? e : new L(a[0] ? this : 0 * n)
                        }
                        if (r = l(r), i = l(i), a = a.slice(), n = r - i) {
                            for (n > 0 ? (i = r, f = o) : (n = -n, f = a), f.reverse(); n--; f.push(0));
                            f.reverse()
                        }
                        for ((n = a.length) - (t = o.length) < 0 && (f = o, o = a, a = f, t = n), n = 0; t;) n = (a[--t] = a[t] + o[t] + n) / 1e14 | 0, a[t] = 1e14 === a[t] ? 0 : a[t] % 1e14;
                        return n && (a = [n].concat(a), ++i), V(e, a, i)
                    }, E.precision = E.sd = function(e, t) {
                        var f, n, r;
                        if (null != e && !!e !== e) return b(e, 1, 1e9), null == t ? t = C : b(t, 0, 8), G(new L(this), e, t);
                        if (!(f = this.c)) return null;
                        if (n = 14 * (r = f.length - 1) + 1, r = f[r]) {
                            for (; r % 10 == 0; r /= 10, n--);
                            for (r = f[0]; r >= 10; r /= 10, n++);
                        }
                        return e && this.e + 1 > n && (n = this.e + 1), n
                    }, E.shiftedBy = function(e) {
                        return b(e, -9007199254740991, 9007199254740991), this.times("1e" + e)
                    }, E.squareRoot = E.sqrt = function() {
                        var e, t, f, n, r, i = this.c,
                            a = this.s,
                            o = this.e,
                            s = k + 4,
                            u = new L("0.5");
                        if (1 !== a || !i || !i[0]) return new L(!a || a < 0 && (!i || i[0]) ? NaN : i ? this : 1 / 0);
                        if (0 == (a = Math.sqrt(+j(this))) || a == 1 / 0 ? (((t = p(i)).length + o) % 2 == 0 && (t += "0"), a = Math.sqrt(+t), o = l((o + 1) / 2) - (o < 0 || o % 2), f = new L(t = a == 1 / 0 ? "5e" + o : (t = a.toExponential()).slice(0, t.indexOf("e") + 1) + o)) : f = new L(a + ""), f.c[0]) {
                            for ((a = (o = f.e) + s) < 3 && (a = 0);;)
                                if (r = f, f = u.times(r.plus(w(this, r, s, 1))), p(r.c).slice(0, a) === (t = p(f.c)).slice(0, a)) {
                                    if (f.e < o && --a, "9999" != (t = t.slice(a - 3, a + 1)) && (n || "4999" != t)) {
                                        +t && (+t.slice(1) || "5" != t.charAt(0)) || (G(f, f.e + k + 2, 1), e = !f.times(f).eq(this));
                                        break
                                    }
                                    if (!n && (G(r, r.e + k + 2, 0), r.times(r).eq(this))) {
                                        f = r;
                                        break
                                    }
                                    s += 4, a += 4, n = 1
                                }
                        }
                        return G(f, f.e + k + 1, C, e)
                    }, E.toExponential = function(e, t) {
                        return null != e && (b(e, 0, 1e9), e++), q(this, e, t, 1)
                    }, E.toFixed = function(e, t) {
                        return null != e && (b(e, 0, 1e9), e = e + this.e + 1), q(this, e, t)
                    }, E.toFormat = function(e, t, f) {
                        var n;
                        if (null == f) null != e && t && "object" == typeof t ? (f = t, t = null) : e && "object" == typeof e ? (f = e, e = t = null) : f = D;
                        else if ("object" != typeof f) throw Error(u + "Argument not an object: " + f);
                        if (n = this.toFixed(e, t), this.c) {
                            var r, i = n.split("."),
                                a = +f.groupSize,
                                o = +f.secondaryGroupSize,
                                s = f.groupSeparator || "",
                                d = i[0],
                                c = i[1],
                                l = this.s < 0,
                                p = l ? d.slice(1) : d,
                                y = p.length;
                            if (o && (r = a, a = o, o = r, y -= r), a > 0 && y > 0) {
                                for (r = y % a || a, d = p.substr(0, r); r < y; r += a) d += s + p.substr(r, a);
                                o > 0 && (d += s + p.slice(r)), l && (d = "-" + d)
                            }
                            n = c ? d + (f.decimalSeparator || "") + ((o = +f.fractionGroupSize) ? c.replace(RegExp("\\d{" + o + "}\\B", "g"), "$&" + (f.fractionGroupSeparator || "")) : c) : d
                        }
                        return (f.prefix || "") + n + (f.suffix || "")
                    }, E.toFraction = function(e) {
                        var t, f, n, r, i, a, o, s, d, l, y, b, h = this.c;
                        if (null != e && (!(o = new L(e)).isInteger() && (o.c || 1 !== o.s) || o.lt(_))) throw Error(u + "Argument " + (o.isInteger() ? "out of range: " : "not an integer: ") + j(o));
                        if (!h) return new L(this);
                        for (t = new L(_), d = f = new L(_), n = s = new L(_), b = p(h), i = t.e = b.length - this.e - 1, t.c[0] = c[(a = i % 14) < 0 ? 14 + a : a], e = !e || o.comparedTo(t) > 0 ? i > 0 ? t : d : o, a = M, M = 1 / 0, o = new L(b), s.c[0] = 0; l = w(o, t, 0, 1), 1 != (r = f.plus(l.times(n))).comparedTo(e);) f = n, n = r, d = s.plus(l.times(r = d)), s = r, t = o.minus(l.times(r = t)), o = r;
                        return r = w(e.minus(f), n, 0, 1), s = s.plus(r.times(d)), f = f.plus(r.times(n)), s.s = d.s = this.s, i *= 2, y = 1 > w(d, n, i, C).minus(this).abs().comparedTo(w(s, f, i, C).minus(this).abs()) ? [d, n] : [s, f], M = a, y
                    }, E.toNumber = function() {
                        return +j(this)
                    }, E.toPrecision = function(e, t) {
                        return null != e && b(e, 1, 1e9), q(this, e, t, 2)
                    }, E.toString = function(e) {
                        var t, f = this,
                            n = f.s,
                            r = f.e;
                        return null === r ? n ? (t = "Infinity", n < 0 && (t = "-" + t)) : t = "NaN" : (null == e ? t = r <= S || r >= O ? m(p(f.c), r) : v(p(f.c), r, "0") : 10 === e && B ? t = v(p((f = G(new L(f), k + r + 1, C)).c), f.e, "0") : (b(e, 2, N.length, "Base"), t = A(v(p(f.c), r, "0"), 10, e, n, !0)), n < 0 && f.c[0] && (t = "-" + t)), t
                    }, E.valueOf = E.toJSON = function() {
                        return j(this)
                    }, E._isBigNumber = !0, null != t && L.set(t), L
                }()).default = i.BigNumber = i, void 0 !== (n = (function() {
                    return i
                }).call(t, f, t, e)) && (e.exports = n)
            }(0)
        },
        57433: (e, t) => {
            "use strict";
            var f;

            function n(e, t, n) {
                if (!n || typeof n.value !== f.typeOfFunction) throw TypeError("Only methods can be decorated with @bind. <" + t + "> is not a method!");
                return {
                    configurable: f.boolTrue,
                    get: function() {
                        var e = n.value.bind(this);
                        return Object.defineProperty(this, t, {
                            value: e,
                            configurable: f.boolTrue,
                            writable: f.boolTrue
                        }), e
                    }
                }
            }
            Object.defineProperty(t, "__esModule", {
                    value: !0
                }),
                function(e) {
                    e.typeOfFunction = "function", e.boolTrue = !0
                }(f || (f = {})), t.bind = n, t.default = n
        },
        4622: (e, t, f) => {
            "use strict";

            function n(e) {
                return e && "object" == typeof e && "default" in e ? e.default : e
            }
            Object.defineProperty(t, "__esModule", {
                value: !0
            });
            var r, i = f(22158),
                a = n(f(67261)),
                o = f(90825),
                s = n(f(84861)),
                u = f(35841),
                d = f(1648),
                c = f(49264),
                l = f(22110),
                p = f(13079),
                y = f(9677),
                b = f(34534),
                h = f(58005),
                m = "0x0000000000000000000000000000000000000001",
                v = "0x0000000000000000000000000000000000000002",
                T = a.BigInt(0),
                g = a.BigInt(1),
                w = new i.Percent(T),
                A = new i.Percent(100, 100);

            function I(e) {
                return Object.keys(e).some(function(e) {
                    return "recipient" === e
                })
            }(r = t.ApprovalTypes || (t.ApprovalTypes = {}))[r.NOT_REQUIRED = 0] = "NOT_REQUIRED", r[r.MAX = 1] = "MAX", r[r.MAX_MINUS_ONE = 2] = "MAX_MINUS_ONE", r[r.ZERO_THEN_MAX = 3] = "ZERO_THEN_MAX", r[r.ZERO_THEN_MAX_MINUS_ONE = 4] = "ZERO_THEN_MAX_MINUS_ONE";
            var E = function() {
                function e() {}
                return e.encodeApproveMax = function(t) {
                    return e.INTERFACE.encodeFunctionData("approveMax", [t.address])
                }, e.encodeApproveMaxMinusOne = function(t) {
                    return e.INTERFACE.encodeFunctionData("approveMaxMinusOne", [t.address])
                }, e.encodeApproveZeroThenMax = function(t) {
                    return e.INTERFACE.encodeFunctionData("approveZeroThenMax", [t.address])
                }, e.encodeApproveZeroThenMaxMinusOne = function(t) {
                    return e.INTERFACE.encodeFunctionData("approveZeroThenMaxMinusOne", [t.address])
                }, e.encodeCallPositionManager = function(t) {
                    if (t.length > 0 || s(!1), 1 == t.length) return e.INTERFACE.encodeFunctionData("callPositionManager", t);
                    var f = d.NonfungiblePositionManager.INTERFACE.encodeFunctionData("multicall", [t]);
                    return e.INTERFACE.encodeFunctionData("callPositionManager", [f])
                }, e.encodeAddLiquidity = function(t, f, n, r) {
                    var i = t.mintAmountsWithSlippage(r),
                        o = i.amount0,
                        s = i.amount1;
                    return a.lessThan(f.amount0.quotient, o) && (o = f.amount0.quotient), a.lessThan(f.amount1.quotient, s) && (s = f.amount1.quotient), I(n) ? e.INTERFACE.encodeFunctionData("mint", [{
                        token0: t.pool.token0.address,
                        token1: t.pool.token1.address,
                        fee: t.pool.fee,
                        tickLower: t.tickLower,
                        tickUpper: t.tickUpper,
                        amount0Min: d.toHex(o),
                        amount1Min: d.toHex(s),
                        recipient: n.recipient
                    }]) : e.INTERFACE.encodeFunctionData("increaseLiquidity", [{
                        token0: t.pool.token0.address,
                        token1: t.pool.token1.address,
                        amount0Min: d.toHex(o),
                        amount1Min: d.toHex(s),
                        tokenId: d.toHex(n.tokenId)
                    }])
                }, e.encodeApprove = function(f, n) {
                    switch (n) {
                        case t.ApprovalTypes.MAX:
                            return e.encodeApproveMax(f.wrapped);
                        case t.ApprovalTypes.MAX_MINUS_ONE:
                            return e.encodeApproveMaxMinusOne(f.wrapped);
                        case t.ApprovalTypes.ZERO_THEN_MAX:
                            return e.encodeApproveZeroThenMax(f.wrapped);
                        case t.ApprovalTypes.ZERO_THEN_MAX_MINUS_ONE:
                            return e.encodeApproveZeroThenMaxMinusOne(f.wrapped);
                        default:
                            throw "Error: invalid ApprovalType"
                    }
                }, e
            }();
            E.INTERFACE = new o.Interface(u.abi);
            var _ = function() {
                function e() {}
                return e.encodeMulticall = function(t, f) {
                    if (void 0 === f) return d.Multicall.encodeMulticall(t);
                    if (Array.isArray(t) || (t = [t]), "string" == typeof f && f.startsWith("0x")) {
                        var n = function(e) {
                            if (!e.match(/^0x[0-9a-fA-F]{64}$/)) throw Error(e + " is not valid bytes32.");
                            return e.toLowerCase()
                        }(f);
                        return e.INTERFACE.encodeFunctionData("multicall(bytes32,bytes[])", [n, t])
                    }
                    var r = d.toHex(f);
                    return e.INTERFACE.encodeFunctionData("multicall(uint256,bytes[])", [r, t])
                }, e
            }();

            function k(e) {
                return d.toHex(e.multiply(1e4).quotient)
            }
            _.INTERFACE = new o.Interface(c.abi);
            var C = function() {
                function e() {}
                return e.encodeUnwrapWETH9 = function(t, f, n) {
                    if ("string" == typeof f) return d.Payments.encodeUnwrapWETH9(t, f, n);
                    if (n) {
                        var r = k(n.fee),
                            a = i.validateAndParseAddress(n.recipient);
                        return e.INTERFACE.encodeFunctionData("unwrapWETH9WithFee(uint256,uint256,address)", [d.toHex(t), r, a])
                    }
                    return e.INTERFACE.encodeFunctionData("unwrapWETH9(uint256)", [d.toHex(t)])
                }, e.encodeSweepToken = function(t, f, n, r) {
                    if ("string" == typeof n) return d.Payments.encodeSweepToken(t, f, n, r);
                    if (r) {
                        var a = k(r.fee),
                            o = i.validateAndParseAddress(r.recipient);
                        return e.INTERFACE.encodeFunctionData("sweepTokenWithFee(address,uint256,uint256,address)", [t.address, d.toHex(f), a, o])
                    }
                    return e.INTERFACE.encodeFunctionData("sweepToken(address,uint256)", [t.address, d.toHex(f)])
                }, e.encodePull = function(t, f) {
                    return e.INTERFACE.encodeFunctionData("pull", [t.address, d.toHex(f)])
                }, e.encodeWrapETH = function(t) {
                    return e.INTERFACE.encodeFunctionData("wrapETH", [d.toHex(t)])
                }, e
            }();

            function S() {
                S = function() {
                    return t
                };
                var e, t = {},
                    f = Object.prototype,
                    n = f.hasOwnProperty,
                    r = Object.defineProperty || function(e, t, f) {
                        e[t] = f.value
                    },
                    i = "function" == typeof Symbol ? Symbol : {},
                    a = i.iterator || "@@iterator",
                    o = i.asyncIterator || "@@asyncIterator",
                    s = i.toStringTag || "@@toStringTag";

                function u(e, t, f) {
                    return Object.defineProperty(e, t, {
                        value: f,
                        enumerable: !0,
                        configurable: !0,
                        writable: !0
                    }), e[t]
                }
                try {
                    u({}, "")
                } catch (e) {
                    u = function(e, t, f) {
                        return e[t] = f
                    }
                }

                function d(t, f, n, i) {
                    var a, o, s = Object.create((f && f.prototype instanceof h ? f : h).prototype);
                    return r(s, "_invoke", {
                        value: (a = new C(i || []), o = l, function(f, r) {
                            if (o === p) throw Error("Generator is already running");
                            if (o === y) {
                                if ("throw" === f) throw r;
                                return {
                                    value: e,
                                    done: !0
                                }
                            }
                            for (a.method = f, a.arg = r;;) {
                                var i = a.delegate;
                                if (i) {
                                    var s = function t(f, n) {
                                        var r = n.method,
                                            i = f.iterator[r];
                                        if (i === e) return n.delegate = null, "throw" === r && f.iterator.return && (n.method = "return", n.arg = e, t(f, n), "throw" === n.method) || "return" !== r && (n.method = "throw", n.arg = TypeError("The iterator does not provide a '" + r + "' method")), b;
                                        var a = c(i, f.iterator, n.arg);
                                        if ("throw" === a.type) return n.method = "throw", n.arg = a.arg, n.delegate = null, b;
                                        var o = a.arg;
                                        return o ? o.done ? (n[f.resultName] = o.value, n.next = f.nextLoc, "return" !== n.method && (n.method = "next", n.arg = e), n.delegate = null, b) : o : (n.method = "throw", n.arg = TypeError("iterator result is not an object"), n.delegate = null, b)
                                    }(i, a);
                                    if (s) {
                                        if (s === b) continue;
                                        return s
                                    }
                                }
                                if ("next" === a.method) a.sent = a._sent = a.arg;
                                else if ("throw" === a.method) {
                                    if (o === l) throw o = y, a.arg;
                                    a.dispatchException(a.arg)
                                } else "return" === a.method && a.abrupt("return", a.arg);
                                o = p;
                                var u = c(t, n, a);
                                if ("normal" === u.type) {
                                    if (o = a.done ? y : "suspendedYield", u.arg === b) continue;
                                    return {
                                        value: u.arg,
                                        done: a.done
                                    }
                                }
                                "throw" === u.type && (o = y, a.method = "throw", a.arg = u.arg)
                            }
                        })
                    }), s
                }

                function c(e, t, f) {
                    try {
                        return {
                            type: "normal",
                            arg: e.call(t, f)
                        }
                    } catch (e) {
                        return {
                            type: "throw",
                            arg: e
                        }
                    }
                }
                t.wrap = d;
                var l = "suspendedStart",
                    p = "executing",
                    y = "completed",
                    b = {};

                function h() {}

                function m() {}

                function v() {}
                var T = {};
                u(T, a, function() {
                    return this
                });
                var g = Object.getPrototypeOf,
                    w = g && g(g(O([])));
                w && w !== f && n.call(w, a) && (T = w);
                var A = v.prototype = h.prototype = Object.create(T);

                function I(e) {
                    ["next", "throw", "return"].forEach(function(t) {
                        u(e, t, function(e) {
                            return this._invoke(t, e)
                        })
                    })
                }

                function E(e, t) {
                    var f;
                    r(this, "_invoke", {
                        value: function(r, i) {
                            function a() {
                                return new t(function(f, a) {
                                    ! function f(r, i, a, o) {
                                        var s = c(e[r], e, i);
                                        if ("throw" !== s.type) {
                                            var u = s.arg,
                                                d = u.value;
                                            return d && "object" == typeof d && n.call(d, "__await") ? t.resolve(d.__await).then(function(e) {
                                                f("next", e, a, o)
                                            }, function(e) {
                                                f("throw", e, a, o)
                                            }) : t.resolve(d).then(function(e) {
                                                u.value = e, a(u)
                                            }, function(e) {
                                                return f("throw", e, a, o)
                                            })
                                        }
                                        o(s.arg)
                                    }(r, i, f, a)
                                })
                            }
                            return f = f ? f.then(a, a) : a()
                        }
                    })
                }

                function _(e) {
                    var t = {
                        tryLoc: e[0]
                    };
                    1 in e && (t.catchLoc = e[1]), 2 in e && (t.finallyLoc = e[2], t.afterLoc = e[3]), this.tryEntries.push(t)
                }

                function k(e) {
                    var t = e.completion || {};
                    t.type = "normal", delete t.arg, e.completion = t
                }

                function C(e) {
                    this.tryEntries = [{
                        tryLoc: "root"
                    }], e.forEach(_, this), this.reset(!0)
                }

                function O(t) {
                    if (t || "" === t) {
                        var f = t[a];
                        if (f) return f.call(t);
                        if ("function" == typeof t.next) return t;
                        if (!isNaN(t.length)) {
                            var r = -1,
                                i = function f() {
                                    for (; ++r < t.length;)
                                        if (n.call(t, r)) return f.value = t[r], f.done = !1, f;
                                    return f.value = e, f.done = !0, f
                                };
                            return i.next = i
                        }
                    }
                    throw TypeError(typeof t + " is not iterable")
                }
                return m.prototype = v, r(A, "constructor", {
                    value: v,
                    configurable: !0
                }), r(v, "constructor", {
                    value: m,
                    configurable: !0
                }), m.displayName = u(v, s, "GeneratorFunction"), t.isGeneratorFunction = function(e) {
                    var t = "function" == typeof e && e.constructor;
                    return !!t && (t === m || "GeneratorFunction" === (t.displayName || t.name))
                }, t.mark = function(e) {
                    return Object.setPrototypeOf ? Object.setPrototypeOf(e, v) : (e.__proto__ = v, u(e, s, "GeneratorFunction")), e.prototype = Object.create(A), e
                }, t.awrap = function(e) {
                    return {
                        __await: e
                    }
                }, I(E.prototype), u(E.prototype, o, function() {
                    return this
                }), t.AsyncIterator = E, t.async = function(e, f, n, r, i) {
                    void 0 === i && (i = Promise);
                    var a = new E(d(e, f, n, r), i);
                    return t.isGeneratorFunction(f) ? a : a.next().then(function(e) {
                        return e.done ? e.value : a.next()
                    })
                }, I(A), u(A, s, "Generator"), u(A, a, function() {
                    return this
                }), u(A, "toString", function() {
                    return "[object Generator]"
                }), t.keys = function(e) {
                    var t = Object(e),
                        f = [];
                    for (var n in t) f.push(n);
                    return f.reverse(),
                        function e() {
                            for (; f.length;) {
                                var n = f.pop();
                                if (n in t) return e.value = n, e.done = !1, e
                            }
                            return e.done = !0, e
                        }
                }, t.values = O, C.prototype = {
                    constructor: C,
                    reset: function(t) {
                        if (this.prev = 0, this.next = 0, this.sent = this._sent = e, this.done = !1, this.delegate = null, this.method = "next", this.arg = e, this.tryEntries.forEach(k), !t)
                            for (var f in this) "t" === f.charAt(0) && n.call(this, f) && !isNaN(+f.slice(1)) && (this[f] = e)
                    },
                    stop: function() {
                        this.done = !0;
                        var e = this.tryEntries[0].completion;
                        if ("throw" === e.type) throw e.arg;
                        return this.rval
                    },
                    dispatchException: function(t) {
                        if (this.done) throw t;
                        var f = this;

                        function r(n, r) {
                            return o.type = "throw", o.arg = t, f.next = n, r && (f.method = "next", f.arg = e), !!r
                        }
                        for (var i = this.tryEntries.length - 1; i >= 0; --i) {
                            var a = this.tryEntries[i],
                                o = a.completion;
                            if ("root" === a.tryLoc) return r("end");
                            if (a.tryLoc <= this.prev) {
                                var s = n.call(a, "catchLoc"),
                                    u = n.call(a, "finallyLoc");
                                if (s && u) {
                                    if (this.prev < a.catchLoc) return r(a.catchLoc, !0);
                                    if (this.prev < a.finallyLoc) return r(a.finallyLoc)
                                } else if (s) {
                                    if (this.prev < a.catchLoc) return r(a.catchLoc, !0)
                                } else {
                                    if (!u) throw Error("try statement without catch or finally");
                                    if (this.prev < a.finallyLoc) return r(a.finallyLoc)
                                }
                            }
                        }
                    },
                    abrupt: function(e, t) {
                        for (var f = this.tryEntries.length - 1; f >= 0; --f) {
                            var r = this.tryEntries[f];
                            if (r.tryLoc <= this.prev && n.call(r, "finallyLoc") && this.prev < r.finallyLoc) {
                                var i = r;
                                break
                            }
                        }
                        i && ("break" === e || "continue" === e) && i.tryLoc <= t && t <= i.finallyLoc && (i = null);
                        var a = i ? i.completion : {};
                        return a.type = e, a.arg = t, i ? (this.method = "next", this.next = i.finallyLoc, b) : this.complete(a)
                    },
                    complete: function(e, t) {
                        if ("throw" === e.type) throw e.arg;
                        return "break" === e.type || "continue" === e.type ? this.next = e.arg : "return" === e.type ? (this.rval = this.arg = e.arg, this.method = "return", this.next = "end") : "normal" === e.type && t && (this.next = t), b
                    },
                    finish: function(e) {
                        for (var t = this.tryEntries.length - 1; t >= 0; --t) {
                            var f = this.tryEntries[t];
                            if (f.finallyLoc === e) return this.complete(f.completion, f.afterLoc), k(f), b
                        }
                    },
                    catch: function(e) {
                        for (var t = this.tryEntries.length - 1; t >= 0; --t) {
                            var f = this.tryEntries[t];
                            if (f.tryLoc === e) {
                                var n = f.completion;
                                if ("throw" === n.type) {
                                    var r = n.arg;
                                    k(f)
                                }
                                return r
                            }
                        }
                        throw Error("illegal catch attempt")
                    },
                    delegateYield: function(t, f, n) {
                        return this.delegate = {
                            iterator: O(t),
                            resultName: f,
                            nextLoc: n
                        }, "next" === this.method && (this.arg = e), b
                    }
                }, t
            }

            function O(e, t, f, n, r, i, a) {
                try {
                    var o = e[i](a),
                        s = o.value
                } catch (e) {
                    return void f(e)
                }
                o.done ? t(s) : Promise.resolve(s).then(n, r)
            }

            function P(e) {
                return function() {
                    var t = this,
                        f = arguments;
                    return new Promise(function(n, r) {
                        var i = e.apply(t, f);

                        function a(e) {
                            O(i, n, r, a, o, "next", e)
                        }

                        function o(e) {
                            O(i, n, r, a, o, "throw", e)
                        }
                        a(void 0)
                    })
                }
            }

            function M(e, t) {
                for (var f = 0; f < t.length; f++) {
                    var n = t[f];
                    n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(e, function(e) {
                        var t = function(e, t) {
                            if ("object" != typeof e || !e) return e;
                            var f = e[Symbol.toPrimitive];
                            if (void 0 !== f) {
                                var n = f.call(e, "string");
                                if ("object" != typeof n) return n;
                                throw TypeError("@@toPrimitive must return a primitive value.")
                            }
                            return String(e)
                        }(e);
                        return "symbol" == typeof t ? t : String(t)
                    }(n.key), n)
                }
            }

            function x(e, t, f) {
                return t && M(e.prototype, t), f && M(e, f), Object.defineProperty(e, "prototype", {
                    writable: !1
                }), e
            }

            function R() {
                return (R = Object.assign ? Object.assign.bind() : function(e) {
                    for (var t = 1; t < arguments.length; t++) {
                        var f = arguments[t];
                        for (var n in f) Object.prototype.hasOwnProperty.call(f, n) && (e[n] = f[n])
                    }
                    return e
                }).apply(this, arguments)
            }

            function F(e, t) {
                e.prototype = Object.create(t.prototype), e.prototype.constructor = e, (Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(e, t) {
                    return e.__proto__ = t, e
                })(e, t)
            }

            function D(e, t) {
                (null == t || t > e.length) && (t = e.length);
                for (var f = 0, n = Array(t); f < t; f++) n[f] = e[f];
                return n
            }

            function N(e, t) {
                var f = "undefined" != typeof Symbol && e[Symbol.iterator] || e["@@iterator"];
                if (f) return (f = f.call(e)).next.bind(f);
                if (Array.isArray(e) || (f = function(e, t) {
                        if (e) {
                            if ("string" == typeof e) return D(e, void 0);
                            var f = Object.prototype.toString.call(e).slice(8, -1);
                            return "Object" === f && e.constructor && (f = e.constructor.name), "Map" === f || "Set" === f ? Array.from(e) : "Arguments" === f || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(f) ? D(e, void 0) : void 0
                        }
                    }(e)) || t && e && "number" == typeof e.length) {
                    f && (e = f);
                    var n = 0;
                    return function() {
                        return n >= e.length ? {
                            done: !0
                        } : {
                            done: !1,
                            value: e[n++]
                        }
                    }
                }
                throw TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
            }
            C.INTERFACE = new o.Interface(l.abi);
            var B = function() {
                function e(e, t, f) {
                    this._midPrice = null, e.length > 0 || s(!1);
                    var n = e[0].chainId;
                    e.every(function(e) {
                        return e.chainId === n
                    }) || s(!1);
                    var r = t.wrapped;
                    e[0].involvesToken(y.getFewTokenFromOriginalToken(r, n)) || s(!1), e[e.length - 1].involvesToken(y.getFewTokenFromOriginalToken(f.wrapped, n)) || s(!1);
                    for (var i, a = [y.getFewTokenFromOriginalToken(r, n)], o = N(e.entries()); !(i = o()).done;) {
                        var u = i.value,
                            d = u[1],
                            c = a[u[0]];
                        c.equals(d.token0) || c.equals(d.token1) || s(!1);
                        var l = c.equals(d.token0) ? d.token1 : d.token0;
                        a.push(l)
                    }
                    this.pools = e, this.path = a, this.input = t, this.output = f
                }
                return x(e, [{
                    key: "chainId",
                    get: function() {
                        return this.pools[0].chainId
                    }
                }, {
                    key: "midPrice",
                    get: function() {
                        if (null !== this._midPrice) return this._midPrice;
                        var e = this.pools[0].chainId,
                            t = this.pools.slice(1).reduce(function(e, t) {
                                var f = e.price;
                                return e.nextInput.equals(t.token0) ? {
                                    nextInput: t.token1,
                                    price: f.multiply(t.token0Price)
                                } : {
                                    nextInput: t.token0,
                                    price: f.multiply(t.token1Price)
                                }
                            }, this.pools[0].token0.equals(y.getFewTokenFromOriginalToken(this.input.wrapped, e)) ? {
                                nextInput: this.pools[0].token1,
                                price: this.pools[0].token0Price
                            } : {
                                nextInput: this.pools[0].token0,
                                price: this.pools[0].token1Price
                            }).price;
                        return this._midPrice = new i.Price(this.input, this.output, t.denominator, t.numerator)
                    }
                }]), e
            }();

            function L(e, t) {
                return e.inputAmount.currency.equals(t.inputAmount.currency) || s(!1), e.outputAmount.currency.equals(t.outputAmount.currency) || s(!1), e.outputAmount.equalTo(t.outputAmount) ? e.inputAmount.equalTo(t.inputAmount) ? e.swaps.reduce(function(e, t) {
                    return e + t.route.path.length
                }, 0) - t.swaps.reduce(function(e, t) {
                    return e + t.route.path.length
                }, 0) : e.inputAmount.lessThan(t.inputAmount) ? -1 : 1 : e.outputAmount.lessThan(t.outputAmount) ? 1 : -1
            }
            var q, U = function() {
                function e(e) {
                    for (var t, f = e.routes, n = e.tradeType, r = f.map(function(e) {
                            return e.route.pools.length
                        }).reduce(function(e, t) {
                            return e + t
                        }, 0), a = new Set, o = N(f); !(t = o()).done;)
                        for (var u, c = N(t.value.route.pools); !(u = c()).done;) {
                            var l = u.value;
                            l instanceof d.Pool ? a.add(d.Pool.getAddress(l.token0, l.token1, l.fee)) : l instanceof b.Pair ? a.add(b.Pair.getAddress(l.token0, l.token1)) : l instanceof y.Pair && a.add(y.Pair.getAddress(l.token0, l.token1))
                        }
                    r != a.size && s(!1), n !== i.TradeType.EXACT_INPUT && s(!1), this.swaps = f, this.tradeType = n
                }
                e.fromRoute = (t = P(S().mark(function t(f, n, r) {
                    var a, o, u, d, c;
                    return S().wrap(function(t) {
                        for (;;) switch (t.prev = t.next) {
                            case 0:
                                a = Array(f.path.length), r !== i.TradeType.EXACT_INPUT && s(!1), n.currency.equals(f.input) || s(!1), a[0] = n.wrapped, o = 0;
                            case 5:
                                if (!(o < f.path.length - 1)) {
                                    t.next = 15;
                                    break
                                }
                                return u = f.pools[o], t.next = 9, u.getOutputAmount(a[o]);
                            case 9:
                                a[o + 1] = t.sent[0];
                            case 12:
                                o++, t.next = 5;
                                break;
                            case 15:
                                return d = i.CurrencyAmount.fromFractionalAmount(f.input, n.numerator, n.denominator), c = i.CurrencyAmount.fromFractionalAmount(f.output, a[a.length - 1].numerator, a[a.length - 1].denominator), t.abrupt("return", new e({
                                    routes: [{
                                        inputAmount: d,
                                        outputAmount: c,
                                        route: f
                                    }],
                                    tradeType: r
                                }));
                            case 18:
                            case "end":
                                return t.stop()
                        }
                    }, t)
                })), function(e, f, n) {
                    return t.apply(this, arguments)
                }), e.fromRoutes = (f = P(S().mark(function t(f, n) {
                    var r, a, o, u, d, c, l, p, y, b, h;
                    return S().wrap(function(t) {
                        for (;;) switch (t.prev = t.next) {
                            case 0:
                                r = [], n !== i.TradeType.EXACT_INPUT && s(!1), a = N(f);
                            case 3:
                                if ((o = a()).done) {
                                    t.next = 24;
                                    break
                                }
                                d = (u = o.value).route, c = u.amount, l = Array(d.path.length), c.currency.equals(d.input) || s(!1), p = i.CurrencyAmount.fromFractionalAmount(d.input, c.numerator, c.denominator), l[0] = i.CurrencyAmount.fromFractionalAmount(d.input.wrapped, c.numerator, c.denominator), y = 0;
                            case 10:
                                if (!(y < d.path.length - 1)) {
                                    t.next = 20;
                                    break
                                }
                                return b = d.pools[y], t.next = 14, b.getOutputAmount(l[y]);
                            case 14:
                                l[y + 1] = t.sent[0];
                            case 17:
                                y++, t.next = 10;
                                break;
                            case 20:
                                h = i.CurrencyAmount.fromFractionalAmount(d.output, l[l.length - 1].numerator, l[l.length - 1].denominator), r.push({
                                    route: d,
                                    inputAmount: p,
                                    outputAmount: h
                                });
                            case 22:
                                t.next = 3;
                                break;
                            case 24:
                                return t.abrupt("return", new e({
                                    routes: r,
                                    tradeType: n
                                }));
                            case 25:
                            case "end":
                                return t.stop()
                        }
                    }, t)
                })), function(e, t) {
                    return f.apply(this, arguments)
                }), e.createUncheckedTrade = function(t) {
                    return new e(R({}, t, {
                        routes: [{
                            inputAmount: t.inputAmount,
                            outputAmount: t.outputAmount,
                            route: t.route
                        }]
                    }))
                }, e.createUncheckedTradeWithMultipleRoutes = function(t) {
                    return new e(t)
                };
                var t, f, n, r = e.prototype;
                return r.minimumAmountOut = function(e, t) {
                    void 0 === t && (t = this.outputAmount), e.lessThan(T) && s(!1);
                    var f = new i.Fraction(g).add(e).invert().multiply(t.quotient).quotient;
                    return i.CurrencyAmount.fromRawAmount(t.currency, f)
                }, r.maximumAmountIn = function(e, t) {
                    return void 0 === t && (t = this.inputAmount), e.lessThan(T) && s(!1), t
                }, r.worstExecutionPrice = function(e) {
                    return new i.Price(this.inputAmount.currency, this.outputAmount.currency, this.maximumAmountIn(e).quotient, this.minimumAmountOut(e).quotient)
                }, e.bestTradeExactIn = (n = P(S().mark(function t(f, n, r, a, o, u, d) {
                    var c, l, p, b, h, m, v, g, w, A, I;
                    return S().wrap(function(t) {
                        for (;;) switch (t.prev = t.next) {
                            case 0:
                                p = void 0 === (l = (c = void 0 === a ? {} : a).maxNumResults) ? 3 : l, h = void 0 === (b = c.maxHops) ? 3 : b, void 0 === o && (o = []), void 0 === u && (u = n), void 0 === d && (d = []), f.length > 0 || s(!1), h > 0 || s(!1), n === u || o.length > 0 || s(!1), m = u.wrapped, v = r.wrapped, g = 0;
                            case 10:
                                if (!(g < f.length)) {
                                    t.next = 49;
                                    break
                                }
                                if ((w = f[g]).token0.equals(m.currency) || w.token1.equals(m.currency)) {
                                    t.next = 14;
                                    break
                                }
                                return t.abrupt("continue", 46);
                            case 14:
                                if (!(w instanceof y.Pair) || !w.reserve0.equalTo(T) && !w.reserve1.equalTo(T)) {
                                    t.next = 17;
                                    break
                                }
                                return t.abrupt("continue", 46);
                            case 17:
                                return A = void 0, t.prev = 18, t.next = 22, w.getOutputAmount(m);
                            case 22:
                                A = t.sent[0], t.next = 31;
                                break;
                            case 26:
                                if (t.prev = 26, t.t0 = t.catch(18), !t.t0.isInsufficientInputAmountError) {
                                    t.next = 30;
                                    break
                                }
                                return t.abrupt("continue", 46);
                            case 30:
                                throw t.t0;
                            case 31:
                                if (!A.currency.isToken || !A.currency.equals(v)) {
                                    t.next = 42;
                                    break
                                }
                                return t.t1 = i.sortedInsert, t.t2 = d, t.next = 36, e.fromRoute(new B([].concat(o, [w]), n.currency, r), n, i.TradeType.EXACT_INPUT);
                            case 36:
                                t.t3 = t.sent, t.t4 = p, t.t5 = L, (0, t.t1)(t.t2, t.t3, t.t4, t.t5), t.next = 46;
                                break;
                            case 42:
                                if (!(h > 1 && f.length > 1)) {
                                    t.next = 46;
                                    break
                                }
                                return I = f.slice(0, g).concat(f.slice(g + 1, f.length)), t.next = 46, e.bestTradeExactIn(I, n, r, {
                                    maxNumResults: p,
                                    maxHops: h - 1
                                }, [].concat(o, [w]), A, d);
                            case 46:
                                g++, t.next = 10;
                                break;
                            case 49:
                                return t.abrupt("return", d);
                            case 50:
                            case "end":
                                return t.stop()
                        }
                    }, t, null, [
                        [18, 26]
                    ])
                })), function(e, t, f, r, i, a, o) {
                    return n.apply(this, arguments)
                }), x(e, [{
                    key: "route",
                    get: function() {
                        return 1 != this.swaps.length && s(!1), this.swaps[0].route
                    }
                }, {
                    key: "inputAmount",
                    get: function() {
                        if (this._inputAmount) return this._inputAmount;
                        var e = this.swaps[0].inputAmount.currency,
                            t = this.swaps.map(function(e) {
                                return e.inputAmount
                            }).reduce(function(e, t) {
                                return e.add(t)
                            }, i.CurrencyAmount.fromRawAmount(e, 0));
                        return this._inputAmount = t, this._inputAmount
                    }
                }, {
                    key: "outputAmount",
                    get: function() {
                        if (this._outputAmount) return this._outputAmount;
                        var e = this.swaps[0].outputAmount.currency,
                            t = this.swaps.map(function(e) {
                                return e.outputAmount
                            }).reduce(function(e, t) {
                                return e.add(t)
                            }, i.CurrencyAmount.fromRawAmount(e, 0));
                        return this._outputAmount = t, this._outputAmount
                    }
                }, {
                    key: "executionPrice",
                    get: function() {
                        var e;
                        return null != (e = this._executionPrice) ? e : this._executionPrice = new i.Price(this.inputAmount.currency, this.outputAmount.currency, this.inputAmount.quotient, this.outputAmount.quotient)
                    }
                }, {
                    key: "priceImpact",
                    get: function() {
                        if (this._priceImpact) return this._priceImpact;
                        for (var e, t = i.CurrencyAmount.fromRawAmount(this.outputAmount.currency, 0), f = N(this.swaps); !(e = f()).done;) {
                            var n = e.value;
                            t = t.add(n.route.midPrice.quote(n.inputAmount))
                        }
                        var r = t.subtract(this.outputAmount).divide(t);
                        return this._priceImpact = new i.Percent(r.numerator, r.denominator), this._priceImpact
                    }
                }]), e
            }();
            (q = t.Protocol || (t.Protocol = {})).V2 = "V2", q.V3 = "V3", q.RING = "RING", q.FEW = "FEW", q.MIXED = "MIXED";
            var V = function(e) {
                    function f(f) {
                        var n;
                        return (n = e.call(this, f.pairs, f.input, f.output) || this).protocol = t.Protocol.V2, n.pools = n.pairs, n
                    }
                    return F(f, e), f
                }(y.Route),
                G = function(e) {
                    function f(f) {
                        var n;
                        return (n = e.call(this, f.pairs, f.input, f.output) || this).protocol = t.Protocol.RING, n.pools = n.pairs, n
                    }
                    return F(f, e), f
                }(b.Route),
                j = function(e) {
                    function f(f) {
                        var n;
                        return (n = e.call(this, f.pools, f.input, f.output) || this).protocol = t.Protocol.V3, n.path = f.tokenPath, n
                    }
                    return F(f, e), f
                }(d.Route),
                $ = function(e) {
                    function f(f) {
                        var n;
                        return (n = e.call(this, f.pools, f.input, f.output) || this).protocol = t.Protocol.MIXED, n
                    }
                    return F(f, e), f
                }(B),
                H = function() {
                    function e(e) {
                        var t = e.v2Routes,
                            f = e.v3Routes,
                            n = e.ringRoutes,
                            r = e.tradeType,
                            i = e.mixedRoutes;
                        this.swaps = [], this.routes = [];
                        for (var a, o = N(t); !(a = o()).done;) {
                            var u = a.value,
                                c = u.inputAmount,
                                l = u.outputAmount,
                                p = new V(u.routev2);
                            this.routes.push(p), this.swaps.push({
                                route: p,
                                inputAmount: c,
                                outputAmount: l
                            })
                        }
                        for (var h, m = N(f); !(h = m()).done;) {
                            var v = h.value,
                                T = v.inputAmount,
                                g = v.outputAmount,
                                w = new j(v.routev3);
                            this.routes.push(w), this.swaps.push({
                                route: w,
                                inputAmount: T,
                                outputAmount: g
                            })
                        }
                        for (var A, I = N(n); !(A = I()).done;) {
                            var E = A.value,
                                _ = E.inputAmount,
                                k = E.outputAmount,
                                C = new G(E.routeRing);
                            this.routes.push(C), this.swaps.push({
                                route: C,
                                inputAmount: _,
                                outputAmount: k
                            })
                        }
                        if (i)
                            for (var S, O = N(i); !(S = O()).done;) {
                                var P = S.value,
                                    M = P.inputAmount,
                                    x = P.outputAmount,
                                    R = new $(P.mixedRoute);
                                this.routes.push(R), this.swaps.push({
                                    route: R,
                                    inputAmount: M,
                                    outputAmount: x
                                })
                            }
                        if (0 === this.swaps.length) throw Error("No routes provided when calling Trade constructor");
                        this.tradeType = r;
                        var F = this.swaps.map(function(e) {
                            return e.route.pools.length
                        }).reduce(function(e, t) {
                            return e + t
                        }, 0);
                        console.log(F, "numPools");
                        for (var D, B = new Set, L = N(this.swaps); !(D = L()).done;)
                            for (var q, U = N(D.value.route.pools); !(q = U()).done;) {
                                var H = q.value;
                                if (H instanceof d.Pool) B.add(d.Pool.getAddress(H.token0, H.token1, H.fee));
                                else if (H instanceof y.Pair) B.add(y.Pair.getAddress(H.token0, H.token1));
                                else {
                                    if (!(H instanceof b.Pair)) throw Error("Unexpected pool type in route when constructing trade object");
                                    B.add(b.Pair.getAddress(H.token0, H.token1))
                                }
                            }
                        F != B.size && s(!1), console.log("end pools")
                    }
                    var t, f, n = e.prototype;
                    return n.minimumAmountOut = function(e, t) {
                        if (void 0 === t && (t = this.outputAmount), e.lessThan(T) && s(!1), this.tradeType === i.TradeType.EXACT_OUTPUT) return t;
                        var f = new i.Fraction(g).add(e).invert().multiply(t.quotient).quotient;
                        return i.CurrencyAmount.fromRawAmount(t.currency, f)
                    }, n.maximumAmountIn = function(e, t) {
                        if (void 0 === t && (t = this.inputAmount), e.lessThan(T) && s(!1), this.tradeType === i.TradeType.EXACT_INPUT) return t;
                        var f = new i.Fraction(g).add(e).multiply(t.quotient).quotient;
                        return i.CurrencyAmount.fromRawAmount(t.currency, f)
                    }, n.worstExecutionPrice = function(e) {
                        return new i.Price(this.inputAmount.currency, this.outputAmount.currency, this.maximumAmountIn(e).quotient, this.minimumAmountOut(e).quotient)
                    }, e.fromRoutes = (t = P(S().mark(function t(f, n, r, i, a) {
                        var o, s, u, c, l, p, h, m, v, T, g, w, A, I, E, _, k, C, O, P, M, x, R, F, D, B;
                        return S().wrap(function(t) {
                            for (;;) switch (t.prev = t.next) {
                                case 0:
                                    for (o = [], s = [], u = [], c = [], l = N(f); !(p = l()).done;) v = new y.Trade(m = (h = p.value).routev2, h.amount, i), o.push({
                                        routev2: m,
                                        inputAmount: v.inputAmount,
                                        outputAmount: v.outputAmount
                                    });
                                    for (T = N(n); !(g = T()).done;) I = new b.Trade(A = (w = g.value).routeRing, w.amount, i), s.push({
                                        routeRing: A,
                                        inputAmount: I.inputAmount,
                                        outputAmount: I.outputAmount
                                    });
                                    E = N(r);
                                case 7:
                                    if ((_ = E()).done) {
                                        t.next = 16;
                                        break
                                    }
                                    return C = (k = _.value).routev3, O = k.amount, t.next = 11, d.Trade.fromRoute(C, O, i);
                                case 11:
                                    u.push({
                                        routev3: C,
                                        inputAmount: (P = t.sent).inputAmount,
                                        outputAmount: P.outputAmount
                                    });
                                case 14:
                                    t.next = 7;
                                    break;
                                case 16:
                                    if (!a) {
                                        t.next = 27;
                                        break
                                    }
                                    M = N(a);
                                case 18:
                                    if ((x = M()).done) {
                                        t.next = 27;
                                        break
                                    }
                                    return F = (R = x.value).mixedRoute, D = R.amount, t.next = 22, U.fromRoute(F, D, i);
                                case 22:
                                    c.push({
                                        mixedRoute: F,
                                        inputAmount: (B = t.sent).inputAmount,
                                        outputAmount: B.outputAmount
                                    });
                                case 25:
                                    t.next = 18;
                                    break;
                                case 27:
                                    return t.abrupt("return", new e({
                                        v2Routes: o,
                                        v3Routes: u,
                                        ringRoutes: s,
                                        mixedRoutes: c,
                                        tradeType: i
                                    }));
                                case 28:
                                case "end":
                                    return t.stop()
                            }
                        }, t)
                    })), function(e, f, n, r, i) {
                        return t.apply(this, arguments)
                    }), e.fromRoute = (f = P(S().mark(function t(f, n, r) {
                        var i, a, o, s, u, c, l, p;
                        return S().wrap(function(t) {
                            for (;;) switch (t.prev = t.next) {
                                case 0:
                                    if (i = [], a = [], o = [], s = [], !(f instanceof y.Route)) {
                                        t.next = 10;
                                        break
                                    }
                                    u = new y.Trade(f, n, r), i = [{
                                        routev2: f,
                                        inputAmount: u.inputAmount,
                                        outputAmount: u.outputAmount
                                    }], t.next = 33;
                                    break;
                                case 10:
                                    if (!(f instanceof b.Route)) {
                                        t.next = 16;
                                        break
                                    }
                                    c = new b.Trade(f, n, r), a = [{
                                        routeRing: f,
                                        inputAmount: c.inputAmount,
                                        outputAmount: c.outputAmount
                                    }], t.next = 33;
                                    break;
                                case 16:
                                    if (!(f instanceof d.Route)) {
                                        t.next = 24;
                                        break
                                    }
                                    return t.next = 19, d.Trade.fromRoute(f, n, r);
                                case 19:
                                    o = [{
                                        routev3: f,
                                        inputAmount: (l = t.sent).inputAmount,
                                        outputAmount: l.outputAmount
                                    }], t.next = 33;
                                    break;
                                case 24:
                                    if (!(f instanceof B)) {
                                        t.next = 32;
                                        break
                                    }
                                    return t.next = 27, U.fromRoute(f, n, r);
                                case 27:
                                    s = [{
                                        mixedRoute: f,
                                        inputAmount: (p = t.sent).inputAmount,
                                        outputAmount: p.outputAmount
                                    }], t.next = 33;
                                    break;
                                case 32:
                                    throw Error("Invalid route type");
                                case 33:
                                    return t.abrupt("return", new e({
                                        v2Routes: i,
                                        ringRoutes: a,
                                        v3Routes: o,
                                        mixedRoutes: s,
                                        tradeType: r
                                    }));
                                case 34:
                                case "end":
                                    return t.stop()
                            }
                        }, t)
                    })), function(e, t, n) {
                        return f.apply(this, arguments)
                    }), x(e, [{
                        key: "inputAmount",
                        get: function() {
                            if (this._inputAmount) return this._inputAmount;
                            var e = this.swaps[0].inputAmount.currency,
                                t = this.swaps.map(function(e) {
                                    return e.inputAmount
                                }).reduce(function(e, t) {
                                    return e.add(t)
                                }, i.CurrencyAmount.fromRawAmount(e, 0));
                            return this._inputAmount = t, this._inputAmount
                        }
                    }, {
                        key: "outputAmount",
                        get: function() {
                            if (this._outputAmount) return this._outputAmount;
                            var e = this.swaps[0].outputAmount.currency,
                                t = this.swaps.map(function(e) {
                                    return e.outputAmount
                                }).reduce(function(e, t) {
                                    return e.add(t)
                                }, i.CurrencyAmount.fromRawAmount(e, 0));
                            return this._outputAmount = t, this._outputAmount
                        }
                    }, {
                        key: "executionPrice",
                        get: function() {
                            var e;
                            return null != (e = this._executionPrice) ? e : this._executionPrice = new i.Price(this.inputAmount.currency, this.outputAmount.currency, this.inputAmount.quotient, this.outputAmount.quotient)
                        }
                    }, {
                        key: "inputTax",
                        get: function() {
                            var e = this.inputAmount.currency;
                            return e.isNative || !e.wrapped.sellFeeBps ? w : new i.Percent(e.wrapped.sellFeeBps.toNumber(), 1e4)
                        }
                    }, {
                        key: "outputTax",
                        get: function() {
                            var e = this.outputAmount.currency;
                            return e.isNative || !e.wrapped.buyFeeBps ? w : new i.Percent(e.wrapped.buyFeeBps.toNumber(), 1e4)
                        }
                    }, {
                        key: "priceImpact",
                        get: function() {
                            if (this._priceImpact) return this._priceImpact;
                            if (this.outputTax.equalTo(A)) return w;
                            for (var e, t = i.CurrencyAmount.fromRawAmount(this.outputAmount.currency, 0), f = N(this.swaps); !(e = f()).done;) {
                                var n = e.value,
                                    r = n.route.midPrice,
                                    a = n.inputAmount.multiply(new i.Fraction(g).subtract(this.inputTax));
                                t = t.add(r.quote(a))
                            }
                            if (t.equalTo(T)) return w;
                            var o = this.outputAmount.divide(new i.Fraction(g).subtract(this.outputTax)),
                                s = t.subtract(o).divide(t);
                            return this._priceImpact = new i.Percent(s.numerator, s.denominator), this._priceImpact
                        }
                    }]), e
                }();

            function W(e) {
                var t = e.pools.reduce(function(e, t, f) {
                    var n = e.inputToken,
                        r = e.path,
                        i = e.types,
                        a = t.token0.equals(n) ? t.token1 : t.token0;
                    return 0 === f ? {
                        inputToken: a,
                        types: ["address", "uint24", "address"],
                        path: [n.address, t instanceof d.Pool ? t.fee : t instanceof b.Pair ? 4194304 : 8388608, a.address]
                    } : {
                        inputToken: a,
                        types: [].concat(i, ["uint24", "address"]),
                        path: [].concat(r, [t instanceof d.Pool ? t.fee : t instanceof b.Pair ? 4194304 : 8388608, a.address])
                    }
                }, {
                    inputToken: e.input.wrapped,
                    path: [],
                    types: []
                });
                return h.pack(t.types, t.path)
            }
            var Q = function(e) {
                    for (var t, f, n = [], r = 0, i = 0; i < e.pools.length;) f = e.pools[i], ((t = e.pools[r]) instanceof d.Pool && !(f instanceof d.Pool) || t instanceof y.Pair && !(f instanceof y.Pair) || t instanceof b.Pair && !(f instanceof b.Pair)) && (n.push(e.pools.slice(r, i)), r = i), ++i === e.pools.length && n.push(e.pools.slice(r, i));
                    return n
                },
                X = function(e, t) {
                    return e.reduce(function(e, t) {
                        var f = e.inputToken;
                        if (!t.involvesToken(f)) throw Error("PATH");
                        return {
                            inputToken: t.token0.equals(f) ? t.token1 : t.token0
                        }
                    }, {
                        inputToken: t
                    }).inputToken
                },
                z = a.BigInt(0),
                K = new i.Percent(a.BigInt(50), a.BigInt(100)),
                Y = function() {
                    function e() {}
                    return e.encodeV2Swap = function(t, f, n, r) {
                        var a = d.toHex(t.maximumAmountIn(f.slippageTolerance).quotient),
                            o = d.toHex(t.minimumAmountOut(f.slippageTolerance).quotient),
                            s = t.route.path.map(function(e) {
                                return e.address
                            }),
                            u = n ? v : void 0 === f.recipient ? m : i.validateAndParseAddress(f.recipient);
                        return t.tradeType === i.TradeType.EXACT_INPUT ? e.INTERFACE.encodeFunctionData("swapExactTokensForTokens", [a, r ? 0 : o, s, u]) : e.INTERFACE.encodeFunctionData("swapTokensForExactTokens", [o, a, s, u])
                    }, e.encodeRingSwap = function(t, f, n, r) {
                        var a = d.toHex(t.maximumAmountIn(f.slippageTolerance).quotient),
                            o = d.toHex(t.minimumAmountOut(f.slippageTolerance).quotient),
                            s = t.route.path.map(function(e) {
                                return e.address
                            }),
                            u = n ? v : void 0 === f.recipient ? m : i.validateAndParseAddress(f.recipient);
                        return t.tradeType === i.TradeType.EXACT_INPUT ? e.INTERFACE.encodeFunctionData("swapExactTokensForTokens", [a, r ? 0 : o, s, u]) : e.INTERFACE.encodeFunctionData("swapTokensForExactTokens", [o, a, s, u])
                    }, e.encodeV3Swap = function(t, f, n, r) {
                        for (var a, o = [], s = N(t.swaps); !(a = s()).done;) {
                            var u = a.value,
                                c = u.route,
                                l = u.outputAmount,
                                p = d.toHex(t.maximumAmountIn(f.slippageTolerance, u.inputAmount).quotient),
                                y = d.toHex(t.minimumAmountOut(f.slippageTolerance, l).quotient),
                                b = 1 === c.pools.length,
                                h = n ? v : void 0 === f.recipient ? m : i.validateAndParseAddress(f.recipient);
                            if (b) o.push(t.tradeType === i.TradeType.EXACT_INPUT ? e.INTERFACE.encodeFunctionData("exactInputSingle", [{
                                tokenIn: c.tokenPath[0].address,
                                tokenOut: c.tokenPath[1].address,
                                fee: c.pools[0].fee,
                                recipient: h,
                                amountIn: p,
                                amountOutMinimum: r ? 0 : y,
                                sqrtPriceLimitX96: 0
                            }]) : e.INTERFACE.encodeFunctionData("exactOutputSingle", [{
                                tokenIn: c.tokenPath[0].address,
                                tokenOut: c.tokenPath[1].address,
                                fee: c.pools[0].fee,
                                recipient: h,
                                amountOut: y,
                                amountInMaximum: p,
                                sqrtPriceLimitX96: 0
                            }]));
                            else {
                                var T = d.encodeRouteToPath(c, t.tradeType === i.TradeType.EXACT_OUTPUT);
                                o.push(t.tradeType === i.TradeType.EXACT_INPUT ? e.INTERFACE.encodeFunctionData("exactInput", [{
                                    path: T,
                                    recipient: h,
                                    amountIn: p,
                                    amountOutMinimum: r ? 0 : y
                                }]) : e.INTERFACE.encodeFunctionData("exactOutput", [{
                                    path: T,
                                    recipient: h,
                                    amountOut: y,
                                    amountInMaximum: p
                                }]))
                            }
                        }
                        return o
                    }, e.encodeMixedRouteSwap = function(t, f, n, r) {
                        var a = [];
                        t.tradeType !== i.TradeType.EXACT_INPUT && s(!1);
                        for (var o, u = N(t.swaps); !(o = u()).done;)(function() {
                            var s = o.value,
                                u = s.route,
                                c = s.outputAmount,
                                l = d.toHex(t.maximumAmountIn(f.slippageTolerance, s.inputAmount).quotient),
                                p = d.toHex(t.minimumAmountOut(f.slippageTolerance, c).quotient),
                                y = 1 === u.pools.length,
                                b = n ? v : void 0 === f.recipient ? m : i.validateAndParseAddress(f.recipient),
                                h = function(e) {
                                    return e.pools.every(function(e) {
                                        return e instanceof d.Pool
                                    })
                                };
                            if (y) {
                                if (h(u)) a.push(e.INTERFACE.encodeFunctionData("exactInputSingle", [{
                                    tokenIn: u.path[0].address,
                                    tokenOut: u.path[1].address,
                                    fee: u.pools[0].fee,
                                    recipient: b,
                                    amountIn: l,
                                    amountOutMinimum: r ? 0 : p,
                                    sqrtPriceLimitX96: 0
                                }]));
                                else {
                                    var T = u.path.map(function(e) {
                                        return e.address
                                    });
                                    a.push(e.INTERFACE.encodeFunctionData("swapExactTokensForTokens", [l, r ? 0 : p, T, b]))
                                }
                            } else
                                for (var g, w = Q(u), A = function(e) {
                                        return e === w.length - 1
                                    }, I = u.input.wrapped, E = 0; E < w.length; E++) {
                                    var _ = w[E];
                                    g = X(_, I);
                                    var k = new $(new B([].concat(_), _[0].token0.equals(I) ? _[0].token0 : _[0].token1, g));
                                    if (I = g, h(k)) {
                                        var C = {
                                            path: W(k),
                                            recipient: A(E) ? b : v,
                                            amountIn: 0 == E ? l : 0,
                                            amountOutMinimum: A(E) ? p : 0
                                        };
                                        a.push(e.INTERFACE.encodeFunctionData("exactInput", [C]))
                                    } else {
                                        var S = [0 == E ? l : 0, A(E) ? p : 0, k.path.map(function(e) {
                                            return e.address
                                        }), A(E) ? b : v];
                                        a.push(e.INTERFACE.encodeFunctionData("swapExactTokensForTokens", S))
                                    }
                                }
                        })();
                        return a
                    }, e.encodeSwaps = function(f, n, r) {
                        if (f instanceof H) {
                            f.swaps.every(function(e) {
                                return e.route.protocol == t.Protocol.V3 || e.route.protocol == t.Protocol.V2 || e.route.protocol == t.Protocol.RING || e.route.protocol == t.Protocol.MIXED
                            }) || s(!1);
                            for (var a, o = [], u = N(f.swaps); !(a = u()).done;) {
                                var c = a.value,
                                    l = c.route,
                                    p = c.inputAmount,
                                    h = c.outputAmount;
                                if (l.protocol == t.Protocol.V2) o.push(new y.Trade(l, f.tradeType == i.TradeType.EXACT_INPUT ? p : h, f.tradeType));
                                else if (l.protocol == t.Protocol.RING) o.push(new b.Trade(l, f.tradeType == i.TradeType.EXACT_INPUT ? p : h, f.tradeType));
                                else if (l.protocol == t.Protocol.V3) o.push(d.Trade.createUncheckedTrade({
                                    route: l,
                                    inputAmount: p,
                                    outputAmount: h,
                                    tradeType: f.tradeType
                                }));
                                else {
                                    if (l.protocol != t.Protocol.MIXED) throw Error("UNSUPPORTED_TRADE_PROTOCOL");
                                    o.push(U.createUncheckedTrade({
                                        route: l,
                                        inputAmount: p,
                                        outputAmount: h,
                                        tradeType: f.tradeType
                                    }))
                                }
                            }
                            f = o
                        }
                        Array.isArray(f) || (f = [f]);
                        var m = f.reduce(function(e, t) {
                                return e + (t instanceof d.Trade || t instanceof U ? t.swaps.length : 1)
                            }, 0),
                            v = f[0];
                        f.every(function(e) {
                            return e.inputAmount.currency.equals(v.inputAmount.currency)
                        }) || s(!1), f.every(function(e) {
                            return e.outputAmount.currency.equals(v.outputAmount.currency)
                        }) || s(!1), f.every(function(e) {
                            return e.tradeType === v.tradeType
                        }) || s(!1);
                        var T = [],
                            g = v.inputAmount.currency.isNative,
                            w = v.outputAmount.currency.isNative,
                            A = v.tradeType === i.TradeType.EXACT_INPUT && m > 2,
                            I = w || !!n.fee || !!r || A;
                        n.inputTokenPermit && (v.inputAmount.currency.isToken || s(!1), T.push(d.SelfPermit.encodePermit(v.inputAmount.currency, n.inputTokenPermit)));
                        for (var E, _ = N(f); !(E = _()).done;) {
                            var k = E.value;
                            if (k instanceof y.Trade) T.push(e.encodeV2Swap(k, n, I, A));
                            else if (k instanceof b.Trade) T.push(e.encodeRingSwap(k, n, I, A));
                            else if (k instanceof d.Trade)
                                for (var C, S = N(e.encodeV3Swap(k, n, I, A)); !(C = S()).done;) T.push(C.value);
                            else {
                                if (!(k instanceof U)) throw Error("Unsupported trade object");
                                for (var O, P = N(e.encodeMixedRouteSwap(k, n, I, A)); !(O = P()).done;) T.push(O.value)
                            }
                        }
                        var M = i.CurrencyAmount.fromRawAmount(v.inputAmount.currency, 0),
                            x = i.CurrencyAmount.fromRawAmount(v.outputAmount.currency, 0),
                            R = f.reduce(function(e, t) {
                                return e.add(t.minimumAmountOut(n.slippageTolerance))
                            }, x),
                            F = f.reduce(function(e, t) {
                                return e.add(t.outputAmount)
                            }, x);
                        return {
                            calldatas: T,
                            sampleTrade: v,
                            routerMustCustody: I,
                            inputIsNative: g,
                            outputIsNative: w,
                            totalAmountIn: f.reduce(function(e, t) {
                                return e.add(t.maximumAmountIn(n.slippageTolerance))
                            }, M),
                            minimumAmountOut: R,
                            quoteAmountOut: F
                        }
                    }, e.swapCallParameters = function(t, f) {
                        var n = e.encodeSwaps(t, f),
                            r = n.calldatas,
                            a = n.sampleTrade,
                            o = n.inputIsNative,
                            s = n.totalAmountIn,
                            u = n.minimumAmountOut;
                        return n.routerMustCustody && r.push(n.outputIsNative ? C.encodeUnwrapWETH9(u.quotient, f.recipient, f.fee) : C.encodeSweepToken(a.outputAmount.currency.wrapped, u.quotient, f.recipient, f.fee)), o && (a.tradeType === i.TradeType.EXACT_OUTPUT || e.riskOfPartialFill(t)) && r.push(d.Payments.encodeRefundETH()), {
                            calldata: _.encodeMulticall(r, f.deadlineOrPreviousBlockhash),
                            value: d.toHex(o ? s.quotient : z)
                        }
                    }, e.swapAndAddCallParameters = function(f, n, r, a, o, u) {
                        var c = e.encodeSwaps(f, n, !0),
                            l = c.calldatas,
                            p = c.inputIsNative,
                            y = c.outputIsNative,
                            b = c.sampleTrade,
                            h = c.totalAmountIn,
                            m = c.quoteAmountOut,
                            v = c.minimumAmountOut;
                        n.outputTokenPermit && (m.currency.isToken || s(!1), l.push(d.SelfPermit.encodePermit(m.currency, n.outputTokenPermit)));
                        var T = b.route.chainId,
                            g = r.pool.token0.wrapped.address === h.currency.wrapped.address,
                            w = e.getPositionAmounts(r, g),
                            A = w.positionAmountIn,
                            I = w.positionAmountOut,
                            k = p ? i.WETH9[T] : A.currency.wrapped,
                            S = y ? i.WETH9[T] : I.currency.wrapped,
                            O = I.subtract(m.wrapped);
                        O.greaterThan(i.CurrencyAmount.fromRawAmount(I.currency, 0)) && l.push(y ? C.encodeWrapETH(O.quotient) : C.encodePull(S, O.quotient)), l.push(p ? C.encodeWrapETH(A.quotient) : C.encodePull(k, A.quotient)), o !== t.ApprovalTypes.NOT_REQUIRED && l.push(E.encodeApprove(k, o)), u !== t.ApprovalTypes.NOT_REQUIRED && l.push(E.encodeApprove(S, u));
                        var P, M = d.Position.fromAmounts({
                            pool: r.pool,
                            tickLower: r.tickLower,
                            tickUpper: r.tickUpper,
                            amount0: g ? r.amount0.quotient.toString() : v.quotient.toString(),
                            amount1: g ? v.quotient.toString() : r.amount1.quotient.toString(),
                            useFullPrecision: !1
                        });
                        return l.push(E.encodeAddLiquidity(r, M, a, n.slippageTolerance)), l.push(p ? C.encodeUnwrapWETH9(z) : C.encodeSweepToken(k, z)), l.push(y ? C.encodeUnwrapWETH9(z) : C.encodeSweepToken(S, z)), P = p ? h.wrapped.add(A.wrapped).quotient : y ? O.quotient : z, {
                            calldata: _.encodeMulticall(l, n.deadlineOrPreviousBlockhash),
                            value: P.toString()
                        }
                    }, e.riskOfPartialFill = function(t) {
                        return Array.isArray(t) ? t.some(function(t) {
                            return e.v3TradeWithHighPriceImpact(t)
                        }) : e.v3TradeWithHighPriceImpact(t)
                    }, e.v3TradeWithHighPriceImpact = function(e) {
                        return !(e instanceof y.Trade) && !(e instanceof b.Trade) && e.priceImpact.greaterThan(K)
                    }, e.getPositionAmounts = function(e, t) {
                        var f = e.mintAmounts,
                            n = f.amount1,
                            r = i.CurrencyAmount.fromRawAmount(e.pool.token0, f.amount0),
                            a = i.CurrencyAmount.fromRawAmount(e.pool.token1, n),
                            o = t ? [r, a] : [a, r];
                        return {
                            positionAmountIn: o[0],
                            positionAmountOut: o[1]
                        }
                    }, e
                }();
            Y.INTERFACE = new o.Interface(p.abi), t.ADDRESS_THIS = v, t.ApproveAndCall = E, t.MSG_SENDER = m, t.MixedRoute = $, t.MixedRouteSDK = B, t.MixedRouteTrade = U, t.MulticallExtended = _, t.ONE = g, t.ONE_HUNDRED_PERCENT = A, t.PaymentsExtended = C, t.RING_FEE_PATH_PLACEHOLDER = 4194304, t.RouteRing = G, t.RouteV2 = V, t.RouteV3 = j, t.SwapRouter = Y, t.Trade = H, t.V2_FEE_PATH_PLACEHOLDER = 8388608, t.ZERO = T, t.ZERO_PERCENT = w, t.encodeMixedRouteToPath = W, t.getOutputOfPools = X, t.isMint = I, t.partitionMixedRouteByProtocol = Q, t.tradeComparator = L
        },
        56868: (e, t, f) => {
            "use strict";
            e.exports = f(4622)
        },
        4612: (e, t, f) => {
            "use strict";

            function n(e) {
                return e && "object" == typeof e && "default" in e ? e.default : e
            }
            Object.defineProperty(t, "__esModule", {
                value: !0
            });
            var r, i = n(f(67261)),
                a = n(f(84861)),
                o = n(f(11522)),
                s = n(f(45201)),
                u = n(f(70931)),
                d = f(24136),
                c = f(47997);

            function l(e, t) {
                for (var f = 0; f < t.length; f++) {
                    var n = t[f];
                    n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(e, n.key, n)
                }
            }

            function p(e, t, f) {
                return t && l(e.prototype, t), f && l(e, f), e
            }

            function y() {
                return (y = Object.assign || function(e) {
                    for (var t = 1; t < arguments.length; t++) {
                        var f = arguments[t];
                        for (var n in f) Object.prototype.hasOwnProperty.call(f, n) && (e[n] = f[n])
                    }
                    return e
                }).apply(this, arguments)
            }

            function b(e, t) {
                e.prototype = Object.create(t.prototype), e.prototype.constructor = e, e.__proto__ = t
            }(r = t.ChainId || (t.ChainId = {}))[r.MAINNET = 1] = "MAINNET", r[r.GOERLI = 5] = "GOERLI", r[r.SEPOLIA = 11155111] = "SEPOLIA", r[r.OPTIMISM = 10] = "OPTIMISM", r[r.OPTIMISM_GOERLI = 420] = "OPTIMISM_GOERLI", r[r.ARBITRUM_ONE = 42161] = "ARBITRUM_ONE", r[r.ARBITRUM_GOERLI = 421613] = "ARBITRUM_GOERLI", r[r.POLYGON = 137] = "POLYGON", r[r.POLYGON_MUMBAI = 80001] = "POLYGON_MUMBAI", r[r.CELO = 42220] = "CELO", r[r.CELO_ALFAJORES = 44787] = "CELO_ALFAJORES", r[r.GNOSIS = 100] = "GNOSIS", r[r.MOONBEAM = 1284] = "MOONBEAM", r[r.BNB = 56] = "BNB", r[r.AVALANCHE = 43114] = "AVALANCHE", r[r.BASE_GOERLI = 84531] = "BASE_GOERLI", r[r.BASE = 8453] = "BASE", r[r.BLAST_SEPOLIA = 168587773] = "BLAST_SEPOLIA", r[r.BLAST = 81457] = "BLAST";
            var h, m, v, T, g, w, A, I = [t.ChainId.MAINNET, t.ChainId.OPTIMISM, t.ChainId.OPTIMISM_GOERLI, t.ChainId.BLAST_SEPOLIA, t.ChainId.BLAST, t.ChainId.ARBITRUM_ONE, t.ChainId.ARBITRUM_GOERLI, t.ChainId.POLYGON, t.ChainId.POLYGON_MUMBAI, t.ChainId.GOERLI, t.ChainId.SEPOLIA, t.ChainId.CELO_ALFAJORES, t.ChainId.CELO, t.ChainId.BNB, t.ChainId.AVALANCHE, t.ChainId.BASE, t.ChainId.BASE_GOERLI];
            (h = t.NativeCurrencyName || (t.NativeCurrencyName = {})).ETHER = "ETH", h.MATIC = "MATIC", h.CELO = "CELO", h.GNOSIS = "XDAI", h.MOONBEAM = "GLMR", h.BNB = "BNB", h.AVAX = "AVAX";
            var E = [t.ChainId.MAINNET, t.ChainId.GOERLI, t.ChainId.SEPOLIA, t.ChainId.BLAST_SEPOLIA, t.ChainId.BLAST];

            function _(e, t) {
                return void 0 === t && (t = []), E.concat(t).reduce(function(t, f) {
                    return t[f] = e, t
                }, {})
            }
            var k, C, S = _("0x1f9840a85d5aF5bf1D1762F925BDADdC4201F984", [t.ChainId.OPTIMISM, t.ChainId.ARBITRUM_ONE, t.ChainId.POLYGON, t.ChainId.POLYGON_MUMBAI, t.ChainId.SEPOLIA]),
                O = {
                    v3CoreFactoryAddress: "0x1F98431c8aD98523631AE4a59f267346ea31F984",
                    multicallAddress: "0x1F98415757620B543A52E61c46B32eB19261F984",
                    quoterAddress: "0xb27308f9F90D607463bb33eA1BeBb41C27CE5AB6",
                    v3MigratorAddress: "0xA5644E29708357803b5A882D272c41cC0dF92B34",
                    nonfungiblePositionManagerAddress: "0xC36442b4a4522E871399CD717aBDD847Ab11FE88"
                },
                P = y({}, O, {
                    v1MixedRouteQuoterAddress: "0x84E44095eeBfEC7793Cd7d5b57B7e401D7f1cA2E"
                }),
                M = y({}, O, {
                    v1MixedRouteQuoterAddress: "0xBa60b6e6fF25488308789E6e0A65D838be34194e"
                }),
                x = y({}, O, {
                    multicallAddress: "0xadF885960B47eA2CD9B55E6DAc6B42b7Cb2806dB",
                    tickLensAddress: "0xbfd8137f7d1516D3ea5cA83523914859ec47F573"
                }),
                R = {
                    v3CoreFactoryAddress: "0xAfE208a311B21f13EF87E33A90049fC17A7acDEc",
                    multicallAddress: "0x633987602DE5C4F337e3DbF265303A1080324204",
                    quoterAddress: "0x82825d0554fA07f7FC52Ab63c961F330fdEFa8E8",
                    v3MigratorAddress: "0x3cFd4d48EDfDCC53D3f173F596f621064614C582",
                    nonfungiblePositionManagerAddress: "0x3d79EdAaBC0EaB6F08ED885C05Fc0B014290D95A",
                    tickLensAddress: "0x5f115D9113F88e0a0Db1b5033D90D4a9690AcD3D"
                },
                F = ((m = {})[t.ChainId.MAINNET] = P, m[t.ChainId.OPTIMISM] = O, m[t.ChainId.ARBITRUM_ONE] = x, m[t.ChainId.POLYGON] = O, m[t.ChainId.POLYGON_MUMBAI] = O, m[t.ChainId.GOERLI] = M, m[t.ChainId.CELO] = R, m[t.ChainId.CELO_ALFAJORES] = R, m[t.ChainId.BNB] = {
                    v3CoreFactoryAddress: "0xdB1d10011AD0Ff90774D0C6Bb92e5C5c8b4461F7",
                    multicallAddress: "0x963Df249eD09c358A4819E39d9Cd5736c3087184",
                    quoterAddress: "0x78D78E420Da98ad378D7799bE8f4AF69033EB077",
                    v3MigratorAddress: "0x32681814957e0C13117ddc0c2aba232b5c9e760f",
                    nonfungiblePositionManagerAddress: "0x7b8A01B39D58278b5DE7e48c8449c9f4F5170613",
                    tickLensAddress: "0xD9270014D396281579760619CCf4c3af0501A47C",
                    swapRouter02Address: "0xB971eF87ede563556b2ED4b1C0b0019111Dd85d2"
                }, m[t.ChainId.OPTIMISM_GOERLI] = {
                    v3CoreFactoryAddress: "0xB656dA17129e7EB733A557f4EBc57B76CFbB5d10",
                    multicallAddress: "0x07F2D8a2a02251B62af965f22fC4744A5f96BCCd",
                    quoterAddress: "0x9569CbA925c8ca2248772A9A4976A516743A246F",
                    v3MigratorAddress: "0xf6c55fBe84B1C8c3283533c53F51bC32F5C7Aba8",
                    nonfungiblePositionManagerAddress: "0x39Ca85Af2F383190cBf7d7c41ED9202D27426EF6",
                    tickLensAddress: "0xe6140Bd164b63E8BfCfc40D5dF952f83e171758e"
                }, m[t.ChainId.ARBITRUM_GOERLI] = {
                    v3CoreFactoryAddress: "0x4893376342d5D7b3e31d4184c08b265e5aB2A3f6",
                    multicallAddress: "0x8260CB40247290317a4c062F3542622367F206Ee",
                    quoterAddress: "0x1dd92b83591781D0C6d98d07391eea4b9a6008FA",
                    v3MigratorAddress: "0xA815919D2584Ac3F76ea9CB62E6Fd40a43BCe0C3",
                    nonfungiblePositionManagerAddress: "0x622e4726a167799826d1E1D150b076A7725f5D81",
                    tickLensAddress: "0xb52429333da969a0C79a60930a4Bf0020E5D1DE8"
                }, m[t.ChainId.SEPOLIA] = {
                    v3CoreFactoryAddress: "0x0000000000000000000000000000000000000000",
                    multicallAddress: "0x23B0338e947A1f2B551e34969285C83e6eD5e5c8",
                    quoterAddress: "0x0000000000000000000000000000000000000000",
                    v3MigratorAddress: "0x0000000000000000000000000000000000000000",
                    nonfungiblePositionManagerAddress: "0x0000000000000000000000000000000000000000",
                    tickLensAddress: "0x0000000000000000000000000000000000000000",
                    v1MixedRouteQuoterAddress: "0x7B77A426044f952540890148b65282CB7374e9e9"
                }, m[t.ChainId.AVALANCHE] = {
                    v3CoreFactoryAddress: "0x740b1c1de25031C31FF4fC9A62f554A55cdC1baD",
                    multicallAddress: "0x0139141Cd4Ee88dF3Cdb65881D411bAE271Ef0C2",
                    quoterAddress: "0xbe0F5544EC67e9B3b2D979aaA43f18Fd87E6257F",
                    v3MigratorAddress: "0x44f5f1f5E452ea8d29C890E8F6e893fC0f1f0f97",
                    nonfungiblePositionManagerAddress: "0x655C406EBFa14EE2006250925e54ec43AD184f8B",
                    tickLensAddress: "0xEB9fFC8bf81b4fFd11fb6A63a6B0f098c6e21950",
                    swapRouter02Address: "0xbb00FF08d01D300023C629E8fFfFcb65A5a578cE"
                }, m[t.ChainId.BASE] = {
                    v3CoreFactoryAddress: "0x33128a8fC17869897dcE68Ed026d694621f6FDfD",
                    multicallAddress: "0x091e99cb1C49331a94dD62755D168E941AbD0693",
                    quoterAddress: "0x3d4e44Eb1374240CE5F1B871ab261CD16335B76a",
                    v3MigratorAddress: "0x23cF10b1ee3AdfCA73B0eF17C07F7577e7ACd2d7",
                    nonfungiblePositionManagerAddress: "0x03a520b32C04BF3bEEf7BEb72E919cf822Ed34f1",
                    tickLensAddress: "0x0CdeE061c75D43c82520eD998C23ac2991c9ac6d",
                    swapRouter02Address: "0x2626664c2603336E57B271c5C0b26F421741e481"
                }, m[t.ChainId.BASE_GOERLI] = {
                    v3CoreFactoryAddress: "0x9323c1d6D800ed51Bd7C6B216cfBec678B7d0BC2",
                    multicallAddress: "0xB206027a9E0E13F05eBEFa5D2402Bab3eA716439",
                    quoterAddress: "0xedf539058e28E5937dAef3f69cEd0b25fbE66Ae9",
                    v3MigratorAddress: "0x3efe5d02a04b7351D671Db7008ec6eBA9AD9e3aE",
                    nonfungiblePositionManagerAddress: "0x3c61369ef0D1D2AFa70d8feC2F31C5D6Ce134F30",
                    tickLensAddress: "0x1acB873Ee909D0c98adB18e4474943249F931b92",
                    swapRouter02Address: "0x8357227D4eDc78991Db6FDB9bD6ADE250536dE1d"
                }, m[t.ChainId.BLAST_SEPOLIA] = {
                    v3CoreFactoryAddress: "0x0000000000000000000000000000000000000000",
                    multicallAddress: "0x54c55551fEe014ec7C63F47Cd69f20e47ae178EB",
                    quoterAddress: "0x0000000000000000000000000000000000000000",
                    v3MigratorAddress: "0x0000000000000000000000000000000000000000",
                    nonfungiblePositionManagerAddress: "0x0000000000000000000000000000000000000000",
                    tickLensAddress: "0x0000000000000000000000000000000000000000",
                    v1MixedRouteQuoterAddress: "0x2947892b6bFcd719868f2d7Fe4A3F9A49B0894B9"
                }, m[t.ChainId.BLAST] = {
                    v3CoreFactoryAddress: "0x0000000000000000000000000000000000000000",
                    multicallAddress: "0x8B34f931069645043b24Efc20aebc5E3E00cf256",
                    quoterAddress: "0x0000000000000000000000000000000000000000",
                    v3MigratorAddress: "0x0000000000000000000000000000000000000000",
                    nonfungiblePositionManagerAddress: "0x0000000000000000000000000000000000000000",
                    tickLensAddress: "0x0000000000000000000000000000000000000000",
                    v1MixedRouteQuoterAddress: "0x290Ef7a04b07FC5B150B83320d9E7ec098615c2e"
                }, m),
                D = y({}, I.reduce(function(e, t) {
                    return e[t] = F[t].v3CoreFactoryAddress, e
                }, {})),
                N = y({}, I.reduce(function(e, t) {
                    var f = F[t].v3MigratorAddress;
                    return f && (e[t] = f), e
                }, {})),
                B = y({}, I.reduce(function(e, t) {
                    return e[t] = F[t].multicallAddress, e
                }, {})),
                L = _("0x5e4be8Bc9637f0EAA1A755019e06A68ce081D58F"),
                q = ((v = {})[t.ChainId.MAINNET] = "0xC4e172459f1E7939D522503B81AFAaC1014CE6F6", v),
                U = ((T = {})[t.ChainId.MAINNET] = "0x408ED6354d4973f66138C91495F2f2FCbd8724C3", T),
                V = _("0x1a9C8182C09F50C8318d769245beA52c32BE35BC"),
                G = ((g = {})[t.ChainId.MAINNET] = "0x090D4613473dEE047c3f2706764f49E0821D256e", g),
                j = ((w = {})[t.ChainId.MAINNET] = "0xeca4B0bDBf7c55E9b7925919d03CbF8Dc82537E8", w),
                $ = y({}, I.reduce(function(e, t) {
                    return e[t] = F[t].quoterAddress, e
                }, {})),
                H = y({}, I.reduce(function(e, t) {
                    var f = F[t].nonfungiblePositionManagerAddress;
                    return f && (e[t] = f), e
                }, {})),
                W = y({}, _("0x00000000000C2E074eC69A0dFb2997BA6C7d2e1e")),
                Q = ((A = {})[t.ChainId.MAINNET] = "0x65770b5283117639760beA3F867b69b3697a91dd", A),
                X = y({}, I.reduce(function(e, t) {
                    var f = F[t].tickLensAddress;
                    return f && (e[t] = f), e
                }, {})),
                z = I.reduce(function(e, t) {
                    var f = F[t].v1MixedRouteQuoterAddress;
                    return f && (e[t] = f), e
                }, {});
            (k = t.TradeType || (t.TradeType = {}))[k.EXACT_INPUT = 0] = "EXACT_INPUT", k[k.EXACT_OUTPUT = 1] = "EXACT_OUTPUT", (C = t.Rounding || (t.Rounding = {}))[C.ROUND_DOWN = 0] = "ROUND_DOWN", C[C.ROUND_HALF_UP = 1] = "ROUND_HALF_UP", C[C.ROUND_UP = 2] = "ROUND_UP";
            var K, Y, J = i.BigInt("0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"),
                Z = u(o),
                ee = u(s),
                et = ((K = {})[t.Rounding.ROUND_DOWN] = Z.ROUND_DOWN, K[t.Rounding.ROUND_HALF_UP] = Z.ROUND_HALF_UP, K[t.Rounding.ROUND_UP] = Z.ROUND_UP, K),
                ef = ((Y = {})[t.Rounding.ROUND_DOWN] = 0, Y[t.Rounding.ROUND_HALF_UP] = 1, Y[t.Rounding.ROUND_UP] = 3, Y),
                en = function() {
                    function e(e, t) {
                        void 0 === t && (t = i.BigInt(1)), this.numerator = i.BigInt(e), this.denominator = i.BigInt(t)
                    }
                    e.tryParseFraction = function(t) {
                        if (t instanceof i || "number" == typeof t || "string" == typeof t) return new e(t);
                        if ("numerator" in t && "denominator" in t) return t;
                        throw Error("Could not parse fraction")
                    };
                    var f = e.prototype;
                    return f.invert = function() {
                        return new e(this.denominator, this.numerator)
                    }, f.add = function(t) {
                        var f = e.tryParseFraction(t);
                        return i.equal(this.denominator, f.denominator) ? new e(i.add(this.numerator, f.numerator), this.denominator) : new e(i.add(i.multiply(this.numerator, f.denominator), i.multiply(f.numerator, this.denominator)), i.multiply(this.denominator, f.denominator))
                    }, f.subtract = function(t) {
                        var f = e.tryParseFraction(t);
                        return i.equal(this.denominator, f.denominator) ? new e(i.subtract(this.numerator, f.numerator), this.denominator) : new e(i.subtract(i.multiply(this.numerator, f.denominator), i.multiply(f.numerator, this.denominator)), i.multiply(this.denominator, f.denominator))
                    }, f.lessThan = function(t) {
                        var f = e.tryParseFraction(t);
                        return i.lessThan(i.multiply(this.numerator, f.denominator), i.multiply(f.numerator, this.denominator))
                    }, f.equalTo = function(t) {
                        var f = e.tryParseFraction(t);
                        return i.equal(i.multiply(this.numerator, f.denominator), i.multiply(f.numerator, this.denominator))
                    }, f.greaterThan = function(t) {
                        var f = e.tryParseFraction(t);
                        return i.greaterThan(i.multiply(this.numerator, f.denominator), i.multiply(f.numerator, this.denominator))
                    }, f.multiply = function(t) {
                        var f = e.tryParseFraction(t);
                        return new e(i.multiply(this.numerator, f.numerator), i.multiply(this.denominator, f.denominator))
                    }, f.divide = function(t) {
                        var f = e.tryParseFraction(t);
                        return new e(i.multiply(this.numerator, f.denominator), i.multiply(this.denominator, f.numerator))
                    }, f.toSignificant = function(e, f, n) {
                        void 0 === f && (f = {
                            groupSeparator: ""
                        }), void 0 === n && (n = t.Rounding.ROUND_HALF_UP), Number.isInteger(e) || a(!1), e > 0 || a(!1), Z.set({
                            precision: e + 1,
                            rounding: et[n]
                        });
                        var r = new Z(this.numerator.toString()).div(this.denominator.toString()).toSignificantDigits(e);
                        return r.toFormat(r.decimalPlaces(), f)
                    }, f.toFixed = function(e, f, n) {
                        return void 0 === f && (f = {
                            groupSeparator: ""
                        }), void 0 === n && (n = t.Rounding.ROUND_HALF_UP), Number.isInteger(e) || a(!1), e >= 0 || a(!1), ee.DP = e, ee.RM = ef[n], new ee(this.numerator.toString()).div(this.denominator.toString()).toFormat(e, f)
                    }, p(e, [{
                        key: "quotient",
                        get: function() {
                            return i.divide(this.numerator, this.denominator)
                        }
                    }, {
                        key: "remainder",
                        get: function() {
                            return new e(i.remainder(this.numerator, this.denominator), this.denominator)
                        }
                    }, {
                        key: "asFraction",
                        get: function() {
                            return new e(this.numerator, this.denominator)
                        }
                    }]), e
                }(),
                er = u(s),
                ei = function(e) {
                    function f(t, f, n) {
                        var r;
                        return r = e.call(this, f, n) || this, i.lessThanOrEqual(r.quotient, J) || a(!1), r.currency = t, r.decimalScale = i.exponentiate(i.BigInt(10), i.BigInt(t.decimals)), r
                    }
                    b(f, e), f.fromRawAmount = function(e, t) {
                        return new f(e, t)
                    }, f.fromFractionalAmount = function(e, t, n) {
                        return new f(e, t, n)
                    };
                    var n = f.prototype;
                    return n.add = function(t) {
                        this.currency.equals(t.currency) || a(!1);
                        var n = e.prototype.add.call(this, t);
                        return f.fromFractionalAmount(this.currency, n.numerator, n.denominator)
                    }, n.subtract = function(t) {
                        this.currency.equals(t.currency) || a(!1);
                        var n = e.prototype.subtract.call(this, t);
                        return f.fromFractionalAmount(this.currency, n.numerator, n.denominator)
                    }, n.multiply = function(t) {
                        var n = e.prototype.multiply.call(this, t);
                        return f.fromFractionalAmount(this.currency, n.numerator, n.denominator)
                    }, n.divide = function(t) {
                        var n = e.prototype.divide.call(this, t);
                        return f.fromFractionalAmount(this.currency, n.numerator, n.denominator)
                    }, n.toSignificant = function(f, n, r) {
                        return void 0 === f && (f = 6), void 0 === r && (r = t.Rounding.ROUND_DOWN), e.prototype.divide.call(this, this.decimalScale).toSignificant(f, n, r)
                    }, n.toFixed = function(f, n, r) {
                        return void 0 === f && (f = this.currency.decimals), void 0 === r && (r = t.Rounding.ROUND_DOWN), f <= this.currency.decimals || a(!1), e.prototype.divide.call(this, this.decimalScale).toFixed(f, n, r)
                    }, n.toExact = function(e) {
                        return void 0 === e && (e = {
                            groupSeparator: ""
                        }), er.DP = this.currency.decimals, new er(this.quotient.toString()).div(this.decimalScale.toString()).toFormat(e)
                    }, p(f, [{
                        key: "wrapped",
                        get: function() {
                            return this.currency.isToken ? this : f.fromFractionalAmount(this.currency.wrapped, this.numerator, this.denominator)
                        }
                    }]), f
                }(en),
                ea = new en(i.BigInt(100));

            function eo(e) {
                return new es(e.numerator, e.denominator)
            }
            var es = function(e) {
                    function t() {
                        var t;
                        return (t = e.apply(this, arguments) || this).isPercent = !0, t
                    }
                    b(t, e);
                    var f = t.prototype;
                    return f.add = function(t) {
                        return eo(e.prototype.add.call(this, t))
                    }, f.subtract = function(t) {
                        return eo(e.prototype.subtract.call(this, t))
                    }, f.multiply = function(t) {
                        return eo(e.prototype.multiply.call(this, t))
                    }, f.divide = function(t) {
                        return eo(e.prototype.divide.call(this, t))
                    }, f.toSignificant = function(t, f, n) {
                        return void 0 === t && (t = 5), e.prototype.multiply.call(this, ea).toSignificant(t, f, n)
                    }, f.toFixed = function(t, f, n) {
                        return void 0 === t && (t = 2), e.prototype.multiply.call(this, ea).toFixed(t, f, n)
                    }, t
                }(en),
                eu = function(e) {
                    function t() {
                        for (var t, f, n, r, a, o = arguments.length, s = Array(o), u = 0; u < o; u++) s[u] = arguments[u];
                        if (4 === s.length) f = s[0], n = s[1], r = s[2], a = s[3];
                        else {
                            var d = s[0].quoteAmount.divide(s[0].baseAmount),
                                c = [s[0].baseAmount.currency, s[0].quoteAmount.currency, d.denominator, d.numerator];
                            f = c[0], n = c[1], r = c[2], a = c[3]
                        }
                        return (t = e.call(this, a, r) || this).baseCurrency = f, t.quoteCurrency = n, t.scalar = new en(i.exponentiate(i.BigInt(10), i.BigInt(f.decimals)), i.exponentiate(i.BigInt(10), i.BigInt(n.decimals))), t
                    }
                    b(t, e);
                    var f = t.prototype;
                    return f.invert = function() {
                        return new t(this.quoteCurrency, this.baseCurrency, this.numerator, this.denominator)
                    }, f.multiply = function(f) {
                        this.quoteCurrency.equals(f.baseCurrency) || a(!1);
                        var n = e.prototype.multiply.call(this, f);
                        return new t(this.baseCurrency, f.quoteCurrency, n.denominator, n.numerator)
                    }, f.quote = function(t) {
                        t.currency.equals(this.baseCurrency) || a(!1);
                        var f = e.prototype.multiply.call(this, t);
                        return ei.fromFractionalAmount(this.quoteCurrency, f.numerator, f.denominator)
                    }, f.toSignificant = function(e, t, f) {
                        return void 0 === e && (e = 6), this.adjustedForDecimals.toSignificant(e, t, f)
                    }, f.toFixed = function(e, t, f) {
                        return void 0 === e && (e = 4), this.adjustedForDecimals.toFixed(e, t, f)
                    }, p(t, [{
                        key: "adjustedForDecimals",
                        get: function() {
                            return e.prototype.multiply.call(this, this.scalar)
                        }
                    }]), t
                }(en),
                ed = function(e, t, f, n) {
                    Number.isSafeInteger(e) || a(!1), t >= 0 && t < 255 && Number.isInteger(t) || a(!1), this.chainId = e, this.decimals = t, this.symbol = f, this.name = n
                },
                ec = function(e) {
                    function t() {
                        var t;
                        return (t = e.apply(this, arguments) || this).isNative = !0, t.isToken = !1, t
                    }
                    return b(t, e), t
                }(ed);

            function el(e) {
                try {
                    return c.getAddress(e)
                } catch (t) {
                    throw Error(e + " is not a valid address.")
                }
            }
            var ep, ey = /^0x[0-9a-fA-F]{40}$/,
                eb = function(e) {
                    function t(t, f, n, r, i, o, s, u) {
                        var c;
                        return (c = e.call(this, t, n, r, i) || this).isNative = !1, c.isToken = !0, c.address = o ? function(e) {
                            if (ey.test(e)) return e;
                            throw Error(e + " is not a valid address.")
                        }(f) : el(f), s && (s.gte(d.BigNumber.from(0)) || a(!1)), u && (u.gte(d.BigNumber.from(0)) || a(!1)), c.buyFeeBps = s, c.sellFeeBps = u, c
                    }
                    b(t, e);
                    var f = t.prototype;
                    return f.equals = function(e) {
                        return e.isToken && this.chainId === e.chainId && this.address.toLowerCase() === e.address.toLowerCase()
                    }, f.sortsBefore = function(e) {
                        return this.chainId !== e.chainId && a(!1), this.address.toLowerCase() === e.address.toLowerCase() && a(!1), this.address.toLowerCase() < e.address.toLowerCase()
                    }, p(t, [{
                        key: "wrapped",
                        get: function() {
                            return this
                        }
                    }]), t
                }(ed),
                eh = ((ep = {})[1] = new eb(1, "0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2", 18, "WETH", "Wrapped Ether"), ep[3] = new eb(3, "0xc778417E063141139Fce010982780140Aa0cD5Ab", 18, "WETH", "Wrapped Ether"), ep[4] = new eb(4, "0xc778417E063141139Fce010982780140Aa0cD5Ab", 18, "WETH", "Wrapped Ether"), ep[5] = new eb(5, "0xB4FBF271143F4FBf7B91A5ded31805e42b2208d6", 18, "WETH", "Wrapped Ether"), ep[42] = new eb(42, "0xd0A1E359811322d97991E03f863a0C30C2cF029C", 18, "WETH", "Wrapped Ether"), ep[10] = new eb(10, "0x4200000000000000000000000000000000000006", 18, "WETH", "Wrapped Ether"), ep[69] = new eb(69, "0x4200000000000000000000000000000000000006", 18, "WETH", "Wrapped Ether"), ep[42161] = new eb(42161, "0x82aF49447D8a07e3bd95BD0d56f35241523fBab1", 18, "WETH", "Wrapped Ether"), ep[421611] = new eb(421611, "0xB47e6A5f8b33b3F17603C83a0535A9dcD7E32681", 18, "WETH", "Wrapped Ether"), ep[11155111] = new eb(421611, "0xfFf9976782d46CC05630D1f6eBAb18b2324d6B14", 18, "WETH", "Wrapped Ether"), ep[168587773] = new eb(168587773, "0x4200000000000000000000000000000000000023", 18, "WETH", "Wrapped Ether"), ep[81457] = new eb(81457, "0x4300000000000000000000000000000000000004", 18, "WETH", "Wrapped Ether"), ep),
                em = function(e) {
                    function t(t) {
                        return e.call(this, t, 18, "ETH", "Ether") || this
                    }
                    return b(t, e), t.onChain = function(e) {
                        var f;
                        return null != (f = this._etherCache[e]) ? f : this._etherCache[e] = new t(e)
                    }, t.prototype.equals = function(e) {
                        return e.isNative && e.chainId === this.chainId
                    }, p(t, [{
                        key: "wrapped",
                        get: function() {
                            var e = eh[this.chainId];
                            return e || a(!1), e
                        }
                    }]), t
                }(ec);
            em._etherCache = {};
            var ev = i.BigInt(Number.MAX_SAFE_INTEGER),
                eT = i.BigInt(0),
                eg = i.BigInt(1),
                ew = i.BigInt(2);
            t.ARGENT_WALLET_DETECTOR_ADDRESS = j, t.BLAST_MAINNET_V2_FACTORY_ADDRESS = "0x24F5Ac9A706De0cF795A8193F6AB3966B14ECfE6", t.BLAST_MAINNET_V2_ROUTER_ADDRESS = "0x7001F706ACB6440d17cBFaD63Fa50a22D51696fF", t.BLAST_V2_FACTORY_ADDRESS = "0xe4aa82591AD0E8AbFD15ca2A2ff74439c6052Fbf", t.BLAST_V2_ROUTER_ADDRESS = "0x02F1e7A518e3E286C8E305E39cA7D4f25e0a44Aa", t.CHAIN_TO_ADDRESSES_MAP = F, t.CurrencyAmount = ei, t.ENS_REGISTRAR_ADDRESSES = W, t.Ether = em, t.Fraction = en, t.GOVERNANCE_ALPHA_V0_ADDRESSES = L, t.GOVERNANCE_ALPHA_V1_ADDRESSES = q, t.GOVERNANCE_BRAVO_ADDRESSES = U, t.MERKLE_DISTRIBUTOR_ADDRESS = G, t.MIXED_ROUTE_QUOTER_V1_ADDRESSES = z, t.MULTICALL_ADDRESSES = B, t.MaxUint256 = J, t.NONFUNGIBLE_POSITION_MANAGER_ADDRESSES = H, t.NativeCurrency = ec, t.Percent = es, t.Price = eu, t.QUOTER_ADDRESSES = $, t.SEPOLIA_V2_FACTORY_ADDRESS = "0x509166db8Fb9571F8C34EfcD7347809B34dE4e04", t.SEPOLIA_V2_ROUTER_ADDRESS = "0x1F802559f8b5495bD4fE6c23BC79345804DBA12A", t.SOCKS_CONTROLLER_ADDRESSES = Q, t.SUPPORTED_CHAINS = I, t.SWAP_ROUTER_02_ADDRESSES = function(e) {
                return e == t.ChainId.BNB ? F[e].swapRouter02Address : "0x68b3465833fb72A70ecDF485E0e4C7bD8665Fc45"
            }, t.TICK_LENS_ADDRESSES = X, t.TIMELOCK_ADDRESSES = V, t.Token = eb, t.UNISWAP_NFT_AIRDROP_CLAIM_ADDRESS = "0x8B799381ac40b838BBA4131ffB26197C432AFe78", t.UNI_ADDRESSES = S, t.V2_FACTORY_ADDRESSES = {
                11155111: "0x509166db8Fb9571F8C34EfcD7347809B34dE4e04",
                168587773: "0xe4aa82591AD0E8AbFD15ca2A2ff74439c6052Fbf",
                81457: "0x24F5Ac9A706De0cF795A8193F6AB3966B14ECfE6"
            }, t.V2_ROUTER_ADDRESSES = {
                11155111: "0x1F802559f8b5495bD4fE6c23BC79345804DBA12A",
                168587773: "0x02F1e7A518e3E286C8E305E39cA7D4f25e0a44Aa",
                81457: "0x7001F706ACB6440d17cBFaD63Fa50a22D51696fF"
            }, t.V3_CORE_FACTORY_ADDRESSES = D, t.V3_MIGRATOR_ADDRESSES = N, t.WETH9 = eh, t.computePriceImpact = function(e, t, f) {
                var n = e.quote(t),
                    r = n.subtract(f).divide(n);
                return new es(r.numerator, r.denominator)
            }, t.sortedInsert = function(e, t, f, n) {
                if (f > 0 || a(!1), e.length <= f || a(!1), 0 === e.length) return e.push(t), null;
                var r = e.length === f;
                if (r && 0 >= n(e[e.length - 1], t)) return t;
                for (var i = 0, o = e.length; i < o;) {
                    var s = i + o >>> 1;
                    0 >= n(e[s], t) ? i = s + 1 : o = s
                }
                return e.splice(i, 0, t), r ? e.pop() : null
            }, t.sqrt = function(e) {
                var t, f;
                if (i.greaterThanOrEqual(e, eT) || a(!1), i.lessThan(e, ev)) return i.BigInt(Math.floor(Math.sqrt(i.toNumber(e))));
                for (t = e, f = i.add(i.divide(e, ew), eg); i.lessThan(f, t);) t = f, f = i.divide(i.add(i.divide(e, f), f), ew);
                return t
            }, t.validateAndParseAddress = el
        },
        22158: (e, t, f) => {
            "use strict";
            e.exports = f(4612)
        },
        46146: (e, t, f) => {
            "use strict";

            function n(e) {
                return e && "object" == typeof e && "default" in e ? e.default : e
            }
            Object.defineProperty(t, "__esModule", {
                value: !0
            });
            var r = f(22158),
                i = n(f(67261)),
                a = n(f(84861)),
                o = f(58005),
                s = f(47997),
                u = f(24136),
                d = f(3917),
                c = {
                    1: "0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f",
                    3: "0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f",
                    5: "0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f",
                    10: "0x0c3c1c532F1e39EdF36BE9Fe0bE1410313E074Bf",
                    42161: "0xf1D7CC64Fb4452F05c498126312eBE29f30Fbcf9",
                    43114: "0x9e5A52f57b3038F1B8EeE45F28b3C1967e22799C",
                    8453: "0x8909dc15e40173ff4699343b6eb8132c65e18ec6",
                    56: "0x8909Dc15e40173Ff4699343b6eB8132c65e18eC6",
                    137: "0x9e5A52f57b3038F1B8EeE45F28b3C1967e22799C",
                    11155111: "0x509166db8Fb9571F8C34EfcD7347809B34dE4e04",
                    168587773: "0xe4aa82591AD0E8AbFD15ca2A2ff74439c6052Fbf",
                    81457: "0x24F5Ac9A706De0cF795A8193F6AB3966B14ECfE6"
                },
                l = {
                    11155111: "0x96e8ac4277198ff8b6f785478aa9a39f403cb768dd02cbee326c3e7da348845f",
                    168587773: "0x4b1dab7451c20e74482652f09a8ac942d2127aa266ba46f8ec97735f05664521",
                    81457: "0x501ce753061ab6e75837b15f074633bb775f5972f8dc1112fcc829c2e88dc689"
                },
                p = i.BigInt(1e3),
                y = i.BigInt(0),
                b = i.BigInt(1),
                h = i.BigInt(5),
                m = i.BigInt(997),
                v = i.BigInt(1e3),
                T = i.BigInt(1e4),
                g = new r.Percent(y),
                w = new r.Percent(b);

            function A(e, t) {
                for (var f = 0; f < t.length; f++) {
                    var n = t[f];
                    n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(e, n.key, n)
                }
            }

            function I(e, t, f) {
                return t && A(e.prototype, t), f && A(e, f), e
            }

            function E(e, t) {
                e.prototype = Object.create(t.prototype), e.prototype.constructor = e, e.__proto__ = t
            }

            function _(e) {
                return (_ = Object.setPrototypeOf ? Object.getPrototypeOf : function(e) {
                    return e.__proto__ || Object.getPrototypeOf(e)
                })(e)
            }

            function k(e, t) {
                return (k = Object.setPrototypeOf || function(e, t) {
                    return e.__proto__ = t, e
                })(e, t)
            }

            function C(e, t, f) {
                return (C = ! function() {
                    if ("undefined" == typeof Reflect || !Reflect.construct || Reflect.construct.sham) return !1;
                    if ("function" == typeof Proxy) return !0;
                    try {
                        return Date.prototype.toString.call(Reflect.construct(Date, [], function() {})), !0
                    } catch (e) {
                        return !1
                    }
                }() ? function(e, t, f) {
                    var n = [null];
                    n.push.apply(n, t);
                    var r = new(Function.bind.apply(e, n));
                    return f && k(r, f.prototype), r
                } : Reflect.construct).apply(null, arguments)
            }

            function S(e) {
                var t = "function" == typeof Map ? new Map : void 0;
                return (S = function(e) {
                    if (null === e || -1 === Function.toString.call(e).indexOf("[native code]")) return e;
                    if ("function" != typeof e) throw TypeError("Super expression must either be null or a function");
                    if (void 0 !== t) {
                        if (t.has(e)) return t.get(e);
                        t.set(e, f)
                    }

                    function f() {
                        return C(e, arguments, _(this).constructor)
                    }
                    return f.prototype = Object.create(e.prototype, {
                        constructor: {
                            value: f,
                            enumerable: !1,
                            writable: !0,
                            configurable: !0
                        }
                    }), k(f, e)
                })(e)
            }

            function O(e) {
                if (void 0 === e) throw ReferenceError("this hasn't been initialised - super() hasn't been called");
                return e
            }

            function P(e, t) {
                (null == t || t > e.length) && (t = e.length);
                for (var f = 0, n = Array(t); f < t; f++) n[f] = e[f];
                return n
            }

            function M(e, t) {
                var f;
                if ("undefined" == typeof Symbol || null == e[Symbol.iterator]) {
                    if (Array.isArray(e) || (f = function(e, t) {
                            if (e) {
                                if ("string" == typeof e) return P(e, void 0);
                                var f = Object.prototype.toString.call(e).slice(8, -1);
                                return "Object" === f && e.constructor && (f = e.constructor.name), "Map" === f || "Set" === f ? Array.from(e) : "Arguments" === f || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(f) ? P(e, void 0) : void 0
                            }
                        }(e)) || t && e && "number" == typeof e.length) {
                        f && (e = f);
                        var n = 0;
                        return function() {
                            return n >= e.length ? {
                                done: !0
                            } : {
                                done: !1,
                                value: e[n++]
                            }
                        }
                    }
                    throw TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
                }
                return (f = e[Symbol.iterator]()).next.bind(f)
            }
            var x, R = "setPrototypeOf" in Object,
                F = function(e) {
                    function t() {
                        var f;
                        return (f = e.call(this) || this).isInsufficientReservesError = !0, f.name = f.constructor.name, R && Object.setPrototypeOf(O(f), (this instanceof t ? this.constructor : void 0).prototype), f
                    }
                    return E(t, e), t
                }(S(Error)),
                D = function(e) {
                    function t() {
                        var f;
                        return (f = e.call(this) || this).isInsufficientInputAmountError = !0, f.name = f.constructor.name, R && Object.setPrototypeOf(O(f), (this instanceof t ? this.constructor : void 0).prototype), f
                    }
                    return E(t, e), t
                }(S(Error)),
                N = function(e) {
                    var t = e.initCodeHash,
                        f = e.factoryAddress,
                        n = e.tokenA,
                        r = e.tokenB,
                        i = n.sortsBefore(r) ? [n, r] : [r, n];
                    return s.getCreate2Address(f, o.keccak256(["bytes"], [o.pack(["address", "address"], [i[0].address, i[1].address])]), t)
                },
                B = function() {
                    function e(t, f) {
                        var n = t.currency.sortsBefore(f.currency) ? [t, f] : [f, t];
                        this.liquidityToken = new r.Token(n[0].currency.chainId, e.getAddress(n[0].currency, n[1].currency), 18, "UNI-V2", "Uniswap V2"), this.tokenAmounts = n
                    }
                    e.getAddress = function(e, t) {
                        return N({
                            initCodeHash: l[e.chainId],
                            factoryAddress: c[e.chainId],
                            tokenA: e,
                            tokenB: t
                        })
                    };
                    var t = e.prototype;
                    return t.involvesToken = function(e) {
                        return e.equals(this.token0) || e.equals(this.token1)
                    }, t.priceOf = function(e) {
                        return this.involvesToken(e) || a(!1), e.equals(this.token0) ? this.token0Price : this.token1Price
                    }, t.reserveOf = function(e) {
                        return this.involvesToken(e) || a(!1), e.equals(this.token0) ? this.reserve0 : this.reserve1
                    }, t.getOutputAmount = function(t, f) {
                        if (void 0 === f && (f = !1), this.involvesToken(t.currency) || a(!1), i.equal(this.reserve0.quotient, y) || i.equal(this.reserve1.quotient, y)) throw new F;
                        var n = this.reserveOf(t.currency),
                            o = this.reserveOf(t.currency.equals(this.token0) ? this.token1 : this.token0),
                            s = f ? this.derivePercentAfterSellFees(t) : g,
                            u = s.greaterThan(g) ? r.CurrencyAmount.fromRawAmount(t.currency, s.multiply(t).quotient) : t,
                            d = i.multiply(u.quotient, m),
                            c = i.multiply(d, o.quotient),
                            l = i.add(i.multiply(n.quotient, v), d),
                            p = r.CurrencyAmount.fromRawAmount(t.currency.equals(this.token0) ? this.token1 : this.token0, i.divide(c, l));
                        if (i.equal(p.quotient, y)) throw new D;
                        var b = f ? this.derivePercentAfterBuyFees(p) : g,
                            h = b.greaterThan(g) ? r.CurrencyAmount.fromRawAmount(p.currency, p.multiply(b).quotient) : p;
                        if (i.equal(h.quotient, y)) throw new D;
                        return [h, new e(n.add(u), o.subtract(h))]
                    }, t.getInputAmount = function(t, f) {
                        void 0 === f && (f = !1), this.involvesToken(t.currency) || a(!1);
                        var n = f ? this.derivePercentAfterBuyFees(t) : g,
                            o = n.greaterThan(g) ? r.CurrencyAmount.fromRawAmount(t.currency, i.add(t.divide(n).quotient, b)) : t;
                        if (i.equal(this.reserve0.quotient, y) || i.equal(this.reserve1.quotient, y) || i.greaterThanOrEqual(t.quotient, this.reserveOf(t.currency).quotient) || i.greaterThanOrEqual(o.quotient, this.reserveOf(t.currency).quotient)) throw new F;
                        var s = this.reserveOf(t.currency),
                            u = this.reserveOf(t.currency.equals(this.token0) ? this.token1 : this.token0),
                            d = i.multiply(i.multiply(u.quotient, o.quotient), v),
                            c = i.multiply(i.subtract(s.quotient, o.quotient), m),
                            l = r.CurrencyAmount.fromRawAmount(t.currency.equals(this.token0) ? this.token1 : this.token0, i.add(i.divide(d, c), b)),
                            p = f ? this.derivePercentAfterSellFees(l) : g;
                        return [p.greaterThan(g) ? r.CurrencyAmount.fromRawAmount(l.currency, i.add(l.divide(p).quotient, b)) : l, new e(u.add(l), s.subtract(t))]
                    }, t.getLiquidityMinted = function(e, t, f) {
                        e.currency.equals(this.liquidityToken) || a(!1);
                        var n, o = t.currency.sortsBefore(f.currency) ? [t, f] : [f, t];
                        if (o[0].currency.equals(this.token0) && o[1].currency.equals(this.token1) || a(!1), i.equal(e.quotient, y)) n = i.subtract(r.sqrt(i.multiply(o[0].quotient, o[1].quotient)), p);
                        else {
                            var s = i.divide(i.multiply(o[0].quotient, e.quotient), this.reserve0.quotient),
                                u = i.divide(i.multiply(o[1].quotient, e.quotient), this.reserve1.quotient);
                            n = i.lessThanOrEqual(s, u) ? s : u
                        }
                        if (!i.greaterThan(n, y)) throw new D;
                        return r.CurrencyAmount.fromRawAmount(this.liquidityToken, n)
                    }, t.getLiquidityValue = function(e, t, f, n, o) {
                        var s;
                        if (void 0 === n && (n = !1), this.involvesToken(e) || a(!1), t.currency.equals(this.liquidityToken) || a(!1), f.currency.equals(this.liquidityToken) || a(!1), i.lessThanOrEqual(f.quotient, t.quotient) || a(!1), n) {
                            o || a(!1);
                            var u = i.BigInt(o);
                            if (i.equal(u, y)) s = t;
                            else {
                                var d = r.sqrt(i.multiply(this.reserve0.quotient, this.reserve1.quotient)),
                                    c = r.sqrt(u);
                                if (i.greaterThan(d, c)) {
                                    var l = i.multiply(t.quotient, i.subtract(d, c)),
                                        p = i.add(i.multiply(d, h), c),
                                        b = i.divide(l, p);
                                    s = t.add(r.CurrencyAmount.fromRawAmount(this.liquidityToken, b))
                                } else s = t
                            }
                        } else s = t;
                        return r.CurrencyAmount.fromRawAmount(e, i.divide(i.multiply(f.quotient, this.reserveOf(e).quotient), s.quotient))
                    }, t.derivePercentAfterSellFees = function(e) {
                        var t = this.token0.wrapped.equals(e.wrapped.currency) ? this.token0.wrapped.sellFeeBps : this.token1.wrapped.sellFeeBps;
                        return null != t && t.gt(u.BigNumber.from(0)) ? w.subtract(new r.Percent(i.BigInt(t)).divide(T)) : g
                    }, t.derivePercentAfterBuyFees = function(e) {
                        var t = this.token0.wrapped.equals(e.wrapped.currency) ? this.token0.wrapped.buyFeeBps : this.token1.wrapped.buyFeeBps;
                        return null != t && t.gt(u.BigNumber.from(0)) ? w.subtract(new r.Percent(i.BigInt(t)).divide(T)) : g
                    }, I(e, [{
                        key: "token0Price",
                        get: function() {
                            var e = this.tokenAmounts[1].divide(this.tokenAmounts[0]);
                            return new r.Price(this.token0, this.token1, e.denominator, e.numerator)
                        }
                    }, {
                        key: "token1Price",
                        get: function() {
                            var e = this.tokenAmounts[0].divide(this.tokenAmounts[1]);
                            return new r.Price(this.token1, this.token0, e.denominator, e.numerator)
                        }
                    }, {
                        key: "chainId",
                        get: function() {
                            return this.token0.chainId
                        }
                    }, {
                        key: "token0",
                        get: function() {
                            return this.tokenAmounts[0].currency
                        }
                    }, {
                        key: "token1",
                        get: function() {
                            return this.tokenAmounts[1].currency
                        }
                    }, {
                        key: "reserve0",
                        get: function() {
                            return this.tokenAmounts[0]
                        }
                    }, {
                        key: "reserve1",
                        get: function() {
                            return this.tokenAmounts[1]
                        }
                    }]), e
                }(),
                L = ((x = {})[168587773] = {
                    router: "0xf11788d14EbE6abF4EA02e162C75AD938F1730C1",
                    bytecode: "0x60806040523480156200001157600080fd5b50604051469080605262002489823960520190506040518091039020600060405180828054600181600116156101000203166002900480156200008e5780601f106200006b5761010080835404028352918201916200008e565b820191906000526020600020905b81548152906001019060200180831162000079575b505060408051918290038220828201825260018352603160f81b602093840152815180840196909652858201527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc66060860152608085018690523060a0808701919091528151808703909101815260c08601808352815191840191909120600555600780546001600160a01b0319163390811790915563ad4d4e2960e01b9091529051909463ad4d4e29945060c4808201945090829003018186803b1580156200015757600080fd5b505afa1580156200016c573d6000803e3d6000fd5b505050506040513d60208110156200018357600080fd5b5051600880546001600160a01b0319166001600160a01b039283161790819055604080516306fdde0360e01b8152905191909216916306fdde03916004808301926000929190829003018186803b158015620001de57600080fd5b505afa158015620001f3573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405260208110156200021d57600080fd5b81019080805160405193929190846401000000008211156200023e57600080fd5b9083019060208201858111156200025457600080fd5b82516401000000008111828201881017156200026f57600080fd5b82525081516020918201929091019080838360005b838110156200029e57818101518382015260200162000284565b50505050905090810190601f168015620002cc5780820380516001836020036101000a031916815260200191505b5060405250508151620002e7926000925060200190620005f3565b50600060405160200180806b02332bb902bb930b83832b2160a51b815250600c0182805460018160011615610100020316600290048015620003635780601f106200034057610100808354040283529182019162000363565b820191906000526020600020905b8154815290600101906020018083116200034e575b505060408051601f1981840301815291905280516200038d935060009250602090910190620005f3565b50600860009054906101000a90046001600160a01b03166001600160a01b03166395d89b416040518163ffffffff1660e01b815260040160006040518083038186803b158015620003dd57600080fd5b505afa158015620003f2573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405260208110156200041c57600080fd5b81019080805160405193929190846401000000008211156200043d57600080fd5b9083019060208201858111156200045357600080fd5b82516401000000008111828201881017156200046e57600080fd5b82525081516020918201929091019080838360005b838110156200049d57818101518382015260200162000483565b50505050905090810190601f168015620004cb5780820380516001836020036101000a031916815260200191505b5060405250508151620004e6926001925060200190620005f3565b506001604051602001808061667760f01b81525060020182805460018160011615610100020316600290048015620005585780601f106200053557610100808354040283529182019162000558565b820191906000526020600020905b81548152906001019060200180831162000543575b505060408051601f19818403018152919052805162000582935060019250602090910190620005f3565b507343000000000000000000000000000000000000026001600160a01b0316634e606c476040518163ffffffff1660e01b8152600401600060405180830381600087803b158015620005d357600080fd5b505af1158015620005e8573d6000803e3d6000fd5b505050505062000698565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200063657805160ff191683800117855562000666565b8280016001018555821562000666579182015b828111156200066657825182559160200191906001019062000649565b506200067492915062000678565b5090565b6200069591905b808211156200067457600081556001016200067f565b90565b611de180620006a86000396000f3fe608060405234801561001057600080fd5b506004361061018d5760003560e01c806370a08231116100e3578063cd2002f51161008c578063de0e9a3e11610066578063de0e9a3e1461058e578063ea598cb0146105ab578063fc0c546a146105c85761018d565b8063cd2002f5146104c2578063d505accf146104f5578063dd62ed3e146105535761018d565b806395d89b41116100bd57806395d89b4114610450578063a9059cbb14610458578063c45a0155146104915761018d565b806370a08231146103b157806379cc6790146103e45780637ecebe001461041d5761018d565b806330adf81f1161014557806340c10f191161011f57806340c10f191461032057806342966c681461035b5780635dbd6059146103785761018d565b806330adf81f146102f2578063313ce567146102fa5780633644e515146103185761018d565b806318160ddd1161017657806318160ddd1461025c57806323b872dd1461027657806326599850146102b95761018d565b806306fdde0314610192578063095ea7b31461020f575b600080fd5b61019a6105d0565b6040805160208082528351818301528351919283929083019185019080838360005b838110156101d45781810151838201526020016101bc565b50505050905090810190601f1680156102015780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6102486004803603604081101561022557600080fd5b5073ffffffffffffffffffffffffffffffffffffffff813516906020013561067c565b604080519115158252519081900360200190f35b610264610693565b60408051918252519081900360200190f35b6102486004803603606081101561028c57600080fd5b5073ffffffffffffffffffffffffffffffffffffffff813581169160208101359091169060400135610699565b610264600480360360408110156102cf57600080fd5b508035906020013573ffffffffffffffffffffffffffffffffffffffff16610778565b61026461086b565b61030261088f565b6040805160ff9092168252519081900360200190f35b610264610894565b6103596004803603604081101561033657600080fd5b5073ffffffffffffffffffffffffffffffffffffffff813516906020013561089a565b005b6103596004803603602081101561037157600080fd5b5035610b8e565b6102646004803603604081101561038e57600080fd5b508035906020013573ffffffffffffffffffffffffffffffffffffffff16610bd2565b610264600480360360208110156103c757600080fd5b503573ffffffffffffffffffffffffffffffffffffffff16610cae565b610359600480360360408110156103fa57600080fd5b5073ffffffffffffffffffffffffffffffffffffffff8135169060200135610cc0565b6102646004803603602081101561043357600080fd5b503573ffffffffffffffffffffffffffffffffffffffff16610fb4565b61019a610fc6565b6102486004803603604081101561046e57600080fd5b5073ffffffffffffffffffffffffffffffffffffffff813516906020013561103e565b61049961104b565b6040805173ffffffffffffffffffffffffffffffffffffffff9092168252519081900360200190f35b610264600480360360208110156104d857600080fd5b503573ffffffffffffffffffffffffffffffffffffffff16611067565b610359600480360360e081101561050b57600080fd5b5073ffffffffffffffffffffffffffffffffffffffff813581169160208101359091169060408101359060608101359060ff6080820135169060a08101359060c001356112ac565b6102646004803603604081101561056957600080fd5b5073ffffffffffffffffffffffffffffffffffffffff81358116916020013516611578565b610264600480360360208110156105a457600080fd5b5035611595565b610264600480360360208110156105c157600080fd5b50356115a1565b6104996115ad565b6000805460408051602060026001851615610100027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0190941693909304601f810184900484028201840190925281815292918301828280156106745780601f1061064957610100808354040283529160200191610674565b820191906000526020600020905b81548152906001019060200180831161065757829003601f168201915b505050505081565b60006106893384846115c9565b5060015b92915050565b60025481565b73ffffffffffffffffffffffffffffffffffffffff831660009081526004602090815260408083203384529091528120547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff146107635773ffffffffffffffffffffffffffffffffffffffff84166000908152600460209081526040808320338452909152902054610731908363ffffffff61163816565b73ffffffffffffffffffffffffffffffffffffffff851660009081526004602090815260408083203384529091529020555b61076e8484846116aa565b5060019392505050565b60008083116107e857604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601a60248201527f4665773a2063616e27742077726170207a65726f20746f6b656e000000000000604482015290519081900360640190fd5b60085461080d9073ffffffffffffffffffffffffffffffffffffffff1633308661178b565b610817828461195b565b60408051848152905173ffffffffffffffffffffffffffffffffffffffff84169133917feb5580a0908e96b78bdcb1a3c5638793b491a6073c3ff56061a069cb205817739181900360200190a35090919050565b7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c981565b601281565b60055481565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f2f4eb266040518163ffffffff1660e01b815260040160206040518083038186803b15801561090257600080fd5b505afa158015610916573d6000803e3d6000fd5b505050506040513d602081101561092c57600080fd5b5051604080517faa271e1a000000000000000000000000000000000000000000000000000000008152336004820152905173ffffffffffffffffffffffffffffffffffffffff9092169163aa271e1a91602480820192602092909190829003018186803b15801561099c57600080fd5b505afa1580156109b0573d6000803e3d6000fd5b505050506040513d60208110156109c657600080fd5b5051610a3357604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f436f72655265663a2043616c6c6572206973206e6f742061206d696e74657200604482015290519081900360640190fd5b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635c975abb6040518163ffffffff1660e01b815260040160206040518083038186803b158015610a9b57600080fd5b505afa158015610aaf573d6000803e3d6000fd5b505050506040513d6020811015610ac557600080fd5b505115610b3357604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f436f72655265663a2043616c6c65722069732070617573656400000000000000604482015290519081900360640190fd5b610b3d828261195b565b60408051828152905173ffffffffffffffffffffffffffffffffffffffff84169133917fbcad3d7d3dfccb90d49c6063bf70f828901fefc88937d90af74e58e6e55bc39d9181900360200190a35050565b610b983382611a0c565b604080518281529051339182917fdbdf9b8e4b75e75b162d151ec8fc7f0561cabab5fcccfa2600be62223e4300c49181900360200190a350565b6000808311610c2c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526023815260200180611d3b6023913960400191505060405180910390fd5b610c363384611a0c565b600854610c5a9073ffffffffffffffffffffffffffffffffffffffff168385611ad0565b60408051848152905173ffffffffffffffffffffffffffffffffffffffff84169133917f12d6424519838e57637c6db9df31af32d7926ff0a53dd37007c191d0fe3028189181900360200190a35090919050565b60036020526000908152604090205481565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f2f4eb266040518163ffffffff1660e01b815260040160206040518083038186803b158015610d2857600080fd5b505afa158015610d3c573d6000803e3d6000fd5b505050506040513d6020811015610d5257600080fd5b5051604080517f4334614a000000000000000000000000000000000000000000000000000000008152336004820152905173ffffffffffffffffffffffffffffffffffffffff90921691634334614a91602480820192602092909190829003018186803b158015610dc257600080fd5b505afa158015610dd6573d6000803e3d6000fd5b505050506040513d6020811015610dec57600080fd5b5051610e5957604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f436f72655265663a2043616c6c6572206973206e6f742061206275726e657200604482015290519081900360640190fd5b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635c975abb6040518163ffffffff1660e01b815260040160206040518083038186803b158015610ec157600080fd5b505afa158015610ed5573d6000803e3d6000fd5b505050506040513d6020811015610eeb57600080fd5b505115610f5957604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f436f72655265663a2043616c6c65722069732070617573656400000000000000604482015290519081900360640190fd5b610f638282611a0c565b60408051828152905173ffffffffffffffffffffffffffffffffffffffff84169133917fdbdf9b8e4b75e75b162d151ec8fc7f0561cabab5fcccfa2600be62223e4300c49181900360200190a35050565b60066020526000908152604090205481565b60018054604080516020600284861615610100027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0190941693909304601f810184900484028201840190925281815292918301828280156106745780601f1061064957610100808354040283529160200191610674565b60006106893384846116aa565b60075473ffffffffffffffffffffffffffffffffffffffff1681565b600754604080517ff2f4eb26000000000000000000000000000000000000000000000000000000008152905160009273ffffffffffffffffffffffffffffffffffffffff169163f2f4eb26916004808301926020929190829003018186803b1580156110d257600080fd5b505afa1580156110e6573d6000803e3d6000fd5b505050506040513d60208110156110fc57600080fd5b5051604080517fe43581b8000000000000000000000000000000000000000000000000000000008152336004820152905173ffffffffffffffffffffffffffffffffffffffff9092169163e43581b891602480820192602092909190829003018186803b15801561116c57600080fd5b505afa158015611180573d6000803e3d6000fd5b505050506040513d602081101561119657600080fd5b50516111ed576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180611d5e6021913960400191505060405180910390fd5b604080517f662aa11d00000000000000000000000000000000000000000000000000000000815260006004820181905273ffffffffffffffffffffffffffffffffffffffff8516602483015291517343000000000000000000000000000000000000029263662aa11d92604480820193602093909283900390910190829087803b15801561127a57600080fd5b505af115801561128e573d6000803e3d6000fd5b505050506040513d60208110156112a457600080fd5b505192915050565b4284101561131b57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f4665773a20455850495245440000000000000000000000000000000000000000604482015290519081900360640190fd5b60055473ffffffffffffffffffffffffffffffffffffffff80891660008181526006602090815260408083208054600180820190925582517f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98186015280840196909652958d166060860152608085018c905260a085019590955260c08085018b90528151808603909101815260e0850182528051908301207f19010000000000000000000000000000000000000000000000000000000000006101008601526101028501969096526101228085019690965280518085039096018652610142840180825286519683019690962095839052610162840180825286905260ff89166101828501526101a284018890526101c28401879052519193926101e2808201937fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081019281900390910190855afa15801561147c573d6000803e3d6000fd5b50506040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0015191505073ffffffffffffffffffffffffffffffffffffffff8116158015906114f757508873ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16145b61156257604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f4665773a20494e56414c49445f5349474e415455524500000000000000000000604482015290519081900360640190fd5b61156d8989896115c9565b505050505050505050565b600460209081526000928352604080842090915290825290205481565b600061068d8233610bd2565b600061068d8233610778565b60085473ffffffffffffffffffffffffffffffffffffffff1681565b73ffffffffffffffffffffffffffffffffffffffff808416600081815260046020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b8082038281111561068d57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601560248201527f64732d6d6174682d7375622d756e646572666c6f770000000000000000000000604482015290519081900360640190fd5b73ffffffffffffffffffffffffffffffffffffffff83166000908152600360205260409020546116e0908263ffffffff61163816565b73ffffffffffffffffffffffffffffffffffffffff8085166000908152600360205260408082209390935590841681522054611722908263ffffffff611c9716565b73ffffffffffffffffffffffffffffffffffffffff80841660008181526003602090815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b6040805173ffffffffffffffffffffffffffffffffffffffff85811660248301528481166044830152606480830185905283518084039091018152608490920183526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f23b872dd0000000000000000000000000000000000000000000000000000000017815292518251600094606094938a169392918291908083835b6020831061186957805182527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0909201916020918201910161182c565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d80600081146118cb576040519150601f19603f3d011682016040523d82523d6000602084013e6118d0565b606091505b50915091508180156118fe5750805115806118fe57508080602001905160208110156118fb57600080fd5b50515b611953576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526031815260200180611d0a6031913960400191505060405180910390fd5b505050505050565b60025461196e908263ffffffff611c9716565b60025573ffffffffffffffffffffffffffffffffffffffff82166000908152600360205260409020546119a7908263ffffffff611c9716565b73ffffffffffffffffffffffffffffffffffffffff831660008181526003602090815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b73ffffffffffffffffffffffffffffffffffffffff8216600090815260036020526040902054611a42908263ffffffff61163816565b73ffffffffffffffffffffffffffffffffffffffff8316600090815260036020526040902055600254611a7b908263ffffffff61163816565b60025560408051828152905160009173ffffffffffffffffffffffffffffffffffffffff8516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a35050565b6040805173ffffffffffffffffffffffffffffffffffffffff8481166024830152604480830185905283518084039091018152606490920183526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fa9059cbb00000000000000000000000000000000000000000000000000000000178152925182516000946060949389169392918291908083835b60208310611ba657805182527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe09092019160209182019101611b69565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114611c08576040519150601f19603f3d011682016040523d82523d6000602084013e611c0d565b606091505b5091509150818015611c3b575080511580611c3b5750808060200190516020811015611c3857600080fd5b50515b611c90576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602d815260200180611d7f602d913960400191505060405180910390fd5b5050505050565b8082018281101561068d57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f64732d6d6174682d6164642d6f766572666c6f77000000000000000000000000604482015290519081900360640190fdfe5472616e7366657248656c7065723a3a7472616e7366657246726f6d3a207472616e7366657246726f6d206661696c65644665773a207a65726f20616d6f756e7420756e77726170206e6f7420616c6c6f776564436f72655265663a2043616c6c6572206973206e6f74206120676f7665726e6f725472616e7366657248656c7065723a3a736166655472616e736665723a207472616e73666572206661696c6564a2646970667358221220d7fd196a2dee0bd2daa50f4be8ce4153534129a912325a54effe1fa17da46a6e64736f6c63430006060033454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429"
                }, x[11155111] = {
                    router: "0x226e65279E177A779522864Ce1dE40c85E2C08A5",
                    bytecode: ""
                }, x[81457] = {
                    router: "0x455b20131D59f01d082df1225154fDA813E8CeE9",
                    bytecode: "0x60806040523480156200001157600080fd5b50600080546001600160a01b031916331781556040805163388a0bbd60e11b8152905173430000000000000000000000000000000000000292637114177a926004808201939182900301818387803b1580156200006d57600080fd5b505af115801562000082573d6000803e3d6000fd5b505050507343000000000000000000000000000000000000026001600160a01b0316634e606c476040518163ffffffff1660e01b8152600401600060405180830381600087803b158015620000d657600080fd5b505af1158015620000eb573d6000803e3d6000fd5b5050600880546001600160a01b031916339081179091556040805163ad4d4e2960e01b8152905146945091925063ad4d4e29916004808301926020929190829003018186803b1580156200013e57600080fd5b505afa15801562000153573d6000803e3d6000fd5b505050506040513d60208110156200016a57600080fd5b5051600980546001600160a01b0319166001600160a01b039283161790819055604080516306fdde0360e01b8152905191909216916306fdde03916004808301926000929190829003018186803b158015620001c557600080fd5b505afa158015620001da573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405260208110156200020457600080fd5b81019080805160405193929190846401000000008211156200022557600080fd5b9083019060208201858111156200023b57600080fd5b82516401000000008111828201881017156200025657600080fd5b82525081516020918201929091019080838360005b83811015620002855781810151838201526020016200026b565b50505050905090810190601f168015620002b35780820380516001836020036101000a031916815260200191505b5060405250505060405160200180806b02332bb902bb930b83832b2160a51b815250600c0182805190602001908083835b60208310620003055780518252601f199092019160209182019101620002e4565b6001836020036101000a038019825116818451168082178552505050505050905001915050604051602081830303815290604052600190805190602001906200035092919062000623565b50600960009054906101000a90046001600160a01b03166001600160a01b03166395d89b416040518163ffffffff1660e01b815260040160006040518083038186803b158015620003a057600080fd5b505afa158015620003b5573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526020811015620003df57600080fd5b81019080805160405193929190846401000000008211156200040057600080fd5b9083019060208201858111156200041657600080fd5b82516401000000008111828201881017156200043157600080fd5b82525081516020918201929091019080838360005b838110156200046057818101518382015260200162000446565b50505050905090810190601f1680156200048e5780820380516001836020036101000a031916815260200191505b50604052505050604051602001808061667760f01b81525060020182805190602001908083835b60208310620004d65780518252601f199092019160209182019101620004b5565b6001836020036101000a038019825116818451168082178552505050505050905001915050604051602081830303815290604052600290805190602001906200052192919062000623565b5060405180605262002c55823960520190506040518091039020600160405180828054600181600116156101000203166002900480156200059c5780601f10620005795761010080835404028352918201916200059c565b820191906000526020600020905b81548152906001019060200180831162000587575b505060408051918290038220828201825260018352603160f81b602093840152815180840196909652858201527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6606086015260808501959095523060a0808601919091528551808603909101815260c090940190945250508051910120600655620006c8565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200066657805160ff191683800117855562000696565b8280016001018555821562000696579182015b828111156200069657825182559160200191906001019062000679565b50620006a4929150620006a8565b5090565b620006c591905b80821115620006a45760008155600101620006af565b90565b61257d80620006d86000396000f3fe608060405234801561001057600080fd5b50600436106101c45760003560e01c806379cc6790116100f9578063d0ebdbe711610097578063de0e9a3e11610071578063de0e9a3e14610643578063e220831d14610660578063ea598cb01461069b578063fc0c546a146106b8576101c4565b8063d0ebdbe714610577578063d505accf146105aa578063dd62ed3e14610608576101c4565b806397d75776116100d357806397d75776146104f3578063a9059cbb146104fb578063c45a015514610534578063c8b11dfe1461053c576101c4565b806379cc67901461047f5780637ecebe00146104b857806395d89b41146104eb576101c4565b8063313ce5671161016657806342966c681161014057806342966c68146103c5578063481c6a75146103e25780635dbd60591461041357806370a082311461044c576101c4565b8063313ce567146103665780633644e5151461038457806340c10f191461038c576101c4565b806323b872dd116101a257806323b872dd146102ad57806326599850146102f05780632d195bd21461032957806330adf81f1461035e576101c4565b806306fdde03146101c9578063095ea7b31461024657806318160ddd14610293575b600080fd5b6101d16106c0565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561020b5781810151838201526020016101f3565b50505050905090810190601f1680156102385780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61027f6004803603604081101561025c57600080fd5b5073ffffffffffffffffffffffffffffffffffffffff813516906020013561076b565b604080519115158252519081900360200190f35b61029b610782565b60408051918252519081900360200190f35b61027f600480360360608110156102c357600080fd5b5073ffffffffffffffffffffffffffffffffffffffff813581169160208101359091169060400135610788565b61029b6004803603604081101561030657600080fd5b508035906020013573ffffffffffffffffffffffffffffffffffffffff16610867565b61035c6004803603602081101561033f57600080fd5b503573ffffffffffffffffffffffffffffffffffffffff1661095a565b005b61029b610b55565b61036e610b79565b6040805160ff9092168252519081900360200190f35b61029b610b7e565b61035c600480360360408110156103a257600080fd5b5073ffffffffffffffffffffffffffffffffffffffff8135169060200135610b84565b61035c600480360360208110156103db57600080fd5b5035610e78565b6103ea610ebc565b6040805173ffffffffffffffffffffffffffffffffffffffff9092168252519081900360200190f35b61029b6004803603604081101561042957600080fd5b508035906020013573ffffffffffffffffffffffffffffffffffffffff16610ed8565b61029b6004803603602081101561046257600080fd5b503573ffffffffffffffffffffffffffffffffffffffff16610fb4565b61035c6004803603604081101561049557600080fd5b5073ffffffffffffffffffffffffffffffffffffffff8135169060200135610fc6565b61029b600480360360208110156104ce57600080fd5b503573ffffffffffffffffffffffffffffffffffffffff166112ba565b6101d16112cc565b6103ea611342565b61027f6004803603604081101561051157600080fd5b5073ffffffffffffffffffffffffffffffffffffffff813516906020013561135a565b6103ea611367565b61029b6004803603604081101561055257600080fd5b5073ffffffffffffffffffffffffffffffffffffffff81351690602001351515611383565b61035c6004803603602081101561058d57600080fd5b503573ffffffffffffffffffffffffffffffffffffffff16611666565b61035c600480360360e08110156105c057600080fd5b5073ffffffffffffffffffffffffffffffffffffffff813581169160208101359091169060408101359060608101359060ff6080820135169060a08101359060c00135611845565b61029b6004803603604081101561061e57600080fd5b5073ffffffffffffffffffffffffffffffffffffffff81358116916020013516611b11565b61029b6004803603602081101561065957600080fd5b5035611b2e565b61035c6004803603604081101561067657600080fd5b5073ffffffffffffffffffffffffffffffffffffffff81358116916020013516611b3a565b61029b600480360360208110156106b157600080fd5b5035611d6d565b6103ea611d79565b60018054604080516020600284861615610100027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0190941693909304601f810184900484028201840190925281815292918301828280156107635780601f1061073857610100808354040283529160200191610763565b820191906000526020600020905b81548152906001019060200180831161074657829003601f168201915b505050505081565b6000610778338484611d95565b5060015b92915050565b60035481565b73ffffffffffffffffffffffffffffffffffffffff831660009081526005602090815260408083203384529091528120547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff146108525773ffffffffffffffffffffffffffffffffffffffff84166000908152600560209081526040808320338452909152902054610820908363ffffffff611e0416565b73ffffffffffffffffffffffffffffffffffffffff851660009081526005602090815260408083203384529091529020555b61085d848484611e76565b5060019392505050565b60008083116108d757604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601a60248201527f4665773a2063616e27742077726170207a65726f20746f6b656e000000000000604482015290519081900360640190fd5b6009546108fc9073ffffffffffffffffffffffffffffffffffffffff16333086611f57565b610906828461211f565b60408051848152905173ffffffffffffffffffffffffffffffffffffffff84169133917feb5580a0908e96b78bdcb1a3c5638793b491a6073c3ff56061a069cb205817739181900360200190a35090919050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f2f4eb266040518163ffffffff1660e01b815260040160206040518083038186803b1580156109c157600080fd5b505afa1580156109d5573d6000803e3d6000fd5b505050506040513d60208110156109eb57600080fd5b5051604080517fe43581b8000000000000000000000000000000000000000000000000000000008152336004820152905173ffffffffffffffffffffffffffffffffffffffff9092169163e43581b891602480820192602092909190829003018186803b158015610a5b57600080fd5b505afa158015610a6f573d6000803e3d6000fd5b505050506040513d6020811015610a8557600080fd5b5051610af257604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600960248201527f464f5242494444454e0000000000000000000000000000000000000000000000604482015290519081900360640190fd5b8073ffffffffffffffffffffffffffffffffffffffff16634e606c476040518163ffffffff1660e01b8152600401600060405180830381600087803b158015610b3a57600080fd5b505af1158015610b4e573d6000803e3d6000fd5b5050505050565b7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c981565b601281565b60065481565b600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f2f4eb266040518163ffffffff1660e01b815260040160206040518083038186803b158015610bec57600080fd5b505afa158015610c00573d6000803e3d6000fd5b505050506040513d6020811015610c1657600080fd5b5051604080517faa271e1a000000000000000000000000000000000000000000000000000000008152336004820152905173ffffffffffffffffffffffffffffffffffffffff9092169163aa271e1a91602480820192602092909190829003018186803b158015610c8657600080fd5b505afa158015610c9a573d6000803e3d6000fd5b505050506040513d6020811015610cb057600080fd5b5051610d1d57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f436f72655265663a2043616c6c6572206973206e6f742061206d696e74657200604482015290519081900360640190fd5b600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635c975abb6040518163ffffffff1660e01b815260040160206040518083038186803b158015610d8557600080fd5b505afa158015610d99573d6000803e3d6000fd5b505050506040513d6020811015610daf57600080fd5b505115610e1d57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f436f72655265663a2043616c6c65722069732070617573656400000000000000604482015290519081900360640190fd5b610e27828261211f565b60408051828152905173ffffffffffffffffffffffffffffffffffffffff84169133917fbcad3d7d3dfccb90d49c6063bf70f828901fefc88937d90af74e58e6e55bc39d9181900360200190a35050565b610e8233826121d0565b604080518281529051339182917fdbdf9b8e4b75e75b162d151ec8fc7f0561cabab5fcccfa2600be62223e4300c49181900360200190a350565b60005473ffffffffffffffffffffffffffffffffffffffff1681565b6000808311610f32576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260238152602001806124f86023913960400191505060405180910390fd5b610f3c33846121d0565b600954610f609073ffffffffffffffffffffffffffffffffffffffff168385612294565b60408051848152905173ffffffffffffffffffffffffffffffffffffffff84169133917f12d6424519838e57637c6db9df31af32d7926ff0a53dd37007c191d0fe3028189181900360200190a35090919050565b60046020526000908152604090205481565b600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f2f4eb266040518163ffffffff1660e01b815260040160206040518083038186803b15801561102e57600080fd5b505afa158015611042573d6000803e3d6000fd5b505050506040513d602081101561105857600080fd5b5051604080517f4334614a000000000000000000000000000000000000000000000000000000008152336004820152905173ffffffffffffffffffffffffffffffffffffffff90921691634334614a91602480820192602092909190829003018186803b1580156110c857600080fd5b505afa1580156110dc573d6000803e3d6000fd5b505050506040513d60208110156110f257600080fd5b505161115f57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f436f72655265663a2043616c6c6572206973206e6f742061206275726e657200604482015290519081900360640190fd5b600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635c975abb6040518163ffffffff1660e01b815260040160206040518083038186803b1580156111c757600080fd5b505afa1580156111db573d6000803e3d6000fd5b505050506040513d60208110156111f157600080fd5b50511561125f57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f436f72655265663a2043616c6c65722069732070617573656400000000000000604482015290519081900360640190fd5b61126982826121d0565b60408051828152905173ffffffffffffffffffffffffffffffffffffffff84169133917fdbdf9b8e4b75e75b162d151ec8fc7f0561cabab5fcccfa2600be62223e4300c49181900360200190a35050565b60076020526000908152604090205481565b600280546040805160206001841615610100027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01909316849004601f810184900484028201840190925281815292918301828280156107635780601f1061073857610100808354040283529160200191610763565b73430000000000000000000000000000000000000281565b6000610778338484611e76565b60085473ffffffffffffffffffffffffffffffffffffffff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f2f4eb266040518163ffffffff1660e01b815260040160206040518083038186803b1580156113ec57600080fd5b505afa158015611400573d6000803e3d6000fd5b505050506040513d602081101561141657600080fd5b5051604080517fe43581b8000000000000000000000000000000000000000000000000000000008152336004820152905173ffffffffffffffffffffffffffffffffffffffff9092169163e43581b891602480820192602092909190829003018186803b15801561148657600080fd5b505afa15801561149a573d6000803e3d6000fd5b505050506040513d60208110156114b057600080fd5b505161151d57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600960248201527f464f5242494444454e0000000000000000000000000000000000000000000000604482015290519081900360640190fd5b81156115de57604080517f662aa11d00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff8516602482015290517343000000000000000000000000000000000000029163662aa11d9160448083019260209291908290030181600087803b1580156115ab57600080fd5b505af11580156115bf573d6000803e3d6000fd5b505050506040513d60208110156115d557600080fd5b5051905061077c565b604080517f954fa5ee00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff8516602482015290517343000000000000000000000000000000000000029163954fa5ee9160448083019260209291908290030181600087803b1580156115ab57600080fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f2f4eb266040518163ffffffff1660e01b815260040160206040518083038186803b1580156116cd57600080fd5b505afa1580156116e1573d6000803e3d6000fd5b505050506040513d60208110156116f757600080fd5b5051604080517fe43581b8000000000000000000000000000000000000000000000000000000008152336004820152905173ffffffffffffffffffffffffffffffffffffffff9092169163e43581b891602480820192602092909190829003018186803b15801561176757600080fd5b505afa15801561177b573d6000803e3d6000fd5b505050506040513d602081101561179157600080fd5b50516117fe57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600960248201527f464f5242494444454e0000000000000000000000000000000000000000000000604482015290519081900360640190fd5b600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b428410156118b457604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f4665773a20455850495245440000000000000000000000000000000000000000604482015290519081900360640190fd5b60065473ffffffffffffffffffffffffffffffffffffffff80891660008181526007602090815260408083208054600180820190925582517f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98186015280840196909652958d166060860152608085018c905260a085019590955260c08085018b90528151808603909101815260e0850182528051908301207f19010000000000000000000000000000000000000000000000000000000000006101008601526101028501969096526101228085019690965280518085039096018652610142840180825286519683019690962095839052610162840180825286905260ff89166101828501526101a284018890526101c28401879052519193926101e2808201937fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081019281900390910190855afa158015611a15573d6000803e3d6000fd5b50506040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0015191505073ffffffffffffffffffffffffffffffffffffffff811615801590611a9057508873ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16145b611afb57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f4665773a20494e56414c49445f5349474e415455524500000000000000000000604482015290519081900360640190fd5b611b06898989611d95565b505050505050505050565b600560209081526000928352604080842090915290825290205481565b600061077c8233610ed8565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f2f4eb266040518163ffffffff1660e01b815260040160206040518083038186803b158015611ba157600080fd5b505afa158015611bb5573d6000803e3d6000fd5b505050506040513d6020811015611bcb57600080fd5b5051604080517fe43581b8000000000000000000000000000000000000000000000000000000008152336004820152905173ffffffffffffffffffffffffffffffffffffffff9092169163e43581b891602480820192602092909190829003018186803b158015611c3b57600080fd5b505afa158015611c4f573d6000803e3d6000fd5b505050506040513d6020811015611c6557600080fd5b5051611cd257604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600960248201527f464f5242494444454e0000000000000000000000000000000000000000000000604482015290519081900360640190fd5b8173ffffffffffffffffffffffffffffffffffffffff166336b91f2b826040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050600060405180830381600087803b158015611d5157600080fd5b505af1158015611d65573d6000803e3d6000fd5b505050505050565b600061077c8233610867565b60095473ffffffffffffffffffffffffffffffffffffffff1681565b73ffffffffffffffffffffffffffffffffffffffff808416600081815260056020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b8082038281111561077c57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601560248201527f64732d6d6174682d7375622d756e646572666c6f770000000000000000000000604482015290519081900360640190fd5b73ffffffffffffffffffffffffffffffffffffffff8316600090815260046020526040902054611eac908263ffffffff611e0416565b73ffffffffffffffffffffffffffffffffffffffff8085166000908152600460205260408082209390935590841681522054611eee908263ffffffff61245416565b73ffffffffffffffffffffffffffffffffffffffff80841660008181526004602090815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b6040805173ffffffffffffffffffffffffffffffffffffffff85811660248301528481166044830152606480830185905283518084039091018152608490920183526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f23b872dd0000000000000000000000000000000000000000000000000000000017815292518251600094606094938a169392918291908083835b6020831061203557805182527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe09092019160209182019101611ff8565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114612097576040519150601f19603f3d011682016040523d82523d6000602084013e61209c565b606091505b50915091508180156120ca5750805115806120ca57508080602001905160208110156120c757600080fd5b50515b611d65576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260318152602001806124c76031913960400191505060405180910390fd5b600354612132908263ffffffff61245416565b60035573ffffffffffffffffffffffffffffffffffffffff821660009081526004602052604090205461216b908263ffffffff61245416565b73ffffffffffffffffffffffffffffffffffffffff831660008181526004602090815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b73ffffffffffffffffffffffffffffffffffffffff8216600090815260046020526040902054612206908263ffffffff611e0416565b73ffffffffffffffffffffffffffffffffffffffff831660009081526004602052604090205560035461223f908263ffffffff611e0416565b60035560408051828152905160009173ffffffffffffffffffffffffffffffffffffffff8516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a35050565b6040805173ffffffffffffffffffffffffffffffffffffffff8481166024830152604480830185905283518084039091018152606490920183526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fa9059cbb00000000000000000000000000000000000000000000000000000000178152925182516000946060949389169392918291908083835b6020831061236a57805182527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0909201916020918201910161232d565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d80600081146123cc576040519150601f19603f3d011682016040523d82523d6000602084013e6123d1565b606091505b50915091508180156123ff5750805115806123ff57508080602001905160208110156123fc57600080fd5b50515b610b4e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602d81526020018061251b602d913960400191505060405180910390fd5b8082018281101561077c57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f64732d6d6174682d6164642d6f766572666c6f77000000000000000000000000604482015290519081900360640190fdfe5472616e7366657248656c7065723a3a7472616e7366657246726f6d3a207472616e7366657246726f6d206661696c65644665773a207a65726f20616d6f756e7420756e77726170206e6f7420616c6c6f7765645472616e7366657248656c7065723a3a736166655472616e736665723a207472616e73666572206661696c6564a26469706673582212203fc33f19631f6982b9939229a37c5e4a768f74907515d9ac5ebe0d64086ae03d64736f6c63430006060033454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429"
                }, x),
                q = function(e) {
                    if (!(e in L)) throw Error("Few wrapped token address not deployed on chain " + e);
                    return L[e].router
                },
                U = function(e) {
                    if (!(e in L)) throw Error("Few wrapped token bytecode not deployed on chain " + e);
                    return L[e].bytecode
                },
                V = function() {
                    function e(e, t) {
                        this.token = e, this.chainId = t
                    }
                    var t = e.prototype;
                    return t.getFewCreate2Address = function(e, t) {
                        var f = d.utils.defaultAbiCoder.encode(["address"], [e]),
                            n = "0x" + ["0xff", q(t), d.utils.keccak256(f), d.utils.keccak256(U(t))].map(function(e) {
                                return e.slice(2)
                            }).join("");
                        return d.utils.getAddress("0x" + d.utils.keccak256(n).slice(-40))
                    }, t.hasFewPrefix = function() {
                        var e, t, f, n, r = null != (e = null == (t = this.token.name) ? void 0 : t.startsWith("Few Wrapped ")) && e,
                            i = null != (f = null == (n = this.token.symbol) ? void 0 : n.startsWith("fw")) && f;
                        return r || i
                    }, t.getFewTokenAddress = function() {
                        return this.hasFewPrefix() ? this.token.address : this.getFewCreate2Address(this.token.address, this.chainId)
                    }, t.getFewSymbol = function() {
                        return this.hasFewPrefix() ? this.token.symbol : "fw" + this.token.symbol
                    }, t.getFewTokenName = function() {
                        return this.hasFewPrefix() ? this.token.name : "Few Wrapped " + this.token.name
                    }, t.getFewToken = function() {
                        var e = this.getFewTokenAddress();
                        return new r.Token(this.token.chainId, e, this.token.decimals, this.getFewSymbol(), this.getFewTokenName())
                    }, e
                }();

            function G(e, t) {
                return new V(e, t).getFewToken()
            }
            var j = function() {
                function e(e, t, f) {
                    this._midPrice = null, e.length > 0 || a(!1);
                    var n = e[0].chainId;
                    e.every(function(e) {
                        return e.chainId === n
                    }) || a(!1);
                    for (var r, i = [G(t.wrapped.wrapped, n)], o = M(e.entries()); !(r = o()).done;) {
                        var s = r.value,
                            u = s[1],
                            d = i[s[0]];
                        d.equals(u.token0) || d.equals(u.token1) || a(!1);
                        var c = d.equals(u.token0) ? u.token1 : u.token0;
                        i.push(c)
                    }
                    this.pairs = e, this.path = i, this.input = t, this.output = f
                }
                return I(e, [{
                    key: "midPrice",
                    get: function() {
                        if (null !== this._midPrice) return this._midPrice;
                        for (var e, t = [], f = M(this.pairs.entries()); !(e = f()).done;) {
                            var n = e.value,
                                i = n[1];
                            t.push(this.path[n[0]].equals(i.token0) ? new r.Price(i.reserve0.currency, i.reserve1.currency, i.reserve0.quotient, i.reserve1.quotient) : new r.Price(i.reserve1.currency, i.reserve0.currency, i.reserve1.quotient, i.reserve0.quotient))
                        }
                        var a = t.slice(1).reduce(function(e, t) {
                            return e.multiply(t)
                        }, t[0]);
                        return this._midPrice = new r.Price(this.input, this.output, a.denominator, a.numerator)
                    }
                }, {
                    key: "chainId",
                    get: function() {
                        return this.pairs[0].chainId
                    }
                }]), e
            }();

            function $(e, t) {
                return e.inputAmount.currency.equals(t.inputAmount.currency) || a(!1), e.outputAmount.currency.equals(t.outputAmount.currency) || a(!1), e.outputAmount.equalTo(t.outputAmount) ? e.inputAmount.equalTo(t.inputAmount) ? 0 : e.inputAmount.lessThan(t.inputAmount) ? -1 : 1 : e.outputAmount.lessThan(t.outputAmount) ? 1 : -1
            }

            function H(e, t) {
                var f = $(e, t);
                return 0 !== f ? f : e.priceImpact.lessThan(t.priceImpact) ? -1 : e.priceImpact.greaterThan(t.priceImpact) ? 1 : e.route.path.length - t.route.path.length
            }
            var W = function() {
                function e(e, t, f) {
                    this.route = e, this.tradeType = f;
                    var n = Array(e.path.length),
                        i = e.pairs[0].chainId;
                    if (e.pairs.every(function(e) {
                            return e.chainId === i
                        }) || a(!1), f === r.TradeType.EXACT_INPUT) {
                        var o = G(t.currency.wrapped, i);
                        n[0] = r.CurrencyAmount.fromFractionalAmount(o, t.numerator, t.denominator);
                        for (var s = 0; s < e.path.length - 1; s++) {
                            var u = e.pairs[s].getOutputAmount(n[s]);
                            n[s + 1] = u[0]
                        }
                        this.inputAmount = r.CurrencyAmount.fromFractionalAmount(e.input, t.numerator, t.denominator), this.outputAmount = r.CurrencyAmount.fromFractionalAmount(e.output, n[n.length - 1].numerator, n[n.length - 1].denominator)
                    } else {
                        var d = G(t.currency.wrapped, i);
                        n[n.length - 1] = r.CurrencyAmount.fromFractionalAmount(d, t.numerator, t.denominator);
                        for (var c = e.path.length - 1; c > 0; c--) {
                            var l = e.pairs[c - 1].getInputAmount(n[c]);
                            n[c - 1] = l[0]
                        }
                        this.inputAmount = r.CurrencyAmount.fromFractionalAmount(e.input, n[0].numerator, n[0].denominator), this.outputAmount = r.CurrencyAmount.fromFractionalAmount(e.output, t.numerator, t.denominator)
                    }
                    this.executionPrice = new r.Price(this.inputAmount.currency, this.outputAmount.currency, this.inputAmount.quotient, this.outputAmount.quotient), this.priceImpact = r.computePriceImpact(e.midPrice, this.inputAmount, this.outputAmount)
                }
                e.exactIn = function(t, f) {
                    return new e(t, f, r.TradeType.EXACT_INPUT)
                }, e.exactOut = function(t, f) {
                    return new e(t, f, r.TradeType.EXACT_OUTPUT)
                };
                var t = e.prototype;
                return t.minimumAmountOut = function(e) {
                    if (e.lessThan(y) && a(!1), this.tradeType === r.TradeType.EXACT_OUTPUT) return this.outputAmount;
                    var t = new r.Fraction(b).add(e).invert().multiply(this.outputAmount.quotient).quotient;
                    return r.CurrencyAmount.fromRawAmount(this.outputAmount.currency, t)
                }, t.maximumAmountIn = function(e) {
                    if (e.lessThan(y) && a(!1), this.tradeType === r.TradeType.EXACT_INPUT) return this.inputAmount;
                    var t = new r.Fraction(b).add(e).multiply(this.inputAmount.quotient).quotient;
                    return r.CurrencyAmount.fromRawAmount(this.inputAmount.currency, t)
                }, e.bestTradeExactIn = function(t, f, n, i, o, s, u) {
                    var d = void 0 === i ? {} : i,
                        c = d.maxNumResults,
                        l = void 0 === c ? 3 : c,
                        p = d.maxHops,
                        b = void 0 === p ? 3 : p;
                    void 0 === o && (o = []), void 0 === s && (s = f), void 0 === u && (u = []), t.length > 0 || a(!1), b > 0 || a(!1), f === s || o.length > 0 || a(!1);
                    for (var h = s.wrapped, m = n.wrapped, v = 0; v < t.length; v++) {
                        var T = t[v];
                        if ((T.token0.equals(h.currency) || T.token1.equals(h.currency)) && !T.reserve0.equalTo(y) && !T.reserve1.equalTo(y)) {
                            var g = void 0;
                            try {
                                g = T.getOutputAmount(h)[0]
                            } catch (e) {
                                if (e.isInsufficientInputAmountError) continue;
                                throw e
                            }
                            if (g.currency.equals(m)) r.sortedInsert(u, new e(new j([].concat(o, [T]), f.currency, n), f, r.TradeType.EXACT_INPUT), l, H);
                            else if (b > 1 && t.length > 1) {
                                var w = t.slice(0, v).concat(t.slice(v + 1, t.length));
                                e.bestTradeExactIn(w, f, n, {
                                    maxNumResults: l,
                                    maxHops: b - 1
                                }, [].concat(o, [T]), g, u)
                            }
                        }
                    }
                    return u
                }, t.worstExecutionPrice = function(e) {
                    return new r.Price(this.inputAmount.currency, this.outputAmount.currency, this.maximumAmountIn(e).quotient, this.minimumAmountOut(e).quotient)
                }, e.bestTradeExactOut = function(t, f, n, i, o, s, u) {
                    var d = void 0 === i ? {} : i,
                        c = d.maxNumResults,
                        l = void 0 === c ? 3 : c,
                        p = d.maxHops,
                        b = void 0 === p ? 3 : p;
                    void 0 === o && (o = []), void 0 === s && (s = n), void 0 === u && (u = []), t.length > 0 || a(!1), b > 0 || a(!1), n === s || o.length > 0 || a(!1);
                    for (var h = s.wrapped, m = f.wrapped, v = 0; v < t.length; v++) {
                        var T = t[v];
                        if ((T.token0.equals(h.currency) || T.token1.equals(h.currency)) && !T.reserve0.equalTo(y) && !T.reserve1.equalTo(y)) {
                            var g = void 0;
                            try {
                                g = T.getInputAmount(h)[0]
                            } catch (e) {
                                if (e.isInsufficientReservesError) continue;
                                throw e
                            }
                            if (g.currency.equals(m)) r.sortedInsert(u, new e(new j([T].concat(o), f, n.currency), n, r.TradeType.EXACT_OUTPUT), l, H);
                            else if (b > 1 && t.length > 1) {
                                var w = t.slice(0, v).concat(t.slice(v + 1, t.length));
                                e.bestTradeExactOut(w, f, n, {
                                    maxNumResults: l,
                                    maxHops: b - 1
                                }, [T].concat(o), g, u)
                            }
                        }
                    }
                    return u
                }, e
            }();

            function Q(e) {
                return "0x" + e.quotient.toString(16)
            }
            var X = function() {
                function e() {}
                return e.swapCallParameters = function(e, t) {
                    var f = e.inputAmount.currency.isNative,
                        n = e.outputAmount.currency.isNative;
                    f && n && a(!1), "ttl" in t && !(t.ttl > 0) && a(!1);
                    var i, o, s, u = r.validateAndParseAddress(t.recipient),
                        d = Q(e.maximumAmountIn(t.allowedSlippage)),
                        c = Q(e.minimumAmountOut(t.allowedSlippage)),
                        l = e.route.path.map(function(e) {
                            return e.address
                        }),
                        p = "ttl" in t ? "0x" + (Math.floor((new Date).getTime() / 1e3) + t.ttl).toString(16) : "0x" + t.deadline.toString(16),
                        y = !!t.feeOnTransfer;
                    switch (e.tradeType) {
                        case r.TradeType.EXACT_INPUT:
                            f ? (i = y ? "swapExactETHForTokensSupportingFeeOnTransferTokens" : "swapExactETHForTokens", o = [c, l, u, p], s = d) : (i = n ? y ? "swapExactTokensForETHSupportingFeeOnTransferTokens" : "swapExactTokensForETH" : y ? "swapExactTokensForTokensSupportingFeeOnTransferTokens" : "swapExactTokensForTokens", o = [d, c, l, u, p], s = "0x0");
                            break;
                        case r.TradeType.EXACT_OUTPUT:
                            y && a(!1), f ? (i = "swapETHForExactTokens", o = [c, l, u, p], s = d) : (i = n ? "swapTokensForExactETH" : "swapTokensForExactTokens", o = [c, d, l, u, p], s = "0x0")
                    }
                    return {
                        methodName: i,
                        args: o,
                        value: s
                    }
                }, e
            }();
            t.FACTORY_ADDRESS_MAP = c, t.FEW_WRAPPED_TOKEN_BYTECODE = U, t.FEW_WRAPPED_TOKEN_FACTORY_ADDRESS = q, t.INIT_CODE_HASH = "0x501ce753061ab6e75837b15f074633bb775f5972f8dc1112fcc829c2e88dc689", t.INIT_CODE_HASH_MAP = l, t.InsufficientInputAmountError = D, t.InsufficientReservesError = F, t.MINIMUM_LIQUIDITY = p, t.Pair = B, t.Route = j, t.Router = X, t.Trade = W, t.computePairAddress = N, t.getFewTokenFromOriginalToken = G, t.inputOutputComparator = $, t.tradeComparator = H
        },
        9677: (e, t, f) => {
            "use strict";
            e.exports = f(46146)
        },
        65532: (e, t, f) => {
            "use strict";

            function n(e) {
                return e && "object" == typeof e && "default" in e ? e.default : e
            }
            Object.defineProperty(t, "__esModule", {
                value: !0
            });
            var r = f(22158),
                i = n(f(67261)),
                a = n(f(84861)),
                o = f(90825),
                s = f(47997),
                u = f(58005),
                d = n(f(34271)),
                c = n(f(20064)),
                l = n(f(24586)),
                p = n(f(24170)),
                y = n(f(53243)),
                b = n(f(30281)),
                h = n(f(44899)),
                m = n(f(13230));

            function v(e, t, f, n, r, i, a) {
                try {
                    var o = e[i](a),
                        s = o.value
                } catch (e) {
                    return void f(e)
                }
                o.done ? t(s) : Promise.resolve(s).then(n, r)
            }

            function T(e) {
                return function() {
                    var t = this,
                        f = arguments;
                    return new Promise(function(n, r) {
                        var i = e.apply(t, f);

                        function a(e) {
                            v(i, n, r, a, o, "next", e)
                        }

                        function o(e) {
                            v(i, n, r, a, o, "throw", e)
                        }
                        a(void 0)
                    })
                }
            }

            function g(e, t) {
                for (var f = 0; f < t.length; f++) {
                    var n = t[f];
                    n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(e, n.key, n)
                }
            }

            function w(e, t, f) {
                return t && g(e.prototype, t), f && g(e, f), e
            }

            function A() {
                return (A = Object.assign || function(e) {
                    for (var t = 1; t < arguments.length; t++) {
                        var f = arguments[t];
                        for (var n in f) Object.prototype.hasOwnProperty.call(f, n) && (e[n] = f[n])
                    }
                    return e
                }).apply(this, arguments)
            }

            function I(e, t) {
                (null == t || t > e.length) && (t = e.length);
                for (var f = 0, n = Array(t); f < t; f++) n[f] = e[f];
                return n
            }

            function E(e, t) {
                var f;
                if ("undefined" == typeof Symbol || null == e[Symbol.iterator]) {
                    if (Array.isArray(e) || (f = function(e, t) {
                            if (e) {
                                if ("string" == typeof e) return I(e, void 0);
                                var f = Object.prototype.toString.call(e).slice(8, -1);
                                return "Object" === f && e.constructor && (f = e.constructor.name), "Map" === f || "Set" === f ? Array.from(e) : "Arguments" === f || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(f) ? I(e, void 0) : void 0
                            }
                        }(e)) || t && e && "number" == typeof e.length) {
                        f && (e = f);
                        var n = 0;
                        return function() {
                            return n >= e.length ? {
                                done: !0
                            } : {
                                done: !1,
                                value: e[n++]
                            }
                        }
                    }
                    throw TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
                }
                return (f = e[Symbol.iterator]()).next.bind(f)
            }
            var _, k, C, S = (function(e) {
                    var t = function(e) {
                        var t = Object.prototype,
                            f = t.hasOwnProperty,
                            n = "function" == typeof Symbol ? Symbol : {},
                            r = n.iterator || "@@iterator",
                            i = n.asyncIterator || "@@asyncIterator",
                            a = n.toStringTag || "@@toStringTag";

                        function o(e, t, f) {
                            return Object.defineProperty(e, t, {
                                value: f,
                                enumerable: !0,
                                configurable: !0,
                                writable: !0
                            }), e[t]
                        }
                        try {
                            o({}, "")
                        } catch (e) {
                            o = function(e, t, f) {
                                return e[t] = f
                            }
                        }

                        function s(e, t, f, n) {
                            var r, i = Object.create((t && t.prototype instanceof c ? t : c).prototype),
                                a = new A(n || []);
                            return i._invoke = (r = "suspendedStart", function(t, n) {
                                if ("executing" === r) throw Error("Generator is already running");
                                if ("completed" === r) {
                                    if ("throw" === t) throw n;
                                    return {
                                        value: void 0,
                                        done: !0
                                    }
                                }
                                for (a.method = t, a.arg = n;;) {
                                    var i = a.delegate;
                                    if (i) {
                                        var o = function e(t, f) {
                                            var n = t.iterator[f.method];
                                            if (void 0 === n) {
                                                if (f.delegate = null, "throw" === f.method) {
                                                    if (t.iterator.return && (f.method = "return", f.arg = void 0, e(t, f), "throw" === f.method)) return d;
                                                    f.method = "throw", f.arg = TypeError("The iterator does not provide a 'throw' method")
                                                }
                                                return d
                                            }
                                            var r = u(n, t.iterator, f.arg);
                                            if ("throw" === r.type) return f.method = "throw", f.arg = r.arg, f.delegate = null, d;
                                            var i = r.arg;
                                            return i ? i.done ? (f[t.resultName] = i.value, f.next = t.nextLoc, "return" !== f.method && (f.method = "next", f.arg = void 0), f.delegate = null, d) : i : (f.method = "throw", f.arg = TypeError("iterator result is not an object"), f.delegate = null, d)
                                        }(i, a);
                                        if (o) {
                                            if (o === d) continue;
                                            return o
                                        }
                                    }
                                    if ("next" === a.method) a.sent = a._sent = a.arg;
                                    else if ("throw" === a.method) {
                                        if ("suspendedStart" === r) throw r = "completed", a.arg;
                                        a.dispatchException(a.arg)
                                    } else "return" === a.method && a.abrupt("return", a.arg);
                                    r = "executing";
                                    var s = u(e, f, a);
                                    if ("normal" === s.type) {
                                        if (r = a.done ? "completed" : "suspendedYield", s.arg === d) continue;
                                        return {
                                            value: s.arg,
                                            done: a.done
                                        }
                                    }
                                    "throw" === s.type && (r = "completed", a.method = "throw", a.arg = s.arg)
                                }
                            }), i
                        }

                        function u(e, t, f) {
                            try {
                                return {
                                    type: "normal",
                                    arg: e.call(t, f)
                                }
                            } catch (e) {
                                return {
                                    type: "throw",
                                    arg: e
                                }
                            }
                        }
                        e.wrap = s;
                        var d = {};

                        function c() {}

                        function l() {}

                        function p() {}
                        var y = {};
                        y[r] = function() {
                            return this
                        };
                        var b = Object.getPrototypeOf,
                            h = b && b(b(I([])));
                        h && h !== t && f.call(h, r) && (y = h);
                        var m = p.prototype = c.prototype = Object.create(y);

                        function v(e) {
                            ["next", "throw", "return"].forEach(function(t) {
                                o(e, t, function(e) {
                                    return this._invoke(t, e)
                                })
                            })
                        }

                        function T(e, t) {
                            var n;
                            this._invoke = function(r, i) {
                                function a() {
                                    return new t(function(n, a) {
                                        ! function n(r, i, a, o) {
                                            var s = u(e[r], e, i);
                                            if ("throw" !== s.type) {
                                                var d = s.arg,
                                                    c = d.value;
                                                return c && "object" == typeof c && f.call(c, "__await") ? t.resolve(c.__await).then(function(e) {
                                                    n("next", e, a, o)
                                                }, function(e) {
                                                    n("throw", e, a, o)
                                                }) : t.resolve(c).then(function(e) {
                                                    d.value = e, a(d)
                                                }, function(e) {
                                                    return n("throw", e, a, o)
                                                })
                                            }
                                            o(s.arg)
                                        }(r, i, n, a)
                                    })
                                }
                                return n = n ? n.then(a, a) : a()
                            }
                        }

                        function g(e) {
                            var t = {
                                tryLoc: e[0]
                            };
                            1 in e && (t.catchLoc = e[1]), 2 in e && (t.finallyLoc = e[2], t.afterLoc = e[3]), this.tryEntries.push(t)
                        }

                        function w(e) {
                            var t = e.completion || {};
                            t.type = "normal", delete t.arg, e.completion = t
                        }

                        function A(e) {
                            this.tryEntries = [{
                                tryLoc: "root"
                            }], e.forEach(g, this), this.reset(!0)
                        }

                        function I(e) {
                            if (e) {
                                var t = e[r];
                                if (t) return t.call(e);
                                if ("function" == typeof e.next) return e;
                                if (!isNaN(e.length)) {
                                    var n = -1,
                                        i = function t() {
                                            for (; ++n < e.length;)
                                                if (f.call(e, n)) return t.value = e[n], t.done = !1, t;
                                            return t.value = void 0, t.done = !0, t
                                        };
                                    return i.next = i
                                }
                            }
                            return {
                                next: E
                            }
                        }

                        function E() {
                            return {
                                value: void 0,
                                done: !0
                            }
                        }
                        return l.prototype = m.constructor = p, p.constructor = l, l.displayName = o(p, a, "GeneratorFunction"), e.isGeneratorFunction = function(e) {
                            var t = "function" == typeof e && e.constructor;
                            return !!t && (t === l || "GeneratorFunction" === (t.displayName || t.name))
                        }, e.mark = function(e) {
                            return Object.setPrototypeOf ? Object.setPrototypeOf(e, p) : (e.__proto__ = p, o(e, a, "GeneratorFunction")), e.prototype = Object.create(m), e
                        }, e.awrap = function(e) {
                            return {
                                __await: e
                            }
                        }, v(T.prototype), T.prototype[i] = function() {
                            return this
                        }, e.AsyncIterator = T, e.async = function(t, f, n, r, i) {
                            void 0 === i && (i = Promise);
                            var a = new T(s(t, f, n, r), i);
                            return e.isGeneratorFunction(f) ? a : a.next().then(function(e) {
                                return e.done ? e.value : a.next()
                            })
                        }, v(m), o(m, a, "Generator"), m[r] = function() {
                            return this
                        }, m.toString = function() {
                            return "[object Generator]"
                        }, e.keys = function(e) {
                            var t = [];
                            for (var f in e) t.push(f);
                            return t.reverse(),
                                function f() {
                                    for (; t.length;) {
                                        var n = t.pop();
                                        if (n in e) return f.value = n, f.done = !1, f
                                    }
                                    return f.done = !0, f
                                }
                        }, e.values = I, A.prototype = {
                            constructor: A,
                            reset: function(e) {
                                if (this.prev = 0, this.next = 0, this.sent = this._sent = void 0, this.done = !1, this.delegate = null, this.method = "next", this.arg = void 0, this.tryEntries.forEach(w), !e)
                                    for (var t in this) "t" === t.charAt(0) && f.call(this, t) && !isNaN(+t.slice(1)) && (this[t] = void 0)
                            },
                            stop: function() {
                                this.done = !0;
                                var e = this.tryEntries[0].completion;
                                if ("throw" === e.type) throw e.arg;
                                return this.rval
                            },
                            dispatchException: function(e) {
                                if (this.done) throw e;
                                var t = this;

                                function n(f, n) {
                                    return a.type = "throw", a.arg = e, t.next = f, n && (t.method = "next", t.arg = void 0), !!n
                                }
                                for (var r = this.tryEntries.length - 1; r >= 0; --r) {
                                    var i = this.tryEntries[r],
                                        a = i.completion;
                                    if ("root" === i.tryLoc) return n("end");
                                    if (i.tryLoc <= this.prev) {
                                        var o = f.call(i, "catchLoc"),
                                            s = f.call(i, "finallyLoc");
                                        if (o && s) {
                                            if (this.prev < i.catchLoc) return n(i.catchLoc, !0);
                                            if (this.prev < i.finallyLoc) return n(i.finallyLoc)
                                        } else if (o) {
                                            if (this.prev < i.catchLoc) return n(i.catchLoc, !0)
                                        } else {
                                            if (!s) throw Error("try statement without catch or finally");
                                            if (this.prev < i.finallyLoc) return n(i.finallyLoc)
                                        }
                                    }
                                }
                            },
                            abrupt: function(e, t) {
                                for (var n = this.tryEntries.length - 1; n >= 0; --n) {
                                    var r = this.tryEntries[n];
                                    if (r.tryLoc <= this.prev && f.call(r, "finallyLoc") && this.prev < r.finallyLoc) {
                                        var i = r;
                                        break
                                    }
                                }
                                i && ("break" === e || "continue" === e) && i.tryLoc <= t && t <= i.finallyLoc && (i = null);
                                var a = i ? i.completion : {};
                                return a.type = e, a.arg = t, i ? (this.method = "next", this.next = i.finallyLoc, d) : this.complete(a)
                            },
                            complete: function(e, t) {
                                if ("throw" === e.type) throw e.arg;
                                return "break" === e.type || "continue" === e.type ? this.next = e.arg : "return" === e.type ? (this.rval = this.arg = e.arg, this.method = "return", this.next = "end") : "normal" === e.type && t && (this.next = t), d
                            },
                            finish: function(e) {
                                for (var t = this.tryEntries.length - 1; t >= 0; --t) {
                                    var f = this.tryEntries[t];
                                    if (f.finallyLoc === e) return this.complete(f.completion, f.afterLoc), w(f), d
                                }
                            },
                            catch: function(e) {
                                for (var t = this.tryEntries.length - 1; t >= 0; --t) {
                                    var f = this.tryEntries[t];
                                    if (f.tryLoc === e) {
                                        var n = f.completion;
                                        if ("throw" === n.type) {
                                            var r = n.arg;
                                            w(f)
                                        }
                                        return r
                                    }
                                }
                                throw Error("illegal catch attempt")
                            },
                            delegateYield: function(e, t, f) {
                                return this.delegate = {
                                    iterator: I(e),
                                    resultName: t,
                                    nextLoc: f
                                }, "next" === this.method && (this.arg = void 0), d
                            }
                        }, e
                    }(e.exports);
                    try {
                        regeneratorRuntime = t
                    } catch (e) {
                        Function("r", "regeneratorRuntime = r")(t)
                    }
                }(C = {
                    exports: {}
                }), C.exports),
                O = "0x0000000000000000000000000000000000000000",
                P = "0xe34f199b19b2b4f47f68442619d555527d244f78a3297ea89325f843f87b8b54";
            (k = t.FeeAmount || (t.FeeAmount = {}))[k.LOWEST = 100] = "LOWEST", k[k.LOW = 500] = "LOW", k[k.MEDIUM = 3e3] = "MEDIUM", k[k.HIGH = 1e4] = "HIGH";
            var M = ((_ = {})[t.FeeAmount.LOWEST] = 1, _[t.FeeAmount.LOW] = 10, _[t.FeeAmount.MEDIUM] = 60, _[t.FeeAmount.HIGH] = 200, _),
                x = i.BigInt(-1),
                R = i.BigInt(0),
                F = i.BigInt(1),
                D = i.exponentiate(i.BigInt(2), i.BigInt(96)),
                N = i.exponentiate(D, i.BigInt(2));

            function B(e) {
                var t = e.factoryAddress,
                    f = e.tokenA,
                    n = e.tokenB,
                    r = e.fee,
                    i = e.initCodeHashManualOverride,
                    a = f.sortsBefore(n) ? [f, n] : [n, f];
                return s.getCreate2Address(t, u.keccak256(["bytes"], [o.defaultAbiCoder.encode(["address", "address", "uint24"], [a[0].address, a[1].address, r])]), null != i ? i : P)
            }
            var L = function() {
                    function e() {}
                    return e.addDelta = function(e, t) {
                        return i.lessThan(t, R) ? i.subtract(e, i.multiply(t, x)) : i.add(e, t)
                    }, e
                }(),
                q = function() {
                    function e() {}
                    return e.mulDivRoundingUp = function(e, t, f) {
                        var n = i.multiply(e, t),
                            r = i.divide(n, f);
                        return i.notEqual(i.remainder(n, f), R) && (r = i.add(r, F)), r
                    }, e
                }(),
                U = i.subtract(i.exponentiate(i.BigInt(2), i.BigInt(160)), F);

            function V(e, t) {
                var f = i.multiply(e, t);
                return i.bitwiseAnd(f, r.MaxUint256)
            }
            var G = function() {
                    function e() {}
                    return e.getAmount0Delta = function(e, t, f, n) {
                        if (i.greaterThan(e, t)) {
                            var r = [t, e];
                            e = r[0], t = r[1]
                        }
                        var a = i.leftShift(f, i.BigInt(96)),
                            o = i.subtract(t, e);
                        return n ? q.mulDivRoundingUp(q.mulDivRoundingUp(a, o, t), F, e) : i.divide(i.divide(i.multiply(a, o), t), e)
                    }, e.getAmount1Delta = function(e, t, f, n) {
                        if (i.greaterThan(e, t)) {
                            var r = [t, e];
                            e = r[0], t = r[1]
                        }
                        return n ? q.mulDivRoundingUp(f, i.subtract(t, e), D) : i.divide(i.multiply(f, i.subtract(t, e)), D)
                    }, e.getNextSqrtPriceFromInput = function(e, t, f, n) {
                        return i.greaterThan(e, R) || a(!1), i.greaterThan(t, R) || a(!1), n ? this.getNextSqrtPriceFromAmount0RoundingUp(e, t, f, !0) : this.getNextSqrtPriceFromAmount1RoundingDown(e, t, f, !0)
                    }, e.getNextSqrtPriceFromOutput = function(e, t, f, n) {
                        return i.greaterThan(e, R) || a(!1), i.greaterThan(t, R) || a(!1), n ? this.getNextSqrtPriceFromAmount1RoundingDown(e, t, f, !1) : this.getNextSqrtPriceFromAmount0RoundingUp(e, t, f, !1)
                    }, e.getNextSqrtPriceFromAmount0RoundingUp = function(e, t, f, n) {
                        if (i.equal(f, R)) return e;
                        var o = i.leftShift(t, i.BigInt(96));
                        if (n) {
                            var s = V(f, e);
                            if (i.equal(i.divide(s, f), e)) {
                                var u = (c = i.add(o, s), i.bitwiseAnd(c, r.MaxUint256));
                                if (i.greaterThanOrEqual(u, o)) return q.mulDivRoundingUp(o, e, u)
                            }
                            return q.mulDivRoundingUp(o, F, i.add(i.divide(o, e), f))
                        }
                        var d = V(f, e);
                        i.equal(i.divide(d, f), e) || a(!1), i.greaterThan(o, d) || a(!1);
                        var c, l = i.subtract(o, d);
                        return q.mulDivRoundingUp(o, e, l)
                    }, e.getNextSqrtPriceFromAmount1RoundingDown = function(e, t, f, n) {
                        if (n) {
                            var r = i.lessThanOrEqual(f, U) ? i.divide(i.leftShift(f, i.BigInt(96)), t) : i.divide(i.multiply(f, D), t);
                            return i.add(e, r)
                        }
                        var o = q.mulDivRoundingUp(f, D, t);
                        return i.greaterThan(e, o) || a(!1), i.subtract(e, o)
                    }, e
                }(),
                j = i.exponentiate(i.BigInt(10), i.BigInt(6)),
                $ = function() {
                    function e() {}
                    return e.computeSwapStep = function(e, t, f, n, r) {
                        var a = {},
                            o = i.greaterThanOrEqual(e, t),
                            s = i.greaterThanOrEqual(n, R);
                        if (s) {
                            var u = i.divide(i.multiply(n, i.subtract(j, i.BigInt(r))), j);
                            a.amountIn = o ? G.getAmount0Delta(t, e, f, !0) : G.getAmount1Delta(e, t, f, !0), a.sqrtRatioNextX96 = i.greaterThanOrEqual(u, a.amountIn) ? t : G.getNextSqrtPriceFromInput(e, f, u, o)
                        } else a.amountOut = o ? G.getAmount1Delta(t, e, f, !1) : G.getAmount0Delta(e, t, f, !1), a.sqrtRatioNextX96 = i.greaterThanOrEqual(i.multiply(n, x), a.amountOut) ? t : G.getNextSqrtPriceFromOutput(e, f, i.multiply(n, x), o);
                        var d = i.equal(t, a.sqrtRatioNextX96);
                        return o ? (a.amountIn = d && s ? a.amountIn : G.getAmount0Delta(a.sqrtRatioNextX96, e, f, !0), a.amountOut = d && !s ? a.amountOut : G.getAmount1Delta(a.sqrtRatioNextX96, e, f, !1)) : (a.amountIn = d && s ? a.amountIn : G.getAmount1Delta(e, a.sqrtRatioNextX96, f, !0), a.amountOut = d && !s ? a.amountOut : G.getAmount0Delta(e, a.sqrtRatioNextX96, f, !1)), !s && i.greaterThan(a.amountOut, i.multiply(n, x)) && (a.amountOut = i.multiply(n, x)), a.feeAmount = s && i.notEqual(a.sqrtRatioNextX96, t) ? i.subtract(n, a.amountIn) : q.mulDivRoundingUp(a.amountIn, i.BigInt(r), i.subtract(j, i.BigInt(r))), [a.sqrtRatioNextX96, a.amountIn, a.amountOut, a.feeAmount]
                    }, e
                }(),
                H = i.BigInt(2),
                W = [128, 64, 32, 16, 8, 4, 2, 1].map(function(e) {
                    return [e, i.exponentiate(H, i.BigInt(e))]
                });

            function Q(e) {
                i.greaterThan(e, R) || a(!1), i.lessThanOrEqual(e, r.MaxUint256) || a(!1);
                for (var t, f = 0, n = E(W); !(t = n()).done;) {
                    var o = t.value,
                        s = o[0];
                    i.greaterThanOrEqual(e, o[1]) && (e = i.signedRightShift(e, i.BigInt(s)), f += s)
                }
                return f
            }

            function X(e, t) {
                return i.signedRightShift(i.multiply(e, i.BigInt(t)), i.BigInt(128))
            }
            var z = i.exponentiate(i.BigInt(2), i.BigInt(32)),
                K = function() {
                    function e() {}
                    return e.getSqrtRatioAtTick = function(t) {
                        t >= e.MIN_TICK && t <= e.MAX_TICK && Number.isInteger(t) || a(!1);
                        var f = t < 0 ? -1 * t : t,
                            n = i.BigInt(0 != (1 & f) ? "0xfffcb933bd6fad37aa2d162d1a594001" : "0x100000000000000000000000000000000");
                        return 0 != (2 & f) && (n = X(n, "0xfff97272373d413259a46990580e213a")), 0 != (4 & f) && (n = X(n, "0xfff2e50f5f656932ef12357cf3c7fdcc")), 0 != (8 & f) && (n = X(n, "0xffe5caca7e10e4e61c3624eaa0941cd0")), 0 != (16 & f) && (n = X(n, "0xffcb9843d60f6159c9db58835c926644")), 0 != (32 & f) && (n = X(n, "0xff973b41fa98c081472e6896dfb254c0")), 0 != (64 & f) && (n = X(n, "0xff2ea16466c96a3843ec78b326b52861")), 0 != (128 & f) && (n = X(n, "0xfe5dee046a99a2a811c461f1969c3053")), 0 != (256 & f) && (n = X(n, "0xfcbe86c7900a88aedcffc83b479aa3a4")), 0 != (512 & f) && (n = X(n, "0xf987a7253ac413176f2b074cf7815e54")), 0 != (1024 & f) && (n = X(n, "0xf3392b0822b70005940c7a398e4b70f3")), 0 != (2048 & f) && (n = X(n, "0xe7159475a2c29b7443b29c7fa6e889d9")), 0 != (4096 & f) && (n = X(n, "0xd097f3bdfd2022b8845ad8f792aa5825")), 0 != (8192 & f) && (n = X(n, "0xa9f746462d870fdf8a65dc1f90e061e5")), 0 != (16384 & f) && (n = X(n, "0x70d869a156d2a1b890bb3df62baf32f7")), 0 != (32768 & f) && (n = X(n, "0x31be135f97d08fd981231505542fcfa6")), 0 != (65536 & f) && (n = X(n, "0x9aa508b5b7a84e1c677de54f3e99bc9")), 0 != (131072 & f) && (n = X(n, "0x5d6af8dedb81196699c329225ee604")), 0 != (262144 & f) && (n = X(n, "0x2216e584f5fa1ea926041bedfe98")), 0 != (524288 & f) && (n = X(n, "0x48a170391f7dc42444e8fa2")), t > 0 && (n = i.divide(r.MaxUint256, n)), i.greaterThan(i.remainder(n, z), R) ? i.add(i.divide(n, z), F) : i.divide(n, z)
                    }, e.getTickAtSqrtRatio = function(t) {
                        i.greaterThanOrEqual(t, e.MIN_SQRT_RATIO) && i.lessThan(t, e.MAX_SQRT_RATIO) || a(!1);
                        var f, n = i.leftShift(t, i.BigInt(32)),
                            r = Q(n);
                        f = i.greaterThanOrEqual(i.BigInt(r), i.BigInt(128)) ? i.signedRightShift(n, i.BigInt(r - 127)) : i.leftShift(n, i.BigInt(127 - r));
                        for (var o = i.leftShift(i.subtract(i.BigInt(r), i.BigInt(128)), i.BigInt(64)), s = 0; s < 14; s++) {
                            f = i.signedRightShift(i.multiply(f, f), i.BigInt(127));
                            var u = i.signedRightShift(f, i.BigInt(128));
                            o = i.bitwiseOr(o, i.leftShift(u, i.BigInt(63 - s))), f = i.signedRightShift(f, u)
                        }
                        var d = i.multiply(o, i.BigInt("255738958999603826347141")),
                            c = i.toNumber(i.signedRightShift(i.subtract(d, i.BigInt("3402992956809132418596140100660247210")), i.BigInt(128))),
                            l = i.toNumber(i.signedRightShift(i.add(d, i.BigInt("291339464771989622907027621153398088495")), i.BigInt(128)));
                        return c === l ? c : i.lessThanOrEqual(e.getSqrtRatioAtTick(l), t) ? l : c
                    }, e
                }();
            K.MIN_TICK = -887272, K.MAX_TICK = -K.MIN_TICK, K.MIN_SQRT_RATIO = i.BigInt("4295128739"), K.MAX_SQRT_RATIO = i.BigInt("1461446703485210103287273052203988822378723970342");
            var Y = function() {
                function e() {}
                var t, f, n = e.prototype;
                return n.getTick = (t = T(S.mark(function t(f) {
                    return S.wrap(function(t) {
                        for (;;) switch (t.prev = t.next) {
                            case 0:
                                throw Error(e.ERROR_MESSAGE);
                            case 1:
                            case "end":
                                return t.stop()
                        }
                    }, t)
                })), function(e) {
                    return t.apply(this, arguments)
                }), n.nextInitializedTickWithinOneWord = (f = T(S.mark(function t(f, n, r) {
                    return S.wrap(function(t) {
                        for (;;) switch (t.prev = t.next) {
                            case 0:
                                throw Error(e.ERROR_MESSAGE);
                            case 1:
                            case "end":
                                return t.stop()
                        }
                    }, t)
                })), function(e, t, n) {
                    return f.apply(this, arguments)
                }), e
            }();

            function J(e, t) {
                for (var f = 0; f < e.length - 1; f++)
                    if (t(e[f], e[f + 1]) > 0) return !1;
                return !0
            }

            function Z(e, t) {
                return e.index - t.index
            }
            Y.ERROR_MESSAGE = "No tick data provider was given";
            var ee = function() {
                function e() {}
                return e.validateList = function(e, t) {
                    t > 0 || a(!1), e.every(function(e) {
                        return e.index % t == 0
                    }) || a(!1), i.equal(e.reduce(function(e, t) {
                        return i.add(e, t.liquidityNet)
                    }, R), R) || a(!1), J(e, Z) || a(!1)
                }, e.isBelowSmallest = function(e, t) {
                    return e.length > 0 || a(!1), t < e[0].index
                }, e.isAtOrAboveLargest = function(e, t) {
                    return e.length > 0 || a(!1), t >= e[e.length - 1].index
                }, e.getTick = function(e, t) {
                    var f = e[this.binarySearch(e, t)];
                    return f.index !== t && a(!1), f
                }, e.binarySearch = function(e, t) {
                    this.isBelowSmallest(e, t) && a(!1);
                    for (var f, n = 0, r = e.length - 1;;) {
                        if (e[f = Math.floor((n + r) / 2)].index <= t && (f === e.length - 1 || e[f + 1].index > t)) return f;
                        e[f].index < t ? n = f + 1 : r = f - 1
                    }
                }, e.nextInitializedTick = function(t, f, n) {
                    return n ? (e.isBelowSmallest(t, f) && a(!1), e.isAtOrAboveLargest(t, f) ? t[t.length - 1] : t[this.binarySearch(t, f)]) : (this.isAtOrAboveLargest(t, f) && a(!1), this.isBelowSmallest(t, f) ? t[0] : t[this.binarySearch(t, f) + 1])
                }, e.nextInitializedTickWithinOneWord = function(t, f, n, r) {
                    var i = Math.floor(f / r);
                    if (n) {
                        var a = (i >> 8 << 8) * r;
                        if (e.isBelowSmallest(t, f)) return [a, !1];
                        var o = e.nextInitializedTick(t, f, n).index,
                            s = Math.max(a, o);
                        return [s, s === o]
                    }
                    var u = ((1 + (i + 1 >> 8) << 8) - 1) * r;
                    if (this.isAtOrAboveLargest(t, f)) return [u, !1];
                    var d = this.nextInitializedTick(t, f, n).index,
                        c = Math.min(u, d);
                    return [c, c === d]
                }, e
            }();

            function et(e) {
                var t = i.BigInt(e).toString(16);
                return t.length % 2 != 0 && (t = "0" + t), "0x" + t
            }

            function ef(e, t) {
                var f = e.pools.reduce(function(e, t, f) {
                        var n = e.inputToken,
                            r = e.path,
                            i = e.types,
                            a = t.token0.equals(n) ? t.token1 : t.token0;
                        return 0 === f ? {
                            inputToken: a,
                            types: ["address", "uint24", "address"],
                            path: [n.address, t.fee, a.address]
                        } : {
                            inputToken: a,
                            types: [].concat(i, ["uint24", "address"]),
                            path: [].concat(r, [t.fee, a.address])
                        }
                    }, {
                        inputToken: e.input.wrapped,
                        path: [],
                        types: []
                    }),
                    n = f.path,
                    r = f.types;
                return t ? u.pack(r.reverse(), n.reverse()) : u.pack(r, n)
            }

            function en(e, t) {
                var f = i.leftShift(i.BigInt(e), i.BigInt(192)),
                    n = i.BigInt(t),
                    a = i.divide(f, n);
                return r.sqrt(a)
            }

            function er(e, t, f) {
                if (i.greaterThan(e, t)) {
                    var n = [t, e];
                    e = n[0], t = n[1]
                }
                var r = i.divide(i.multiply(e, t), D);
                return i.divide(i.multiply(i.BigInt(f), r), i.subtract(t, e))
            }

            function ei(e, t, f) {
                if (i.greaterThan(e, t)) {
                    var n = [t, e];
                    e = n[0], t = n[1]
                }
                var r = i.multiply(i.multiply(i.BigInt(f), e), t),
                    a = i.multiply(D, i.subtract(t, e));
                return i.divide(r, a)
            }

            function ea(e, t, f) {
                if (i.greaterThan(e, t)) {
                    var n = [t, e];
                    e = n[0], t = n[1]
                }
                return i.divide(i.multiply(i.BigInt(f), D), i.subtract(t, e))
            }

            function eo(e, t, f, n, r, a) {
                if (i.greaterThan(t, f)) {
                    var o = [f, t];
                    t = o[0], f = o[1]
                }
                var s = a ? ei : er;
                if (i.lessThanOrEqual(e, t)) return s(t, f, n);
                if (i.lessThan(e, f)) {
                    var u = s(e, f, n),
                        d = ea(t, e, r);
                    return i.lessThan(u, d) ? u : d
                }
                return ea(t, f, r)
            }
            var es = i.exponentiate(i.BigInt(2), i.BigInt(128)),
                eu = function() {
                    function e() {}
                    return e.getTokensOwed = function(e, t, f, n, r) {
                        return [i.divide(i.multiply(el(n, e), f), es), i.divide(i.multiply(el(r, t), f), es)]
                    }, e
                }();

            function ed(e, t, f) {
                var n = K.getSqrtRatioAtTick(f),
                    a = i.multiply(n, n);
                return e.sortsBefore(t) ? new r.Price(e, t, N, a) : new r.Price(e, t, a, N)
            }
            var ec = i.exponentiate(i.BigInt(2), i.BigInt(256));

            function el(e, t) {
                var f = i.subtract(e, t);
                return i.lessThan(f, R) ? i.add(ec, f) : f
            }
            var ep = function() {
                    function e() {}
                    return e.getFeeGrowthInside = function(e, t, f, n, r, i, a) {
                        var o, s, u, d;
                        return r >= f ? (o = e.feeGrowthOutside0X128, s = e.feeGrowthOutside1X128) : (o = el(i, e.feeGrowthOutside0X128), s = el(a, e.feeGrowthOutside1X128)), r < n ? (u = t.feeGrowthOutside0X128, d = t.feeGrowthOutside1X128) : (u = el(i, t.feeGrowthOutside0X128), d = el(a, t.feeGrowthOutside1X128)), [el(el(i, o), u), el(el(a, s), d)]
                    }, e
                }(),
                ey = function(e) {
                    var t = e.index,
                        f = e.liquidityGross,
                        n = e.liquidityNet;
                    t >= K.MIN_TICK && t <= K.MAX_TICK || a(!1), this.index = t, this.liquidityGross = i.BigInt(f), this.liquidityNet = i.BigInt(n)
                },
                eb = function() {
                    function e(e, t) {
                        var f = e.map(function(e) {
                            return e instanceof ey ? e : new ey(e)
                        });
                        ee.validateList(f, t), this.ticks = f
                    }
                    var t, f, n = e.prototype;
                    return n.getTick = (t = T(S.mark(function e(t) {
                        return S.wrap(function(e) {
                            for (;;) switch (e.prev = e.next) {
                                case 0:
                                    return e.abrupt("return", ee.getTick(this.ticks, t));
                                case 1:
                                case "end":
                                    return e.stop()
                            }
                        }, e, this)
                    })), function(e) {
                        return t.apply(this, arguments)
                    }), n.nextInitializedTickWithinOneWord = (f = T(S.mark(function e(t, f, n) {
                        return S.wrap(function(e) {
                            for (;;) switch (e.prev = e.next) {
                                case 0:
                                    return e.abrupt("return", ee.nextInitializedTickWithinOneWord(this.ticks, t, f, n));
                                case 1:
                                case "end":
                                    return e.stop()
                            }
                        }, e, this)
                    })), function(e, t, n) {
                        return f.apply(this, arguments)
                    }), e
                }(),
                eh = new Y,
                em = function() {
                    function e(e, t, f, n, r, o, s) {
                        void 0 === s && (s = eh), Number.isInteger(f) && f < 1e6 || a(!1);
                        var u = K.getSqrtRatioAtTick(o),
                            d = K.getSqrtRatioAtTick(o + 1);
                        i.greaterThanOrEqual(i.BigInt(n), u) && i.lessThanOrEqual(i.BigInt(n), d) || a(!1);
                        var c = e.sortsBefore(t) ? [e, t] : [t, e];
                        this.token0 = c[0], this.token1 = c[1], this.fee = f, this.sqrtRatioX96 = i.BigInt(n), this.liquidity = i.BigInt(r), this.tickCurrent = o, this.tickDataProvider = Array.isArray(s) ? new eb(s, M[f]) : s
                    }
                    e.getAddress = function(e, t, f, n, r) {
                        return B({
                            factoryAddress: null != r ? r : "0x1F98431c8aD98523631AE4a59f267346ea31F984",
                            fee: f,
                            tokenA: e,
                            tokenB: t,
                            initCodeHashManualOverride: n
                        })
                    };
                    var t, f, n, o = e.prototype;
                    return o.involvesToken = function(e) {
                        return e.equals(this.token0) || e.equals(this.token1)
                    }, o.priceOf = function(e) {
                        return this.involvesToken(e) || a(!1), e.equals(this.token0) ? this.token0Price : this.token1Price
                    }, o.getOutputAmount = (t = T(S.mark(function t(f, n) {
                        var o, s, u, d, c;
                        return S.wrap(function(t) {
                            for (;;) switch (t.prev = t.next) {
                                case 0:
                                    return this.involvesToken(f.currency) || a(!1), o = f.currency.equals(this.token0), t.next = 4, this.swap(o, f.quotient, n);
                                case 4:
                                    return u = (s = t.sent).sqrtRatioX96, d = s.liquidity, c = s.tickCurrent, t.abrupt("return", [r.CurrencyAmount.fromRawAmount(o ? this.token1 : this.token0, i.multiply(s.amountCalculated, x)), new e(this.token0, this.token1, this.fee, u, d, c, this.tickDataProvider)]);
                                case 11:
                                case "end":
                                    return t.stop()
                            }
                        }, t, this)
                    })), function(e, f) {
                        return t.apply(this, arguments)
                    }), o.getInputAmount = (f = T(S.mark(function t(f, n) {
                        var o, s, u, d, c;
                        return S.wrap(function(t) {
                            for (;;) switch (t.prev = t.next) {
                                case 0:
                                    return f.currency.isToken && this.involvesToken(f.currency) || a(!1), o = f.currency.equals(this.token1), t.next = 4, this.swap(o, i.multiply(f.quotient, x), n);
                                case 4:
                                    return u = (s = t.sent).sqrtRatioX96, d = s.liquidity, c = s.tickCurrent, t.abrupt("return", [r.CurrencyAmount.fromRawAmount(o ? this.token0 : this.token1, s.amountCalculated), new e(this.token0, this.token1, this.fee, u, d, c, this.tickDataProvider)]);
                                case 11:
                                case "end":
                                    return t.stop()
                            }
                        }, t, this)
                    })), function(e, t) {
                        return f.apply(this, arguments)
                    }), o.swap = (n = T(S.mark(function e(t, f, n) {
                        var r, o, s, u, d, c;
                        return S.wrap(function(e) {
                            for (;;) switch (e.prev = e.next) {
                                case 0:
                                    n || (n = t ? i.add(K.MIN_SQRT_RATIO, F) : i.subtract(K.MAX_SQRT_RATIO, F)), t ? (i.greaterThan(n, K.MIN_SQRT_RATIO) || a(!1), i.lessThan(n, this.sqrtRatioX96) || a(!1)) : (i.lessThan(n, K.MAX_SQRT_RATIO) || a(!1), i.greaterThan(n, this.sqrtRatioX96) || a(!1)), r = i.greaterThanOrEqual(f, R), o = {
                                        amountSpecifiedRemaining: f,
                                        amountCalculated: R,
                                        sqrtPriceX96: this.sqrtRatioX96,
                                        tick: this.tickCurrent,
                                        liquidity: this.liquidity
                                    };
                                case 4:
                                    if (!i.notEqual(o.amountSpecifiedRemaining, R) || o.sqrtPriceX96 == n) {
                                        e.next = 35;
                                        break
                                    }
                                    return (s = {}).sqrtPriceStartX96 = o.sqrtPriceX96, e.next = 9, this.tickDataProvider.nextInitializedTickWithinOneWord(o.tick, t, this.tickSpacing);
                                case 9:
                                    if (s.tickNext = (u = e.sent)[0], s.initialized = u[1], s.tickNext < K.MIN_TICK ? s.tickNext = K.MIN_TICK : s.tickNext > K.MAX_TICK && (s.tickNext = K.MAX_TICK), s.sqrtPriceNextX96 = K.getSqrtRatioAtTick(s.tickNext), d = $.computeSwapStep(o.sqrtPriceX96, (t ? i.lessThan(s.sqrtPriceNextX96, n) : i.greaterThan(s.sqrtPriceNextX96, n)) ? n : s.sqrtPriceNextX96, o.liquidity, o.amountSpecifiedRemaining, this.fee), o.sqrtPriceX96 = d[0], s.amountIn = d[1], s.amountOut = d[2], s.feeAmount = d[3], r ? (o.amountSpecifiedRemaining = i.subtract(o.amountSpecifiedRemaining, i.add(s.amountIn, s.feeAmount)), o.amountCalculated = i.subtract(o.amountCalculated, s.amountOut)) : (o.amountSpecifiedRemaining = i.add(o.amountSpecifiedRemaining, s.amountOut), o.amountCalculated = i.add(o.amountCalculated, i.add(s.amountIn, s.feeAmount))), !i.equal(o.sqrtPriceX96, s.sqrtPriceNextX96)) {
                                        e.next = 32;
                                        break
                                    }
                                    if (!s.initialized) {
                                        e.next = 29;
                                        break
                                    }
                                    return e.t0 = i, e.next = 25, this.tickDataProvider.getTick(s.tickNext);
                                case 25:
                                    e.t1 = e.sent.liquidityNet, c = e.t0.BigInt.call(e.t0, e.t1), t && (c = i.multiply(c, x)), o.liquidity = L.addDelta(o.liquidity, c);
                                case 29:
                                    o.tick = t ? s.tickNext - 1 : s.tickNext, e.next = 33;
                                    break;
                                case 32:
                                    i.notEqual(o.sqrtPriceX96, s.sqrtPriceStartX96) && (o.tick = K.getTickAtSqrtRatio(o.sqrtPriceX96));
                                case 33:
                                    e.next = 4;
                                    break;
                                case 35:
                                    return e.abrupt("return", {
                                        amountCalculated: o.amountCalculated,
                                        sqrtRatioX96: o.sqrtPriceX96,
                                        liquidity: o.liquidity,
                                        tickCurrent: o.tick
                                    });
                                case 36:
                                case "end":
                                    return e.stop()
                            }
                        }, e, this)
                    })), function(e, t, f) {
                        return n.apply(this, arguments)
                    }), w(e, [{
                        key: "token0Price",
                        get: function() {
                            var e;
                            return null != (e = this._token0Price) ? e : this._token0Price = new r.Price(this.token0, this.token1, N, i.multiply(this.sqrtRatioX96, this.sqrtRatioX96))
                        }
                    }, {
                        key: "token1Price",
                        get: function() {
                            var e;
                            return null != (e = this._token1Price) ? e : this._token1Price = new r.Price(this.token1, this.token0, i.multiply(this.sqrtRatioX96, this.sqrtRatioX96), N)
                        }
                    }, {
                        key: "chainId",
                        get: function() {
                            return this.token0.chainId
                        }
                    }, {
                        key: "tickSpacing",
                        get: function() {
                            return M[this.fee]
                        }
                    }]), e
                }(),
                ev = function() {
                    function e(e) {
                        var t = e.pool,
                            f = e.liquidity,
                            n = e.tickLower,
                            r = e.tickUpper;
                        this._token0Amount = null, this._token1Amount = null, this._mintAmounts = null, n < r || a(!1), n >= K.MIN_TICK && n % t.tickSpacing == 0 || a(!1), r <= K.MAX_TICK && r % t.tickSpacing == 0 || a(!1), this.pool = t, this.tickLower = n, this.tickUpper = r, this.liquidity = i.BigInt(f)
                    }
                    var t = e.prototype;
                    return t.ratiosAfterSlippage = function(e) {
                        var t = this.pool.token0Price.asFraction.multiply(new r.Percent(1).subtract(e)),
                            f = this.pool.token0Price.asFraction.multiply(e.add(1)),
                            n = en(t.numerator, t.denominator);
                        i.lessThanOrEqual(n, K.MIN_SQRT_RATIO) && (n = i.add(K.MIN_SQRT_RATIO, i.BigInt(1)));
                        var a = en(f.numerator, f.denominator);
                        return i.greaterThanOrEqual(a, K.MAX_SQRT_RATIO) && (a = i.subtract(K.MAX_SQRT_RATIO, i.BigInt(1))), {
                            sqrtRatioX96Lower: n,
                            sqrtRatioX96Upper: a
                        }
                    }, t.mintAmountsWithSlippage = function(t) {
                        var f = this.ratiosAfterSlippage(t),
                            n = f.sqrtRatioX96Upper,
                            r = f.sqrtRatioX96Lower,
                            i = new em(this.pool.token0, this.pool.token1, this.pool.fee, r, 0, K.getTickAtSqrtRatio(r)),
                            a = new em(this.pool.token0, this.pool.token1, this.pool.fee, n, 0, K.getTickAtSqrtRatio(n)),
                            o = e.fromAmounts(A({
                                pool: this.pool,
                                tickLower: this.tickLower,
                                tickUpper: this.tickUpper
                            }, this.mintAmounts, {
                                useFullPrecision: !1
                            }));
                        return {
                            amount0: new e({
                                pool: a,
                                liquidity: o.liquidity,
                                tickLower: this.tickLower,
                                tickUpper: this.tickUpper
                            }).mintAmounts.amount0,
                            amount1: new e({
                                pool: i,
                                liquidity: o.liquidity,
                                tickLower: this.tickLower,
                                tickUpper: this.tickUpper
                            }).mintAmounts.amount1
                        }
                    }, t.burnAmountsWithSlippage = function(t) {
                        var f = this.ratiosAfterSlippage(t),
                            n = f.sqrtRatioX96Upper,
                            r = f.sqrtRatioX96Lower,
                            i = new em(this.pool.token0, this.pool.token1, this.pool.fee, r, 0, K.getTickAtSqrtRatio(r)),
                            a = new e({
                                pool: new em(this.pool.token0, this.pool.token1, this.pool.fee, n, 0, K.getTickAtSqrtRatio(n)),
                                liquidity: this.liquidity,
                                tickLower: this.tickLower,
                                tickUpper: this.tickUpper
                            }).amount0,
                            o = new e({
                                pool: i,
                                liquidity: this.liquidity,
                                tickLower: this.tickLower,
                                tickUpper: this.tickUpper
                            }).amount1;
                        return {
                            amount0: a.quotient,
                            amount1: o.quotient
                        }
                    }, e.fromAmounts = function(t) {
                        var f = t.pool,
                            n = t.tickLower,
                            r = t.tickUpper,
                            i = t.amount0,
                            a = t.amount1,
                            o = t.useFullPrecision,
                            s = K.getSqrtRatioAtTick(n),
                            u = K.getSqrtRatioAtTick(r);
                        return new e({
                            pool: f,
                            tickLower: n,
                            tickUpper: r,
                            liquidity: eo(f.sqrtRatioX96, s, u, i, a, o)
                        })
                    }, e.fromAmount0 = function(t) {
                        return e.fromAmounts({
                            pool: t.pool,
                            tickLower: t.tickLower,
                            tickUpper: t.tickUpper,
                            amount0: t.amount0,
                            amount1: r.MaxUint256,
                            useFullPrecision: t.useFullPrecision
                        })
                    }, e.fromAmount1 = function(t) {
                        return e.fromAmounts({
                            pool: t.pool,
                            tickLower: t.tickLower,
                            tickUpper: t.tickUpper,
                            amount0: r.MaxUint256,
                            amount1: t.amount1,
                            useFullPrecision: !0
                        })
                    }, w(e, [{
                        key: "token0PriceLower",
                        get: function() {
                            return ed(this.pool.token0, this.pool.token1, this.tickLower)
                        }
                    }, {
                        key: "token0PriceUpper",
                        get: function() {
                            return ed(this.pool.token0, this.pool.token1, this.tickUpper)
                        }
                    }, {
                        key: "amount0",
                        get: function() {
                            return null === this._token0Amount && (this._token0Amount = r.CurrencyAmount.fromRawAmount(this.pool.token0, this.pool.tickCurrent < this.tickLower ? G.getAmount0Delta(K.getSqrtRatioAtTick(this.tickLower), K.getSqrtRatioAtTick(this.tickUpper), this.liquidity, !1) : this.pool.tickCurrent < this.tickUpper ? G.getAmount0Delta(this.pool.sqrtRatioX96, K.getSqrtRatioAtTick(this.tickUpper), this.liquidity, !1) : R)), this._token0Amount
                        }
                    }, {
                        key: "amount1",
                        get: function() {
                            return null === this._token1Amount && (this._token1Amount = r.CurrencyAmount.fromRawAmount(this.pool.token1, this.pool.tickCurrent < this.tickLower ? R : G.getAmount1Delta(K.getSqrtRatioAtTick(this.tickLower), this.pool.tickCurrent < this.tickUpper ? this.pool.sqrtRatioX96 : K.getSqrtRatioAtTick(this.tickUpper), this.liquidity, !1))), this._token1Amount
                        }
                    }, {
                        key: "mintAmounts",
                        get: function() {
                            return null === this._mintAmounts ? this.pool.tickCurrent < this.tickLower ? {
                                amount0: G.getAmount0Delta(K.getSqrtRatioAtTick(this.tickLower), K.getSqrtRatioAtTick(this.tickUpper), this.liquidity, !0),
                                amount1: R
                            } : this.pool.tickCurrent < this.tickUpper ? {
                                amount0: G.getAmount0Delta(this.pool.sqrtRatioX96, K.getSqrtRatioAtTick(this.tickUpper), this.liquidity, !0),
                                amount1: G.getAmount1Delta(K.getSqrtRatioAtTick(this.tickLower), this.pool.sqrtRatioX96, this.liquidity, !0)
                            } : {
                                amount0: R,
                                amount1: G.getAmount1Delta(K.getSqrtRatioAtTick(this.tickLower), K.getSqrtRatioAtTick(this.tickUpper), this.liquidity, !0)
                            } : this._mintAmounts
                        }
                    }]), e
                }(),
                eT = function() {
                    function e(e, t, f) {
                        this._midPrice = null, e.length > 0 || a(!1);
                        var n = e[0].chainId;
                        e.every(function(e) {
                            return e.chainId === n
                        }) || a(!1);
                        var r = t.wrapped;
                        e[0].involvesToken(r) || a(!1), e[e.length - 1].involvesToken(f.wrapped) || a(!1);
                        for (var i, o = [r], s = E(e.entries()); !(i = s()).done;) {
                            var u = i.value,
                                d = u[1],
                                c = o[u[0]];
                            c.equals(d.token0) || c.equals(d.token1) || a(!1);
                            var l = c.equals(d.token0) ? d.token1 : d.token0;
                            o.push(l)
                        }
                        this.pools = e, this.tokenPath = o, this.input = t, this.output = null != f ? f : o[o.length - 1]
                    }
                    return w(e, [{
                        key: "chainId",
                        get: function() {
                            return this.pools[0].chainId
                        }
                    }, {
                        key: "midPrice",
                        get: function() {
                            if (null !== this._midPrice) return this._midPrice;
                            var e = this.pools.slice(1).reduce(function(e, t) {
                                var f = e.price;
                                return e.nextInput.equals(t.token0) ? {
                                    nextInput: t.token1,
                                    price: f.multiply(t.token0Price)
                                } : {
                                    nextInput: t.token0,
                                    price: f.multiply(t.token1Price)
                                }
                            }, this.pools[0].token0.equals(this.input.wrapped) ? {
                                nextInput: this.pools[0].token1,
                                price: this.pools[0].token0Price
                            } : {
                                nextInput: this.pools[0].token0,
                                price: this.pools[0].token1Price
                            }).price;
                            return this._midPrice = new r.Price(this.input, this.output, e.denominator, e.numerator)
                        }
                    }]), e
                }();

            function eg(e, t) {
                return e.inputAmount.currency.equals(t.inputAmount.currency) || a(!1), e.outputAmount.currency.equals(t.outputAmount.currency) || a(!1), e.outputAmount.equalTo(t.outputAmount) ? e.inputAmount.equalTo(t.inputAmount) ? e.swaps.reduce(function(e, t) {
                    return e + t.route.tokenPath.length
                }, 0) - t.swaps.reduce(function(e, t) {
                    return e + t.route.tokenPath.length
                }, 0) : e.inputAmount.lessThan(t.inputAmount) ? -1 : 1 : e.outputAmount.lessThan(t.outputAmount) ? 1 : -1
            }
            var ew = function() {
                    function e(e) {
                        var t = e.routes,
                            f = e.tradeType,
                            n = t[0].inputAmount.currency,
                            r = t[0].outputAmount.currency;
                        t.every(function(e) {
                            return n.wrapped.equals(e.route.input.wrapped)
                        }) || a(!1), t.every(function(e) {
                            return r.wrapped.equals(e.route.output.wrapped)
                        }) || a(!1);
                        for (var i, o = t.map(function(e) {
                                return e.route.pools.length
                            }).reduce(function(e, t) {
                                return e + t
                            }, 0), s = new Set, u = E(t); !(i = u()).done;)
                            for (var d, c = E(i.value.route.pools); !(d = c()).done;) {
                                var l = d.value;
                                s.add(em.getAddress(l.token0, l.token1, l.fee))
                            }
                        o != s.size && a(!1), this.swaps = t, this.tradeType = f
                    }
                    e.exactIn = (t = T(S.mark(function t(f, n) {
                        return S.wrap(function(t) {
                            for (;;) switch (t.prev = t.next) {
                                case 0:
                                    return t.abrupt("return", e.fromRoute(f, n, r.TradeType.EXACT_INPUT));
                                case 1:
                                case "end":
                                    return t.stop()
                            }
                        }, t)
                    })), function(e, f) {
                        return t.apply(this, arguments)
                    }), e.exactOut = (f = T(S.mark(function t(f, n) {
                        return S.wrap(function(t) {
                            for (;;) switch (t.prev = t.next) {
                                case 0:
                                    return t.abrupt("return", e.fromRoute(f, n, r.TradeType.EXACT_OUTPUT));
                                case 1:
                                case "end":
                                    return t.stop()
                            }
                        }, t)
                    })), function(e, t) {
                        return f.apply(this, arguments)
                    }), e.fromRoute = (n = T(S.mark(function t(f, n, i) {
                        var o, s, u, d, c, l, p;
                        return S.wrap(function(t) {
                            for (;;) switch (t.prev = t.next) {
                                case 0:
                                    if (o = Array(f.tokenPath.length), i !== r.TradeType.EXACT_INPUT) {
                                        t.next = 19;
                                        break
                                    }
                                    n.currency.equals(f.input) || a(!1), o[0] = n.wrapped, d = 0;
                                case 5:
                                    if (!(d < f.tokenPath.length - 1)) {
                                        t.next = 15;
                                        break
                                    }
                                    return c = f.pools[d], t.next = 9, c.getOutputAmount(o[d]);
                                case 9:
                                    o[d + 1] = t.sent[0];
                                case 12:
                                    d++, t.next = 5;
                                    break;
                                case 15:
                                    s = r.CurrencyAmount.fromFractionalAmount(f.input, n.numerator, n.denominator), u = r.CurrencyAmount.fromFractionalAmount(f.output, o[o.length - 1].numerator, o[o.length - 1].denominator), t.next = 34;
                                    break;
                                case 19:
                                    n.currency.equals(f.output) || a(!1), o[o.length - 1] = n.wrapped, l = f.tokenPath.length - 1;
                                case 22:
                                    if (!(l > 0)) {
                                        t.next = 32;
                                        break
                                    }
                                    return p = f.pools[l - 1], t.next = 26, p.getInputAmount(o[l]);
                                case 26:
                                    o[l - 1] = t.sent[0];
                                case 29:
                                    l--, t.next = 22;
                                    break;
                                case 32:
                                    s = r.CurrencyAmount.fromFractionalAmount(f.input, o[0].numerator, o[0].denominator), u = r.CurrencyAmount.fromFractionalAmount(f.output, n.numerator, n.denominator);
                                case 34:
                                    return t.abrupt("return", new e({
                                        routes: [{
                                            inputAmount: s,
                                            outputAmount: u,
                                            route: f
                                        }],
                                        tradeType: i
                                    }));
                                case 35:
                                case "end":
                                    return t.stop()
                            }
                        }, t)
                    })), function(e, t, f) {
                        return n.apply(this, arguments)
                    }), e.fromRoutes = (i = T(S.mark(function t(f, n) {
                        var i, o, s, u, d, c, l, p, y, b, h, m, v;
                        return S.wrap(function(t) {
                            for (;;) switch (t.prev = t.next) {
                                case 0:
                                    i = [], o = E(f);
                                case 2:
                                    if ((s = o()).done) {
                                        t.next = 43;
                                        break
                                    }
                                    if (d = (u = s.value).route, c = u.amount, l = Array(d.tokenPath.length), p = void 0, y = void 0, n !== r.TradeType.EXACT_INPUT) {
                                        t.next = 25;
                                        break
                                    }
                                    c.currency.equals(d.input) || a(!1), p = r.CurrencyAmount.fromFractionalAmount(d.input, c.numerator, c.denominator), l[0] = r.CurrencyAmount.fromFractionalAmount(d.input.wrapped, c.numerator, c.denominator), b = 0;
                                case 12:
                                    if (!(b < d.tokenPath.length - 1)) {
                                        t.next = 22;
                                        break
                                    }
                                    return h = d.pools[b], t.next = 16, h.getOutputAmount(l[b]);
                                case 16:
                                    l[b + 1] = t.sent[0];
                                case 19:
                                    b++, t.next = 12;
                                    break;
                                case 22:
                                    y = r.CurrencyAmount.fromFractionalAmount(d.output, l[l.length - 1].numerator, l[l.length - 1].denominator), t.next = 40;
                                    break;
                                case 25:
                                    c.currency.equals(d.output) || a(!1), y = r.CurrencyAmount.fromFractionalAmount(d.output, c.numerator, c.denominator), l[l.length - 1] = r.CurrencyAmount.fromFractionalAmount(d.output.wrapped, c.numerator, c.denominator), m = d.tokenPath.length - 1;
                                case 29:
                                    if (!(m > 0)) {
                                        t.next = 39;
                                        break
                                    }
                                    return v = d.pools[m - 1], t.next = 33, v.getInputAmount(l[m]);
                                case 33:
                                    l[m - 1] = t.sent[0];
                                case 36:
                                    m--, t.next = 29;
                                    break;
                                case 39:
                                    p = r.CurrencyAmount.fromFractionalAmount(d.input, l[0].numerator, l[0].denominator);
                                case 40:
                                    i.push({
                                        route: d,
                                        inputAmount: p,
                                        outputAmount: y
                                    });
                                case 41:
                                    t.next = 2;
                                    break;
                                case 43:
                                    return t.abrupt("return", new e({
                                        routes: i,
                                        tradeType: n
                                    }));
                                case 44:
                                case "end":
                                    return t.stop()
                            }
                        }, t)
                    })), function(e, t) {
                        return i.apply(this, arguments)
                    }), e.createUncheckedTrade = function(t) {
                        return new e(A({}, t, {
                            routes: [{
                                inputAmount: t.inputAmount,
                                outputAmount: t.outputAmount,
                                route: t.route
                            }]
                        }))
                    }, e.createUncheckedTradeWithMultipleRoutes = function(t) {
                        return new e(t)
                    };
                    var t, f, n, i, o, s, u = e.prototype;
                    return u.minimumAmountOut = function(e, t) {
                        if (void 0 === t && (t = this.outputAmount), e.lessThan(R) && a(!1), this.tradeType === r.TradeType.EXACT_OUTPUT) return t;
                        var f = new r.Fraction(F).add(e).invert().multiply(t.quotient).quotient;
                        return r.CurrencyAmount.fromRawAmount(t.currency, f)
                    }, u.maximumAmountIn = function(e, t) {
                        if (void 0 === t && (t = this.inputAmount), e.lessThan(R) && a(!1), this.tradeType === r.TradeType.EXACT_INPUT) return t;
                        var f = new r.Fraction(F).add(e).multiply(t.quotient).quotient;
                        return r.CurrencyAmount.fromRawAmount(t.currency, f)
                    }, u.worstExecutionPrice = function(e) {
                        return new r.Price(this.inputAmount.currency, this.outputAmount.currency, this.maximumAmountIn(e).quotient, this.minimumAmountOut(e).quotient)
                    }, e.bestTradeExactIn = (o = T(S.mark(function t(f, n, i, o, s, u, d) {
                        var c, l, p, y, b, h, m, v, T, g, w;
                        return S.wrap(function(t) {
                            for (;;) switch (t.prev = t.next) {
                                case 0:
                                    p = void 0 === (l = (c = void 0 === o ? {} : o).maxNumResults) ? 3 : l, b = void 0 === (y = c.maxHops) ? 3 : y, void 0 === s && (s = []), void 0 === u && (u = n), void 0 === d && (d = []), f.length > 0 || a(!1), b > 0 || a(!1), n === u || s.length > 0 || a(!1), h = u.wrapped, m = i.wrapped, v = 0;
                                case 10:
                                    if (!(v < f.length)) {
                                        t.next = 46;
                                        break
                                    }
                                    if ((T = f[v]).token0.equals(h.currency) || T.token1.equals(h.currency)) {
                                        t.next = 14;
                                        break
                                    }
                                    return t.abrupt("continue", 43);
                                case 14:
                                    return g = void 0, t.prev = 15, t.next = 19, T.getOutputAmount(h);
                                case 19:
                                    g = t.sent[0], t.next = 28;
                                    break;
                                case 23:
                                    if (t.prev = 23, t.t0 = t.catch(15), !t.t0.isInsufficientInputAmountError) {
                                        t.next = 27;
                                        break
                                    }
                                    return t.abrupt("continue", 43);
                                case 27:
                                    throw t.t0;
                                case 28:
                                    if (!g.currency.isToken || !g.currency.equals(m)) {
                                        t.next = 39;
                                        break
                                    }
                                    return t.t1 = r.sortedInsert, t.t2 = d, t.next = 33, e.fromRoute(new eT([].concat(s, [T]), n.currency, i), n, r.TradeType.EXACT_INPUT);
                                case 33:
                                    t.t3 = t.sent, t.t4 = p, t.t5 = eg, (0, t.t1)(t.t2, t.t3, t.t4, t.t5), t.next = 43;
                                    break;
                                case 39:
                                    if (!(b > 1 && f.length > 1)) {
                                        t.next = 43;
                                        break
                                    }
                                    return w = f.slice(0, v).concat(f.slice(v + 1, f.length)), t.next = 43, e.bestTradeExactIn(w, n, i, {
                                        maxNumResults: p,
                                        maxHops: b - 1
                                    }, [].concat(s, [T]), g, d);
                                case 43:
                                    v++, t.next = 10;
                                    break;
                                case 46:
                                    return t.abrupt("return", d);
                                case 47:
                                case "end":
                                    return t.stop()
                            }
                        }, t, null, [
                            [15, 23]
                        ])
                    })), function(e, t, f, n, r, i, a) {
                        return o.apply(this, arguments)
                    }), e.bestTradeExactOut = (s = T(S.mark(function t(f, n, i, o, s, u, d) {
                        var c, l, p, y, b, h, m, v, T, g, w;
                        return S.wrap(function(t) {
                            for (;;) switch (t.prev = t.next) {
                                case 0:
                                    p = void 0 === (l = (c = void 0 === o ? {} : o).maxNumResults) ? 3 : l, b = void 0 === (y = c.maxHops) ? 3 : y, void 0 === s && (s = []), void 0 === u && (u = i), void 0 === d && (d = []), f.length > 0 || a(!1), b > 0 || a(!1), i === u || s.length > 0 || a(!1), h = u.wrapped, m = n.wrapped, v = 0;
                                case 10:
                                    if (!(v < f.length)) {
                                        t.next = 46;
                                        break
                                    }
                                    if ((T = f[v]).token0.equals(h.currency) || T.token1.equals(h.currency)) {
                                        t.next = 14;
                                        break
                                    }
                                    return t.abrupt("continue", 43);
                                case 14:
                                    return g = void 0, t.prev = 15, t.next = 19, T.getInputAmount(h);
                                case 19:
                                    g = t.sent[0], t.next = 28;
                                    break;
                                case 23:
                                    if (t.prev = 23, t.t0 = t.catch(15), !t.t0.isInsufficientReservesError) {
                                        t.next = 27;
                                        break
                                    }
                                    return t.abrupt("continue", 43);
                                case 27:
                                    throw t.t0;
                                case 28:
                                    if (!g.currency.equals(m)) {
                                        t.next = 39;
                                        break
                                    }
                                    return t.t1 = r.sortedInsert, t.t2 = d, t.next = 33, e.fromRoute(new eT([T].concat(s), n, i.currency), i, r.TradeType.EXACT_OUTPUT);
                                case 33:
                                    t.t3 = t.sent, t.t4 = p, t.t5 = eg, (0, t.t1)(t.t2, t.t3, t.t4, t.t5), t.next = 43;
                                    break;
                                case 39:
                                    if (!(b > 1 && f.length > 1)) {
                                        t.next = 43;
                                        break
                                    }
                                    return w = f.slice(0, v).concat(f.slice(v + 1, f.length)), t.next = 43, e.bestTradeExactOut(w, n, i, {
                                        maxNumResults: p,
                                        maxHops: b - 1
                                    }, [T].concat(s), g, d);
                                case 43:
                                    v++, t.next = 10;
                                    break;
                                case 46:
                                    return t.abrupt("return", d);
                                case 47:
                                case "end":
                                    return t.stop()
                            }
                        }, t, null, [
                            [15, 23]
                        ])
                    })), function(e, t, f, n, r, i, a) {
                        return s.apply(this, arguments)
                    }), w(e, [{
                        key: "route",
                        get: function() {
                            return 1 != this.swaps.length && a(!1), this.swaps[0].route
                        }
                    }, {
                        key: "inputAmount",
                        get: function() {
                            if (this._inputAmount) return this._inputAmount;
                            var e = this.swaps[0].inputAmount.currency,
                                t = this.swaps.map(function(e) {
                                    return e.inputAmount
                                }).reduce(function(e, t) {
                                    return e.add(t)
                                }, r.CurrencyAmount.fromRawAmount(e, 0));
                            return this._inputAmount = t, this._inputAmount
                        }
                    }, {
                        key: "outputAmount",
                        get: function() {
                            if (this._outputAmount) return this._outputAmount;
                            var e = this.swaps[0].outputAmount.currency,
                                t = this.swaps.map(function(e) {
                                    return e.outputAmount
                                }).reduce(function(e, t) {
                                    return e.add(t)
                                }, r.CurrencyAmount.fromRawAmount(e, 0));
                            return this._outputAmount = t, this._outputAmount
                        }
                    }, {
                        key: "executionPrice",
                        get: function() {
                            var e;
                            return null != (e = this._executionPrice) ? e : this._executionPrice = new r.Price(this.inputAmount.currency, this.outputAmount.currency, this.inputAmount.quotient, this.outputAmount.quotient)
                        }
                    }, {
                        key: "priceImpact",
                        get: function() {
                            if (this._priceImpact) return this._priceImpact;
                            for (var e, t = r.CurrencyAmount.fromRawAmount(this.outputAmount.currency, 0), f = E(this.swaps); !(e = f()).done;) {
                                var n = e.value;
                                t = t.add(n.route.midPrice.quote(n.inputAmount))
                            }
                            var i = t.subtract(this.outputAmount).divide(t);
                            return this._priceImpact = new r.Percent(i.numerator, i.denominator), this._priceImpact
                        }
                    }]), e
                }(),
                eA = function() {
                    function e() {}
                    return e.encodeMulticall = function(t) {
                        return Array.isArray(t) || (t = [t]), 1 === t.length ? t[0] : e.INTERFACE.encodeFunctionData("multicall", [t])
                    }, e
                }();
            eA.INTERFACE = new o.Interface(d.abi);
            var eI = function() {
                function e() {}
                return e.encodePermit = function(t, f) {
                    return "nonce" in f ? e.INTERFACE.encodeFunctionData("selfPermitAllowed", [t.address, et(f.nonce), et(f.expiry), f.v, f.r, f.s]) : e.INTERFACE.encodeFunctionData("selfPermit", [t.address, et(f.amount), et(f.deadline), f.v, f.r, f.s])
                }, e
            }();
            eI.INTERFACE = new o.Interface(l.abi);
            var eE = function() {
                function e() {}
                return e.encodeFeeBips = function(e) {
                    return et(e.multiply(1e4).quotient)
                }, e.encodeUnwrapWETH9 = function(t, f, n) {
                    if (f = r.validateAndParseAddress(f), n) {
                        var i = this.encodeFeeBips(n.fee),
                            a = r.validateAndParseAddress(n.recipient);
                        return e.INTERFACE.encodeFunctionData("unwrapWETH9WithFee", [et(t), f, i, a])
                    }
                    return e.INTERFACE.encodeFunctionData("unwrapWETH9", [et(t), f])
                }, e.encodeSweepToken = function(t, f, n, i) {
                    if (n = r.validateAndParseAddress(n), i) {
                        var a = this.encodeFeeBips(i.fee),
                            o = r.validateAndParseAddress(i.recipient);
                        return e.INTERFACE.encodeFunctionData("sweepTokenWithFee", [t.address, et(f), n, a, o])
                    }
                    return e.INTERFACE.encodeFunctionData("sweepToken", [t.address, et(f), n])
                }, e.encodeRefundETH = function() {
                    return e.INTERFACE.encodeFunctionData("refundETH")
                }, e
            }();
            eE.INTERFACE = new o.Interface(p.abi);
            var e_ = et(i.subtract(i.exponentiate(i.BigInt(2), i.BigInt(128)), i.BigInt(1)));

            function ek(e) {
                return Object.keys(e).some(function(e) {
                    return "recipient" === e
                })
            }
            var eC = function() {
                function e() {}
                return e.encodeCreate = function(t) {
                    return e.INTERFACE.encodeFunctionData("createAndInitializePoolIfNecessary", [t.token0.address, t.token1.address, t.fee, et(t.sqrtRatioX96)])
                }, e.createCallParameters = function(e) {
                    return {
                        calldata: this.encodeCreate(e),
                        value: et(0)
                    }
                }, e.addCallParameters = function(t, f) {
                    i.greaterThan(t.liquidity, R) || a(!1);
                    var n = [],
                        o = t.mintAmounts,
                        s = o.amount0,
                        u = o.amount1,
                        d = t.mintAmountsWithSlippage(f.slippageTolerance),
                        c = et(d.amount0),
                        l = et(d.amount1),
                        p = et(f.deadline);
                    if (ek(f) && f.createPool && n.push(this.encodeCreate(t.pool)), f.token0Permit && n.push(eI.encodePermit(t.pool.token0, f.token0Permit)), f.token1Permit && n.push(eI.encodePermit(t.pool.token1, f.token1Permit)), ek(f)) {
                        var y = r.validateAndParseAddress(f.recipient);
                        n.push(e.INTERFACE.encodeFunctionData("mint", [{
                            token0: t.pool.token0.address,
                            token1: t.pool.token1.address,
                            fee: t.pool.fee,
                            tickLower: t.tickLower,
                            tickUpper: t.tickUpper,
                            amount0Desired: et(s),
                            amount1Desired: et(u),
                            amount0Min: c,
                            amount1Min: l,
                            recipient: y,
                            deadline: p
                        }]))
                    } else n.push(e.INTERFACE.encodeFunctionData("increaseLiquidity", [{
                        tokenId: et(f.tokenId),
                        amount0Desired: et(s),
                        amount1Desired: et(u),
                        amount0Min: c,
                        amount1Min: l,
                        deadline: p
                    }]));
                    var b = et(0);
                    if (f.useNative) {
                        var h = f.useNative.wrapped;
                        t.pool.token0.equals(h) || t.pool.token1.equals(h) || a(!1);
                        var m = t.pool.token0.equals(h) ? s : u;
                        i.greaterThan(m, R) && n.push(eE.encodeRefundETH()), b = et(m)
                    }
                    return {
                        calldata: eA.encodeMulticall(n),
                        value: b
                    }
                }, e.encodeCollect = function(t) {
                    var f = [],
                        n = et(t.tokenId),
                        i = t.expectedCurrencyOwed0.currency.isNative || t.expectedCurrencyOwed1.currency.isNative,
                        a = r.validateAndParseAddress(t.recipient);
                    if (f.push(e.INTERFACE.encodeFunctionData("collect", [{
                            tokenId: n,
                            recipient: i ? O : a,
                            amount0Max: e_,
                            amount1Max: e_
                        }])), i) {
                        var o = t.expectedCurrencyOwed0.currency.isNative ? t.expectedCurrencyOwed1.currency : t.expectedCurrencyOwed0.currency,
                            s = t.expectedCurrencyOwed0.currency.isNative ? t.expectedCurrencyOwed1.quotient : t.expectedCurrencyOwed0.quotient;
                        f.push(eE.encodeUnwrapWETH9(t.expectedCurrencyOwed0.currency.isNative ? t.expectedCurrencyOwed0.quotient : t.expectedCurrencyOwed1.quotient, a)), f.push(eE.encodeSweepToken(o, s, a))
                    }
                    return f
                }, e.collectCallParameters = function(t) {
                    var f = e.encodeCollect(t);
                    return {
                        calldata: eA.encodeMulticall(f),
                        value: et(0)
                    }
                }, e.removeCallParameters = function(t, f) {
                    var n = [],
                        o = et(f.deadline),
                        s = et(f.tokenId),
                        u = new ev({
                            pool: t.pool,
                            liquidity: f.liquidityPercentage.multiply(t.liquidity).quotient,
                            tickLower: t.tickLower,
                            tickUpper: t.tickUpper
                        });
                    i.greaterThan(u.liquidity, R) || a(!1);
                    var d = u.burnAmountsWithSlippage(f.slippageTolerance),
                        c = d.amount0,
                        l = d.amount1;
                    f.permit && n.push(e.INTERFACE.encodeFunctionData("permit", [r.validateAndParseAddress(f.permit.spender), s, et(f.permit.deadline), f.permit.v, f.permit.r, f.permit.s])), n.push(e.INTERFACE.encodeFunctionData("decreaseLiquidity", [{
                        tokenId: s,
                        liquidity: et(u.liquidity),
                        amount0Min: et(c),
                        amount1Min: et(l),
                        deadline: o
                    }]));
                    var p = f.collectOptions,
                        y = p.expectedCurrencyOwed0,
                        b = p.expectedCurrencyOwed1,
                        h = function(e, t) {
                            if (null == e) return {};
                            var f, n, r = {},
                                i = Object.keys(e);
                            for (n = 0; n < i.length; n++) t.indexOf(f = i[n]) >= 0 || (r[f] = e[f]);
                            return r
                        }(p, ["expectedCurrencyOwed0", "expectedCurrencyOwed1"]);
                    return n.push.apply(n, e.encodeCollect(A({
                        tokenId: et(f.tokenId),
                        expectedCurrencyOwed0: y.add(r.CurrencyAmount.fromRawAmount(y.currency, c)),
                        expectedCurrencyOwed1: b.add(r.CurrencyAmount.fromRawAmount(b.currency, l))
                    }, h))), f.liquidityPercentage.equalTo(F) ? f.burnToken && n.push(e.INTERFACE.encodeFunctionData("burn", [s])) : !0 === f.burnToken && a(!1), {
                        calldata: eA.encodeMulticall(n),
                        value: et(0)
                    }
                }, e.safeTransferFromParameters = function(t) {
                    var f = r.validateAndParseAddress(t.recipient),
                        n = r.validateAndParseAddress(t.sender);
                    return {
                        calldata: t.data ? e.INTERFACE.encodeFunctionData("safeTransferFrom(address,address,uint256,bytes)", [n, f, et(t.tokenId), t.data]) : e.INTERFACE.encodeFunctionData("safeTransferFrom(address,address,uint256)", [n, f, et(t.tokenId)]),
                        value: et(0)
                    }
                }, e
            }();
            eC.INTERFACE = new o.Interface(c.abi);
            var eS = function() {
                function e() {}
                return e.quoteCallParameters = function(e, t, f, n) {
                    void 0 === n && (n = {});
                    var i, o = 1 === e.pools.length,
                        s = et(t.quotient),
                        u = n.useQuoterV2 ? this.V2INTERFACE : this.V1INTERFACE;
                    if (o) {
                        var d, c, l = {
                                tokenIn: e.tokenPath[0].address,
                                tokenOut: e.tokenPath[1].address,
                                fee: e.pools[0].fee,
                                sqrtPriceLimitX96: et(null != (d = null == (c = n) ? void 0 : c.sqrtPriceLimitX96) ? d : 0)
                            },
                            p = A({}, l, f == r.TradeType.EXACT_INPUT ? {
                                amountIn: s
                            } : {
                                amount: s
                            });
                        i = u.encodeFunctionData(f === r.TradeType.EXACT_INPUT ? "quoteExactInputSingle" : "quoteExactOutputSingle", n.useQuoterV2 ? [p] : [l.tokenIn, l.tokenOut, l.fee, s, l.sqrtPriceLimitX96])
                    } else {
                        void 0 !== (null == (y = n) ? void 0 : y.sqrtPriceLimitX96) && a(!1);
                        var y, b = ef(e, f === r.TradeType.EXACT_OUTPUT);
                        i = u.encodeFunctionData(f === r.TradeType.EXACT_INPUT ? "quoteExactInput" : "quoteExactOutput", [b, s])
                    }
                    return {
                        calldata: i,
                        value: et(0)
                    }
                }, e
            }();
            eS.V1INTERFACE = new o.Interface(y.abi), eS.V2INTERFACE = new o.Interface(b.abi);
            var eO = function() {
                function e() {}
                return e.encodeClaim = function(t, f) {
                    var n, i = [];
                    i.push(e.INTERFACE.encodeFunctionData("unstakeToken", [this._encodeIncentiveKey(t), et(f.tokenId)]));
                    var a = r.validateAndParseAddress(f.recipient),
                        o = null != (n = f.amount) ? n : 0;
                    return i.push(e.INTERFACE.encodeFunctionData("claimReward", [t.rewardToken.address, a, et(o)])), i
                }, e.collectRewards = function(t, f) {
                    t = Array.isArray(t) ? t : [t];
                    for (var n = [], r = 0; r < t.length; r++) {
                        var i = t[r];
                        (n = n.concat(this.encodeClaim(i, f))).push(e.INTERFACE.encodeFunctionData("stakeToken", [this._encodeIncentiveKey(i), et(f.tokenId)]))
                    }
                    return {
                        calldata: eA.encodeMulticall(n),
                        value: et(0)
                    }
                }, e.withdrawToken = function(t, f) {
                    var n = [];
                    t = Array.isArray(t) ? t : [t];
                    for (var i = {
                            tokenId: f.tokenId,
                            recipient: f.recipient,
                            amount: f.amount
                        }, a = 0; a < t.length; a++) n = n.concat(this.encodeClaim(t[a], i));
                    var o = r.validateAndParseAddress(f.owner);
                    return n.push(e.INTERFACE.encodeFunctionData("withdrawToken", [et(f.tokenId), o, f.data ? f.data : et(0)])), {
                        calldata: eA.encodeMulticall(n),
                        value: et(0)
                    }
                }, e.encodeDeposit = function(t) {
                    var f;
                    if ((t = Array.isArray(t) ? t : [t]).length > 1) {
                        for (var n = [], r = 0; r < t.length; r++) n.push(this._encodeIncentiveKey(t[r]));
                        f = o.defaultAbiCoder.encode([e.INCENTIVE_KEY_ABI + "[]"], [n])
                    } else f = o.defaultAbiCoder.encode([e.INCENTIVE_KEY_ABI], [this._encodeIncentiveKey(t[0])]);
                    return f
                }, e._encodeIncentiveKey = function(e) {
                    var t = e.pool,
                        f = t.token0,
                        n = t.token1,
                        i = t.fee,
                        a = r.validateAndParseAddress(e.refundee);
                    return {
                        rewardToken: e.rewardToken.address,
                        pool: em.getAddress(f, n, i),
                        startTime: et(e.startTime),
                        endTime: et(e.endTime),
                        refundee: a
                    }
                }, e
            }();
            eO.INTERFACE = new o.Interface(h.abi), eO.INCENTIVE_KEY_ABI = "tuple(address rewardToken, address pool, uint256 startTime, uint256 endTime, address refundee)";
            var eP = function() {
                function e() {}
                return e.swapCallParameters = function(t, f) {
                    Array.isArray(t) || (t = [t]);
                    var n = t[0],
                        i = n.inputAmount.currency.wrapped,
                        o = n.outputAmount.currency.wrapped;
                    t.every(function(e) {
                        return e.inputAmount.currency.wrapped.equals(i)
                    }) || a(!1), t.every(function(e) {
                        return e.outputAmount.currency.wrapped.equals(o)
                    }) || a(!1);
                    var s = [],
                        u = r.CurrencyAmount.fromRawAmount(t[0].inputAmount.currency, 0),
                        d = r.CurrencyAmount.fromRawAmount(t[0].outputAmount.currency, 0),
                        c = t.reduce(function(e, t) {
                            return e.add(t.minimumAmountOut(f.slippageTolerance))
                        }, d),
                        l = n.inputAmount.currency.isNative && n.tradeType === r.TradeType.EXACT_OUTPUT,
                        p = n.outputAmount.currency.isNative,
                        y = p || !!f.fee,
                        b = n.inputAmount.currency.isNative ? t.reduce(function(e, t) {
                            return e.add(t.maximumAmountIn(f.slippageTolerance))
                        }, u) : u;
                    f.inputTokenPermit && (n.inputAmount.currency.isToken || a(!1), s.push(eI.encodePermit(n.inputAmount.currency, f.inputTokenPermit)));
                    for (var h, m = r.validateAndParseAddress(f.recipient), v = et(f.deadline), T = E(t); !(h = T()).done;)
                        for (var g, w = h.value, A = E(w.swaps); !(g = A()).done;) {
                            var I = g.value,
                                _ = I.route,
                                k = I.outputAmount,
                                C = et(w.maximumAmountIn(f.slippageTolerance, I.inputAmount).quotient),
                                S = et(w.minimumAmountOut(f.slippageTolerance, k).quotient);
                            if (1 === _.pools.length) {
                                if (w.tradeType === r.TradeType.EXACT_INPUT) {
                                    var P, M = {
                                        tokenIn: _.tokenPath[0].address,
                                        tokenOut: _.tokenPath[1].address,
                                        fee: _.pools[0].fee,
                                        recipient: y ? O : m,
                                        deadline: v,
                                        amountIn: C,
                                        amountOutMinimum: S,
                                        sqrtPriceLimitX96: et(null != (P = f.sqrtPriceLimitX96) ? P : 0)
                                    };
                                    s.push(e.INTERFACE.encodeFunctionData("exactInputSingle", [M]))
                                } else {
                                    var x, R = {
                                        tokenIn: _.tokenPath[0].address,
                                        tokenOut: _.tokenPath[1].address,
                                        fee: _.pools[0].fee,
                                        recipient: y ? O : m,
                                        deadline: v,
                                        amountOut: S,
                                        amountInMaximum: C,
                                        sqrtPriceLimitX96: et(null != (x = f.sqrtPriceLimitX96) ? x : 0)
                                    };
                                    s.push(e.INTERFACE.encodeFunctionData("exactOutputSingle", [R]))
                                }
                            } else {
                                void 0 !== f.sqrtPriceLimitX96 && a(!1);
                                var F = ef(_, w.tradeType === r.TradeType.EXACT_OUTPUT);
                                s.push(w.tradeType === r.TradeType.EXACT_INPUT ? e.INTERFACE.encodeFunctionData("exactInput", [{
                                    path: F,
                                    recipient: y ? O : m,
                                    deadline: v,
                                    amountIn: C,
                                    amountOutMinimum: S
                                }]) : e.INTERFACE.encodeFunctionData("exactOutput", [{
                                    path: F,
                                    recipient: y ? O : m,
                                    deadline: v,
                                    amountOut: S,
                                    amountInMaximum: C
                                }]))
                            }
                        }
                    return y && s.push(f.fee ? p ? eE.encodeUnwrapWETH9(c.quotient, m, f.fee) : eE.encodeSweepToken(n.outputAmount.currency.wrapped, c.quotient, m, f.fee) : eE.encodeUnwrapWETH9(c.quotient, m)), l && s.push(eE.encodeRefundETH()), {
                        calldata: eA.encodeMulticall(s),
                        value: et(b.quotient)
                    }
                }, e
            }();
            eP.INTERFACE = new o.Interface(m.abi), t.ADDRESS_ZERO = O, t.FACTORY_ADDRESS = "0x1F98431c8aD98523631AE4a59f267346ea31F984", t.FullMath = q, t.LiquidityMath = L, t.Multicall = eA, t.NoTickDataProvider = Y, t.NonfungiblePositionManager = eC, t.POOL_INIT_CODE_HASH = P, t.Payments = eE, t.Pool = em, t.Position = ev, t.PositionLibrary = eu, t.Route = eT, t.SelfPermit = eI, t.SqrtPriceMath = G, t.Staker = eO, t.SwapMath = $, t.SwapQuoter = eS, t.SwapRouter = eP, t.TICK_SPACINGS = M, t.Tick = ey, t.TickLibrary = ep, t.TickList = ee, t.TickListDataProvider = eb, t.TickMath = K, t.Trade = ew, t.computePoolAddress = B, t.encodeRouteToPath = ef, t.encodeSqrtRatioX96 = en, t.isSorted = J, t.maxLiquidityForAmounts = eo, t.mostSignificantBit = Q, t.nearestUsableTick = function(e, t) {
                Number.isInteger(e) && Number.isInteger(t) || a(!1), t > 0 || a(!1), e >= K.MIN_TICK && e <= K.MAX_TICK || a(!1);
                var f = Math.round(e / t) * t;
                return f < K.MIN_TICK ? f + t : f > K.MAX_TICK ? f - t : f
            }, t.priceToClosestTick = function(e) {
                var t = e.baseCurrency.sortsBefore(e.quoteCurrency),
                    f = t ? en(e.numerator, e.denominator) : en(e.denominator, e.numerator),
                    n = K.getTickAtSqrtRatio(f),
                    r = ed(e.baseCurrency, e.quoteCurrency, n + 1);
                return t ? e.lessThan(r) || n++ : e.greaterThan(r) || n++, n
            }, t.subIn256 = el, t.tickToPrice = ed, t.toHex = et, t.tradeComparator = eg
        },
        1648: (e, t, f) => {
            "use strict";
            e.exports = f(65532)
        },
        2232: (e, t, f) => {
            "use strict";

            function n(e) {
                return e && "object" == typeof e && "default" in e ? e.default : e
            }
            Object.defineProperty(t, "__esModule", {
                value: !0
            });
            var r = f(22158),
                i = n(f(67261)),
                a = n(f(84861)),
                o = f(58005),
                s = f(47997),
                u = f(24136),
                d = f(3917),
                c = {
                    1: "0xE602f66d505FcDa5A8338cb33cE8D55DF6075b64",
                    3: "0xE602f66d505FcDa5A8338cb33cE8D55DF6075b64",
                    5: "0xE602f66d505FcDa5A8338cb33cE8D55DF6075b64",
                    10: "0x0c3c1c532F1e39EdF36BE9Fe0bE1410313E074Bf",
                    42161: "0xf1D7CC64Fb4452F05c498126312eBE29f30Fbcf9",
                    43114: "0x9e5A52f57b3038F1B8EeE45F28b3C1967e22799C",
                    8453: "0x8909dc15e40173ff4699343b6eb8132c65e18ec6",
                    56: "0x8909Dc15e40173Ff4699343b6eB8132c65e18eC6",
                    137: "0x9e5A52f57b3038F1B8EeE45F28b3C1967e22799C",
                    11155111: "0xd63bD1883642f223e999155bf4fBFA1f19fF5f91",
                    168587773: "0xd688620FE08a6304572748FA1f5d8C3Ec4431980",
                    81457: "0xeb2A625B704d73e82946D8d026E1F588Eed06416"
                },
                l = {
                    11155111: "0x7bb8e653f17062363b5ba1ef7e234a8df49ac9c5b8efa399b9771220727e9730",
                    168587773: "0xa2da93bb1d5200dd60697688bcfea874c941415a50fe6e45e7529d67308ccb06",
                    81457: "0x501ce753061ab6e75837b15f074633bb775f5972f8dc1112fcc829c2e88dc689"
                },
                p = i.BigInt(1e3),
                y = i.BigInt(0),
                b = i.BigInt(1),
                h = i.BigInt(5),
                m = i.BigInt(997),
                v = i.BigInt(1e3),
                T = i.BigInt(1e4),
                g = new r.Percent(y),
                w = new r.Percent(b);

            function A(e, t) {
                for (var f = 0; f < t.length; f++) {
                    var n = t[f];
                    n.enumerable = n.enumerable || !1, n.configurable = !0, "value" in n && (n.writable = !0), Object.defineProperty(e, n.key, n)
                }
            }

            function I(e, t, f) {
                return t && A(e.prototype, t), f && A(e, f), e
            }

            function E(e, t) {
                e.prototype = Object.create(t.prototype), e.prototype.constructor = e, e.__proto__ = t
            }

            function _(e) {
                return (_ = Object.setPrototypeOf ? Object.getPrototypeOf : function(e) {
                    return e.__proto__ || Object.getPrototypeOf(e)
                })(e)
            }

            function k(e, t) {
                return (k = Object.setPrototypeOf || function(e, t) {
                    return e.__proto__ = t, e
                })(e, t)
            }

            function C(e, t, f) {
                return (C = ! function() {
                    if ("undefined" == typeof Reflect || !Reflect.construct || Reflect.construct.sham) return !1;
                    if ("function" == typeof Proxy) return !0;
                    try {
                        return Date.prototype.toString.call(Reflect.construct(Date, [], function() {})), !0
                    } catch (e) {
                        return !1
                    }
                }() ? function(e, t, f) {
                    var n = [null];
                    n.push.apply(n, t);
                    var r = new(Function.bind.apply(e, n));
                    return f && k(r, f.prototype), r
                } : Reflect.construct).apply(null, arguments)
            }

            function S(e) {
                var t = "function" == typeof Map ? new Map : void 0;
                return (S = function(e) {
                    if (null === e || -1 === Function.toString.call(e).indexOf("[native code]")) return e;
                    if ("function" != typeof e) throw TypeError("Super expression must either be null or a function");
                    if (void 0 !== t) {
                        if (t.has(e)) return t.get(e);
                        t.set(e, f)
                    }

                    function f() {
                        return C(e, arguments, _(this).constructor)
                    }
                    return f.prototype = Object.create(e.prototype, {
                        constructor: {
                            value: f,
                            enumerable: !1,
                            writable: !0,
                            configurable: !0
                        }
                    }), k(f, e)
                })(e)
            }

            function O(e) {
                if (void 0 === e) throw ReferenceError("this hasn't been initialised - super() hasn't been called");
                return e
            }

            function P(e, t) {
                (null == t || t > e.length) && (t = e.length);
                for (var f = 0, n = Array(t); f < t; f++) n[f] = e[f];
                return n
            }

            function M(e, t) {
                var f;
                if ("undefined" == typeof Symbol || null == e[Symbol.iterator]) {
                    if (Array.isArray(e) || (f = function(e, t) {
                            if (e) {
                                if ("string" == typeof e) return P(e, void 0);
                                var f = Object.prototype.toString.call(e).slice(8, -1);
                                return "Object" === f && e.constructor && (f = e.constructor.name), "Map" === f || "Set" === f ? Array.from(e) : "Arguments" === f || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(f) ? P(e, void 0) : void 0
                            }
                        }(e)) || t && e && "number" == typeof e.length) {
                        f && (e = f);
                        var n = 0;
                        return function() {
                            return n >= e.length ? {
                                done: !0
                            } : {
                                done: !1,
                                value: e[n++]
                            }
                        }
                    }
                    throw TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
                }
                return (f = e[Symbol.iterator]()).next.bind(f)
            }
            var x, R = "setPrototypeOf" in Object,
                F = function(e) {
                    function t() {
                        var f;
                        return (f = e.call(this) || this).isInsufficientReservesError = !0, f.name = f.constructor.name, R && Object.setPrototypeOf(O(f), (this instanceof t ? this.constructor : void 0).prototype), f
                    }
                    return E(t, e), t
                }(S(Error)),
                D = function(e) {
                    function t() {
                        var f;
                        return (f = e.call(this) || this).isInsufficientInputAmountError = !0, f.name = f.constructor.name, R && Object.setPrototypeOf(O(f), (this instanceof t ? this.constructor : void 0).prototype), f
                    }
                    return E(t, e), t
                }(S(Error)),
                N = function(e) {
                    var t = e.initCodeHash,
                        f = e.factoryAddress,
                        n = e.tokenA,
                        r = e.tokenB,
                        i = n.sortsBefore(r) ? [n, r] : [r, n];
                    return s.getCreate2Address(f, o.keccak256(["bytes"], [o.pack(["address", "address"], [i[0].address, i[1].address])]), t)
                },
                B = function() {
                    function e(t, f) {
                        var n = t.currency.sortsBefore(f.currency) ? [t, f] : [f, t];
                        this.liquidityToken = new r.Token(n[0].currency.chainId, e.getAddress(n[0].currency, n[1].currency), 18, "UNI-V2", "Uniswap V2"), this.tokenAmounts = n
                    }
                    e.getAddress = function(e, t) {
                        return N({
                            initCodeHash: l[e.chainId],
                            factoryAddress: c[e.chainId],
                            tokenA: e,
                            tokenB: t
                        })
                    };
                    var t = e.prototype;
                    return t.involvesToken = function(e) {
                        return e.equals(this.token0) || e.equals(this.token1)
                    }, t.priceOf = function(e) {
                        return this.involvesToken(e) || a(!1), e.equals(this.token0) ? this.token0Price : this.token1Price
                    }, t.reserveOf = function(e) {
                        return this.involvesToken(e) || a(!1), e.equals(this.token0) ? this.reserve0 : this.reserve1
                    }, t.getOutputAmount = function(t, f) {
                        if (void 0 === f && (f = !1), this.involvesToken(t.currency) || a(!1), i.equal(this.reserve0.quotient, y) || i.equal(this.reserve1.quotient, y)) throw new F;
                        var n = this.reserveOf(t.currency),
                            o = this.reserveOf(t.currency.equals(this.token0) ? this.token1 : this.token0),
                            s = f ? this.derivePercentAfterSellFees(t) : g,
                            u = s.greaterThan(g) ? r.CurrencyAmount.fromRawAmount(t.currency, s.multiply(t).quotient) : t,
                            d = i.multiply(u.quotient, m),
                            c = i.multiply(d, o.quotient),
                            l = i.add(i.multiply(n.quotient, v), d),
                            p = r.CurrencyAmount.fromRawAmount(t.currency.equals(this.token0) ? this.token1 : this.token0, i.divide(c, l));
                        if (i.equal(p.quotient, y)) throw new D;
                        var b = f ? this.derivePercentAfterBuyFees(p) : g,
                            h = b.greaterThan(g) ? r.CurrencyAmount.fromRawAmount(p.currency, p.multiply(b).quotient) : p;
                        if (i.equal(h.quotient, y)) throw new D;
                        return [h, new e(n.add(u), o.subtract(h))]
                    }, t.getInputAmount = function(t, f) {
                        void 0 === f && (f = !1), this.involvesToken(t.currency) || a(!1);
                        var n = f ? this.derivePercentAfterBuyFees(t) : g,
                            o = n.greaterThan(g) ? r.CurrencyAmount.fromRawAmount(t.currency, i.add(t.divide(n).quotient, b)) : t;
                        if (i.equal(this.reserve0.quotient, y) || i.equal(this.reserve1.quotient, y) || i.greaterThanOrEqual(t.quotient, this.reserveOf(t.currency).quotient) || i.greaterThanOrEqual(o.quotient, this.reserveOf(t.currency).quotient)) throw new F;
                        var s = this.reserveOf(t.currency),
                            u = this.reserveOf(t.currency.equals(this.token0) ? this.token1 : this.token0),
                            d = i.multiply(i.multiply(u.quotient, o.quotient), v),
                            c = i.multiply(i.subtract(s.quotient, o.quotient), m),
                            l = r.CurrencyAmount.fromRawAmount(t.currency.equals(this.token0) ? this.token1 : this.token0, i.add(i.divide(d, c), b)),
                            p = f ? this.derivePercentAfterSellFees(l) : g;
                        return [p.greaterThan(g) ? r.CurrencyAmount.fromRawAmount(l.currency, i.add(l.divide(p).quotient, b)) : l, new e(u.add(l), s.subtract(t))]
                    }, t.getLiquidityMinted = function(e, t, f) {
                        e.currency.equals(this.liquidityToken) || a(!1);
                        var n, o = t.currency.sortsBefore(f.currency) ? [t, f] : [f, t];
                        if (o[0].currency.equals(this.token0) && o[1].currency.equals(this.token1) || a(!1), i.equal(e.quotient, y)) n = i.subtract(r.sqrt(i.multiply(o[0].quotient, o[1].quotient)), p);
                        else {
                            var s = i.divide(i.multiply(o[0].quotient, e.quotient), this.reserve0.quotient),
                                u = i.divide(i.multiply(o[1].quotient, e.quotient), this.reserve1.quotient);
                            n = i.lessThanOrEqual(s, u) ? s : u
                        }
                        if (!i.greaterThan(n, y)) throw new D;
                        return r.CurrencyAmount.fromRawAmount(this.liquidityToken, n)
                    }, t.getLiquidityValue = function(e, t, f, n, o) {
                        var s;
                        if (void 0 === n && (n = !1), this.involvesToken(e) || a(!1), t.currency.equals(this.liquidityToken) || a(!1), f.currency.equals(this.liquidityToken) || a(!1), i.lessThanOrEqual(f.quotient, t.quotient) || a(!1), n) {
                            o || a(!1);
                            var u = i.BigInt(o);
                            if (i.equal(u, y)) s = t;
                            else {
                                var d = r.sqrt(i.multiply(this.reserve0.quotient, this.reserve1.quotient)),
                                    c = r.sqrt(u);
                                if (i.greaterThan(d, c)) {
                                    var l = i.multiply(t.quotient, i.subtract(d, c)),
                                        p = i.add(i.multiply(d, h), c),
                                        b = i.divide(l, p);
                                    s = t.add(r.CurrencyAmount.fromRawAmount(this.liquidityToken, b))
                                } else s = t
                            }
                        } else s = t;
                        return r.CurrencyAmount.fromRawAmount(e, i.divide(i.multiply(f.quotient, this.reserveOf(e).quotient), s.quotient))
                    }, t.derivePercentAfterSellFees = function(e) {
                        var t = this.token0.wrapped.equals(e.wrapped.currency) ? this.token0.wrapped.sellFeeBps : this.token1.wrapped.sellFeeBps;
                        return null != t && t.gt(u.BigNumber.from(0)) ? w.subtract(new r.Percent(i.BigInt(t)).divide(T)) : g
                    }, t.derivePercentAfterBuyFees = function(e) {
                        var t = this.token0.wrapped.equals(e.wrapped.currency) ? this.token0.wrapped.buyFeeBps : this.token1.wrapped.buyFeeBps;
                        return null != t && t.gt(u.BigNumber.from(0)) ? w.subtract(new r.Percent(i.BigInt(t)).divide(T)) : g
                    }, I(e, [{
                        key: "token0Price",
                        get: function() {
                            var e = this.tokenAmounts[1].divide(this.tokenAmounts[0]);
                            return new r.Price(this.token0, this.token1, e.denominator, e.numerator)
                        }
                    }, {
                        key: "token1Price",
                        get: function() {
                            var e = this.tokenAmounts[0].divide(this.tokenAmounts[1]);
                            return new r.Price(this.token1, this.token0, e.denominator, e.numerator)
                        }
                    }, {
                        key: "chainId",
                        get: function() {
                            return this.token0.chainId
                        }
                    }, {
                        key: "token0",
                        get: function() {
                            return this.tokenAmounts[0].currency
                        }
                    }, {
                        key: "token1",
                        get: function() {
                            return this.tokenAmounts[1].currency
                        }
                    }, {
                        key: "reserve0",
                        get: function() {
                            return this.tokenAmounts[0]
                        }
                    }, {
                        key: "reserve1",
                        get: function() {
                            return this.tokenAmounts[1]
                        }
                    }]), e
                }(),
                L = ((x = {})[168587773] = {
                    router: "0xf11788d14EbE6abF4EA02e162C75AD938F1730C1",
                    bytecode: ""
                }, x[11155111] = {
                    router: "0x226e65279E177A779522864Ce1dE40c85E2C08A5",
                    bytecode: ""
                }, x[81457] = {
                    router: "0x455b20131D59f01d082df1225154fDA813E8CeE9",
                    bytecode: "0x60806040523480156200001157600080fd5b50600080546001600160a01b031916331781556040805163388a0bbd60e11b8152905173430000000000000000000000000000000000000292637114177a926004808201939182900301818387803b1580156200006d57600080fd5b505af115801562000082573d6000803e3d6000fd5b505050507343000000000000000000000000000000000000026001600160a01b0316634e606c476040518163ffffffff1660e01b8152600401600060405180830381600087803b158015620000d657600080fd5b505af1158015620000eb573d6000803e3d6000fd5b5050600880546001600160a01b031916339081179091556040805163ad4d4e2960e01b8152905146945091925063ad4d4e29916004808301926020929190829003018186803b1580156200013e57600080fd5b505afa15801562000153573d6000803e3d6000fd5b505050506040513d60208110156200016a57600080fd5b5051600980546001600160a01b0319166001600160a01b039283161790819055604080516306fdde0360e01b8152905191909216916306fdde03916004808301926000929190829003018186803b158015620001c557600080fd5b505afa158015620001da573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405260208110156200020457600080fd5b81019080805160405193929190846401000000008211156200022557600080fd5b9083019060208201858111156200023b57600080fd5b82516401000000008111828201881017156200025657600080fd5b82525081516020918201929091019080838360005b83811015620002855781810151838201526020016200026b565b50505050905090810190601f168015620002b35780820380516001836020036101000a031916815260200191505b5060405250505060405160200180806b02332bb902bb930b83832b2160a51b815250600c0182805190602001908083835b60208310620003055780518252601f199092019160209182019101620002e4565b6001836020036101000a038019825116818451168082178552505050505050905001915050604051602081830303815290604052600190805190602001906200035092919062000623565b50600960009054906101000a90046001600160a01b03166001600160a01b03166395d89b416040518163ffffffff1660e01b815260040160006040518083038186803b158015620003a057600080fd5b505afa158015620003b5573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526020811015620003df57600080fd5b81019080805160405193929190846401000000008211156200040057600080fd5b9083019060208201858111156200041657600080fd5b82516401000000008111828201881017156200043157600080fd5b82525081516020918201929091019080838360005b838110156200046057818101518382015260200162000446565b50505050905090810190601f1680156200048e5780820380516001836020036101000a031916815260200191505b50604052505050604051602001808061667760f01b81525060020182805190602001908083835b60208310620004d65780518252601f199092019160209182019101620004b5565b6001836020036101000a038019825116818451168082178552505050505050905001915050604051602081830303815290604052600290805190602001906200052192919062000623565b5060405180605262002c55823960520190506040518091039020600160405180828054600181600116156101000203166002900480156200059c5780601f10620005795761010080835404028352918201916200059c565b820191906000526020600020905b81548152906001019060200180831162000587575b505060408051918290038220828201825260018352603160f81b602093840152815180840196909652858201527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6606086015260808501959095523060a0808601919091528551808603909101815260c090940190945250508051910120600655620006c8565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200066657805160ff191683800117855562000696565b8280016001018555821562000696579182015b828111156200069657825182559160200191906001019062000679565b50620006a4929150620006a8565b5090565b620006c591905b80821115620006a45760008155600101620006af565b90565b61257d80620006d86000396000f3fe608060405234801561001057600080fd5b50600436106101c45760003560e01c806379cc6790116100f9578063d0ebdbe711610097578063de0e9a3e11610071578063de0e9a3e14610643578063e220831d14610660578063ea598cb01461069b578063fc0c546a146106b8576101c4565b8063d0ebdbe714610577578063d505accf146105aa578063dd62ed3e14610608576101c4565b806397d75776116100d357806397d75776146104f3578063a9059cbb146104fb578063c45a015514610534578063c8b11dfe1461053c576101c4565b806379cc67901461047f5780637ecebe00146104b857806395d89b41146104eb576101c4565b8063313ce5671161016657806342966c681161014057806342966c68146103c5578063481c6a75146103e25780635dbd60591461041357806370a082311461044c576101c4565b8063313ce567146103665780633644e5151461038457806340c10f191461038c576101c4565b806323b872dd116101a257806323b872dd146102ad57806326599850146102f05780632d195bd21461032957806330adf81f1461035e576101c4565b806306fdde03146101c9578063095ea7b31461024657806318160ddd14610293575b600080fd5b6101d16106c0565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561020b5781810151838201526020016101f3565b50505050905090810190601f1680156102385780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61027f6004803603604081101561025c57600080fd5b5073ffffffffffffffffffffffffffffffffffffffff813516906020013561076b565b604080519115158252519081900360200190f35b61029b610782565b60408051918252519081900360200190f35b61027f600480360360608110156102c357600080fd5b5073ffffffffffffffffffffffffffffffffffffffff813581169160208101359091169060400135610788565b61029b6004803603604081101561030657600080fd5b508035906020013573ffffffffffffffffffffffffffffffffffffffff16610867565b61035c6004803603602081101561033f57600080fd5b503573ffffffffffffffffffffffffffffffffffffffff1661095a565b005b61029b610b55565b61036e610b79565b6040805160ff9092168252519081900360200190f35b61029b610b7e565b61035c600480360360408110156103a257600080fd5b5073ffffffffffffffffffffffffffffffffffffffff8135169060200135610b84565b61035c600480360360208110156103db57600080fd5b5035610e78565b6103ea610ebc565b6040805173ffffffffffffffffffffffffffffffffffffffff9092168252519081900360200190f35b61029b6004803603604081101561042957600080fd5b508035906020013573ffffffffffffffffffffffffffffffffffffffff16610ed8565b61029b6004803603602081101561046257600080fd5b503573ffffffffffffffffffffffffffffffffffffffff16610fb4565b61035c6004803603604081101561049557600080fd5b5073ffffffffffffffffffffffffffffffffffffffff8135169060200135610fc6565b61029b600480360360208110156104ce57600080fd5b503573ffffffffffffffffffffffffffffffffffffffff166112ba565b6101d16112cc565b6103ea611342565b61027f6004803603604081101561051157600080fd5b5073ffffffffffffffffffffffffffffffffffffffff813516906020013561135a565b6103ea611367565b61029b6004803603604081101561055257600080fd5b5073ffffffffffffffffffffffffffffffffffffffff81351690602001351515611383565b61035c6004803603602081101561058d57600080fd5b503573ffffffffffffffffffffffffffffffffffffffff16611666565b61035c600480360360e08110156105c057600080fd5b5073ffffffffffffffffffffffffffffffffffffffff813581169160208101359091169060408101359060608101359060ff6080820135169060a08101359060c00135611845565b61029b6004803603604081101561061e57600080fd5b5073ffffffffffffffffffffffffffffffffffffffff81358116916020013516611b11565b61029b6004803603602081101561065957600080fd5b5035611b2e565b61035c6004803603604081101561067657600080fd5b5073ffffffffffffffffffffffffffffffffffffffff81358116916020013516611b3a565b61029b600480360360208110156106b157600080fd5b5035611d6d565b6103ea611d79565b60018054604080516020600284861615610100027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0190941693909304601f810184900484028201840190925281815292918301828280156107635780601f1061073857610100808354040283529160200191610763565b820191906000526020600020905b81548152906001019060200180831161074657829003601f168201915b505050505081565b6000610778338484611d95565b5060015b92915050565b60035481565b73ffffffffffffffffffffffffffffffffffffffff831660009081526005602090815260408083203384529091528120547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff146108525773ffffffffffffffffffffffffffffffffffffffff84166000908152600560209081526040808320338452909152902054610820908363ffffffff611e0416565b73ffffffffffffffffffffffffffffffffffffffff851660009081526005602090815260408083203384529091529020555b61085d848484611e76565b5060019392505050565b60008083116108d757604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601a60248201527f4665773a2063616e27742077726170207a65726f20746f6b656e000000000000604482015290519081900360640190fd5b6009546108fc9073ffffffffffffffffffffffffffffffffffffffff16333086611f57565b610906828461211f565b60408051848152905173ffffffffffffffffffffffffffffffffffffffff84169133917feb5580a0908e96b78bdcb1a3c5638793b491a6073c3ff56061a069cb205817739181900360200190a35090919050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f2f4eb266040518163ffffffff1660e01b815260040160206040518083038186803b1580156109c157600080fd5b505afa1580156109d5573d6000803e3d6000fd5b505050506040513d60208110156109eb57600080fd5b5051604080517fe43581b8000000000000000000000000000000000000000000000000000000008152336004820152905173ffffffffffffffffffffffffffffffffffffffff9092169163e43581b891602480820192602092909190829003018186803b158015610a5b57600080fd5b505afa158015610a6f573d6000803e3d6000fd5b505050506040513d6020811015610a8557600080fd5b5051610af257604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600960248201527f464f5242494444454e0000000000000000000000000000000000000000000000604482015290519081900360640190fd5b8073ffffffffffffffffffffffffffffffffffffffff16634e606c476040518163ffffffff1660e01b8152600401600060405180830381600087803b158015610b3a57600080fd5b505af1158015610b4e573d6000803e3d6000fd5b5050505050565b7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c981565b601281565b60065481565b600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f2f4eb266040518163ffffffff1660e01b815260040160206040518083038186803b158015610bec57600080fd5b505afa158015610c00573d6000803e3d6000fd5b505050506040513d6020811015610c1657600080fd5b5051604080517faa271e1a000000000000000000000000000000000000000000000000000000008152336004820152905173ffffffffffffffffffffffffffffffffffffffff9092169163aa271e1a91602480820192602092909190829003018186803b158015610c8657600080fd5b505afa158015610c9a573d6000803e3d6000fd5b505050506040513d6020811015610cb057600080fd5b5051610d1d57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f436f72655265663a2043616c6c6572206973206e6f742061206d696e74657200604482015290519081900360640190fd5b600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635c975abb6040518163ffffffff1660e01b815260040160206040518083038186803b158015610d8557600080fd5b505afa158015610d99573d6000803e3d6000fd5b505050506040513d6020811015610daf57600080fd5b505115610e1d57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f436f72655265663a2043616c6c65722069732070617573656400000000000000604482015290519081900360640190fd5b610e27828261211f565b60408051828152905173ffffffffffffffffffffffffffffffffffffffff84169133917fbcad3d7d3dfccb90d49c6063bf70f828901fefc88937d90af74e58e6e55bc39d9181900360200190a35050565b610e8233826121d0565b604080518281529051339182917fdbdf9b8e4b75e75b162d151ec8fc7f0561cabab5fcccfa2600be62223e4300c49181900360200190a350565b60005473ffffffffffffffffffffffffffffffffffffffff1681565b6000808311610f32576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260238152602001806124f86023913960400191505060405180910390fd5b610f3c33846121d0565b600954610f609073ffffffffffffffffffffffffffffffffffffffff168385612294565b60408051848152905173ffffffffffffffffffffffffffffffffffffffff84169133917f12d6424519838e57637c6db9df31af32d7926ff0a53dd37007c191d0fe3028189181900360200190a35090919050565b60046020526000908152604090205481565b600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f2f4eb266040518163ffffffff1660e01b815260040160206040518083038186803b15801561102e57600080fd5b505afa158015611042573d6000803e3d6000fd5b505050506040513d602081101561105857600080fd5b5051604080517f4334614a000000000000000000000000000000000000000000000000000000008152336004820152905173ffffffffffffffffffffffffffffffffffffffff90921691634334614a91602480820192602092909190829003018186803b1580156110c857600080fd5b505afa1580156110dc573d6000803e3d6000fd5b505050506040513d60208110156110f257600080fd5b505161115f57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f436f72655265663a2043616c6c6572206973206e6f742061206275726e657200604482015290519081900360640190fd5b600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635c975abb6040518163ffffffff1660e01b815260040160206040518083038186803b1580156111c757600080fd5b505afa1580156111db573d6000803e3d6000fd5b505050506040513d60208110156111f157600080fd5b50511561125f57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f436f72655265663a2043616c6c65722069732070617573656400000000000000604482015290519081900360640190fd5b61126982826121d0565b60408051828152905173ffffffffffffffffffffffffffffffffffffffff84169133917fdbdf9b8e4b75e75b162d151ec8fc7f0561cabab5fcccfa2600be62223e4300c49181900360200190a35050565b60076020526000908152604090205481565b600280546040805160206001841615610100027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff01909316849004601f810184900484028201840190925281815292918301828280156107635780601f1061073857610100808354040283529160200191610763565b73430000000000000000000000000000000000000281565b6000610778338484611e76565b60085473ffffffffffffffffffffffffffffffffffffffff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f2f4eb266040518163ffffffff1660e01b815260040160206040518083038186803b1580156113ec57600080fd5b505afa158015611400573d6000803e3d6000fd5b505050506040513d602081101561141657600080fd5b5051604080517fe43581b8000000000000000000000000000000000000000000000000000000008152336004820152905173ffffffffffffffffffffffffffffffffffffffff9092169163e43581b891602480820192602092909190829003018186803b15801561148657600080fd5b505afa15801561149a573d6000803e3d6000fd5b505050506040513d60208110156114b057600080fd5b505161151d57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600960248201527f464f5242494444454e0000000000000000000000000000000000000000000000604482015290519081900360640190fd5b81156115de57604080517f662aa11d00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff8516602482015290517343000000000000000000000000000000000000029163662aa11d9160448083019260209291908290030181600087803b1580156115ab57600080fd5b505af11580156115bf573d6000803e3d6000fd5b505050506040513d60208110156115d557600080fd5b5051905061077c565b604080517f954fa5ee00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff8516602482015290517343000000000000000000000000000000000000029163954fa5ee9160448083019260209291908290030181600087803b1580156115ab57600080fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f2f4eb266040518163ffffffff1660e01b815260040160206040518083038186803b1580156116cd57600080fd5b505afa1580156116e1573d6000803e3d6000fd5b505050506040513d60208110156116f757600080fd5b5051604080517fe43581b8000000000000000000000000000000000000000000000000000000008152336004820152905173ffffffffffffffffffffffffffffffffffffffff9092169163e43581b891602480820192602092909190829003018186803b15801561176757600080fd5b505afa15801561177b573d6000803e3d6000fd5b505050506040513d602081101561179157600080fd5b50516117fe57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600960248201527f464f5242494444454e0000000000000000000000000000000000000000000000604482015290519081900360640190fd5b600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b428410156118b457604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f4665773a20455850495245440000000000000000000000000000000000000000604482015290519081900360640190fd5b60065473ffffffffffffffffffffffffffffffffffffffff80891660008181526007602090815260408083208054600180820190925582517f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98186015280840196909652958d166060860152608085018c905260a085019590955260c08085018b90528151808603909101815260e0850182528051908301207f19010000000000000000000000000000000000000000000000000000000000006101008601526101028501969096526101228085019690965280518085039096018652610142840180825286519683019690962095839052610162840180825286905260ff89166101828501526101a284018890526101c28401879052519193926101e2808201937fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081019281900390910190855afa158015611a15573d6000803e3d6000fd5b50506040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0015191505073ffffffffffffffffffffffffffffffffffffffff811615801590611a9057508873ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16145b611afb57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f4665773a20494e56414c49445f5349474e415455524500000000000000000000604482015290519081900360640190fd5b611b06898989611d95565b505050505050505050565b600560209081526000928352604080842090915290825290205481565b600061077c8233610ed8565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f2f4eb266040518163ffffffff1660e01b815260040160206040518083038186803b158015611ba157600080fd5b505afa158015611bb5573d6000803e3d6000fd5b505050506040513d6020811015611bcb57600080fd5b5051604080517fe43581b8000000000000000000000000000000000000000000000000000000008152336004820152905173ffffffffffffffffffffffffffffffffffffffff9092169163e43581b891602480820192602092909190829003018186803b158015611c3b57600080fd5b505afa158015611c4f573d6000803e3d6000fd5b505050506040513d6020811015611c6557600080fd5b5051611cd257604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600960248201527f464f5242494444454e0000000000000000000000000000000000000000000000604482015290519081900360640190fd5b8173ffffffffffffffffffffffffffffffffffffffff166336b91f2b826040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050600060405180830381600087803b158015611d5157600080fd5b505af1158015611d65573d6000803e3d6000fd5b505050505050565b600061077c8233610867565b60095473ffffffffffffffffffffffffffffffffffffffff1681565b73ffffffffffffffffffffffffffffffffffffffff808416600081815260056020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b8082038281111561077c57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601560248201527f64732d6d6174682d7375622d756e646572666c6f770000000000000000000000604482015290519081900360640190fd5b73ffffffffffffffffffffffffffffffffffffffff8316600090815260046020526040902054611eac908263ffffffff611e0416565b73ffffffffffffffffffffffffffffffffffffffff8085166000908152600460205260408082209390935590841681522054611eee908263ffffffff61245416565b73ffffffffffffffffffffffffffffffffffffffff80841660008181526004602090815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b6040805173ffffffffffffffffffffffffffffffffffffffff85811660248301528481166044830152606480830185905283518084039091018152608490920183526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f23b872dd0000000000000000000000000000000000000000000000000000000017815292518251600094606094938a169392918291908083835b6020831061203557805182527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe09092019160209182019101611ff8565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114612097576040519150601f19603f3d011682016040523d82523d6000602084013e61209c565b606091505b50915091508180156120ca5750805115806120ca57508080602001905160208110156120c757600080fd5b50515b611d65576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260318152602001806124c76031913960400191505060405180910390fd5b600354612132908263ffffffff61245416565b60035573ffffffffffffffffffffffffffffffffffffffff821660009081526004602052604090205461216b908263ffffffff61245416565b73ffffffffffffffffffffffffffffffffffffffff831660008181526004602090815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b73ffffffffffffffffffffffffffffffffffffffff8216600090815260046020526040902054612206908263ffffffff611e0416565b73ffffffffffffffffffffffffffffffffffffffff831660009081526004602052604090205560035461223f908263ffffffff611e0416565b60035560408051828152905160009173ffffffffffffffffffffffffffffffffffffffff8516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a35050565b6040805173ffffffffffffffffffffffffffffffffffffffff8481166024830152604480830185905283518084039091018152606490920183526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fa9059cbb00000000000000000000000000000000000000000000000000000000178152925182516000946060949389169392918291908083835b6020831061236a57805182527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0909201916020918201910161232d565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d80600081146123cc576040519150601f19603f3d011682016040523d82523d6000602084013e6123d1565b606091505b50915091508180156123ff5750805115806123ff57508080602001905160208110156123fc57600080fd5b50515b610b4e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602d81526020018061251b602d913960400191505060405180910390fd5b8082018281101561077c57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f64732d6d6174682d6164642d6f766572666c6f77000000000000000000000000604482015290519081900360640190fdfe5472616e7366657248656c7065723a3a7472616e7366657246726f6d3a207472616e7366657246726f6d206661696c65644665773a207a65726f20616d6f756e7420756e77726170206e6f7420616c6c6f7765645472616e7366657248656c7065723a3a736166655472616e736665723a207472616e73666572206661696c6564a26469706673582212203fc33f19631f6982b9939229a37c5e4a768f74907515d9ac5ebe0d64086ae03d64736f6c63430006060033454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429"
                }, x),
                q = function(e) {
                    if (!(e in L)) throw Error("Few wrapped token router address not deployed on chain " + e);
                    return L[e].router
                },
                U = function(e) {
                    if (!(e in L)) throw Error("Few wrapped token bytecode not deployed on chain " + e);
                    return L[e].bytecode
                },
                V = function() {
                    function e(e, t) {
                        this.token = e, this.chainId = t
                    }
                    var t = e.prototype;
                    return t.getFewCreate2Address = function(e, t) {
                        var f = d.utils.defaultAbiCoder.encode(["address"], [e]),
                            n = "0x" + ["0xff", q(t), d.utils.keccak256(f), d.utils.keccak256(U(t))].map(function(e) {
                                return e.slice(2)
                            }).join("");
                        return d.utils.getAddress("0x" + d.utils.keccak256(n).slice(-40))
                    }, t.hasFewPrefix = function() {
                        var e, t, f, n, r = null != (e = null == (t = this.token.name) ? void 0 : t.startsWith("Few Wrapped ")) && e,
                            i = null != (f = null == (n = this.token.symbol) ? void 0 : n.startsWith("fw")) && f;
                        return r || i
                    }, t.getFewTokenAddress = function() {
                        return this.hasFewPrefix() ? this.token.address : this.getFewCreate2Address(this.token.address, this.chainId)
                    }, t.getFewSymbol = function() {
                        return this.hasFewPrefix() ? this.token.symbol : "fw" + this.token.symbol
                    }, t.getFewTokenName = function() {
                        return this.hasFewPrefix() ? this.token.name : "Few Wrapped " + this.token.name
                    }, t.getFewToken = function() {
                        var e = this.getFewTokenAddress();
                        return new r.Token(this.token.chainId, e, this.token.decimals, this.getFewSymbol(), this.getFewTokenName())
                    }, e
                }();

            function G(e, t) {
                return new V(e, t).getFewToken()
            }
            var j = function() {
                function e(e, t, f) {
                    this._midPrice = null, e.length > 0 || a(!1);
                    var n = e[0].chainId;
                    e.every(function(e) {
                        return e.chainId === n
                    }) || a(!1);
                    for (var r, i = [G(t.wrapped.wrapped, n)], o = M(e.entries()); !(r = o()).done;) {
                        var s = r.value,
                            u = s[1],
                            d = i[s[0]];
                        d.equals(u.token0) || d.equals(u.token1) || a(!1);
                        var c = d.equals(u.token0) ? u.token1 : u.token0;
                        i.push(c)
                    }
                    this.pairs = e, this.path = i, this.input = t, this.output = f
                }
                return I(e, [{
                    key: "midPrice",
                    get: function() {
                        if (null !== this._midPrice) return this._midPrice;
                        for (var e, t = [], f = M(this.pairs.entries()); !(e = f()).done;) {
                            var n = e.value,
                                i = n[1];
                            t.push(this.path[n[0]].equals(i.token0) ? new r.Price(i.reserve0.currency, i.reserve1.currency, i.reserve0.quotient, i.reserve1.quotient) : new r.Price(i.reserve1.currency, i.reserve0.currency, i.reserve1.quotient, i.reserve0.quotient))
                        }
                        var a = t.slice(1).reduce(function(e, t) {
                            return e.multiply(t)
                        }, t[0]);
                        return this._midPrice = new r.Price(this.input, this.output, a.denominator, a.numerator)
                    }
                }, {
                    key: "chainId",
                    get: function() {
                        return this.pairs[0].chainId
                    }
                }]), e
            }();

            function $(e, t) {
                return e.inputAmount.currency.equals(t.inputAmount.currency) || a(!1), e.outputAmount.currency.equals(t.outputAmount.currency) || a(!1), e.outputAmount.equalTo(t.outputAmount) ? e.inputAmount.equalTo(t.inputAmount) ? 0 : e.inputAmount.lessThan(t.inputAmount) ? -1 : 1 : e.outputAmount.lessThan(t.outputAmount) ? 1 : -1
            }

            function H(e, t) {
                var f = $(e, t);
                return 0 !== f ? f : e.priceImpact.lessThan(t.priceImpact) ? -1 : e.priceImpact.greaterThan(t.priceImpact) ? 1 : e.route.path.length - t.route.path.length
            }
            var W = function() {
                function e(e, t, f) {
                    this.route = e, this.tradeType = f;
                    var n = Array(e.path.length),
                        i = e.pairs[0].chainId;
                    if (e.pairs.every(function(e) {
                            return e.chainId === i
                        }) || a(!1), f === r.TradeType.EXACT_INPUT) {
                        var o = G(t.currency.wrapped, i);
                        n[0] = r.CurrencyAmount.fromFractionalAmount(o, t.numerator, t.denominator);
                        for (var s = 0; s < e.path.length - 1; s++) {
                            var u = e.pairs[s].getOutputAmount(n[s]);
                            n[s + 1] = u[0]
                        }
                        this.inputAmount = r.CurrencyAmount.fromFractionalAmount(e.input, t.numerator, t.denominator), this.outputAmount = r.CurrencyAmount.fromFractionalAmount(e.output, n[n.length - 1].numerator, n[n.length - 1].denominator)
                    } else {
                        var d = G(t.currency.wrapped, i);
                        n[n.length - 1] = r.CurrencyAmount.fromFractionalAmount(d, t.numerator, t.denominator);
                        for (var c = e.path.length - 1; c > 0; c--) {
                            var l = e.pairs[c - 1].getInputAmount(n[c]);
                            n[c - 1] = l[0]
                        }
                        this.inputAmount = r.CurrencyAmount.fromFractionalAmount(e.input, n[0].numerator, n[0].denominator), this.outputAmount = r.CurrencyAmount.fromFractionalAmount(e.output, t.numerator, t.denominator)
                    }
                    this.executionPrice = new r.Price(this.inputAmount.currency, this.outputAmount.currency, this.inputAmount.quotient, this.outputAmount.quotient), this.priceImpact = r.computePriceImpact(e.midPrice, this.inputAmount, this.outputAmount)
                }
                e.exactIn = function(t, f) {
                    return new e(t, f, r.TradeType.EXACT_INPUT)
                }, e.exactOut = function(t, f) {
                    return new e(t, f, r.TradeType.EXACT_OUTPUT)
                };
                var t = e.prototype;
                return t.minimumAmountOut = function(e) {
                    if (e.lessThan(y) && a(!1), this.tradeType === r.TradeType.EXACT_OUTPUT) return this.outputAmount;
                    var t = new r.Fraction(b).add(e).invert().multiply(this.outputAmount.quotient).quotient;
                    return r.CurrencyAmount.fromRawAmount(this.outputAmount.currency, t)
                }, t.maximumAmountIn = function(e) {
                    if (e.lessThan(y) && a(!1), this.tradeType === r.TradeType.EXACT_INPUT) return this.inputAmount;
                    var t = new r.Fraction(b).add(e).multiply(this.inputAmount.quotient).quotient;
                    return r.CurrencyAmount.fromRawAmount(this.inputAmount.currency, t)
                }, e.bestTradeExactIn = function(t, f, n, i, o, s, u) {
                    var d = void 0 === i ? {} : i,
                        c = d.maxNumResults,
                        l = void 0 === c ? 3 : c,
                        p = d.maxHops,
                        b = void 0 === p ? 3 : p;
                    void 0 === o && (o = []), void 0 === s && (s = f), void 0 === u && (u = []), t.length > 0 || a(!1), b > 0 || a(!1), f === s || o.length > 0 || a(!1);
                    for (var h = s.wrapped, m = n.wrapped, v = 0; v < t.length; v++) {
                        var T = t[v];
                        if ((T.token0.equals(h.currency) || T.token1.equals(h.currency)) && !T.reserve0.equalTo(y) && !T.reserve1.equalTo(y)) {
                            var g = void 0;
                            try {
                                g = T.getOutputAmount(h)[0]
                            } catch (e) {
                                if (e.isInsufficientInputAmountError) continue;
                                throw e
                            }
                            if (g.currency.equals(m)) r.sortedInsert(u, new e(new j([].concat(o, [T]), f.currency, n), f, r.TradeType.EXACT_INPUT), l, H);
                            else if (b > 1 && t.length > 1) {
                                var w = t.slice(0, v).concat(t.slice(v + 1, t.length));
                                e.bestTradeExactIn(w, f, n, {
                                    maxNumResults: l,
                                    maxHops: b - 1
                                }, [].concat(o, [T]), g, u)
                            }
                        }
                    }
                    return u
                }, t.worstExecutionPrice = function(e) {
                    return new r.Price(this.inputAmount.currency, this.outputAmount.currency, this.maximumAmountIn(e).quotient, this.minimumAmountOut(e).quotient)
                }, e.bestTradeExactOut = function(t, f, n, i, o, s, u) {
                    var d = void 0 === i ? {} : i,
                        c = d.maxNumResults,
                        l = void 0 === c ? 3 : c,
                        p = d.maxHops,
                        b = void 0 === p ? 3 : p;
                    void 0 === o && (o = []), void 0 === s && (s = n), void 0 === u && (u = []), t.length > 0 || a(!1), b > 0 || a(!1), n === s || o.length > 0 || a(!1);
                    for (var h = s.wrapped, m = f.wrapped, v = 0; v < t.length; v++) {
                        var T = t[v];
                        if ((T.token0.equals(h.currency) || T.token1.equals(h.currency)) && !T.reserve0.equalTo(y) && !T.reserve1.equalTo(y)) {
                            var g = void 0;
                            try {
                                g = T.getInputAmount(h)[0]
                            } catch (e) {
                                if (e.isInsufficientReservesError) continue;
                                throw e
                            }
                            if (g.currency.equals(m)) r.sortedInsert(u, new e(new j([T].concat(o), f, n.currency), n, r.TradeType.EXACT_OUTPUT), l, H);
                            else if (b > 1 && t.length > 1) {
                                var w = t.slice(0, v).concat(t.slice(v + 1, t.length));
                                e.bestTradeExactOut(w, f, n, {
                                    maxNumResults: l,
                                    maxHops: b - 1
                                }, [T].concat(o), g, u)
                            }
                        }
                    }
                    return u
                }, e
            }();

            function Q(e) {
                return "0x" + e.quotient.toString(16)
            }
            var X = function() {
                function e() {}
                return e.swapCallParameters = function(e, t) {
                    var f = e.inputAmount.currency.isNative,
                        n = e.outputAmount.currency.isNative;
                    f && n && a(!1), "ttl" in t && !(t.ttl > 0) && a(!1);
                    var i, o, s, u = r.validateAndParseAddress(t.recipient),
                        d = Q(e.maximumAmountIn(t.allowedSlippage)),
                        c = Q(e.minimumAmountOut(t.allowedSlippage)),
                        l = e.route.path.map(function(e) {
                            return e.address
                        }),
                        p = "ttl" in t ? "0x" + (Math.floor((new Date).getTime() / 1e3) + t.ttl).toString(16) : "0x" + t.deadline.toString(16),
                        y = !!t.feeOnTransfer;
                    switch (e.tradeType) {
                        case r.TradeType.EXACT_INPUT:
                            f ? (i = y ? "swapExactETHForTokensSupportingFeeOnTransferTokens" : "swapExactETHForTokens", o = [c, l, u, p], s = d) : (i = n ? y ? "swapExactTokensForETHSupportingFeeOnTransferTokens" : "swapExactTokensForETH" : y ? "swapExactTokensForTokensSupportingFeeOnTransferTokens" : "swapExactTokensForTokens", o = [d, c, l, u, p], s = "0x0");
                            break;
                        case r.TradeType.EXACT_OUTPUT:
                            y && a(!1), f ? (i = "swapETHForExactTokens", o = [c, l, u, p], s = d) : (i = n ? "swapTokensForExactETH" : "swapTokensForExactTokens", o = [c, d, l, u, p], s = "0x0")
                    }
                    return {
                        methodName: i,
                        args: o,
                        value: s
                    }
                }, e
            }();
            t.FACTORY_ADDRESS_MAP = c, t.FEW_WRAPPED_TOKEN_BYTECODE = U, t.FEW_WRAPPED_TOKEN_FACTORY_ADDRESS = q, t.INIT_CODE_HASH = "0x501ce753061ab6e75837b15f074633bb775f5972f8dc1112fcc829c2e88dc689", t.INIT_CODE_HASH_MAP = l, t.InsufficientInputAmountError = D, t.InsufficientReservesError = F, t.MINIMUM_LIQUIDITY = p, t.Pair = B, t.Route = j, t.Router = X, t.Trade = W, t.computePairAddress = N, t.getFewTokenFromOriginalToken = G, t.inputOutputComparator = $, t.tradeComparator = H
        },
        34534: (e, t, f) => {
            "use strict";
            e.exports = f(2232)
        },
        77219: (e, t, f) => {
            "use strict";
            f.d(t, {
                hfy: () => fL,
                ihT: () => $,
                Xrk: () => g,
                b$9: () => d,
                hNq: () => U,
                xPi: () => y,
                LHl: () => eh,
                FlZ: () => M,
                zQh: () => V,
                zDd: () => z,
                c$1: () => A
            });
            class n {
                async get(e) {
                    return this.nodeCache.get(e)
                }
                async batchGet(e) {
                    let t = Array.from(e),
                        f = await Promise.all(t.map(e => this.get(e))),
                        n = {};
                    return t.forEach((e, t) => {
                        n[e] = f[t]
                    }), n
                }
                async set(e, t, f) {
                    return f ? this.nodeCache.set(e, t, f) : this.nodeCache.set(e, t)
                }
                async has(e) {
                    return this.nodeCache.has(e)
                }
                constructor(e) {
                    this.nodeCache = e
                }
            }
            let r = new class {
                addStream(e) {
                    throw Error(this.ERROR_MESSAGE)
                }
                addSerializers(e) {
                    throw Error(this.ERROR_MESSAGE)
                }
                child(e, t) {
                    return this
                }
                reopenFileStreams() {
                    throw Error(this.ERROR_MESSAGE)
                }
                level(e) {}
                levels(e, t) {}
                trace(...e) {
                    return !0
                }
                debug(...e) {
                    return !0
                }
                info(...e) {
                    return !0
                }
                warn(...e) {
                    return !0
                }
                error(...e) {
                    return !0
                }
                fatal(...e) {
                    return !0
                }
                addListener(e, t) {
                    throw Error(this.ERROR_MESSAGE)
                }
                on(e, t) {
                    throw Error(this.ERROR_MESSAGE)
                }
                once(e, t) {
                    throw Error(this.ERROR_MESSAGE)
                }
                removeListener(e, t) {
                    throw Error(this.ERROR_MESSAGE)
                }
                off(e, t) {
                    throw Error(this.ERROR_MESSAGE)
                }
                removeAllListeners(e) {
                    throw Error(this.ERROR_MESSAGE)
                }
                setMaxListeners(e) {
                    throw Error(this.ERROR_MESSAGE)
                }
                getMaxListeners() {
                    throw Error(this.ERROR_MESSAGE)
                }
                listeners(e) {
                    throw Error(this.ERROR_MESSAGE)
                }
                rawListeners(e) {
                    throw Error(this.ERROR_MESSAGE)
                }
                emit(e, ...t) {
                    throw Error(this.ERROR_MESSAGE)
                }
                listenerCount(e) {
                    throw Error(this.ERROR_MESSAGE)
                }
                prependListener(e, t) {
                    throw Error(this.ERROR_MESSAGE)
                }
                prependOnceListener(e, t) {
                    throw Error(this.ERROR_MESSAGE)
                }
                eventNames() {
                    throw Error(this.ERROR_MESSAGE)
                }
                constructor() {
                    this.ERROR_MESSAGE = 'NullLogger does not support. Instantiate a valid logger using "setGlobalLogger"', this.src = !0
                }
            };
            class i {}
            class a extends i {
                async getGasPrice(e) {
                    let t = await this.cache.get(this.GAS_KEY(this.chainId, e));
                    if (t) return r.info({
                        cachedGasPrice: t
                    }, `Got gas station price from local cache: ${t.gasPriceWei}.`), t;
                    r.info("Gas station price local cache miss.");
                    let f = await this.gasPriceProvider.getGasPrice(e);
                    return await this.cache.set(this.GAS_KEY(this.chainId, e), f), f
                }
                constructor(e, t, f) {
                    super(), this.chainId = e, this.gasPriceProvider = t, this.cache = f, this.GAS_KEY = (e, t) => `gasPrice-${e}-${t}`
                }
            }
            var o, s, u, d, c, l, p, y, b, h, m = f(22158),
                v = f(21787),
                T = f.n(v);
            ! function(e) {
                e.Seconds = "Seconds", e.Microseconds = "Microseconds", e.Milliseconds = "Milliseconds", e.Bytes = "Bytes", e.Kilobytes = "Kilobytes", e.Megabytes = "Megabytes", e.Gigabytes = "Gigabytes", e.Terabytes = "Terabytes", e.Bits = "Bits", e.Kilobits = "Kilobits", e.Megabits = "Megabits", e.Gigabits = "Gigabits", e.Terabits = "Terabits", e.Percent = "Percent", e.Count = "Count", e.BytesPerSecond = "Bytes/Second", e.KilobytesPerSecond = "Kilobytes/Second", e.MegabytesPerSecond = "Megabytes/Second", e.GigabytesPerSecond = "Gigabytes/Second", e.TerabytesPerSecond = "Terabytes/Second", e.BitsPerSecond = "Bits/Second", e.KilobitsPerSecond = "Kilobits/Second", e.MegabitsPerSecond = "Megabits/Second", e.GigabitsPerSecond = "Gigabits/Second", e.TerabitsPerSecond = "Terabits/Second", e.CountPerSecond = "Count/Second", e.None = "None"
            }(o || (o = {}));
            class g {}
            let w = new class extends g {
                    setProperty(e, t) {
                        this.log = this.log.child({
                            [e]: t
                        })
                    }
                    putDimensions(e) {
                        this.log = this.log.child(e)
                    }
                    putMetric(e, t, f) {
                        this.log.info({
                            key: e,
                            value: t,
                            unit: f
                        }, `[Metric]: ${e}: ${t} | ${f||""}`)
                    }
                    constructor(e) {
                        super(), this.log = r.child(e || {})
                    }
                },
                A = e => {
                    w = e
                };
            class I {
                static async fromTokenListURI(e, t, f) {
                    let n = Date.now(),
                        r = await this.buildTokenList(t);
                    return w.putMetric("TokenListLoad", Date.now() - n, o.Milliseconds), new I(e, r, f)
                }
                static async buildTokenList(e) {
                    r.info(`Getting tokenList from ${e}.`);
                    let t = await T().get(e);
                    r.info(`Got tokenList from ${e}.`);
                    let {
                        data: f,
                        status: n
                    } = t;
                    if (200 != n) throw r.error({
                        response: t
                    }, `Unabled to get token list from ${e}.`), Error(`Unable to get token list from ${e}`);
                    return f
                }
                static async fromTokenList(e, t, f) {
                    let n = Date.now(),
                        r = new I(e, t, f);
                    return w.putMetric("TokenListLoad", Date.now() - n, o.Milliseconds), r
                }
                async getTokens(e) {
                    var t;
                    let f = new Map,
                        n = new Map,
                        r = e => {
                            e && (f.set(e.address.toLowerCase(), e), void 0 !== e.symbol && n.set(e.symbol.toLowerCase(), e))
                        };
                    if (e)
                        for (let t of e) r(await this.getTokenByAddress(t));
                    else
                        for (let e of null !== (t = this.chainToTokenInfos.get(this.chainId.toString())) && void 0 !== t ? t : []) r(await this.buildToken(e));
                    return {
                        getTokenByAddress: e => f.get(e.toLowerCase()),
                        getTokenBySymbol: e => n.get(e.toLowerCase()),
                        getAllTokens: () => Array.from(f.values())
                    }
                }
                async hasTokenBySymbol(e) {
                    return this.chainSymbolToTokenInfo.has(this.CHAIN_SYMBOL_KEY(this.chainId, e))
                }
                async getTokenBySymbol(e) {
                    let t = e;
                    "ETH" == e && (t = "WETH");
                    let f = this.chainSymbolToTokenInfo.get(this.CHAIN_SYMBOL_KEY(this.chainId, t));
                    if (f) return await this.buildToken(f)
                }
                async hasTokenByAddress(e) {
                    return this.chainAddressToTokenInfo.has(this.CHAIN_ADDRESS_KEY(this.chainId, e))
                }
                async getTokenByAddress(e) {
                    let t = this.chainAddressToTokenInfo.get(this.CHAIN_ADDRESS_KEY(this.chainId, e));
                    if (t) return await this.buildToken(t)
                }
                async buildToken(e) {
                    let t = this.CACHE_KEY(e),
                        f = await this.tokenCache.get(t);
                    if (f) return f;
                    let n = new m.Token(this.chainId, e.address, e.decimals, e.symbol, e.name);
                    return await this.tokenCache.set(t, n), n
                }
                constructor(e, t, f) {
                    for (let n of (this.tokenCache = f, this.CACHE_KEY = e => `token-list-token-${this.chainId}/${this.tokenList.name}/${this.tokenList.timestamp}/${this.tokenList.version}/${e.address.toLowerCase()}/${e.decimals}/${e.symbol}/${e.name}`, this.CHAIN_SYMBOL_KEY = (e, t) => `${e.toString()}/${t}`, this.CHAIN_ADDRESS_KEY = (e, t) => `${e.toString()}/${t.toLowerCase()}`, this.chainId = e, this.tokenList = t, this.chainToTokenInfos = new Map, this.chainSymbolToTokenInfo = new Map, this.chainAddressToTokenInfo = new Map, this.tokenList.tokens)) {
                        let e = n.chainId,
                            t = e.toString(),
                            f = n.symbol,
                            r = n.address.toLowerCase();
                        this.chainToTokenInfos.has(t) || this.chainToTokenInfos.set(t, []), this.chainToTokenInfos.get(t).push(n), this.chainSymbolToTokenInfo.set(this.CHAIN_SYMBOL_KEY(e, f), n), this.chainAddressToTokenInfo.set(this.CHAIN_ADDRESS_KEY(e, r), n)
                    }
                }
            }
            var E = f(20812),
                _ = f.n(E),
                k = f(1648);
            m.ChainId.MAINNET, m.ChainId.OPTIMISM, m.ChainId.OPTIMISM_GOERLI, m.ChainId.ARBITRUM_ONE, m.ChainId.ARBITRUM_GOERLI, m.ChainId.POLYGON, m.ChainId.POLYGON_MUMBAI, m.ChainId.GOERLI, m.ChainId.BLAST_SEPOLIA, m.ChainId.BLAST, m.ChainId.SEPOLIA, m.ChainId.CELO_ALFAJORES, m.ChainId.CELO, m.ChainId.BNB, m.ChainId.AVALANCHE, m.ChainId.BASE, m.ChainId.MAINNET, m.ChainId.GOERLI, m.ChainId.SEPOLIA, m.ChainId.BLAST_SEPOLIA, m.ChainId.BLAST;
            let C = [m.ChainId.OPTIMISM, m.ChainId.OPTIMISM_GOERLI, m.ChainId.ARBITRUM_ONE, m.ChainId.ARBITRUM_GOERLI, m.ChainId.BASE, m.ChainId.BASE_GOERLI],
                S = [m.ChainId.MAINNET, m.ChainId.GOERLI, m.ChainId.OPTIMISM, m.ChainId.ARBITRUM_ONE, m.ChainId.POLYGON, m.ChainId.POLYGON_MUMBAI],
                O = e => {
                    switch (e) {
                        case 1:
                            return m.ChainId.MAINNET;
                        case 5:
                            return m.ChainId.GOERLI;
                        case 11155111:
                            return m.ChainId.SEPOLIA;
                        case 168587773:
                            return m.ChainId.BLAST_SEPOLIA;
                        case 81457:
                            return m.ChainId.BLAST;
                        case 56:
                            return m.ChainId.BNB;
                        case 10:
                            return m.ChainId.OPTIMISM;
                        case 420:
                            return m.ChainId.OPTIMISM_GOERLI;
                        case 42161:
                            return m.ChainId.ARBITRUM_ONE;
                        case 421613:
                            return m.ChainId.ARBITRUM_GOERLI;
                        case 137:
                            return m.ChainId.POLYGON;
                        case 80001:
                            return m.ChainId.POLYGON_MUMBAI;
                        case 42220:
                            return m.ChainId.CELO;
                        case 44787:
                            return m.ChainId.CELO_ALFAJORES;
                        case 100:
                            return m.ChainId.GNOSIS;
                        case 1284:
                            return m.ChainId.MOONBEAM;
                        case 43114:
                            return m.ChainId.AVALANCHE;
                        case 8453:
                            return m.ChainId.BASE;
                        case 84531:
                            return m.ChainId.BASE_GOERLI;
                        default:
                            throw Error(`Unknown chain id: ${e}`)
                    }
                };
            ! function(e) {
                e.MAINNET = "mainnet", e.GOERLI = "goerli", e.SEPOLIA = "sepolia", e.OPTIMISM = "optimism-mainnet", e.OPTIMISM_GOERLI = "optimism-goerli", e.ARBITRUM_ONE = "arbitrum-mainnet", e.ARBITRUM_GOERLI = "arbitrum-goerli", e.POLYGON = "polygon-mainnet", e.POLYGON_MUMBAI = "polygon-mumbai", e.CELO = "celo-mainnet", e.CELO_ALFAJORES = "celo-alfajores", e.GNOSIS = "gnosis-mainnet", e.MOONBEAM = "moonbeam-mainnet", e.BNB = "bnb-mainnet", e.AVALANCHE = "avalanche-mainnet", e.BASE = "base-mainnet", e.BASE_GOERLI = "base-goerli", e.BLAST_SEPOLIA = "blast-sepolia", e.BLAST = "blast"
            }(s || (s = {})),
            function(e) {
                e.ETHER = "ETH", e.MATIC = "MATIC", e.CELO = "CELO", e.GNOSIS = "XDAI", e.MOONBEAM = "GLMR", e.BNB = "BNB", e.AVALANCHE = "AVAX"
            }(u || (u = {})), m.ChainId.MAINNET, m.ChainId.GOERLI, m.ChainId.BLAST_SEPOLIA, m.ChainId.BLAST, m.ChainId.SEPOLIA, m.ChainId.OPTIMISM, m.ChainId.OPTIMISM_GOERLI, m.ChainId.ARBITRUM_ONE, m.ChainId.ARBITRUM_GOERLI, m.ChainId.POLYGON, m.ChainId.POLYGON_MUMBAI, m.ChainId.CELO, m.ChainId.CELO_ALFAJORES, m.ChainId.GNOSIS, m.ChainId.MOONBEAM, m.ChainId.BNB, m.ChainId.AVALANCHE, m.ChainId.BASE, m.ChainId.MAINNET, u.ETHER, m.ChainId.GOERLI, u.ETHER, m.ChainId.SEPOLIA, u.ETHER, m.ChainId.BLAST_SEPOLIA, u.ETHER, m.ChainId.BLAST, u.ETHER, m.ChainId.OPTIMISM, u.ETHER, m.ChainId.OPTIMISM_GOERLI, u.ETHER, m.ChainId.ARBITRUM_ONE, u.ETHER, m.ChainId.ARBITRUM_GOERLI, u.ETHER, m.ChainId.POLYGON, u.MATIC, m.ChainId.POLYGON_MUMBAI, u.MATIC, m.ChainId.CELO, u.CELO, m.ChainId.CELO_ALFAJORES, u.CELO, m.ChainId.GNOSIS, u.GNOSIS, m.ChainId.MOONBEAM, u.MOONBEAM, m.ChainId.BNB, u.BNB, m.ChainId.AVALANCHE, u.AVALANCHE, m.ChainId.BASE, u.ETHER;
            let P = e => {
                switch (e) {
                    case 1:
                        return s.MAINNET;
                    case 5:
                        return s.GOERLI;
                    case 11155111:
                        return s.SEPOLIA;
                    case 168587773:
                        return s.BLAST_SEPOLIA;
                    case 81457:
                        return s.BLAST;
                    case 56:
                        return s.BNB;
                    case 10:
                        return s.OPTIMISM;
                    case 420:
                        return s.OPTIMISM_GOERLI;
                    case 42161:
                        return s.ARBITRUM_ONE;
                    case 421613:
                        return s.ARBITRUM_GOERLI;
                    case 137:
                        return s.POLYGON;
                    case 80001:
                        return s.POLYGON_MUMBAI;
                    case 42220:
                        return s.CELO;
                    case 44787:
                        return s.CELO_ALFAJORES;
                    case 100:
                        return s.GNOSIS;
                    case 1284:
                        return s.MOONBEAM;
                    case 43114:
                        return s.AVALANCHE;
                    case 8453:
                        return s.BASE;
                    case 84531:
                        return s.BASE_GOERLI;
                    default:
                        throw Error(`Unknown chain id: ${e}`)
                }
            };
            Object.values(m.ChainId).map(e => e.toString());
            let M = {
                    [m.ChainId.MAINNET]: new m.Token(1, "0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2", 18, "WETH", "Wrapped Ether"),
                    [m.ChainId.GOERLI]: new m.Token(5, "0xB4FBF271143F4FBf7B91A5ded31805e42b2208d6", 18, "WETH", "Wrapped Ether"),
                    [m.ChainId.BLAST_SEPOLIA]: new m.Token(m.ChainId.BLAST_SEPOLIA, "0x4200000000000000000000000000000000000023", 18, "WETH", "Wrapped Ether"),
                    [m.ChainId.BLAST]: new m.Token(m.ChainId.BLAST, "0x4300000000000000000000000000000000000004", 18, "WETH", "Wrapped Ether"),
                    [m.ChainId.SEPOLIA]: new m.Token(11155111, "0xfFf9976782d46CC05630D1f6eBAb18b2324d6B14", 18, "WETH", "Wrapped Ether"),
                    [m.ChainId.BNB]: new m.Token(56, "0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c", 18, "WBNB", "Wrapped BNB"),
                    [m.ChainId.OPTIMISM]: new m.Token(m.ChainId.OPTIMISM, "0x4200000000000000000000000000000000000006", 18, "WETH", "Wrapped Ether"),
                    [m.ChainId.OPTIMISM_GOERLI]: new m.Token(m.ChainId.OPTIMISM_GOERLI, "0x4200000000000000000000000000000000000006", 18, "WETH", "Wrapped Ether"),
                    [m.ChainId.ARBITRUM_ONE]: new m.Token(m.ChainId.ARBITRUM_ONE, "0x82aF49447D8a07e3bd95BD0d56f35241523fBab1", 18, "WETH", "Wrapped Ether"),
                    [m.ChainId.ARBITRUM_GOERLI]: new m.Token(m.ChainId.ARBITRUM_GOERLI, "0xe39Ab88f8A4777030A534146A9Ca3B52bd5D43A3", 18, "WETH", "Wrapped Ether"),
                    [m.ChainId.POLYGON]: new m.Token(m.ChainId.POLYGON, "0x0d500B1d8E8eF31E21C99d1Db9A6444d3ADf1270", 18, "WMATIC", "Wrapped MATIC"),
                    [m.ChainId.POLYGON_MUMBAI]: new m.Token(m.ChainId.POLYGON_MUMBAI, "0x9c3C9283D3e44854697Cd22D3Faa240Cfb032889", 18, "WMATIC", "Wrapped MATIC"),
                    [m.ChainId.CELO]: new m.Token(m.ChainId.CELO, "0x471EcE3750Da237f93B8E339c536989b8978a438", 18, "CELO", "Celo native asset"),
                    [m.ChainId.CELO_ALFAJORES]: new m.Token(m.ChainId.CELO_ALFAJORES, "0xF194afDf50B03e69Bd7D057c1Aa9e10c9954E4C9", 18, "CELO", "Celo native asset"),
                    [m.ChainId.GNOSIS]: new m.Token(m.ChainId.GNOSIS, "0xe91d153e0b41518a2ce8dd3d7944fa863463a97d", 18, "WXDAI", "Wrapped XDAI on Gnosis"),
                    [m.ChainId.MOONBEAM]: new m.Token(m.ChainId.MOONBEAM, "0xAcc15dC74880C9944775448304B263D191c6077F", 18, "WGLMR", "Wrapped GLMR"),
                    [m.ChainId.AVALANCHE]: new m.Token(m.ChainId.AVALANCHE, "0xB31f66AA3C1e785363F0875A1B74E27b85FD66c7", 18, "WAVAX", "Wrapped AVAX"),
                    [m.ChainId.BASE]: new m.Token(m.ChainId.BASE, "0x4200000000000000000000000000000000000006", 18, "WETH", "Wrapped Ether"),
                    [m.ChainId.BASE_GOERLI]: new m.Token(m.ChainId.BASE_GOERLI, "0x4200000000000000000000000000000000000006", 18, "WETH", "Wrapped Ether"),
                    [m.ChainId.BLAST_SEPOLIA]: new m.Token(168587773, "0x4200000000000000000000000000000000000023", 18, "WETH", "Wrapped Ether"),
                    [m.ChainId.BLAST]: new m.Token(81457, "0x4300000000000000000000000000000000000004", 18, "WETH", "Wrapped Ether")
                },
                x = {
                    [m.ChainId.MAINNET]: new m.Token(1, "0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2", 18, "fwWETH", "Few Wrapped Wrapped Ether"),
                    [m.ChainId.GOERLI]: new m.Token(5, "0x6b7e07C37a157d01D71012c36644907Ab5a7694e", 18, "fwWETH", "Few Wrapped Wrapped Ether"),
                    [m.ChainId.BLAST]: new m.Token(81457, "0x66714DB8F3397c767d0A602458B5b4E3C0FE7dd1", 18, "fwWETH", "Few Wrapped Wrapped Ether"),
                    [m.ChainId.BLAST_SEPOLIA]: new m.Token(168587773, "0x798dE0520497E28E8eBfF0DF1d791c2E942eA881", 18, "fwWETH", "Few Wrapped Wrapped Ether"),
                    [m.ChainId.SEPOLIA]: new m.Token(11155111, "0x98b902eF4f9fEB2F6982ceEB4E98761294854D61", 18, "fwWETH", "Few Wrapped Wrapped Ether")
                },
                R = {
                    [m.ChainId.GOERLI]: new m.Token(5, "0xe6B8dDee63CaD05f686d5e66Ba18893AF366CFa7", 18, "fwRNG", "Few Wrapped Ring Exchange"),
                    [m.ChainId.BLAST_SEPOLIA]: new m.Token(168587773, "0x187221b41f430faF3E418592746AE1a4f02b72EB", 18, "fwRNG", "Few Wrapped Ring Exchange"),
                    [m.ChainId.BLAST]: new m.Token(81457, "0x2Cd33E470004E4670ED5cfc22fa7Bad167d86982", 18, "fwRNG", "Few Wrapped Ring Exchange"),
                    [m.ChainId.SEPOLIA]: new m.Token(11155111, "0x2E4370Fdc49D93C43820296D931E1A36446417C7", 18, "fwRNG", "Few Wrapped Ring Exchange")
                };
            class F extends m.Ether {
                get wrapped() {
                    if (this.chainId in M) return M[this.chainId];
                    throw Error("Unsupported chain ID")
                }
                static onChain(e) {
                    var t;
                    return null !== (t = this._cachedExtendedEther[e]) && void 0 !== t ? t : this._cachedExtendedEther[e] = new F(e)
                }
            }
            F._cachedExtendedEther = {}, m.CHAIN_TO_ADDRESSES_MAP[m.ChainId.BNB].tickLensAddress, m.CHAIN_TO_ADDRESSES_MAP[m.ChainId.BNB].nonfungiblePositionManagerAddress;
            let D = m.CHAIN_TO_ADDRESSES_MAP[m.ChainId.BNB].swapRouter02Address;
            m.CHAIN_TO_ADDRESSES_MAP[m.ChainId.BNB].v3MigratorAddress;
            let N = { ...V(k.FACTORY_ADDRESS),
                    [m.ChainId.CELO]: m.CHAIN_TO_ADDRESSES_MAP[m.ChainId.CELO].v3CoreFactoryAddress,
                    [m.ChainId.CELO_ALFAJORES]: m.CHAIN_TO_ADDRESSES_MAP[m.ChainId.CELO_ALFAJORES].v3CoreFactoryAddress,
                    [m.ChainId.OPTIMISM_GOERLI]: m.CHAIN_TO_ADDRESSES_MAP[m.ChainId.OPTIMISM_GOERLI].v3CoreFactoryAddress,
                    [m.ChainId.SEPOLIA]: m.CHAIN_TO_ADDRESSES_MAP[m.ChainId.SEPOLIA].v3CoreFactoryAddress,
                    [m.ChainId.ARBITRUM_GOERLI]: m.CHAIN_TO_ADDRESSES_MAP[m.ChainId.ARBITRUM_GOERLI].v3CoreFactoryAddress,
                    [m.ChainId.BNB]: m.CHAIN_TO_ADDRESSES_MAP[m.ChainId.BNB].v3CoreFactoryAddress,
                    [m.ChainId.AVALANCHE]: m.CHAIN_TO_ADDRESSES_MAP[m.ChainId.AVALANCHE].v3CoreFactoryAddress,
                    [m.ChainId.BASE_GOERLI]: m.CHAIN_TO_ADDRESSES_MAP[m.ChainId.BASE_GOERLI].v3CoreFactoryAddress,
                    [m.ChainId.BASE]: m.CHAIN_TO_ADDRESSES_MAP[m.ChainId.BASE].v3CoreFactoryAddress
                },
                B = { ...V("0x61fFE014bA17989E743c5F6cB21bF9697530B21e"),
                    [m.ChainId.CELO]: m.CHAIN_TO_ADDRESSES_MAP[m.ChainId.CELO].quoterAddress,
                    [m.ChainId.CELO_ALFAJORES]: m.CHAIN_TO_ADDRESSES_MAP[m.ChainId.CELO_ALFAJORES].quoterAddress,
                    [m.ChainId.OPTIMISM_GOERLI]: m.CHAIN_TO_ADDRESSES_MAP[m.ChainId.OPTIMISM_GOERLI].quoterAddress,
                    [m.ChainId.SEPOLIA]: m.CHAIN_TO_ADDRESSES_MAP[m.ChainId.SEPOLIA].quoterAddress,
                    [m.ChainId.ARBITRUM_GOERLI]: m.CHAIN_TO_ADDRESSES_MAP[m.ChainId.ARBITRUM_GOERLI].quoterAddress,
                    [m.ChainId.BNB]: m.CHAIN_TO_ADDRESSES_MAP[m.ChainId.BNB].quoterAddress,
                    [m.ChainId.AVALANCHE]: m.CHAIN_TO_ADDRESSES_MAP[m.ChainId.AVALANCHE].quoterAddress,
                    [m.ChainId.BASE_GOERLI]: m.CHAIN_TO_ADDRESSES_MAP[m.ChainId.BASE_GOERLI].quoterAddress,
                    [m.ChainId.BASE]: m.CHAIN_TO_ADDRESSES_MAP[m.ChainId.BASE].quoterAddress
                },
                L = {
                    [m.ChainId.MAINNET]: m.CHAIN_TO_ADDRESSES_MAP[m.ChainId.MAINNET].v1MixedRouteQuoterAddress,
                    [m.ChainId.GOERLI]: "0x06f8B28e06Ca024f20E0f38530CD7EFc23EfA53c",
                    [m.ChainId.BLAST_SEPOLIA]: "0x06f8B28e06Ca024f20E0f38530CD7EFc23EfA53c",
                    [m.ChainId.BLAST]: "0x290Ef7a04b07FC5B150B83320d9E7ec098615c2e"
                },
                q = { ...V("0x1F98415757620B543A52E61c46B32eB19261F984"),
                    [m.ChainId.CELO]: m.CHAIN_TO_ADDRESSES_MAP[m.ChainId.CELO].multicallAddress,
                    [m.ChainId.CELO_ALFAJORES]: m.CHAIN_TO_ADDRESSES_MAP[m.ChainId.CELO_ALFAJORES].multicallAddress,
                    [m.ChainId.OPTIMISM_GOERLI]: m.CHAIN_TO_ADDRESSES_MAP[m.ChainId.OPTIMISM_GOERLI].multicallAddress,
                    [m.ChainId.SEPOLIA]: m.CHAIN_TO_ADDRESSES_MAP[m.ChainId.SEPOLIA].multicallAddress,
                    [m.ChainId.ARBITRUM_GOERLI]: m.CHAIN_TO_ADDRESSES_MAP[m.ChainId.ARBITRUM_GOERLI].multicallAddress,
                    [m.ChainId.BNB]: m.CHAIN_TO_ADDRESSES_MAP[m.ChainId.BNB].multicallAddress,
                    [m.ChainId.AVALANCHE]: m.CHAIN_TO_ADDRESSES_MAP[m.ChainId.AVALANCHE].multicallAddress,
                    [m.ChainId.BASE_GOERLI]: m.CHAIN_TO_ADDRESSES_MAP[m.ChainId.BASE_GOERLI].multicallAddress,
                    [m.ChainId.BASE]: m.CHAIN_TO_ADDRESSES_MAP[m.ChainId.BASE].multicallAddress,
                    [m.ChainId.BLAST_SEPOLIA]: m.CHAIN_TO_ADDRESSES_MAP[m.ChainId.BLAST_SEPOLIA].multicallAddress,
                    [m.ChainId.BLAST]: m.CHAIN_TO_ADDRESSES_MAP[m.ChainId.BLAST].multicallAddress
                },
                U = e => e == m.ChainId.BNB ? D : "0x68b3465833fb72A70ecDF485E0e4C7bD8665Fc45";

            function V(e, t = []) {
                return S.concat(t).reduce((t, f) => (t[f] = e, t), {})
            }
            m.CHAIN_TO_ADDRESSES_MAP[m.ChainId.ARBITRUM_ONE].tickLensAddress, m.CHAIN_TO_ADDRESSES_MAP[m.ChainId.MAINNET].nonfungiblePositionManagerAddress, m.CHAIN_TO_ADDRESSES_MAP[m.ChainId.MAINNET].v3MigratorAddress, m.ChainId.MAINNET, new m.Token(m.ChainId.MAINNET, "0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2", 18, "WETH", "Wrapped Ether"), m.ChainId.GOERLI, new m.Token(m.ChainId.GOERLI, "0xB4FBF271143F4FBf7B91A5ded31805e42b2208d6", 18, "WETH", "Wrapped Ether"), m.ChainId.SEPOLIA, new m.Token(m.ChainId.SEPOLIA, "0xfFf9976782d46CC05630D1f6eBAb18b2324d6B14", 18, "WETH", "Wrapped Ether"), m.ChainId.BLAST, new m.Token(m.ChainId.BLAST, "0x4300000000000000000000000000000000000004", 18, "WETH", "Wrapped Ether"), m.ChainId.BLAST_SEPOLIA, new m.Token(m.ChainId.BLAST_SEPOLIA, "0x4200000000000000000000000000000000000023", 18, "WETH", "Wrapped Ether"), m.ChainId.BLAST, new m.Token(m.ChainId.BLAST, "0x4300000000000000000000000000000000000004", 18, "WETH", "Wrapped Ether"), m.ChainId.OPTIMISM, new m.Token(m.ChainId.OPTIMISM, "0x4200000000000000000000000000000000000006", 18, "WETH", "Wrapped Ether"), m.ChainId.OPTIMISM_GOERLI, new m.Token(m.ChainId.OPTIMISM_GOERLI, "0x4200000000000000000000000000000000000006", 18, "WETH", "Wrapped Ether"), m.ChainId.ARBITRUM_ONE, new m.Token(m.ChainId.ARBITRUM_ONE, "0x82aF49447D8a07e3bd95BD0d56f35241523fBab1", 18, "WETH", "Wrapped Ether"), m.ChainId.ARBITRUM_GOERLI, new m.Token(m.ChainId.ARBITRUM_GOERLI, "0xe39Ab88f8A4777030A534146A9Ca3B52bd5D43A3", 18, "WETH", "Wrapped Ether"), m.ChainId.BASE_GOERLI, new m.Token(m.ChainId.BASE_GOERLI, "0x4200000000000000000000000000000000000006", 18, "WETH", "Wrapped Ether"), m.ChainId.BASE, new m.Token(m.ChainId.BASE, "0x4200000000000000000000000000000000000006", 18, "WETH", "Wrapped Ether");
            var G = f(67261),
                j = f.n(G);
            class $ extends m.CurrencyAmount {}

            function H(e) {
                switch (e) {
                    case k.FeeAmount.HIGH:
                        return "10000";
                    case k.FeeAmount.MEDIUM:
                        return "3000";
                    case k.FeeAmount.LOW:
                        return "500";
                    case k.FeeAmount.LOWEST:
                        return "100";
                    default:
                        throw Error(`Fee amount ${e} not supported.`)
                }
            }! function(e) {
                e.V2 = "V2", e.V3 = "V3", e.FEW = "FEW", e.RING = "RING", e.MIXED = "MIXED"
            }(d || (d = {}));
            var W = f(9677),
                Q = f(34534);
            let X = e => {
                    let t = [],
                        f = e.protocol === d.V3 ? e.tokenPath : e.path,
                        n = _().map(f, e => `${e.symbol}`),
                        r = e.protocol === d.V3 || e.protocol === d.MIXED ? e.pools : e.pairs,
                        i = _().map(r, e => `${e instanceof k.Pool?` -- ${e.fee/1e4}% [${k.Pool.getAddress(e.token0,e.token1,e.fee,void 0,N[e.chainId])}]`:e instanceof Q.Pair?` -- [${Q.Pair.getAddress(e.token0,e.token1)}]`:` -- [${W.Pair.getAddress(e.token0,e.token1)}]`} --> `);
                    for (let e = 0; e < n.length; e++) t.push(n[e]), e < i.length && t.push(i[e]);
                    return t.join("")
                },
                z = e => {
                    let t = _().reduce(e, (e, t) => e.add(t.amount), $.fromRawAmount(e[0].amount.currency, 0)),
                        f = _().map(e, ({
                            protocol: e,
                            route: f,
                            amount: n
                        }) => {
                            let r = n.divide(t),
                                i = new m.Percent(r.numerator, r.denominator);
                            return `[${e==d.MIXED?"V2 + V3 + RING":e}] ${i.toFixed(2)}% = ${X(f)}`
                        });
                    return _().join(f, ", ")
                },
                K = e => `${e.token0.symbol}/${e.token1.symbol}${e instanceof k.Pool?`/${e.fee/1e4}%`:""}`;
            var Y = f(68e3),
                J = f(12034),
                Z = f(87002);
            let ee = [{
                anonymous: !1,
                inputs: [{
                    indexed: !0,
                    internalType: "address",
                    name: "owner",
                    type: "address"
                }, {
                    indexed: !0,
                    internalType: "address",
                    name: "spender",
                    type: "address"
                }, {
                    indexed: !1,
                    internalType: "uint256",
                    name: "value",
                    type: "uint256"
                }],
                name: "Approval",
                type: "event"
            }, {
                anonymous: !1,
                inputs: [{
                    indexed: !0,
                    internalType: "address",
                    name: "from",
                    type: "address"
                }, {
                    indexed: !0,
                    internalType: "address",
                    name: "to",
                    type: "address"
                }, {
                    indexed: !1,
                    internalType: "uint256",
                    name: "value",
                    type: "uint256"
                }],
                name: "Transfer",
                type: "event"
            }, {
                inputs: [{
                    internalType: "address",
                    name: "owner",
                    type: "address"
                }, {
                    internalType: "address",
                    name: "spender",
                    type: "address"
                }],
                name: "allowance",
                outputs: [{
                    internalType: "uint256",
                    name: "",
                    type: "uint256"
                }],
                stateMutability: "view",
                type: "function"
            }, {
                inputs: [{
                    internalType: "address",
                    name: "spender",
                    type: "address"
                }, {
                    internalType: "uint256",
                    name: "amount",
                    type: "uint256"
                }],
                name: "approve",
                outputs: [{
                    internalType: "bool",
                    name: "",
                    type: "bool"
                }],
                stateMutability: "nonpayable",
                type: "function"
            }, {
                inputs: [{
                    internalType: "address",
                    name: "account",
                    type: "address"
                }],
                name: "balanceOf",
                outputs: [{
                    internalType: "uint256",
                    name: "",
                    type: "uint256"
                }],
                stateMutability: "view",
                type: "function"
            }, {
                inputs: [],
                name: "decimals",
                outputs: [{
                    internalType: "uint8",
                    name: "",
                    type: "uint8"
                }],
                stateMutability: "view",
                type: "function"
            }, {
                inputs: [],
                name: "name",
                outputs: [{
                    internalType: "string",
                    name: "",
                    type: "string"
                }],
                stateMutability: "view",
                type: "function"
            }, {
                inputs: [],
                name: "symbol",
                outputs: [{
                    internalType: "string",
                    name: "",
                    type: "string"
                }],
                stateMutability: "view",
                type: "function"
            }, {
                inputs: [],
                name: "totalSupply",
                outputs: [{
                    internalType: "uint256",
                    name: "",
                    type: "uint256"
                }],
                stateMutability: "view",
                type: "function"
            }, {
                inputs: [{
                    internalType: "address",
                    name: "recipient",
                    type: "address"
                }, {
                    internalType: "uint256",
                    name: "amount",
                    type: "uint256"
                }],
                name: "transfer",
                outputs: [{
                    internalType: "bool",
                    name: "",
                    type: "bool"
                }],
                stateMutability: "nonpayable",
                type: "function"
            }, {
                inputs: [{
                    internalType: "address",
                    name: "sender",
                    type: "address"
                }, {
                    internalType: "address",
                    name: "recipient",
                    type: "address"
                }, {
                    internalType: "uint256",
                    name: "amount",
                    type: "uint256"
                }],
                name: "transferFrom",
                outputs: [{
                    internalType: "bool",
                    name: "",
                    type: "bool"
                }],
                stateMutability: "nonpayable",
                type: "function"
            }];
            class et {
                static createInterface() {
                    return new Y.vU(ee)
                }
                static connect(e, t) {
                    return new Z.Contract(e, ee, t)
                }
            }
            et.abi = ee;
            let ef = new m.Token(m.ChainId.MAINNET, "0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48", 6, "USDC", "USD//C"),
                en = new m.Token(m.ChainId.MAINNET, "0xdAC17F958D2ee523a2206206994597C13D831ec7", 6, "USDT", "Tether USD"),
                er = new m.Token(m.ChainId.MAINNET, "0x2260FAC5E5542a773Aa44fBCfeDf7C193bc2C599", 8, "WBTC", "Wrapped BTC"),
                ei = new m.Token(m.ChainId.MAINNET, "0x6B175474E89094C44Da98b954EedeAC495271d0F", 18, "DAI", "Dai Stablecoin"),
                ea = new m.Token(m.ChainId.MAINNET, "0x956F47F50A910163D8BF957Cf5846D573E7f87CA", 18, "FEI", "Fei USD");
            new m.Token(m.ChainId.MAINNET, "0x1f9840a85d5af5bf1d1762f925bdaddc4201f984", 18, "UNI", "Uniswap");
            let eo = new m.Token(m.ChainId.MAINNET, "0x7Fc66500c84A76Ad7e9c93437bFc5Ac33E2DDaE9", 18, "AAVE", "Aave Token"),
                es = new m.Token(m.ChainId.MAINNET, "0x5A98FcBEA516Cf06857215779Fd812CA3beF1B32", 18, "LDO", "Lido DAO Token"),
                eu = new m.Token(m.ChainId.SEPOLIA, "0x62bE594f32E7521aa5f960DccE394022D902aE44", 6, "USDC", "USDC Token"),
                ed = new m.Token(m.ChainId.SEPOLIA, "0x5fbad067f69eBbc276410D78fF52823be133eD48", 18, "DAI", "DAI Token"),
                ec = new m.Token(m.ChainId.SEPOLIA, "0x9e133758b0f3cc2fa8aec789e22816307b0e8a9c", 18, "fwUSDC", "Few Wrapped USD//C"),
                el = new m.Token(m.ChainId.SEPOLIA, "0x09D8486e42Aa76229a563bFa0f07CA301aCd29C9", 18, "fwDAI", "Few Wrapped Dai Stablecoin"),
                ep = new m.Token(m.ChainId.BLAST_SEPOLIA, "0x9C6Fc5bF860A4a012C9De812002dB304AD04F581", 18, "DAI", "Dai Stablecoin");
            new m.Token(m.ChainId.BLAST_SEPOLIA, "0xF19A5b56b419170Aa2ee49E5c9195F5902D39BF1", 6, "USDC", "USD//C");
            let ey = new m.Token(m.ChainId.BLAST_SEPOLIA, "0xa7870cf9143084ED04f4C2311f48CB24a2b4A097", 18, "fwUSDC", "Few Wrapped USD//C"),
                eb = new m.Token(m.ChainId.BLAST_SEPOLIA, "0x9DB240312deEFEC82687405a4CF42511032d55d8", 18, "fwDAI", "Few Wrapped Dai Stablecoin"),
                eh = new m.Token(m.ChainId.BLAST, "0x4300000000000000000000000000000000000003", 18, "USDB", "USDB"),
                em = new m.Token(m.ChainId.BLAST, "0x866f2C06B83Df2ed7Ca9C2D044940E7CD55a06d6", 18, "fwUSDB", "Few Wrapped USDB"),
                ev = new m.Token(m.ChainId.GOERLI, "0x07865c6e87b9f70255377e024ace6630c1eaa37f", 6, "USDC", "USD//C"),
                eT = new m.Token(m.ChainId.GOERLI, "0x8b3a44eF4C19a9eAf0fDc921E2b6c2303c25A64A", 18, "fwUSDC", "Few Wrapped USD//C"),
                eg = new m.Token(m.ChainId.GOERLI, "0xe583769738b6dd4e7caf8451050d1948be717679", 18, "USDT", "Tether USD"),
                ew = new m.Token(m.ChainId.GOERLI, "0xFb5c10Ffe9002944D8d3ED2f88af8D23A4080c85", 18, "fwUSDT", "Few Wrapped Tether USD"),
                eA = new m.Token(m.ChainId.GOERLI, "0xa0a5ad2296b38bd3e3eb59aaeaf1589e8d9a29a9", 8, "WBTC", "Wrapped BTC"),
                eI = new m.Token(m.ChainId.GOERLI, "0x11fe4b6ae13d2a6055c8d9cf65c55bac32b5d844", 18, "DAI", "Dai Stablecoin"),
                eE = new m.Token(m.ChainId.GOERLI, "0xE2f2F3795666C69e65843522BDbb4c57e6403C50", 18, "fwDAI", "Few Wrapped Dai Stablecoin");
            new m.Token(m.ChainId.GOERLI, "0x1f9840a85d5aF5bf1D1762F925BDADdC4201F984", 18, "UNI", "Uni token");
            let e_ = new m.Token(m.ChainId.GOERLI, "0xe6B8dDee63CaD05f686d5e66Ba18893AF366CFa7", 18, "fwRNG", "Few Wrapped Ring Exchange"),
                ek = new m.Token(m.ChainId.BLAST_SEPOLIA, "0x187221b41f430faF3E418592746AE1a4f02b72EB", 18, "fwRNG", "Few Wrapped Ring Exchange"),
                eC = new m.Token(m.ChainId.BLAST, "0x2Cd33E470004E4670ED5cfc22fa7Bad167d86982", 18, "fwRNG", "Few Wrapped Ring Exchange"),
                eS = new m.Token(m.ChainId.SEPOLIA, "0x2E4370Fdc49D93C43820296D931E1A36446417C7", 18, "fwRNG", "Few Wrapped Ring Exchange"),
                eO = new m.Token(m.ChainId.OPTIMISM, "0x7F5c764cBc14f9669B88837ca1490cCa17c31607", 6, "USDC", "USD//C"),
                eP = new m.Token(m.ChainId.OPTIMISM, "0x94b008aA00579c1307B0EF2c499aD98a8ce58e58", 6, "USDT", "Tether USD"),
                eM = new m.Token(m.ChainId.OPTIMISM, "0x68f180fcCe6836688e9084f035309E29Bf0A2095", 8, "WBTC", "Wrapped BTC"),
                ex = new m.Token(m.ChainId.OPTIMISM, "0xDA10009cBd5D07dd0CeCc66161FC93D7c9000da1", 18, "DAI", "Dai Stablecoin"),
                eR = new m.Token(m.ChainId.OPTIMISM, "0x4200000000000000000000000000000000000042", 18, "OP", "Optimism"),
                eF = new m.Token(m.ChainId.OPTIMISM_GOERLI, "0x7E07E15D2a87A24492740D16f5bdF58c16db0c4E", 6, "USDC", "USD//C"),
                eD = new m.Token(m.ChainId.OPTIMISM_GOERLI, "0x853eb4bA5D0Ba2B77a0A5329Fd2110d5CE149ECE", 6, "USDT", "Tether USD"),
                eN = new m.Token(m.ChainId.OPTIMISM_GOERLI, "0xe0a592353e81a94Db6E3226fD4A99F881751776a", 8, "WBTC", "Wrapped BTC"),
                eB = new m.Token(m.ChainId.OPTIMISM_GOERLI, "0xDA10009cBd5D07dd0CeCc66161FC93D7c9000da1", 18, "DAI", "Dai Stablecoin"),
                eL = new m.Token(m.ChainId.ARBITRUM_ONE, "0xFF970A61A04b1cA14834A43f5dE4533eBDDB5CC8", 6, "USDC", "USD//C"),
                eq = new m.Token(m.ChainId.ARBITRUM_ONE, "0xFd086bC7CD5C481DCC9C85ebE478A1C0b69FCbb9", 6, "USDT", "Tether USD"),
                eU = new m.Token(m.ChainId.ARBITRUM_ONE, "0x2f2a2543B76A4166549F7aaB2e75Bef0aefC5B0f", 8, "WBTC", "Wrapped BTC"),
                eV = new m.Token(m.ChainId.ARBITRUM_ONE, "0xDA10009cBd5D07dd0CeCc66161FC93D7c9000da1", 18, "DAI", "Dai Stablecoin"),
                eG = new m.Token(m.ChainId.ARBITRUM_ONE, "0x912CE59144191C1204E64559FE8253a0e49E6548", 18, "ARB", "Arbitrum");
            new m.Token(m.ChainId.ARBITRUM_GOERLI, "0x0000000000000000000000000000000000000000", 18, "DAI", "Dai Stablecoin");
            let ej = new m.Token(m.ChainId.ARBITRUM_GOERLI, "0x8FB1E3fC51F3b789dED7557E680551d93Ea9d892", 6, "USDC", "USD//C"),
                e$ = new m.Token(m.ChainId.POLYGON, "0x0d500B1d8E8eF31E21C99d1Db9A6444d3ADf1270", 18, "WMATIC", "Wrapped MATIC"),
                eH = new m.Token(m.ChainId.POLYGON, "0x7ceb23fd6bc0add59e62ac25578270cff1b9f619", 18, "WETH", "Wrapped Ether"),
                eW = new m.Token(m.ChainId.POLYGON, "0x2791bca1f2de4661ed88a30c99a7a9449aa84174", 6, "USDC", "USD//C");
            new m.Token(m.ChainId.POLYGON, "0x8f3Cf7ad23Cd3CaDbD9735AFf958023239c6A063", 18, "DAI", "Dai Stablecoin");
            let eQ = new m.Token(m.ChainId.POLYGON_MUMBAI, "0x9c3C9283D3e44854697Cd22D3Faa240Cfb032889", 18, "WMATIC", "Wrapped MATIC");
            new m.Token(m.ChainId.POLYGON_MUMBAI, "0xe11a86849d99f524cac3e7a0ec1241828e332c62", 6, "USDC", "USD//C");
            let eX = new m.Token(m.ChainId.POLYGON_MUMBAI, "0x001b3b4d0f3714ca98ba10f6042daebf0b1b7b6f", 18, "DAI", "Dai Stablecoin");
            new m.Token(m.ChainId.POLYGON_MUMBAI, "0xa6fa4fb5f76172d178d61b04b0ecd319c5d1c0aa", 18, "WETH", "Wrapped Ether");
            let ez = new m.Token(m.ChainId.BNB, "0x7130d2A12B9BCbFAe4f2634d864A1Ee1Ce3Ead9c", 18, "BTCB", "Binance BTC"),
                eK = new m.Token(m.ChainId.BNB, "0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56", 18, "BUSD", "BUSD"),
                eY = new m.Token(m.ChainId.BNB, "0x1AF3F329e8BE154074D8769D1FFa4eE058B1DBc3", 18, "DAI", "DAI"),
                eJ = new m.Token(m.ChainId.BNB, "0x2170Ed0880ac9A755fd29B2688956BD959F933F8", 18, "ETH", "ETH"),
                eZ = new m.Token(m.ChainId.BNB, "0x8AC76a51cc950d9822D68b83fE1Ad97B32Cd580d", 18, "USDC", "USDC"),
                e0 = new m.Token(m.ChainId.BNB, "0x55d398326f99059fF775485246999027B3197955", 18, "USDT", "USDT"),
                e1 = new m.Token(m.ChainId.CELO, "0x471EcE3750Da237f93B8E339c536989b8978a438", 18, "CELO", "Celo native asset"),
                e6 = new m.Token(m.ChainId.CELO, "0xE4fE50cdD716522A56204352f00AA110F731932d", 18, "DAI", "Dai Stablecoin"),
                e5 = new m.Token(m.ChainId.CELO, "0x765DE816845861e75A25fCA122bb6898B8B1282a", 18, "CUSD", "Celo Dollar Stablecoin"),
                e2 = new m.Token(m.ChainId.CELO, "0xD8763CBa276a3738E6DE85b4b3bF5FDed6D6cA73", 18, "CEUR", "Celo Euro Stablecoin"),
                e8 = new m.Token(m.ChainId.CELO_ALFAJORES, "0xF194afDf50B03e69Bd7D057c1Aa9e10c9954E4C9", 18, "CELO", "Celo native asset"),
                e3 = new m.Token(m.ChainId.CELO_ALFAJORES, "0x7d91E51C8F218f7140188A155f5C75388630B6a8", 18, "DAI", "Dai Stablecoin"),
                e9 = new m.Token(m.ChainId.CELO_ALFAJORES, "0x874069Fa1Eb16D44d622F2e0Ca25eeA172369bC1", 18, "CUSD", "Celo Dollar Stablecoin"),
                e4 = new m.Token(m.ChainId.CELO_ALFAJORES, "0x10c892A6EC43a53E45D0B916B4b7D383B1b78C0F", 18, "CEUR", "Celo Euro Stablecoin"),
                e7 = new m.Token(m.ChainId.AVALANCHE, "0xd586E7F844cEa2F87f50152665BCbc2C279D8d70", 18, "DAI.e", "DAI.e Token"),
                te = new m.Token(m.ChainId.AVALANCHE, "0xB97EF9Ef8734C71904D8002F8b6Bc66Dd9c48a6E", 6, "USDC", "USDC Token"),
                tt = new m.Token(m.ChainId.BASE, "0xd9aAEc86B65D86f6A7B5B1b0c42FFA531710b6CA", 6, "USDbC", "USD Base Coin");
            new m.Token(m.ChainId.BASE_GOERLI, "0x853154e2A5604E5C74a2546E2871Ad44932eB92C", 6, "USDbC", "USD Base Coin");
            let tf = new m.Token(m.ChainId.GNOSIS, "0xddafbb505ad214d7b80b1f830fccc89b60fb7a83", 6, "USDC", "USDC from Ethereum on Gnosis"),
                tn = new m.Token(m.ChainId.GNOSIS, "0xe91d153e0b41518a2ce8dd3d7944fa863463a97d", 18, "WXDAI", "Wrapped XDAI on Gnosis"),
                tr = new m.Token(m.ChainId.GNOSIS, "0x8e5bbbb09ed1ebde8674cda39a0c169401db4252", 8, "WBTC", "Wrapped BTC from Ethereum on Gnosis"),
                ti = new m.Token(m.ChainId.MOONBEAM, "0x818ec0A7Fe18Ff94269904fCED6AE3DaE6d6dC0b", 6, "USDC", "USD Coin bridged using Multichain"),
                ta = new m.Token(m.ChainId.MOONBEAM, "0xAcc15dC74880C9944775448304B263D191c6077F", 18, "WGLMR", "Wrapped GLMR"),
                to = new m.Token(m.ChainId.MOONBEAM, "0x818ec0A7Fe18Ff94269904fCED6AE3DaE6d6dC0b", 6, "DAI", "Dai on moonbeam bridged using Multichain"),
                ts = new m.Token(m.ChainId.MOONBEAM, "0x922D641a426DcFFaeF11680e5358F34d97d112E1", 8, "WBTC", "Wrapped BTC bridged using Multichain");
            class tu {
                async getTokenSymbol(e, t) {
                    let f;
                    let n = !1;
                    try {
                        f = await this.multicall2Provider.callSameFunctionOnMultipleContracts({
                            addresses: e,
                            contractInterface: et.createInterface(),
                            functionName: "symbol",
                            providerConfig: t
                        })
                    } catch (a) {
                        r.error({
                            addresses: e
                        }, `TokenProvider.getTokenSymbol[string] failed with error ${a}. Trying with bytes32.`);
                        let i = new Y.vU([{
                            inputs: [],
                            name: "symbol",
                            outputs: [{
                                internalType: "bytes32",
                                name: "",
                                type: "bytes32"
                            }],
                            stateMutability: "view",
                            type: "function"
                        }]);
                        try {
                            f = await this.multicall2Provider.callSameFunctionOnMultipleContracts({
                                addresses: e,
                                contractInterface: i,
                                functionName: "symbol",
                                providerConfig: t
                            }), n = !0
                        } catch (t) {
                            throw r.fatal({
                                addresses: e
                            }, `TokenProvider.getTokenSymbol[bytes32] failed with error ${t}.`), Error("[TokenProvider.getTokenSymbol] Impossible to fetch token symbol.")
                        }
                    }
                    return {
                        result: f,
                        isBytes32: n
                    }
                }
                async getTokenDecimals(e, t) {
                    return this.multicall2Provider.callSameFunctionOnMultipleContracts({
                        addresses: e,
                        contractInterface: et.createInterface(),
                        functionName: "decimals",
                        providerConfig: t
                    })
                }
                async getTokens(e, t) {
                    let f = {},
                        n = {},
                        i = _()(e).map(e => e.toLowerCase()).uniq().value();
                    if (i.length > 0) {
                        let [e, a] = await Promise.all([this.getTokenSymbol(i, t), this.getTokenDecimals(i, t)]), o = e.isBytes32, {
                            results: s
                        } = e.result, {
                            results: u
                        } = a;
                        for (let e = 0; e < i.length; e++) {
                            let t = i[e],
                                a = s[e],
                                d = u[e];
                            if (!(null == a ? void 0 : a.success) || !(null == d ? void 0 : d.success)) {
                                r.info({
                                    symbolResult: a,
                                    decimalResult: d
                                }, `Dropping token with address ${t} as symbol or decimal are invalid`);
                                continue
                            }
                            let c = o ? (0, J.F)(a.result[0]) : a.result[0],
                                l = d.result[0];
                            f[t.toLowerCase()] = new m.Token(this.chainId, t, l, c), n[c.toLowerCase()] = f[t.toLowerCase()]
                        }
                        r.info(`Got token symbol and decimals for ${Object.values(f).length} out of ${i.length} tokens on-chain ${t?`as of: ${null==t?void 0:t.blockNumber}`:""}`)
                    }
                    return {
                        getTokenByAddress: e => f[e.toLowerCase()],
                        getTokenBySymbol: e => n[e.toLowerCase()],
                        getAllTokens: () => Object.values(f)
                    }
                }
                constructor(e, t) {
                    this.chainId = e, this.multicall2Provider = t
                }
            }
            let td = {
                [m.ChainId.MAINNET]: {
                    WETH: M[m.ChainId.MAINNET],
                    USDC: ef,
                    USDT: en,
                    WBTC: er,
                    DAI: ei,
                    RING: new m.Token(m.ChainId.MAINNET, "0x9469D013805bFfB7D3DEBe5E7839237e535ec483", 18, "RING", "RING")
                },
                [m.ChainId.SEPOLIA]: {
                    USDC: eu
                },
                [m.ChainId.OPTIMISM]: {
                    USDC: eO,
                    USDT: eP,
                    WBTC: eM,
                    DAI: ex
                },
                [m.ChainId.OPTIMISM_GOERLI]: {
                    USDC: eF,
                    USDT: eD,
                    WBTC: eN,
                    DAI: eB
                },
                [m.ChainId.ARBITRUM_ONE]: {
                    USDC: eL,
                    USDT: eq,
                    WBTC: eU,
                    DAI: eV
                },
                [m.ChainId.ARBITRUM_GOERLI]: {
                    USDC: ej
                },
                [m.ChainId.POLYGON]: {
                    WMATIC: e$,
                    USDC: eW
                },
                [m.ChainId.POLYGON_MUMBAI]: {
                    WMATIC: eQ,
                    DAI: eX
                },
                [m.ChainId.CELO]: {
                    CELO: e1,
                    CUSD: e5,
                    CEUR: e2,
                    DAI: e6
                },
                [m.ChainId.CELO_ALFAJORES]: {
                    CELO: e8,
                    CUSD: e9,
                    CEUR: e9,
                    DAI: e3
                },
                [m.ChainId.GNOSIS]: {
                    WXDAI: M[m.ChainId.GNOSIS],
                    USDC_ETHEREUM_GNOSIS: tf
                },
                [m.ChainId.MOONBEAM]: {
                    USDC: ti,
                    DAI: to,
                    WBTC: ts,
                    WGLMR: M[m.ChainId.MOONBEAM]
                },
                [m.ChainId.BNB]: {
                    USDC: eZ,
                    USDT: e0,
                    BUSD: eK,
                    ETH: eJ,
                    DAI: eY,
                    BTC: ez,
                    WBNB: M[m.ChainId.BNB]
                },
                [m.ChainId.AVALANCHE]: {
                    USDC: te,
                    DAI: e7,
                    WAVAX: M[m.ChainId.AVALANCHE]
                },
                [m.ChainId.BASE]: {
                    USDC: tt,
                    WETH: M[m.ChainId.BASE]
                }
            };
            class tc {
                async getTokens(e) {
                    let t = td[this.chainId];
                    if (t)
                        for (let e of Object.values(t)) await this.tokenCache.set(this.CACHE_KEY(this.chainId, e.address.toLowerCase()), e);
                    let f = {},
                        n = {},
                        i = _()(e).map(e => e.toLowerCase()).uniq().value(),
                        a = [],
                        o = [];
                    for (let e of i) await this.tokenCache.has(this.CACHE_KEY(this.chainId, e)) ? (f[e.toLowerCase()] = await this.tokenCache.get(this.CACHE_KEY(this.chainId, e)), n[f[e].symbol] = await this.tokenCache.get(this.CACHE_KEY(this.chainId, e))) : a.push(e);
                    if (r.info({
                            addressesToFindInPrimary: a
                        }, `Found ${i.length-a.length} out of ${i.length} tokens in local cache. ${a.length>0?`Checking primary token provider for ${a.length} tokens`:""}
      `), a.length > 0) {
                        let e = await this.primaryTokenProvider.getTokens(a);
                        for (let t of a) {
                            let r = e.getTokenByAddress(t);
                            r ? (f[t.toLowerCase()] = r, n[f[t].symbol] = r, await this.tokenCache.set(this.CACHE_KEY(this.chainId, t.toLowerCase()), f[t])) : o.push(t)
                        }
                        r.info({
                            addressesToFindInSecondary: o
                        }, `Found ${a.length-o.length} tokens in primary. ${this.fallbackTokenProvider?`Checking secondary token provider for ${o.length} tokens`:"No fallback token provider specified. About to return."}`)
                    }
                    if (this.fallbackTokenProvider && o.length > 0) {
                        let e = await this.fallbackTokenProvider.getTokens(o);
                        for (let t of o) {
                            let r = e.getTokenByAddress(t);
                            r && (f[t.toLowerCase()] = r, n[f[t].symbol] = r, await this.tokenCache.set(this.CACHE_KEY(this.chainId, t.toLowerCase()), f[t]))
                        }
                    }
                    return {
                        getTokenByAddress: e => f[e.toLowerCase()],
                        getTokenBySymbol: e => n[e.toLowerCase()],
                        getAllTokens: () => Object.values(f)
                    }
                }
                constructor(e, t, f, n) {
                    this.chainId = e, this.tokenCache = t, this.primaryTokenProvider = f, this.fallbackTokenProvider = n, this.CACHE_KEY = (e, t) => `token-${e}-${t}`
                }
            }! function(e) {
                e.Livemode = "livemode", e.Darkmode = "darkmode", e.Tapcompare = "tapcompare"
            }(c || (c = {}));
            var tl = f(20691),
                tp = f(34126),
                ty = f(52057),
                tb = f(56868),
                th = f(79673),
                tm = f.n(th),
                tv = f(94779),
                tT = f.n(tv);
            class tg {
                getPortionAmount(e, t, f) {
                    if ((null == f ? void 0 : f.type) === y.UNIVERSAL_ROUTER) switch (t) {
                        case m.TradeType.EXACT_INPUT:
                            if (f.fee && f.fee.fee.greaterThan(tb.ZERO)) return e.multiply(f.fee.fee);
                            return;
                        case m.TradeType.EXACT_OUTPUT:
                            if (f.flatFee && f.flatFee.amount > tl.O$.from(0)) return $.fromRawAmount(e.currency, f.flatFee.amount.toString());
                            return;
                        default:
                            throw Error(`Unknown trade type ${t}`)
                    }
                }
                getPortionQuoteAmount(e, t, f, n) {
                    if (!n || e !== m.TradeType.EXACT_OUTPUT) return;
                    let r = new m.Fraction(n.quotient, f.quotient);
                    return $.fromRawAmount(t.currency, r.multiply(t).quotient)
                }
                getRouteWithQuotePortionAdjusted(e, t, f) {
                    return e !== m.TradeType.EXACT_INPUT || (null == f ? void 0 : f.type) !== y.UNIVERSAL_ROUTER ? t : t.map(t => {
                        let n = this.getPortionAmount(t.quote, e, f);
                        return n && (t.quote = t.quote.subtract(n)), t
                    })
                }
                getQuote(e, t, f) {
                    switch (e) {
                        case m.TradeType.EXACT_INPUT:
                            return t;
                        case m.TradeType.EXACT_OUTPUT:
                            return f ? t.subtract(f) : t;
                        default:
                            throw Error(`Unknown trade type ${e}`)
                    }
                }
                getQuoteGasAdjusted(e, t, f) {
                    switch (e) {
                        case m.TradeType.EXACT_INPUT:
                            return t;
                        case m.TradeType.EXACT_OUTPUT:
                            return f ? t.subtract(f) : t;
                        default:
                            throw Error(`Unknown trade type ${e}`)
                    }
                }
                getQuoteGasAndPortionAdjusted(e, t, f) {
                    if (f) switch (e) {
                        case m.TradeType.EXACT_INPUT:
                            return t.subtract(f);
                        case m.TradeType.EXACT_OUTPUT:
                            return t;
                        default:
                            throw Error(`Unknown trade type ${e}`)
                    }
                }
            }
            let tw = [{
                inputs: [{
                    internalType: "address",
                    name: "_factoryV2",
                    type: "address"
                }],
                stateMutability: "nonpayable",
                type: "constructor"
            }, {
                inputs: [],
                name: "PairLookupFailed",
                type: "error"
            }, {
                inputs: [],
                name: "SameToken",
                type: "error"
            }, {
                inputs: [{
                    internalType: "address[]",
                    name: "tokens",
                    type: "address[]"
                }, {
                    internalType: "address",
                    name: "baseToken",
                    type: "address"
                }, {
                    internalType: "uint256",
                    name: "amountToBorrow",
                    type: "uint256"
                }],
                name: "batchValidate",
                outputs: [{
                    components: [{
                        internalType: "uint256",
                        name: "buyFeeBps",
                        type: "uint256"
                    }, {
                        internalType: "uint256",
                        name: "sellFeeBps",
                        type: "uint256"
                    }],
                    internalType: "struct TokenFees[]",
                    name: "fotResults",
                    type: "tuple[]"
                }],
                stateMutability: "nonpayable",
                type: "function"
            }, {
                inputs: [{
                    internalType: "address",
                    name: "",
                    type: "address"
                }, {
                    internalType: "uint256",
                    name: "amount0",
                    type: "uint256"
                }, {
                    internalType: "uint256",
                    name: "",
                    type: "uint256"
                }, {
                    internalType: "bytes",
                    name: "data",
                    type: "bytes"
                }],
                name: "uniswapV2Call",
                outputs: [],
                stateMutability: "nonpayable",
                type: "function"
            }, {
                inputs: [{
                    internalType: "address",
                    name: "token",
                    type: "address"
                }, {
                    internalType: "address",
                    name: "baseToken",
                    type: "address"
                }, {
                    internalType: "uint256",
                    name: "amountToBorrow",
                    type: "uint256"
                }],
                name: "validate",
                outputs: [{
                    components: [{
                        internalType: "uint256",
                        name: "buyFeeBps",
                        type: "uint256"
                    }, {
                        internalType: "uint256",
                        name: "sellFeeBps",
                        type: "uint256"
                    }],
                    internalType: "struct TokenFees",
                    name: "fotResult",
                    type: "tuple"
                }],
                stateMutability: "nonpayable",
                type: "function"
            }];
            class tA {
                static createInterface() {
                    return new Y.vU(tw)
                }
                static connect(e, t) {
                    return new Z.Contract(e, tw, t)
                }
            }
            tA.abi = tw, tl.O$.from(0), tl.O$.from(0);
            let tI = e => (m.ChainId.MAINNET, "0x19C97dc2a25845C7f9d1d519c8C2d4809c58b43f");
            class tE {
                async fetchFees(e, t) {
                    let f = {},
                        n = e.filter(e => e.toLowerCase() !== this.BASE_TOKEN.toLowerCase()).map(e => [e, this.BASE_TOKEN, this.amountToFlashBorrow]);
                    return (await Promise.all(n.map(async ([e, f, n]) => {
                        try {
                            let r = await this.contract.callStatic.validate(e, f, n, {
                                gasLimit: this.gasLimitPerCall,
                                blockTag: null == t ? void 0 : t.blockNumber
                            });
                            return w.putMetric("TokenFeeFetcherFetchFeesSuccess", 1, o.Count), {
                                address: e,
                                ...r
                            }
                        } catch (t) {
                            return r.error({
                                err: t
                            }, `Error calling validate on-chain for token ${e}`), w.putMetric("TokenFeeFetcherFetchFeesFailure", 1, o.Count), {
                                address: e,
                                buyFeeBps: void 0,
                                sellFeeBps: void 0
                            }
                        }
                    }))).forEach(({
                        address: e,
                        buyFeeBps: t,
                        sellFeeBps: n
                    }) => {
                        (t || n) && (f[e] = {
                            buyFeeBps: t,
                            sellFeeBps: n
                        })
                    }), f
                }
                constructor(e, t, f = tI(e), n = 1e6, r = "100000") {
                    var i;
                    this.chainId = e, this.tokenFeeAddress = f, this.gasLimitPerCall = n, this.amountToFlashBorrow = r, this.BASE_TOKEN = null === (i = M[this.chainId]) || void 0 === i ? void 0 : i.address, this.contract = tA.connect(this.tokenFeeAddress, t)
                }
            }
            let t_ = [{
                inputs: [{
                    internalType: "address[]",
                    name: "tokens",
                    type: "address[]"
                }, {
                    internalType: "address[]",
                    name: "baseTokens",
                    type: "address[]"
                }, {
                    internalType: "uint256",
                    name: "amountToBorrow",
                    type: "uint256"
                }],
                name: "batchValidate",
                outputs: [{
                    internalType: "enum ITokenValidator.Status[]",
                    name: "",
                    type: "uint8[]"
                }],
                stateMutability: "nonpayable",
                type: "function"
            }, {
                inputs: [{
                    internalType: "address",
                    name: "token",
                    type: "address"
                }, {
                    internalType: "address[]",
                    name: "baseTokens",
                    type: "address[]"
                }, {
                    internalType: "uint256",
                    name: "amountToBorrow",
                    type: "uint256"
                }],
                name: "validate",
                outputs: [{
                    internalType: "enum ITokenValidator.Status",
                    name: "",
                    type: "uint8"
                }],
                stateMutability: "nonpayable",
                type: "function"
            }];
            class tk {
                static createInterface() {
                    return new Y.vU(t_)
                }
                static connect(e, t) {
                    return new Z.Contract(e, t_, t)
                }
            }
            tk.abi = t_;
            let tC = new Set(["0x777e2ae845272a2f540ebf6a3d03734a5a8f618e"]);
            ! function(e) {
                e[e.UNKN = 0] = "UNKN", e[e.FOT = 1] = "FOT", e[e.STF = 2] = "STF"
            }(l || (l = {}));
            class tS {
                async validateTokens(e, t) {
                    let f = _().keyBy(e, "address"),
                        n = _()(e).map(e => e.address).uniq().value(),
                        i = [],
                        a = {};
                    for (let e of n) await this.tokenValidationCache.has(this.CACHE_KEY(this.chainId, e)) ? (a[e.toLowerCase()] = await this.tokenValidationCache.get(this.CACHE_KEY(this.chainId, e)), w.putMetric(`TokenValidatorProviderValidateCacheHitResult${a[e.toLowerCase()]}`, 1, o.Count)) : i.push(e);
                    r.info(`Got token validation results for ${n.length-i.length} tokens from cache. Getting ${i.length} on-chain.`);
                    let s = _()(i).map(e => [e, this.BASES, this.amountToFlashBorrow]).value(),
                        u = await this.multicall2Provider.callSameFunctionOnContractWithMultipleParams({
                            address: this.tokenValidatorAddress,
                            contractInterface: tk.createInterface(),
                            functionName: "validate",
                            functionParams: s,
                            providerConfig: t,
                            additionalConfig: {
                                gasLimitPerCallOverride: this.gasLimitPerCall
                            }
                        });
                    for (let e = 0; e < u.results.length; e++) {
                        let t = u.results[e],
                            n = f[i[e]];
                        if (this.allowList.has(n.address.toLowerCase())) {
                            a[n.address.toLowerCase()] = l.UNKN, await this.tokenValidationCache.set(this.CACHE_KEY(this.chainId, n.address.toLowerCase()), a[n.address.toLowerCase()]);
                            continue
                        }
                        if (!t.success) {
                            w.putMetric("TokenValidatorProviderValidateFailed", 1, o.Count), r.error({
                                result: t
                            }, `Failed to validate token ${n.symbol}`);
                            continue
                        }
                        w.putMetric("TokenValidatorProviderValidateSuccess", 1, o.Count);
                        let s = t.result[0];
                        a[n.address.toLowerCase()] = s, await this.tokenValidationCache.set(this.CACHE_KEY(this.chainId, n.address.toLowerCase()), a[n.address.toLowerCase()]), w.putMetric(`TokenValidatorProviderValidateCacheMissResult${s}`, 1, o.Count)
                    }
                    return {
                        getValidationByToken: e => a[e.address.toLowerCase()]
                    }
                }
                constructor(e, t, f, n = "0xb5ee1690b7dcc7859771148d0889be838fe108e0", r = 1e6, i = "1000", a = tC) {
                    this.chainId = e, this.multicall2Provider = t, this.tokenValidationCache = f, this.tokenValidatorAddress = n, this.gasLimitPerCall = r, this.amountToFlashBorrow = i, this.allowList = a, this.CACHE_KEY = (e, t) => `token-${e}-${t}`, this.BASES = [M[this.chainId].address]
                }
            }
            let tO = [{
                anonymous: !1,
                inputs: [{
                    indexed: !0,
                    internalType: "address",
                    name: "owner",
                    type: "address"
                }, {
                    indexed: !0,
                    internalType: "address",
                    name: "spender",
                    type: "address"
                }, {
                    indexed: !1,
                    internalType: "uint256",
                    name: "value",
                    type: "uint256"
                }],
                name: "Approval",
                type: "event"
            }, {
                anonymous: !1,
                inputs: [{
                    indexed: !0,
                    internalType: "address",
                    name: "sender",
                    type: "address"
                }, {
                    indexed: !1,
                    internalType: "uint256",
                    name: "amount0",
                    type: "uint256"
                }, {
                    indexed: !1,
                    internalType: "uint256",
                    name: "amount1",
                    type: "uint256"
                }, {
                    indexed: !0,
                    internalType: "address",
                    name: "to",
                    type: "address"
                }],
                name: "Burn",
                type: "event"
            }, {
                anonymous: !1,
                inputs: [{
                    indexed: !0,
                    internalType: "address",
                    name: "sender",
                    type: "address"
                }, {
                    indexed: !1,
                    internalType: "uint256",
                    name: "amount0",
                    type: "uint256"
                }, {
                    indexed: !1,
                    internalType: "uint256",
                    name: "amount1",
                    type: "uint256"
                }],
                name: "Mint",
                type: "event"
            }, {
                anonymous: !1,
                inputs: [{
                    indexed: !0,
                    internalType: "address",
                    name: "sender",
                    type: "address"
                }, {
                    indexed: !1,
                    internalType: "uint256",
                    name: "amount0In",
                    type: "uint256"
                }, {
                    indexed: !1,
                    internalType: "uint256",
                    name: "amount1In",
                    type: "uint256"
                }, {
                    indexed: !1,
                    internalType: "uint256",
                    name: "amount0Out",
                    type: "uint256"
                }, {
                    indexed: !1,
                    internalType: "uint256",
                    name: "amount1Out",
                    type: "uint256"
                }, {
                    indexed: !0,
                    internalType: "address",
                    name: "to",
                    type: "address"
                }],
                name: "Swap",
                type: "event"
            }, {
                anonymous: !1,
                inputs: [{
                    indexed: !1,
                    internalType: "uint112",
                    name: "reserve0",
                    type: "uint112"
                }, {
                    indexed: !1,
                    internalType: "uint112",
                    name: "reserve1",
                    type: "uint112"
                }],
                name: "Sync",
                type: "event"
            }, {
                anonymous: !1,
                inputs: [{
                    indexed: !0,
                    internalType: "address",
                    name: "from",
                    type: "address"
                }, {
                    indexed: !0,
                    internalType: "address",
                    name: "to",
                    type: "address"
                }, {
                    indexed: !1,
                    internalType: "uint256",
                    name: "value",
                    type: "uint256"
                }],
                name: "Transfer",
                type: "event"
            }, {
                inputs: [],
                name: "DOMAIN_SEPARATOR",
                outputs: [{
                    internalType: "bytes32",
                    name: "",
                    type: "bytes32"
                }],
                stateMutability: "view",
                type: "function"
            }, {
                inputs: [],
                name: "MINIMUM_LIQUIDITY",
                outputs: [{
                    internalType: "uint256",
                    name: "",
                    type: "uint256"
                }],
                stateMutability: "pure",
                type: "function"
            }, {
                inputs: [],
                name: "PERMIT_TYPEHASH",
                outputs: [{
                    internalType: "bytes32",
                    name: "",
                    type: "bytes32"
                }],
                stateMutability: "pure",
                type: "function"
            }, {
                inputs: [{
                    internalType: "address",
                    name: "owner",
                    type: "address"
                }, {
                    internalType: "address",
                    name: "spender",
                    type: "address"
                }],
                name: "allowance",
                outputs: [{
                    internalType: "uint256",
                    name: "",
                    type: "uint256"
                }],
                stateMutability: "view",
                type: "function"
            }, {
                inputs: [{
                    internalType: "address",
                    name: "spender",
                    type: "address"
                }, {
                    internalType: "uint256",
                    name: "value",
                    type: "uint256"
                }],
                name: "approve",
                outputs: [{
                    internalType: "bool",
                    name: "",
                    type: "bool"
                }],
                stateMutability: "nonpayable",
                type: "function"
            }, {
                inputs: [{
                    internalType: "address",
                    name: "owner",
                    type: "address"
                }],
                name: "balanceOf",
                outputs: [{
                    internalType: "uint256",
                    name: "",
                    type: "uint256"
                }],
                stateMutability: "view",
                type: "function"
            }, {
                inputs: [{
                    internalType: "address",
                    name: "to",
                    type: "address"
                }],
                name: "burn",
                outputs: [{
                    internalType: "uint256",
                    name: "amount0",
                    type: "uint256"
                }, {
                    internalType: "uint256",
                    name: "amount1",
                    type: "uint256"
                }],
                stateMutability: "nonpayable",
                type: "function"
            }, {
                inputs: [],
                name: "decimals",
                outputs: [{
                    internalType: "uint8",
                    name: "",
                    type: "uint8"
                }],
                stateMutability: "pure",
                type: "function"
            }, {
                inputs: [],
                name: "factory",
                outputs: [{
                    internalType: "address",
                    name: "",
                    type: "address"
                }],
                stateMutability: "view",
                type: "function"
            }, {
                inputs: [],
                name: "getReserves",
                outputs: [{
                    internalType: "uint112",
                    name: "reserve0",
                    type: "uint112"
                }, {
                    internalType: "uint112",
                    name: "reserve1",
                    type: "uint112"
                }, {
                    internalType: "uint32",
                    name: "blockTimestampLast",
                    type: "uint32"
                }],
                stateMutability: "view",
                type: "function"
            }, {
                inputs: [{
                    internalType: "address",
                    name: "",
                    type: "address"
                }, {
                    internalType: "address",
                    name: "",
                    type: "address"
                }],
                name: "initialize",
                outputs: [],
                stateMutability: "nonpayable",
                type: "function"
            }, {
                inputs: [],
                name: "kLast",
                outputs: [{
                    internalType: "uint256",
                    name: "",
                    type: "uint256"
                }],
                stateMutability: "view",
                type: "function"
            }, {
                inputs: [{
                    internalType: "address",
                    name: "to",
                    type: "address"
                }],
                name: "mint",
                outputs: [{
                    internalType: "uint256",
                    name: "liquidity",
                    type: "uint256"
                }],
                stateMutability: "nonpayable",
                type: "function"
            }, {
                inputs: [],
                name: "name",
                outputs: [{
                    internalType: "string",
                    name: "",
                    type: "string"
                }],
                stateMutability: "pure",
                type: "function"
            }, {
                inputs: [{
                    internalType: "address",
                    name: "owner",
                    type: "address"
                }],
                name: "nonces",
                outputs: [{
                    internalType: "uint256",
                    name: "",
                    type: "uint256"
                }],
                stateMutability: "view",
                type: "function"
            }, {
                inputs: [{
                    internalType: "address",
                    name: "owner",
                    type: "address"
                }, {
                    internalType: "address",
                    name: "spender",
                    type: "address"
                }, {
                    internalType: "uint256",
                    name: "value",
                    type: "uint256"
                }, {
                    internalType: "uint256",
                    name: "deadline",
                    type: "uint256"
                }, {
                    internalType: "uint8",
                    name: "v",
                    type: "uint8"
                }, {
                    internalType: "bytes32",
                    name: "r",
                    type: "bytes32"
                }, {
                    internalType: "bytes32",
                    name: "s",
                    type: "bytes32"
                }],
                name: "permit",
                outputs: [],
                stateMutability: "nonpayable",
                type: "function"
            }, {
                inputs: [],
                name: "price0CumulativeLast",
                outputs: [{
                    internalType: "uint256",
                    name: "",
                    type: "uint256"
                }],
                stateMutability: "view",
                type: "function"
            }, {
                inputs: [],
                name: "price1CumulativeLast",
                outputs: [{
                    internalType: "uint256",
                    name: "",
                    type: "uint256"
                }],
                stateMutability: "view",
                type: "function"
            }, {
                inputs: [{
                    internalType: "address",
                    name: "to",
                    type: "address"
                }],
                name: "skim",
                outputs: [],
                stateMutability: "nonpayable",
                type: "function"
            }, {
                inputs: [{
                    internalType: "uint256",
                    name: "amount0Out",
                    type: "uint256"
                }, {
                    internalType: "uint256",
                    name: "amount1Out",
                    type: "uint256"
                }, {
                    internalType: "address",
                    name: "to",
                    type: "address"
                }, {
                    internalType: "bytes",
                    name: "data",
                    type: "bytes"
                }],
                name: "swap",
                outputs: [],
                stateMutability: "nonpayable",
                type: "function"
            }, {
                inputs: [],
                name: "symbol",
                outputs: [{
                    internalType: "string",
                    name: "",
                    type: "string"
                }],
                stateMutability: "pure",
                type: "function"
            }, {
                inputs: [],
                name: "sync",
                outputs: [],
                stateMutability: "nonpayable",
                type: "function"
            }, {
                inputs: [],
                name: "token0",
                outputs: [{
                    internalType: "address",
                    name: "",
                    type: "address"
                }],
                stateMutability: "view",
                type: "function"
            }, {
                inputs: [],
                name: "token1",
                outputs: [{
                    internalType: "address",
                    name: "",
                    type: "address"
                }],
                stateMutability: "view",
                type: "function"
            }, {
                inputs: [],
                name: "totalSupply",
                outputs: [{
                    internalType: "uint256",
                    name: "",
                    type: "uint256"
                }],
                stateMutability: "view",
                type: "function"
            }, {
                inputs: [{
                    internalType: "address",
                    name: "to",
                    type: "address"
                }, {
                    internalType: "uint256",
                    name: "value",
                    type: "uint256"
                }],
                name: "transfer",
                outputs: [{
                    internalType: "bool",
                    name: "",
                    type: "bool"
                }],
                stateMutability: "nonpayable",
                type: "function"
            }, {
                inputs: [{
                    internalType: "address",
                    name: "from",
                    type: "address"
                }, {
                    internalType: "address",
                    name: "to",
                    type: "address"
                }, {
                    internalType: "uint256",
                    name: "value",
                    type: "uint256"
                }],
                name: "transferFrom",
                outputs: [{
                    internalType: "bool",
                    name: "",
                    type: "bool"
                }],
                stateMutability: "nonpayable",
                type: "function"
            }];
            class tP {
                static createInterface() {
                    return new Y.vU(tO)
                }
                static connect(e, t) {
                    return new Z.Contract(e, tO, t)
                }
            }
            tP.abi = tO;
            class tM {
                async getPools(e, t) {
                    var f, n, i, a, s, u, d, c, p, y;
                    let b = new Set,
                        h = [],
                        v = [];
                    for (let t of e) {
                        let [e, f] = t, {
                            poolAddress: n,
                            token0: r,
                            token1: i
                        } = this.getPoolAddress(e, f);
                        b.has(n) || (b.add(n), h.push([r, i]), v.push(n))
                    }
                    r.debug(`getPools called with ${e.length} token pairs. Deduped down to ${b.size}`), w.putMetric("V2_RPC_POOL_RPC_CALL", 1, o.None), w.putMetric("V2GetReservesBatchSize", v.length, o.Count), w.putMetric(`V2GetReservesBatchSize_${P(this.chainId)}`, v.length, o.Count);
                    let [T, g] = await Promise.all([this.getPoolsData(v, "getReserves", t), this.tokenPropertiesProvider.getTokensProperties(this.flatten(e), t)]);
                    r.info(`Got reserves for ${b.size} pools ${(null==t?void 0:t.blockNumber)?`as of block: ${await(null==t?void 0:t.blockNumber)}.`:""}`);
                    let A = {},
                        I = [];
                    for (let e = 0; e < v.length; e++) {
                        let t = T[e];
                        if (!(null == t ? void 0 : t.success)) {
                            let [t, f] = h[e];
                            I.push([t, f]);
                            continue
                        }
                        let [r, o] = h[e];
                        (null === (f = g[r.address.toLowerCase()]) || void 0 === f ? void 0 : f.tokenValidationResult) === l.FOT && (r = new m.Token(r.chainId, r.address, r.decimals, r.symbol, r.name, !0, null === (i = null === (n = g[r.address.toLowerCase()]) || void 0 === n ? void 0 : n.tokenFeeResult) || void 0 === i ? void 0 : i.buyFeeBps, null === (s = null === (a = g[r.address.toLowerCase()]) || void 0 === a ? void 0 : a.tokenFeeResult) || void 0 === s ? void 0 : s.sellFeeBps)), (null === (u = g[o.address.toLowerCase()]) || void 0 === u ? void 0 : u.tokenValidationResult) === l.FOT && (o = new m.Token(o.chainId, o.address, o.decimals, o.symbol, o.name, !0, null === (c = null === (d = g[o.address.toLowerCase()]) || void 0 === d ? void 0 : d.tokenFeeResult) || void 0 === c ? void 0 : c.buyFeeBps, null === (y = null === (p = g[o.address.toLowerCase()]) || void 0 === p ? void 0 : p.tokenFeeResult) || void 0 === y ? void 0 : y.sellFeeBps));
                        let {
                            reserve0: b,
                            reserve1: w
                        } = t.result, E = new W.Pair($.fromRawAmount(r, b.toString()), $.fromRawAmount(o, w.toString()));
                        A[v[e]] = E
                    }
                    I.length > 0 && r.info({
                        invalidPools: _().map(I, ([e, t]) => `${e.symbol}/${t.symbol}`)
                    }, `${I.length} pools invalid after checking their slot0 and liquidity results. Dropping.`);
                    let E = _().map(Object.values(A), K);
                    return r.debug({
                        poolStrs: E
                    }, `Found ${E.length} valid v2 pools`), {
                        getPool: (e, t) => {
                            let {
                                poolAddress: f
                            } = this.getPoolAddress(e, t);
                            return A[f]
                        },
                        getPoolByAddress: e => A[e],
                        getAllPools: () => Object.values(A)
                    }
                }
                getPoolAddress(e, t) {
                    let [f, n] = e.sortsBefore(t) ? [e, t] : [t, e], r = `${this.chainId}/${f.address}/${n.address}`, i = this.POOL_ADDRESS_CACHE[r];
                    if (i) return {
                        poolAddress: i,
                        token0: f,
                        token1: n
                    };
                    let a = W.Pair.getAddress(f, n);
                    return this.POOL_ADDRESS_CACHE[r] = a, {
                        poolAddress: a,
                        token0: f,
                        token1: n
                    }
                }
                async getPoolsData(e, t, f) {
                    let {
                        results: n,
                        blockNumber: i
                    } = await tm()(async () => this.multicall2Provider.callSameFunctionOnMultipleContracts({
                        addresses: e,
                        contractInterface: tP.createInterface(),
                        functionName: t,
                        providerConfig: f
                    }), this.retryOptions);
                    return r.debug(`Pool data fetched as of block ${i}`), n
                }
                flatten(e) {
                    let t = [];
                    for (let [f, n] of e) t.push(f), t.push(n);
                    return t
                }
                constructor(e, t, f, n = {
                    retries: 2,
                    minTimeout: 50,
                    maxTimeout: 500
                }) {
                    this.chainId = e, this.multicall2Provider = t, this.tokenPropertiesProvider = f, this.retryOptions = n, this.POOL_ADDRESS_CACHE = {}
                }
            }
            let tx = [{
                inputs: [],
                name: "getPricesInWei",
                outputs: [{
                    internalType: "uint256",
                    name: "",
                    type: "uint256"
                }, {
                    internalType: "uint256",
                    name: "",
                    type: "uint256"
                }, {
                    internalType: "uint256",
                    name: "",
                    type: "uint256"
                }, {
                    internalType: "uint256",
                    name: "",
                    type: "uint256"
                }, {
                    internalType: "uint256",
                    name: "",
                    type: "uint256"
                }, {
                    internalType: "uint256",
                    name: "",
                    type: "uint256"
                }],
                stateMutability: "view",
                type: "function"
            }];
            class tR {
                static createInterface() {
                    return new Y.vU(tx)
                }
                static connect(e, t) {
                    return new Z.Contract(e, tx, t)
                }
            }
            tR.abi = tx;
            let tF = [{
                inputs: [{
                    internalType: "address",
                    name: "_owner",
                    type: "address"
                }],
                stateMutability: "nonpayable",
                type: "constructor"
            }, {
                anonymous: !1,
                inputs: [{
                    indexed: !1,
                    internalType: "uint256",
                    name: "",
                    type: "uint256"
                }],
                name: "DecimalsUpdated",
                type: "event"
            }, {
                anonymous: !1,
                inputs: [{
                    indexed: !1,
                    internalType: "uint256",
                    name: "",
                    type: "uint256"
                }],
                name: "GasPriceUpdated",
                type: "event"
            }, {
                anonymous: !1,
                inputs: [{
                    indexed: !1,
                    internalType: "uint256",
                    name: "",
                    type: "uint256"
                }],
                name: "L1BaseFeeUpdated",
                type: "event"
            }, {
                anonymous: !1,
                inputs: [{
                    indexed: !1,
                    internalType: "uint256",
                    name: "",
                    type: "uint256"
                }],
                name: "OverheadUpdated",
                type: "event"
            }, {
                anonymous: !1,
                inputs: [{
                    indexed: !0,
                    internalType: "address",
                    name: "previousOwner",
                    type: "address"
                }, {
                    indexed: !0,
                    internalType: "address",
                    name: "newOwner",
                    type: "address"
                }],
                name: "OwnershipTransferred",
                type: "event"
            }, {
                anonymous: !1,
                inputs: [{
                    indexed: !1,
                    internalType: "uint256",
                    name: "",
                    type: "uint256"
                }],
                name: "ScalarUpdated",
                type: "event"
            }, {
                inputs: [],
                name: "decimals",
                outputs: [{
                    internalType: "uint256",
                    name: "",
                    type: "uint256"
                }],
                stateMutability: "view",
                type: "function"
            }, {
                inputs: [],
                name: "gasPrice",
                outputs: [{
                    internalType: "uint256",
                    name: "",
                    type: "uint256"
                }],
                stateMutability: "view",
                type: "function"
            }, {
                inputs: [{
                    internalType: "bytes",
                    name: "_data",
                    type: "bytes"
                }],
                name: "getL1Fee",
                outputs: [{
                    internalType: "uint256",
                    name: "",
                    type: "uint256"
                }],
                stateMutability: "view",
                type: "function"
            }, {
                inputs: [{
                    internalType: "bytes",
                    name: "_data",
                    type: "bytes"
                }],
                name: "getL1GasUsed",
                outputs: [{
                    internalType: "uint256",
                    name: "",
                    type: "uint256"
                }],
                stateMutability: "view",
                type: "function"
            }, {
                inputs: [],
                name: "l1BaseFee",
                outputs: [{
                    internalType: "uint256",
                    name: "",
                    type: "uint256"
                }],
                stateMutability: "view",
                type: "function"
            }, {
                inputs: [],
                name: "overhead",
                outputs: [{
                    internalType: "uint256",
                    name: "",
                    type: "uint256"
                }],
                stateMutability: "view",
                type: "function"
            }, {
                inputs: [],
                name: "owner",
                outputs: [{
                    internalType: "address",
                    name: "",
                    type: "address"
                }],
                stateMutability: "view",
                type: "function"
            }, {
                inputs: [],
                name: "renounceOwnership",
                outputs: [],
                stateMutability: "nonpayable",
                type: "function"
            }, {
                inputs: [],
                name: "scalar",
                outputs: [{
                    internalType: "uint256",
                    name: "",
                    type: "uint256"
                }],
                stateMutability: "view",
                type: "function"
            }, {
                inputs: [{
                    internalType: "uint256",
                    name: "_decimals",
                    type: "uint256"
                }],
                name: "setDecimals",
                outputs: [],
                stateMutability: "nonpayable",
                type: "function"
            }, {
                inputs: [{
                    internalType: "uint256",
                    name: "_gasPrice",
                    type: "uint256"
                }],
                name: "setGasPrice",
                outputs: [],
                stateMutability: "nonpayable",
                type: "function"
            }, {
                inputs: [{
                    internalType: "uint256",
                    name: "_baseFee",
                    type: "uint256"
                }],
                name: "setL1BaseFee",
                outputs: [],
                stateMutability: "nonpayable",
                type: "function"
            }, {
                inputs: [{
                    internalType: "uint256",
                    name: "_overhead",
                    type: "uint256"
                }],
                name: "setOverhead",
                outputs: [],
                stateMutability: "nonpayable",
                type: "function"
            }, {
                inputs: [{
                    internalType: "uint256",
                    name: "_scalar",
                    type: "uint256"
                }],
                name: "setScalar",
                outputs: [],
                stateMutability: "nonpayable",
                type: "function"
            }, {
                inputs: [{
                    internalType: "address",
                    name: "newOwner",
                    type: "address"
                }],
                name: "transferOwnership",
                outputs: [],
                stateMutability: "nonpayable",
                type: "function"
            }];
            class tD {
                static createInterface() {
                    return new Y.vU(tF)
                }
                static connect(e, t) {
                    return new Z.Contract(e, tF, t)
                }
            }
            tD.abi = tF;
            class tN {
                async getGasData() {
                    var e, t, f, n;
                    let i = await this.multicall2Provider.callMultipleFunctionsOnSameContract({
                        address: this.gasOracleAddress,
                        contractInterface: tD.createInterface(),
                        functionNames: ["l1BaseFee", "scalar", "decimals", "overhead"]
                    });
                    if (!(null === (e = i.results[0]) || void 0 === e ? void 0 : e.success) || !(null === (t = i.results[1]) || void 0 === t ? void 0 : t.success) || !(null === (f = i.results[2]) || void 0 === f ? void 0 : f.success) || !(null === (n = i.results[3]) || void 0 === n ? void 0 : n.success)) throw r.info({
                        results: i.results
                    }, "Failed to get gas constants data from the optimism gas oracle"), Error("Failed to get gas constants data from the optimism gas oracle");
                    let {
                        result: a
                    } = i.results[0], {
                        result: o
                    } = i.results[1], {
                        result: s
                    } = i.results[2], {
                        result: u
                    } = i.results[3];
                    return {
                        l1BaseFee: a[0],
                        scalar: o[0],
                        decimals: s[0],
                        overhead: u[0]
                    }
                }
                constructor(e, t, f) {
                    if (this.chainId = e, this.multicall2Provider = t, e !== m.ChainId.OPTIMISM && e !== m.ChainId.BASE) throw Error("This data provider is used only on optimism networks.");
                    this.gasOracleAddress = null != f ? f : "0x420000000000000000000000000000000000000F"
                }
            }
            class tB {
                async getGasData() {
                    let e = tR.connect(this.gasFeesAddress, this.provider),
                        t = await e.getPricesInWei();
                    return {
                        perL2TxFee: t[0],
                        perL1CalldataFee: t[1],
                        perArbGasTotal: t[5]
                    }
                }
                constructor(e, t, f) {
                    this.chainId = e, this.provider = t, this.gasFeesAddress = f || "0x000000000000000000000000000000000000006C"
                }
            }
            let tL = [{
                inputs: [],
                name: "feeGrowthGlobal0X128",
                outputs: [{
                    internalType: "uint256",
                    name: "",
                    type: "uint256"
                }],
                stateMutability: "view",
                type: "function"
            }, {
                inputs: [],
                name: "feeGrowthGlobal1X128",
                outputs: [{
                    internalType: "uint256",
                    name: "",
                    type: "uint256"
                }],
                stateMutability: "view",
                type: "function"
            }, {
                inputs: [],
                name: "liquidity",
                outputs: [{
                    internalType: "uint128",
                    name: "",
                    type: "uint128"
                }],
                stateMutability: "view",
                type: "function"
            }, {
                inputs: [{
                    internalType: "uint256",
                    name: "index",
                    type: "uint256"
                }],
                name: "observations",
                outputs: [{
                    internalType: "uint32",
                    name: "blockTimestamp",
                    type: "uint32"
                }, {
                    internalType: "int56",
                    name: "tickCumulative",
                    type: "int56"
                }, {
                    internalType: "uint160",
                    name: "secondsPerLiquidityCumulativeX128",
                    type: "uint160"
                }, {
                    internalType: "bool",
                    name: "initialized",
                    type: "bool"
                }],
                stateMutability: "view",
                type: "function"
            }, {
                inputs: [{
                    internalType: "bytes32",
                    name: "key",
                    type: "bytes32"
                }],
                name: "positions",
                outputs: [{
                    internalType: "uint128",
                    name: "_liquidity",
                    type: "uint128"
                }, {
                    internalType: "uint256",
                    name: "feeGrowthInside0LastX128",
                    type: "uint256"
                }, {
                    internalType: "uint256",
                    name: "feeGrowthInside1LastX128",
                    type: "uint256"
                }, {
                    internalType: "uint128",
                    name: "tokensOwed0",
                    type: "uint128"
                }, {
                    internalType: "uint128",
                    name: "tokensOwed1",
                    type: "uint128"
                }],
                stateMutability: "view",
                type: "function"
            }, {
                inputs: [],
                name: "protocolFees",
                outputs: [{
                    internalType: "uint128",
                    name: "token0",
                    type: "uint128"
                }, {
                    internalType: "uint128",
                    name: "token1",
                    type: "uint128"
                }],
                stateMutability: "view",
                type: "function"
            }, {
                inputs: [],
                name: "slot0",
                outputs: [{
                    internalType: "uint160",
                    name: "sqrtPriceX96",
                    type: "uint160"
                }, {
                    internalType: "int24",
                    name: "tick",
                    type: "int24"
                }, {
                    internalType: "uint16",
                    name: "observationIndex",
                    type: "uint16"
                }, {
                    internalType: "uint16",
                    name: "observationCardinality",
                    type: "uint16"
                }, {
                    internalType: "uint16",
                    name: "observationCardinalityNext",
                    type: "uint16"
                }, {
                    internalType: "uint8",
                    name: "feeProtocol",
                    type: "uint8"
                }, {
                    internalType: "bool",
                    name: "unlocked",
                    type: "bool"
                }],
                stateMutability: "view",
                type: "function"
            }, {
                inputs: [{
                    internalType: "int16",
                    name: "wordPosition",
                    type: "int16"
                }],
                name: "tickBitmap",
                outputs: [{
                    internalType: "uint256",
                    name: "",
                    type: "uint256"
                }],
                stateMutability: "view",
                type: "function"
            }, {
                inputs: [{
                    internalType: "int24",
                    name: "tick",
                    type: "int24"
                }],
                name: "ticks",
                outputs: [{
                    internalType: "uint128",
                    name: "liquidityGross",
                    type: "uint128"
                }, {
                    internalType: "int128",
                    name: "liquidityNet",
                    type: "int128"
                }, {
                    internalType: "uint256",
                    name: "feeGrowthOutside0X128",
                    type: "uint256"
                }, {
                    internalType: "uint256",
                    name: "feeGrowthOutside1X128",
                    type: "uint256"
                }, {
                    internalType: "int56",
                    name: "tickCumulativeOutside",
                    type: "int56"
                }, {
                    internalType: "uint160",
                    name: "secondsPerLiquidityOutsideX128",
                    type: "uint160"
                }, {
                    internalType: "uint32",
                    name: "secondsOutside",
                    type: "uint32"
                }, {
                    internalType: "bool",
                    name: "initialized",
                    type: "bool"
                }],
                stateMutability: "view",
                type: "function"
            }];
            class tq {
                static createInterface() {
                    return new Y.vU(tL)
                }
                static connect(e, t) {
                    return new Z.Contract(e, tL, t)
                }
            }
            tq.abi = tL;
            class tU {
                async getPools(e, t) {
                    let f = new Set,
                        n = [],
                        i = [];
                    for (let t of e) {
                        let [e, r, a] = t, {
                            poolAddress: o,
                            token0: s,
                            token1: u
                        } = this.getPoolAddress(e, r, a);
                        f.has(o) || (f.add(o), n.push([s, u, a]), i.push(o))
                    }
                    r.debug(`getPools called with ${e.length} token pairs. Deduped down to ${f.size}`);
                    let [a, o] = await Promise.all([this.getPoolsData(i, "slot0", t), this.getPoolsData(i, "liquidity", t)]);
                    r.info(`Got liquidity and slot0s for ${f.size} pools ${(null==t?void 0:t.blockNumber)?`as of block: ${null==t?void 0:t.blockNumber}.`:""}`);
                    let s = {},
                        u = [];
                    for (let e = 0; e < i.length; e++) {
                        let t = a[e],
                            f = o[e];
                        if (!(null == t ? void 0 : t.success) || !(null == f ? void 0 : f.success) || t.result.sqrtPriceX96.eq(0)) {
                            let [t, f, r] = n[e];
                            u.push([t, f, r]);
                            continue
                        }
                        let [r, d, c] = n[e], l = t.result, p = f.result[0], y = new k.Pool(r, d, c, l.sqrtPriceX96.toString(), p.toString(), l.tick);
                        s[i[e]] = y
                    }
                    u.length > 0 && r.info({
                        invalidPools: _().map(u, ([e, t, f]) => `${e.symbol}/${t.symbol}/${f/1e4}%`)
                    }, `${u.length} pools invalid after checking their slot0 and liquidity results. Dropping.`);
                    let d = _().map(Object.values(s), K);
                    return r.debug({
                        poolStrs: d
                    }, `Found ${d.length} valid v3 pools`), {
                        getPool: (e, t, f) => {
                            let {
                                poolAddress: n
                            } = this.getPoolAddress(e, t, f);
                            return s[n]
                        },
                        getPoolByAddress: e => s[e],
                        getAllPools: () => Object.values(s)
                    }
                }
                getPoolAddress(e, t, f) {
                    let [n, r] = e.sortsBefore(t) ? [e, t] : [t, e], i = `${this.chainId}/${n.address}/${r.address}/${f}`, a = this.POOL_ADDRESS_CACHE[i];
                    if (a) return {
                        poolAddress: a,
                        token0: n,
                        token1: r
                    };
                    let o = (0, k.computePoolAddress)({
                        factoryAddress: N[this.chainId],
                        tokenA: n,
                        tokenB: r,
                        fee: f
                    });
                    return this.POOL_ADDRESS_CACHE[i] = o, {
                        poolAddress: o,
                        token0: n,
                        token1: r
                    }
                }
                async getPoolsData(e, t, f) {
                    let {
                        results: n,
                        blockNumber: i
                    } = await tm()(async () => this.multicall2Provider.callSameFunctionOnMultipleContracts({
                        addresses: e,
                        contractInterface: tq.createInterface(),
                        functionName: t,
                        providerConfig: f
                    }), this.retryOptions);
                    return r.debug(`Pool data fetched as of block ${i}`), n
                }
                constructor(e, t, f = {
                    retries: 2,
                    minTimeout: 50,
                    maxTimeout: 500
                }) {
                    this.chainId = e, this.multicall2Provider = t, this.retryOptions = f, this.POOL_ADDRESS_CACHE = {}
                }
            }
            let tV = [{
                constant: !0,
                inputs: [],
                name: "name",
                outputs: [{
                    name: "",
                    type: "string"
                }],
                payable: !1,
                stateMutability: "view",
                type: "function"
            }, {
                constant: !1,
                inputs: [{
                    name: "_spender",
                    type: "address"
                }, {
                    name: "_value",
                    type: "uint256"
                }],
                name: "approve",
                outputs: [{
                    name: "",
                    type: "bool"
                }],
                payable: !1,
                stateMutability: "nonpayable",
                type: "function"
            }, {
                constant: !0,
                inputs: [],
                name: "totalSupply",
                outputs: [{
                    name: "",
                    type: "uint256"
                }],
                payable: !1,
                stateMutability: "view",
                type: "function"
            }, {
                constant: !1,
                inputs: [{
                    name: "_from",
                    type: "address"
                }, {
                    name: "_to",
                    type: "address"
                }, {
                    name: "_value",
                    type: "uint256"
                }],
                name: "transferFrom",
                outputs: [{
                    name: "",
                    type: "bool"
                }],
                payable: !1,
                stateMutability: "nonpayable",
                type: "function"
            }, {
                constant: !0,
                inputs: [],
                name: "decimals",
                outputs: [{
                    name: "",
                    type: "uint8"
                }],
                payable: !1,
                stateMutability: "view",
                type: "function"
            }, {
                constant: !0,
                inputs: [{
                    name: "_owner",
                    type: "address"
                }],
                name: "balanceOf",
                outputs: [{
                    name: "balance",
                    type: "uint256"
                }],
                payable: !1,
                stateMutability: "view",
                type: "function"
            }, {
                constant: !0,
                inputs: [],
                name: "symbol",
                outputs: [{
                    name: "",
                    type: "string"
                }],
                payable: !1,
                stateMutability: "view",
                type: "function"
            }, {
                constant: !1,
                inputs: [{
                    name: "_to",
                    type: "address"
                }, {
                    name: "_value",
                    type: "uint256"
                }],
                name: "transfer",
                outputs: [{
                    name: "",
                    type: "bool"
                }],
                payable: !1,
                stateMutability: "nonpayable",
                type: "function"
            }, {
                constant: !0,
                inputs: [{
                    name: "_owner",
                    type: "address"
                }, {
                    name: "_spender",
                    type: "address"
                }],
                name: "allowance",
                outputs: [{
                    name: "",
                    type: "uint256"
                }],
                payable: !1,
                stateMutability: "view",
                type: "function"
            }, {
                payable: !0,
                stateMutability: "payable",
                type: "fallback"
            }, {
                anonymous: !1,
                inputs: [{
                    indexed: !0,
                    name: "owner",
                    type: "address"
                }, {
                    indexed: !0,
                    name: "spender",
                    type: "address"
                }, {
                    indexed: !1,
                    name: "value",
                    type: "uint256"
                }],
                name: "Approval",
                type: "event"
            }, {
                anonymous: !1,
                inputs: [{
                    indexed: !0,
                    name: "from",
                    type: "address"
                }, {
                    indexed: !0,
                    name: "to",
                    type: "address"
                }, {
                    indexed: !1,
                    name: "value",
                    type: "uint256"
                }],
                name: "Transfer",
                type: "event"
            }];
            class tG {
                static createInterface() {
                    return new Y.vU(tV)
                }
                static connect(e, t) {
                    return new Z.Contract(e, tV, t)
                }
            }
            tG.abi = tV;
            var tj = f(8269);

            function t$(e, t, f, n) {
                let r = _().filter(n, e => e.protocol === d.V3),
                    i = _().filter(n, e => e.protocol === d.V2),
                    a = _().filter(n, e => e.protocol === d.RING),
                    o = _().filter(n, e => e.protocol === d.MIXED),
                    s = _().map(r, n => {
                        let {
                            route: r,
                            amount: i,
                            quote: a
                        } = n;
                        if (f == m.TradeType.EXACT_INPUT) {
                            let f = $.fromFractionalAmount(e, i.numerator, i.denominator),
                                n = $.fromFractionalAmount(t, a.numerator, a.denominator);
                            return {
                                routev3: new k.Route(r.pools, f.currency, n.currency),
                                inputAmount: f,
                                outputAmount: n
                            }
                        } {
                            let f = $.fromFractionalAmount(e, a.numerator, a.denominator),
                                n = $.fromFractionalAmount(t, i.numerator, i.denominator);
                            return {
                                routev3: new k.Route(r.pools, f.currency, n.currency),
                                inputAmount: f,
                                outputAmount: n
                            }
                        }
                    }),
                    u = _().map(i, n => {
                        let {
                            route: r,
                            amount: i,
                            quote: a
                        } = n;
                        if (f == m.TradeType.EXACT_INPUT) {
                            let f = $.fromFractionalAmount(e, i.numerator, i.denominator),
                                n = $.fromFractionalAmount(t, a.numerator, a.denominator);
                            return {
                                routev2: new W.Route(r.pairs, f.currency, n.currency),
                                inputAmount: f,
                                outputAmount: n
                            }
                        } {
                            let f = $.fromFractionalAmount(e, a.numerator, a.denominator),
                                n = $.fromFractionalAmount(t, i.numerator, i.denominator);
                            return {
                                routev2: new W.Route(r.pairs, f.currency, n.currency),
                                inputAmount: f,
                                outputAmount: n
                            }
                        }
                    }),
                    c = _().map(a, n => {
                        let {
                            route: r,
                            amount: i,
                            quote: a
                        } = n;
                        if (f == m.TradeType.EXACT_INPUT) {
                            let f = $.fromFractionalAmount(e, i.numerator, i.denominator),
                                n = $.fromFractionalAmount(t, a.numerator, a.denominator);
                            return {
                                routeRing: new Q.Route(r.pairs, f.currency, n.currency),
                                inputAmount: f,
                                outputAmount: n
                            }
                        } {
                            let f = $.fromFractionalAmount(e, a.numerator, a.denominator),
                                n = $.fromFractionalAmount(t, i.numerator, i.denominator);
                            return {
                                routeRing: new Q.Route(r.pairs, f.currency, n.currency),
                                inputAmount: f,
                                outputAmount: n
                            }
                        }
                    }),
                    l = _().map(o, n => {
                        let {
                            route: r,
                            amount: i,
                            quote: a
                        } = n;
                        if (f != m.TradeType.EXACT_INPUT) throw Error("Mixed routes are only supported for exact input trades");
                        let o = $.fromFractionalAmount(e, i.numerator, i.denominator),
                            s = $.fromFractionalAmount(t, a.numerator, a.denominator);
                        return {
                            mixedRoute: new tb.MixedRouteSDK(r.pools, o.currency, s.currency),
                            inputAmount: o,
                            outputAmount: s
                        }
                    });
                return new tb.Trade({
                    v2Routes: u,
                    ringRoutes: c,
                    v3Routes: s,
                    mixedRoutes: l,
                    tradeType: f
                })
            }

            function tH(e, t, f) {
                if (t.type == y.UNIVERSAL_ROUTER) return { ...tj.SwapRouter.swapERC20CallParameters(e, t),
                    to: (0, tj.UNIVERSAL_ROUTER_ADDRESS)(f)
                };
                if (t.type == y.SWAP_ROUTER_02) {
                    let {
                        recipient: n,
                        slippageTolerance: r,
                        deadline: i,
                        inputTokenPermit: a
                    } = t;
                    return { ...tb.SwapRouter.swapCallParameters(e, {
                            recipient: n,
                            slippageTolerance: r,
                            deadlineOrPreviousBlockhash: i,
                            inputTokenPermit: a
                        }),
                        to: U(f)
                    }
                }
                throw Error(`Unsupported swap type ${t}`)
            }
            let tW = {
                name: "Unsupported Token List",
                timestamp: "2021-01-05T20:47:02.923Z",
                version: {
                    major: 1,
                    minor: 0,
                    patch: 0
                },
                tags: {},
                logoURI: "ipfs://QmNa8mQkrNKp1WEEeGjFezDmDeodkWRevGFN8JCV7b4Xir",
                keywords: ["uniswap", "unsupported", "broken"],
                tokens: [{
                    name: "USD Token",
                    address: "0xd233d1f6fd11640081abb8db125f722b5dc729dc",
                    symbol: "USD",
                    decimals: 9,
                    chainId: 1,
                    logoURI: ""
                }, {
                    name: "UNI HODL",
                    address: "0x4bf5dc91E2555449293D7824028Eb8Fe5879B689",
                    symbol: "UniH",
                    decimals: 18,
                    chainId: 1,
                    logoURI: ""
                }, {
                    name: "Gold Tether",
                    address: "0x4922a015c4407F87432B179bb209e125432E4a2A",
                    symbol: "XAUt",
                    decimals: 6,
                    chainId: 1,
                    logoURI: "https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0x4922a015c4407F87432B179bb209e125432E4a2A/logo.png"
                }, {
                    name: "Grump Cat",
                    address: "0x93B2FfF814FCaEFFB01406e80B4Ecd89Ca6A021b",
                    symbol: "GRUMPY",
                    decimals: 9,
                    chainId: 1,
                    logoURI: "https://raw.githubusercontent.com/trustwallet/assets/master/blockchains/ethereum/assets/0x4922a015c4407F87432B179bb209e125432E4a2A/logo.png"
                }, {
                    name: "apeUSD-UMA Synthetic USD (Dec 2021)",
                    address: "0xfA5e27893aee4805283D86e4283Da64F8c72dd56",
                    symbol: "apeUSD-UMA-DEC21",
                    decimals: 18,
                    chainId: 1,
                    logoURI: ""
                }, {
                    chainId: 1,
                    address: "0xc6b11850241c5127eab73af4b6c68bc267cbbff4",
                    name: "oWETHp Put 360 DEC2520",
                    symbol: "oWETH-360P-12/25/20",
                    decimals: 7
                }, {
                    chainId: 1,
                    name: "oYFIp Put 25000 OCT0220",
                    address: "0x452b421be5b30f0c6ad8c3f03c06bdaab4f5c56c",
                    symbol: "oYFI-25000P-10/02/20",
                    decimals: 7
                }, {
                    chainId: 1,
                    name: "oWETHp Put 360 OCT3020",
                    address: "0x0578779e746d7186253a36cf651ea786acfcf087",
                    symbol: "oWETH-360P-10/30/20",
                    decimals: 7
                }, {
                    chainId: 1,
                    name: "ETHc Call 500 OCT3020",
                    address: "0xf9aba2e43fb19184408ea3b572a0fd672946f87b",
                    symbol: "oETH-500C-10/30/20",
                    decimals: 6
                }, {
                    chainId: 1,
                    name: "oBALp Put 22 OCT0220",
                    address: "0xdb0991dfc7e828b5a2837dc82d68e16490562c8d",
                    symbol: "oBAL-22P-10/02/20",
                    decimals: 7
                }, {
                    chainId: 1,
                    name: "oCOMPp Put 150 SEP2520",
                    address: "0xe951ebe6b4420ab3f4844cf36dedd263d095b416",
                    symbol: "oCOMP-150P-09/25/20",
                    decimals: 7
                }, {
                    chainId: 1,
                    name: "oCRVp Put 3 SEP252020",
                    address: "0x9215bd49b59748419eac6bad9dbe247df06ebdb9",
                    symbol: "oCRV-3P-09/25/20",
                    decimals: 7
                }, {
                    chainId: 1,
                    name: "oETHp Put 180 SEP2520",
                    address: "0xE3A2c34Fa2F59ffa95C4ACd1E5663633d45Bc3AD",
                    symbol: "oETH-180P-09/25/20",
                    decimals: 7
                }, {
                    chainId: 1,
                    name: "oETHc Call 400 SEP2520",
                    address: "0x05977EBC26825C0CD6097E0Ad7204721516711Eb",
                    symbol: "oETH-400C-09/25/20",
                    decimals: 7
                }, {
                    chainId: 1,
                    name: "oWETHp Put 380 SEP1820",
                    address: "0x31f88266301b08631f9f0e33fd5c43c2a5d1e5b2",
                    symbol: "oWETH-380P-09/18/20",
                    decimals: 7
                }, {
                    chainId: 1,
                    name: "oYFIp Put 8500 SEP1820",
                    address: "0xd1cec2f67fdc4c60e0963515dfc3343f31e32e47",
                    symbol: "oYFI-8500P-09/18/20",
                    decimals: 7
                }, {
                    chainId: 1,
                    name: "oWETHp Put 370 SEP1120",
                    address: "0x15844029b2c2bf24506e9937739a9a912f1e4354",
                    symbol: "oWETH-370P-09/11/20",
                    decimals: 7
                }, {
                    chainId: 1,
                    name: "oWETHp Put 400 SEP0420",
                    address: "0x5562c33c383f6386be4f6dcdbd35a3a99bbcfde6",
                    symbol: "oWETH-400P-09/04/20",
                    decimals: 7
                }, {
                    chainId: 1,
                    name: "oETHp Put 200 AUG2820",
                    address: "0x3CBFC1397deF0602c2d211c70A1c0c38CEDB5448",
                    symbol: "oWETH-400P-09/04/20",
                    decimals: 7
                }, {
                    chainId: 1,
                    name: "Opyn cDai Insurance",
                    symbol: "ocDai",
                    address: "0x98cc3bd6af1880fcfda17ac477b2f612980e5e33",
                    decimals: 8
                }, {
                    chainId: 1,
                    name: "Opyn cUSDC Insurance",
                    symbol: "ocUSDC",
                    address: "0x8ED9f862363fFdFD3a07546e618214b6D59F03d4",
                    decimals: 8
                }, {
                    chainId: 1,
                    address: "0x176C674Ee533C6139B0dc8b458D72A93dCB3e705",
                    symbol: "iAAVE",
                    name: "Synth Inverse Aave",
                    decimals: 18,
                    logoURI: "https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/iAAVE.svg",
                    tags: ["inverse", "synth"]
                }, {
                    chainId: 1,
                    address: "0x8A8079c7149B8A1611e5C5d978DCA3bE16545F83",
                    symbol: "iADA",
                    name: "Synth Inverse Cardano",
                    decimals: 18,
                    logoURI: "https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/iADA.svg",
                    tags: ["inverse", "synth"]
                }, {
                    chainId: 1,
                    address: "0xAFD870F32CE54EfdBF677466B612bf8ad164454B",
                    symbol: "iBNB",
                    name: "Synth Inverse Binance Coin",
                    decimals: 18,
                    logoURI: "https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/iBNB.svg",
                    tags: ["inverse", "synth"]
                }, {
                    chainId: 1,
                    address: "0xD6014EA05BDe904448B743833dDF07c3C7837481",
                    symbol: "iBTC",
                    name: "Synth Inverse Bitcoin",
                    decimals: 18,
                    logoURI: "https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/iBTC.svg",
                    tags: ["inverse", "synth"]
                }, {
                    chainId: 1,
                    address: "0x336213e1DDFC69f4701Fc3F86F4ef4A160c1159d",
                    symbol: "iCEX",
                    name: "Synth Inverse Centralised Exchange Index",
                    decimals: 18,
                    logoURI: "https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/iCEX.svg",
                    tags: ["index", "inverse", "synth"]
                }, {
                    chainId: 1,
                    address: "0x6345728B1ccE16E6f8C509950b5c84FFF88530d9",
                    symbol: "iCOMP",
                    name: "Synth Inverse Compound",
                    decimals: 18,
                    logoURI: "https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/iCOMP.svg",
                    tags: ["inverse", "synth"]
                }, {
                    chainId: 1,
                    address: "0xCB98f42221b2C251A4E74A1609722eE09f0cc08E",
                    symbol: "iDASH",
                    name: "Synth Inverse Dash",
                    decimals: 18,
                    logoURI: "https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/iDASH.svg",
                    tags: ["inverse", "synth"]
                }, {
                    chainId: 1,
                    address: "0x14d10003807AC60d07BB0ba82cAeaC8d2087c157",
                    symbol: "iDEFI",
                    name: "Synth Inverse DeFi Index",
                    decimals: 18,
                    logoURI: "https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/iDEFI.svg",
                    tags: ["index", "inverse", "synth"]
                }, {
                    chainId: 1,
                    address: "0x46a97629C9C1F58De6EC18C7F536e7E6d6A6ecDe",
                    symbol: "iDOT",
                    name: "Synth Inverse Polkadot",
                    decimals: 18,
                    logoURI: "https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/iDOT.svg",
                    tags: ["inverse", "synth"]
                }, {
                    chainId: 1,
                    address: "0xF4EebDD0704021eF2a6Bbe993fdf93030Cd784b4",
                    symbol: "iEOS",
                    name: "Synth Inverse EOS",
                    decimals: 18,
                    logoURI: "https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/iEOS.svg",
                    tags: ["inverse", "synth"]
                }, {
                    chainId: 1,
                    address: "0xd50c1746D835d2770dDA3703B69187bFfeB14126",
                    symbol: "iETC",
                    name: "Synth Inverse Ethereum Classic",
                    decimals: 18,
                    logoURI: "https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/iETC.svg",
                    tags: ["inverse", "synth"]
                }, {
                    chainId: 1,
                    address: "0xA9859874e1743A32409f75bB11549892138BBA1E",
                    symbol: "iETH",
                    name: "Synth Inverse Ether",
                    decimals: 18,
                    logoURI: "https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/iETH.svg",
                    tags: ["inverse", "synth"]
                }, {
                    chainId: 1,
                    address: "0x2d7aC061fc3db53c39fe1607fB8cec1B2C162B01",
                    symbol: "iLINK",
                    name: "Synth Inverse Chainlink",
                    decimals: 18,
                    logoURI: "https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/iLINK.svg",
                    tags: ["inverse", "synth"]
                }, {
                    chainId: 1,
                    address: "0x79da1431150C9b82D2E5dfc1C68B33216846851e",
                    symbol: "iLTC",
                    name: "Synth Inverse Litecoin",
                    decimals: 18,
                    logoURI: "https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/iLTC.svg",
                    tags: ["inverse", "synth"]
                }, {
                    chainId: 1,
                    address: "0xA5a5DF41883Cdc00c4cCC6E8097130535399d9a3",
                    symbol: "iOIL",
                    name: "Synth Inverse Perpetual Oil Futures",
                    decimals: 18,
                    logoURI: "https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/iOIL.svg",
                    tags: ["inverse", "synth"]
                }, {
                    chainId: 1,
                    address: "0x0fEd38108bdb8e62ef7b5680E8E0726E2F29e0De",
                    symbol: "iREN",
                    name: "Synth Inverse Ren",
                    decimals: 18,
                    logoURI: "https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/iREN.svg",
                    tags: ["inverse", "synth"]
                }, {
                    chainId: 1,
                    address: "0xC5807183a9661A533CB08CbC297594a0B864dc12",
                    symbol: "iTRX",
                    name: "Synth Inverse TRON",
                    decimals: 18,
                    logoURI: "https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/iTRX.svg",
                    tags: ["inverse", "synth"]
                }, {
                    chainId: 1,
                    address: "0x36A00FF9072570eF4B9292117850B8FE08d96cce",
                    symbol: "iUNI",
                    name: "Synth Inverse Uniswap",
                    decimals: 18,
                    logoURI: "https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/iUNI.svg",
                    tags: ["inverse", "synth"]
                }, {
                    chainId: 1,
                    address: "0x4AdF728E2Df4945082cDD6053869f51278fae196",
                    symbol: "iXMR",
                    name: "Synth Inverse Monero",
                    decimals: 18,
                    logoURI: "https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/iXMR.svg",
                    tags: ["inverse", "synth"]
                }, {
                    chainId: 1,
                    address: "0x27269b3e45A4D3E79A3D6BFeE0C8fB13d0D711A6",
                    symbol: "iXRP",
                    name: "Synth Inverse Ripple",
                    decimals: 18,
                    logoURI: "https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/iXRP.svg",
                    tags: ["inverse", "synth"]
                }, {
                    chainId: 1,
                    address: "0x8deef89058090ac5655A99EEB451a4f9183D1678",
                    symbol: "iXTZ",
                    name: "Synth Inverse Tezos",
                    decimals: 18,
                    logoURI: "https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/iXTZ.svg",
                    tags: ["inverse", "synth"]
                }, {
                    chainId: 1,
                    address: "0x592244301CeA952d6daB2fdC1fE6bd9E53917306",
                    symbol: "iYFI",
                    name: "Synth Inverse yearn.finance",
                    decimals: 18,
                    logoURI: "https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/iYFI.svg",
                    tags: ["inverse", "synth"]
                }, {
                    chainId: 1,
                    address: "0xcD39b5434a0A92cf47D1F567a7dF84bE356814F0",
                    symbol: "s1INCH",
                    name: "Synth 1inch",
                    decimals: 18,
                    logoURI: "https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/s1INCH.svg",
                    tags: ["synth"]
                }, {
                    chainId: 1,
                    address: "0x7537AAe01f3B218DAE75e10d952473823F961B87",
                    symbol: "sAAPL",
                    name: "Synth Apple",
                    decimals: 18,
                    logoURI: "https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/sAAPL.svg",
                    tags: ["synth"]
                }, {
                    chainId: 1,
                    address: "0xd2dF355C19471c8bd7D8A3aa27Ff4e26A21b4076",
                    symbol: "sAAVE",
                    name: "Synth Aave",
                    decimals: 18,
                    logoURI: "https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/sAAVE.svg",
                    tags: ["synth"]
                }, {
                    chainId: 1,
                    address: "0xe36E2D3c7c34281FA3bC737950a68571736880A1",
                    symbol: "sADA",
                    name: "Synth Cardano",
                    decimals: 18,
                    logoURI: "https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/sADA.svg",
                    tags: ["synth"]
                }, {
                    chainId: 1,
                    address: "0x9CF7E61853ea30A41b02169391b393B901eac457",
                    symbol: "sAMZN",
                    name: "Synth Amazon",
                    decimals: 18,
                    logoURI: "https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/sAMZN.svg",
                    tags: ["synth"]
                }, {
                    chainId: 1,
                    address: "0xF48e200EAF9906362BB1442fca31e0835773b8B4",
                    symbol: "sAUD",
                    name: "Synth Australian Dollars",
                    decimals: 18,
                    logoURI: "https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/sAUD.svg",
                    tags: ["synth"]
                }, {
                    chainId: 1,
                    address: "0x617aeCB6137B5108D1E7D4918e3725C8cEbdB848",
                    symbol: "sBNB",
                    name: "Synth Binance Coin",
                    decimals: 18,
                    logoURI: "https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/sBNB.svg",
                    tags: ["synth"]
                }, {
                    chainId: 1,
                    address: "0xfE18be6b3Bd88A2D2A7f928d00292E7a9963CfC6",
                    symbol: "sBTC",
                    name: "Synth Bitcoin",
                    decimals: 18,
                    logoURI: "https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/sBTC.svg",
                    tags: ["synth"]
                }, {
                    chainId: 1,
                    address: "0xeABACD844A196D7Faf3CE596edeBF9900341B420",
                    symbol: "sCEX",
                    name: "Synth Centralised Exchange Index",
                    decimals: 18,
                    logoURI: "https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/sCEX.svg",
                    tags: ["index", "synth"]
                }, {
                    chainId: 1,
                    address: "0x0F83287FF768D1c1e17a42F44d644D7F22e8ee1d",
                    symbol: "sCHF",
                    name: "Synth Swiss Franc",
                    decimals: 18,
                    logoURI: "https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/sCHF.svg",
                    tags: ["synth"]
                }, {
                    chainId: 1,
                    address: "0x9EeF4CA7aB9fa8bc0650127341C2d3F707a40f8A",
                    symbol: "sCOIN",
                    name: "Synth Coinbase",
                    decimals: 18,
                    logoURI: "https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/sCOIN.svg",
                    tags: ["synth"]
                }, {
                    chainId: 1,
                    address: "0xEb029507d3e043DD6C87F2917C4E82B902c35618",
                    symbol: "sCOMP",
                    name: "Synth Compound",
                    decimals: 18,
                    logoURI: "https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/sCOMP.svg",
                    tags: ["synth"]
                }, {
                    chainId: 1,
                    address: "0xD38aEb759891882e78E957c80656572503D8c1B1",
                    symbol: "sCRV",
                    name: "Synth Curve DAO Token",
                    decimals: 18,
                    logoURI: "https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/sCRV.svg",
                    tags: ["synth"]
                }, {
                    chainId: 1,
                    address: "0xfE33ae95A9f0DA8A845aF33516EDc240DCD711d6",
                    symbol: "sDASH",
                    name: "Synth Dash",
                    decimals: 18,
                    logoURI: "https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/sDASH.svg",
                    tags: ["synth"]
                }, {
                    chainId: 1,
                    address: "0xe1aFe1Fd76Fd88f78cBf599ea1846231B8bA3B6B",
                    symbol: "sDEFI",
                    name: "Synth DeFi Index",
                    decimals: 18,
                    logoURI: "https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/sDEFI.svg",
                    tags: ["index", "synth"]
                }, {
                    chainId: 1,
                    address: "0x1715AC0743102BF5Cd58EfBB6Cf2dC2685d967b6",
                    symbol: "sDOT",
                    name: "Synth Polkadot",
                    decimals: 18,
                    logoURI: "https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/sDOT.svg",
                    tags: ["synth"]
                }, {
                    chainId: 1,
                    address: "0x88C8Cf3A212c0369698D13FE98Fcb76620389841",
                    symbol: "sEOS",
                    name: "Synth EOS",
                    decimals: 18,
                    logoURI: "https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/sEOS.svg",
                    tags: ["synth"]
                }, {
                    chainId: 1,
                    address: "0x22602469d704BfFb0936c7A7cfcD18f7aA269375",
                    symbol: "sETC",
                    name: "Synth Ethereum Classic",
                    decimals: 18,
                    logoURI: "https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/sETC.svg",
                    tags: ["synth"]
                }, {
                    chainId: 1,
                    address: "0x5e74C9036fb86BD7eCdcb084a0673EFc32eA31cb",
                    symbol: "sETH",
                    name: "Synth Ether",
                    decimals: 18,
                    logoURI: "https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/sETH.svg",
                    tags: ["synth"]
                }, {
                    chainId: 1,
                    address: "0xD71eCFF9342A5Ced620049e616c5035F1dB98620",
                    symbol: "sEUR",
                    name: "Synth Euros",
                    decimals: 18,
                    logoURI: "https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/sEUR.svg",
                    tags: ["synth"]
                }, {
                    chainId: 1,
                    address: "0xf50B5e535F62a56A9BD2d8e2434204E726c027Fa",
                    symbol: "sFB",
                    name: "Synth Facebook",
                    decimals: 18,
                    logoURI: "https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/sFB.svg",
                    tags: ["synth"]
                }, {
                    chainId: 1,
                    address: "0x23348160D7f5aca21195dF2b70f28Fce2B0be9fC",
                    symbol: "sFTSE",
                    name: "Synth FTSE 100 Index",
                    decimals: 18,
                    logoURI: "https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/sFTSE.svg",
                    tags: ["synth"]
                }, {
                    chainId: 1,
                    address: "0x97fe22E7341a0Cd8Db6F6C021A24Dc8f4DAD855F",
                    symbol: "sGBP",
                    name: "Synth Pound Sterling",
                    decimals: 18,
                    logoURI: "https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/sGBP.svg",
                    tags: ["synth"]
                }, {
                    chainId: 1,
                    address: "0xC63B8ECCE56aB9C46184eC6aB85e4771fEa4c8AD",
                    symbol: "sGOOG",
                    name: "Synth Alphabet",
                    decimals: 18,
                    logoURI: "https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/sGOOG.svg",
                    tags: ["synth"]
                }, {
                    chainId: 1,
                    address: "0xF6b1C627e95BFc3c1b4c9B825a032Ff0fBf3e07d",
                    symbol: "sJPY",
                    name: "Synth Japanese Yen",
                    decimals: 18,
                    logoURI: "https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/sJPY.svg",
                    tags: ["synth"]
                }, {
                    chainId: 1,
                    address: "0x269895a3dF4D73b077Fc823dD6dA1B95f72Aaf9B",
                    symbol: "sKRW",
                    name: "Synth South Korean Won",
                    decimals: 18,
                    logoURI: "https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/sKRW.svg",
                    tags: ["synth"]
                }, {
                    chainId: 1,
                    address: "0xbBC455cb4F1B9e4bFC4B73970d360c8f032EfEE6",
                    symbol: "sLINK",
                    name: "Synth Chainlink",
                    decimals: 18,
                    logoURI: "https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/sLINK.svg",
                    tags: ["synth"]
                }, {
                    chainId: 1,
                    address: "0xC14103C2141E842e228FBaC594579e798616ce7A",
                    symbol: "sLTC",
                    name: "Synth Litecoin",
                    decimals: 18,
                    logoURI: "https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/sLTC.svg",
                    tags: ["synth"]
                }, {
                    chainId: 1,
                    address: "0x745a824D6aBBD236AA794b5530062778A6Ad7523",
                    symbol: "sMSFT",
                    name: "Synth Microsoft",
                    decimals: 18,
                    logoURI: "https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/sMSFT.svg",
                    tags: ["synth"]
                }, {
                    chainId: 1,
                    address: "0x5A7E3c07604EB515C16b36cd51906a65f021F609",
                    symbol: "sNFLX",
                    name: "Synth Netflix",
                    decimals: 18,
                    logoURI: "https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/sNFLX.svg",
                    tags: ["synth"]
                }, {
                    chainId: 1,
                    address: "0x757de3ac6B830a931eF178C6634c5C551773155c",
                    symbol: "sNIKKEI",
                    name: "Synth Nikkei 225 Index",
                    decimals: 18,
                    logoURI: "https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/sNIKKEI.svg",
                    tags: ["synth"]
                }, {
                    chainId: 1,
                    address: "0x6d16cF3EC5F763d4d99cB0B0b110eefD93B11B56",
                    symbol: "sOIL",
                    name: "Synth Perpetual Oil Futures",
                    decimals: 18,
                    logoURI: "https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/sOIL.svg",
                    tags: ["synth"]
                }, {
                    chainId: 1,
                    address: "0xD31533E8d0f3DF62060e94B3F1318137bB6E3525",
                    symbol: "sREN",
                    name: "Synth Ren",
                    decimals: 18,
                    logoURI: "https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/sREN.svg",
                    tags: ["synth"]
                }, {
                    chainId: 1,
                    address: "0x0352557B007A4Aae1511C114409b932F06F9E2f4",
                    symbol: "sRUNE",
                    name: "Synth THORChain",
                    decimals: 18,
                    logoURI: "https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/sRUNE.svg",
                    tags: ["synth"]
                }, {
                    chainId: 1,
                    address: "0xf2E08356588EC5cd9E437552Da87C0076b4970B0",
                    symbol: "sTRX",
                    name: "Synth TRON",
                    decimals: 18,
                    logoURI: "https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/sTRX.svg",
                    tags: ["synth"]
                }, {
                    chainId: 1,
                    address: "0x918dA91Ccbc32B7a6A0cc4eCd5987bbab6E31e6D",
                    symbol: "sTSLA",
                    name: "Synth Tesla",
                    decimals: 18,
                    logoURI: "https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/sTSLA.svg",
                    tags: ["synth"]
                }, {
                    chainId: 1,
                    address: "0x30635297E450b930f8693297eBa160D9e6c8eBcf",
                    symbol: "sUNI",
                    name: "Synth Uniswap",
                    decimals: 18,
                    logoURI: "https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/sUNI.svg",
                    tags: ["synth"]
                }, {
                    chainId: 1,
                    address: "0x6A22e5e94388464181578Aa7A6B869e00fE27846",
                    symbol: "sXAG",
                    name: "Synth Silver Ounce",
                    decimals: 18,
                    logoURI: "https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/sXAG.svg",
                    tags: ["synth"]
                }, {
                    chainId: 1,
                    address: "0x261EfCdD24CeA98652B9700800a13DfBca4103fF",
                    symbol: "sXAU",
                    name: "Synth Gold Ounce",
                    decimals: 18,
                    logoURI: "https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/sXAU.svg",
                    tags: ["synth"]
                }, {
                    chainId: 1,
                    address: "0x5299d6F7472DCc137D7f3C4BcfBBB514BaBF341A",
                    symbol: "sXMR",
                    name: "Synth Monero",
                    decimals: 18,
                    logoURI: "https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/sXMR.svg",
                    tags: ["synth"]
                }, {
                    chainId: 1,
                    address: "0xa2B0fDe6D710e201d0d608e924A484d1A5fEd57c",
                    symbol: "sXRP",
                    name: "Synth Ripple",
                    decimals: 18,
                    logoURI: "https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/sXRP.svg",
                    tags: ["synth"]
                }, {
                    chainId: 1,
                    address: "0x2e59005c5c0f0a4D77CcA82653d48b46322EE5Cd",
                    symbol: "sXTZ",
                    name: "Synth Tezos",
                    decimals: 18,
                    logoURI: "https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/sXTZ.svg",
                    tags: ["synth"]
                }, {
                    chainId: 1,
                    address: "0x992058B7DB08F9734d84485bfbC243C4ee6954A7",
                    symbol: "sYFI",
                    name: "Synth yearn.finance",
                    decimals: 18,
                    logoURI: "https://raw.githubusercontent.com/Synthetixio/synthetix-assets/v2.0.10/synths/sYFI.svg",
                    tags: ["synth"]
                }, {
                    chainId: 1,
                    address: "0x81ab848898b5ffD3354dbbEfb333D5D183eEDcB5",
                    name: "yUSD Synthetic Expiring 1 September 2020",
                    symbol: "yUSDSEP20",
                    decimals: 18
                }, {
                    chainId: 1,
                    address: "0xB2FdD60AD80ca7bA89B9BAb3b5336c2601C020b4",
                    name: "yUSD Synthetic Expiring 1 October 2020",
                    symbol: "yUSDOCT20",
                    decimals: 18
                }, {
                    chainId: 1,
                    address: "0x208d174775dc39fe18b1b374972f77ddec6c0f73",
                    name: "uUSDrBTC Synthetic Expiring 1 Oct 2020",
                    symbol: "uUSDrBTC-OCT",
                    decimals: 18
                }, {
                    chainId: 1,
                    address: "0xf06ddacf71e2992e2122a1a0168c6967afdf63ce",
                    name: "uUSDrBTC Synthetic Expiring 31 Dec 2020",
                    symbol: "uUSDrBTC-DEC",
                    decimals: 18
                }, {
                    chainId: 1,
                    address: "0xd16c79c8a39d44b2f3eb45d2019cd6a42b03e2a9",
                    name: "uUSDwETH Synthetic Expiring 31 Dec 2020",
                    symbol: "uUSDwETH-DEC",
                    decimals: 18
                }, {
                    chainId: 1,
                    address: "0x3d995510f8d82c2ea341845932b5ddde0bead9a3",
                    name: "uGAS-JAN21 Token Expiring 31 Jan 2021",
                    symbol: "uGAS-JAN21",
                    decimals: 18
                }, {
                    chainId: 1,
                    address: "0x90f802c7e8fb5d40b0de583e34c065a3bd2020d8",
                    name: "YD-ETH-MAR21 Token Expiring 31 Mar 2021",
                    symbol: "YD-ETH-MAR21",
                    decimals: 18
                }, {
                    chainId: 1,
                    address: "0x002f0b1a71c5730cf2f4da1970a889207bdb6d0d",
                    name: "YD-BTC-MAR21 Token Expiring 31 Mar 2021",
                    symbol: "YD-BTC-MAR21",
                    decimals: 18
                }, {
                    chainId: 1,
                    address: "0x1062ad0e59fa67fa0b27369113098cc941dd0d5f",
                    name: "UMA 35 Call Expirying 30 Apr 2021",
                    symbol: "UMAc35-0421",
                    decimals: 18
                }, {
                    chainId: 1,
                    address: "0xf93340b1a3adf7eedcaec25fae8171d4b736e89f",
                    name: "pxUSD Synthetic USD Expiring 1 April 2021",
                    symbol: "pxUSD_MAR2021",
                    decimals: 18
                }, {
                    chainId: 1,
                    address: "0x84bd083b1c8bf929f39c98bc17cf518f40154f58",
                    name: "Mario Cash Synthetic Token Expiring 15 January 2021",
                    symbol: "Mario Cash-JAN-2021",
                    decimals: 18
                }, {
                    chainId: 1,
                    address: "0x81fab276aec924fbde190cf379783526d413cf70",
                    name: "uGAS-FEB21 Token Expiring 28 Feb 2021",
                    symbol: "uGAS-FEB21",
                    decimals: 18
                }, {
                    chainId: 1,
                    address: "0x4e110603e70b0b5f1c403ee543b37e1f1244cf28",
                    name: "uGAS-MAR21 Token Expiring 31 Mar 2021",
                    symbol: "uGAS-MAR21",
                    decimals: 18
                }, {
                    chainId: 1,
                    address: "0xcf55a7f92d5e0c6683debbc1fc20c0a6e056df13",
                    name: "Zelda Elastic Cash",
                    symbol: "Zelda Elastic Cash",
                    decimals: 18
                }, {
                    chainId: 1,
                    address: "0x654eebac62240e6c56bab5f6adf7cfa74a894510",
                    name: "Zelda Spring Nuts Cash",
                    symbol: "Zelda Spring Nuts Cash",
                    decimals: 18
                }, {
                    chainId: 1,
                    address: "0xa48920cc1ad85d8ea13af5d7be180c0338c306dd",
                    name: "Zelda Summer Nuts Cash",
                    symbol: "Zelda Summer Nuts Cash",
                    decimals: 18
                }, {
                    chainId: 1,
                    address: "0x249a198d59b57fda5dda90630febc86fd8c7594c",
                    name: "Zelda Whirlwind Cash",
                    symbol: "Zelda Whirlwind Cash",
                    decimals: 18
                }, {
                    chainId: 1,
                    address: "0x5ed1406873c9eb91f6f9a67ac4e152387c1132e7",
                    name: "Zelda Reinforced Cash",
                    symbol: "Zelda Reinforced Cash",
                    decimals: 18
                }, {
                    chainId: 1,
                    address: "0x8104c9f13118320eefe5fbea8a44d600b85981ef",
                    name: "Mini Mario Summer Cash",
                    symbol: "Mini Mario Summer Cash",
                    decimals: 18
                }, {
                    chainId: 1,
                    address: "0x69746c719e59674b147df25f50e7cfa0673cb625",
                    name: "Mini Mario Spring Cash",
                    symbol: "Mini Mario Spring Cash",
                    decimals: 18
                }, {
                    chainId: 1,
                    address: "0x6b1257641d18791141f025eab36fb567c4b564ff",
                    name: "Bitcoin Dominance Token 31 March 2021",
                    symbol: "BTCDOM-MAR2021",
                    decimals: 18
                }, {
                    chainId: 1,
                    address: "0x4e83b6287588a96321b2661c5e041845ff7814af",
                    name: "Altcoin Dominance Token 31 March 2021",
                    symbol: "ALTDOM-MAR2021",
                    decimals: 18
                }, {
                    chainId: 1,
                    address: "0x59fec83ec709c893aedd1a144cf1828eb04127cd",
                    name: "pxGOLD Synthetic GOLD Expiring 31 May 2021",
                    symbol: "pxGOLD_MAY2021",
                    decimals: 18
                }, {
                    chainId: 1,
                    address: "0x89337BFb7938804c3776C9FB921EccAf5ab76758",
                    name: "Compound Annualized Rate Future Expiring 28 March 2021",
                    symbol: "CAR-USDC-MAR21",
                    decimals: 18
                }, {
                    chainId: 1,
                    address: "0xec58d3aefc9aaa2e0036fa65f70d569f49d9d1ed",
                    name: "uSTONKS Index Token April 2021",
                    symbol: "uSTONKS_APR21",
                    decimals: 6
                }, {
                    chainId: 1,
                    address: "0xa6B9d7E3d76cF23549293Fb22c488E0Ea591A44e",
                    name: "uGAS-JUN21 Token Expiring 30 Jun 2021",
                    symbol: "uGAS-JUN21",
                    decimals: 18
                }, {
                    chainId: 1,
                    address: "0xe813b65da6c38a04591aed3f082d32db7d53c382",
                    name: "Yield Dollar [WETH Dec 2021]",
                    symbol: "YD-ETH-DEC21",
                    decimals: 18
                }, {
                    chainId: 1,
                    address: "0x4b606e9eb2228c70f44453afe5a73e1fea258ce1",
                    name: "pxUSD Synthetic USD Expiring 31 Mar 2022",
                    symbol: "pxUSD_MAR2022",
                    decimals: 18
                }, {
                    chainId: 1,
                    address: "0x5247c0db4044fb6f97f32c7e1b48758019a5a912",
                    name: "pxGOLD Synthetic Gold Expiring 31 Mar 2022",
                    symbol: "pxGOLD_MAR2022",
                    decimals: 18
                }, {
                    chainId: 1,
                    address: "0x56fb1acaff95c0b6ebcd17c8361a63d98b1a5a11",
                    name: "uForex CNYUSD Synthetic Token April 2021",
                    symbol: "uCNYUSD-APR",
                    decimals: 6
                }, {
                    chainId: 1,
                    address: "0xd49fa405dce086c65d66ca1ca41f8e98583812b4",
                    name: "uForex EURUSD Synthetic Token April 2021",
                    symbol: "uEURUSD-APR",
                    decimals: 6
                }, {
                    chainId: 1,
                    address: "0x29dddacba3b231ee8d673dd0f0fa759ea145561b",
                    name: "DEFI_PULSE_TOTAL_TVL Synthetic Token Expiring 15 April 2021",
                    symbol: "TVL_ALL_APRIL15",
                    decimals: 6
                }, {
                    chainId: 1,
                    address: "0xcbe430927370e95b4b10cfc702c6017ec7abefc3",
                    name: "Yield Dollar [WETH Jun 2021]",
                    symbol: "YD-ETH-JUN21",
                    decimals: 18
                }, {
                    chainId: 1,
                    address: "0x4b7fb448df91c8ed973494f8c8c4f12daf3a8521",
                    name: "Yield Dollar [renBTC Jun 2021]",
                    symbol: "YD-BTC-JUN21",
                    decimals: 8
                }, {
                    chainId: 1,
                    address: "0x3108c33b6fb38efedaefd8b5f7ca01d5f5c7372d",
                    name: "Yield Dollar UMA 21",
                    symbol: "yUMA21",
                    decimals: 18
                }, {
                    chainId: 1,
                    address: "0x0cae9e4d663793c2a2A0b211c1Cf4bBca2B9cAa7",
                    name: "Mirrored Amazon",
                    symbol: "MAMZN",
                    decimals: 18
                }, {
                    chainId: 1,
                    address: "0x31c63146a635EB7465e5853020b39713AC356991",
                    name: "M US Oil",
                    symbol: "MUSO",
                    decimals: 18
                }, {
                    chainId: 1,
                    address: "0x59A921Db27Dd6d4d974745B7FfC5c33932653442",
                    name: "M Google",
                    symbol: "MGOOGL",
                    decimals: 18
                }, {
                    chainId: 1,
                    address: "0xf72FCd9DCF0190923Fadd44811E240Ef4533fc86",
                    name: "Mirrored ProShares",
                    symbol: "MVIXY",
                    decimals: 18
                }, {
                    chainId: 1,
                    address: "0x56aA298a19C93c6801FDde870fA63EF75Cc0aF72",
                    name: "Mirrored Alibaba",
                    symbol: "MBABA",
                    decimals: 18
                }, {
                    chainId: 1,
                    address: "0x0e99cC0535BB6251F6679Fa6E65d6d3b430e840B",
                    name: "Mirrored Facebook",
                    symbol: "MFB",
                    decimals: 18
                }, {
                    chainId: 1,
                    address: "0x13B02c8dE71680e71F0820c996E4bE43c2F57d15",
                    name: "Mirrored Invesco QQ",
                    symbol: "MQQQ",
                    decimals: 18
                }, {
                    chainId: 1,
                    address: "0x41BbEDd7286dAab5910a1f15d12CBda839852BD7",
                    name: "Mirrored Microsoft",
                    symbol: "MMSFT",
                    decimals: 18
                }, {
                    chainId: 1,
                    address: "0x9d1555d8cB3C846Bb4f7D5B1B1080872c3166676",
                    name: "Mirrored iShares Si",
                    symbol: "MSLV",
                    decimals: 18
                }, {
                    chainId: 1,
                    address: "0x21cA39943E91d704678F5D00b6616650F066fD63",
                    name: "Mirrored Tesla",
                    symbol: "MTSLA",
                    decimals: 18
                }, {
                    chainId: 1,
                    address: "0xe82bbB62fA81d0701643d1675FB50ec52fD3Df92",
                    name: "DYDX Token",
                    symbol: "DYDX",
                    decimals: 18
                }, {
                    chainId: 10,
                    address: "0xE405de8F52ba7559f9df3C368500B6E6ae6Cee49",
                    name: "sETH",
                    symbol: "Synth Ether",
                    decimals: 18
                }, {
                    chainId: 10,
                    address: "0x298B9B95708152ff6968aafd889c6586e9169f1D",
                    name: "sBTC",
                    symbol: "Synth Bitcoin",
                    decimals: 18
                }, {
                    chainId: 10,
                    address: "0xc5Db22719A06418028A40A9B5E9A7c02959D0d08",
                    name: "sLINK",
                    symbol: "Synth Link",
                    decimals: 18
                }, {
                    chainId: 1,
                    address: "0x6B60eE11b73230045cF9095E6e43AE9Ea638e172",
                    name: "Shatner",
                    symbol: "SHAT",
                    decimals: 18
                }, {
                    chainId: 1,
                    address: "0x7277a44D1325D81Ac58893002a1B40a41bea43fe",
                    name: "FAANG Index",
                    symbol: "FAANG",
                    decimals: 18
                }, {
                    chainId: 1,
                    address: "0x76175599887730786bdA1545D0D7AcE8737fEBB1",
                    name: "ENS DAO",
                    symbol: "ENS",
                    decimals: 18
                }]
            };
            class tQ extends k.Route {
                constructor() {
                    super(...arguments), this.protocol = d.V3
                }
            }
            class tX extends W.Route {
                constructor() {
                    super(...arguments), this.protocol = d.V2
                }
            }
            class tz extends Q.Route {
                constructor() {
                    super(...arguments), this.protocol = d.RING
                }
            }
            class tK extends tb.MixedRouteSDK {
                    constructor() {
                        super(...arguments), this.protocol = d.MIXED
                    }
                }! function(e) {
                    e[e.SUCCESS = 1] = "SUCCESS", e[e.NO_ROUTE_FOUND = 2] = "NO_ROUTE_FOUND", e[e.NO_SWAP_NEEDED = 3] = "NO_SWAP_NEEDED"
                }(p || (p = {})),
                function(e) {
                    e[e.UNIVERSAL_ROUTER = 0] = "UNIVERSAL_ROUTER", e[e.SWAP_ROUTER_02 = 1] = "SWAP_ROUTER_02"
                }(y || (y = {}));
            let tY = e => {
                switch (e) {
                    case m.ChainId.OPTIMISM:
                    case m.ChainId.OPTIMISM_GOERLI:
                    case m.ChainId.BASE:
                    case m.ChainId.BASE_GOERLI:
                        return {
                            v2PoolSelection: {
                                topN: 3,
                                topNDirectSwaps: 1,
                                topNTokenInOut: 5,
                                topNSecondHop: 2,
                                topNWithEachBaseToken: 2,
                                topNWithBaseToken: 6
                            },
                            v3PoolSelection: {
                                topN: 2,
                                topNDirectSwaps: 2,
                                topNTokenInOut: 2,
                                topNSecondHop: 1,
                                topNWithEachBaseToken: 3,
                                topNWithBaseToken: 3
                            },
                            maxSwapsPerPath: 3,
                            minSplits: 1,
                            maxSplits: 7,
                            distributionPercent: 10,
                            forceCrossProtocol: !1
                        };
                    case m.ChainId.ARBITRUM_ONE:
                    case m.ChainId.ARBITRUM_GOERLI:
                    case m.ChainId.CELO:
                    case m.ChainId.CELO_ALFAJORES:
                        return {
                            v2PoolSelection: {
                                topN: 3,
                                topNDirectSwaps: 1,
                                topNTokenInOut: 5,
                                topNSecondHop: 2,
                                topNWithEachBaseToken: 2,
                                topNWithBaseToken: 6
                            },
                            v3PoolSelection: {
                                topN: 2,
                                topNDirectSwaps: 2,
                                topNTokenInOut: 2,
                                topNSecondHop: 1,
                                topNWithEachBaseToken: 3,
                                topNWithBaseToken: 2
                            },
                            maxSwapsPerPath: 2,
                            minSplits: 1,
                            maxSplits: 7,
                            distributionPercent: 25,
                            forceCrossProtocol: !1
                        };
                    default:
                        return {
                            v2PoolSelection: {
                                topN: 3,
                                topNDirectSwaps: 1,
                                topNTokenInOut: 5,
                                topNSecondHop: 2,
                                tokensToAvoidOnSecondHops: new fB("0xd46ba6d942050d489dbd938a2c909a5d5039a161"),
                                topNWithEachBaseToken: 2,
                                topNWithBaseToken: 6
                            },
                            v3PoolSelection: {
                                topN: 2,
                                topNDirectSwaps: 2,
                                topNTokenInOut: 3,
                                topNSecondHop: 1,
                                topNWithEachBaseToken: 3,
                                topNWithBaseToken: 5
                            },
                            maxSwapsPerPath: 3,
                            minSplits: 1,
                            maxSplits: 7,
                            distributionPercent: 5,
                            forceCrossProtocol: !1
                        }
                }
            };
            var tJ = f(73784),
                tZ = f.n(tJ),
                t0 = f(52635),
                t1 = f.n(t0);
            let t6 = {
                    [m.ChainId.MAINNET]: [ei, ef, en],
                    [m.ChainId.ARBITRUM_ONE]: [eV, eL, eq],
                    [m.ChainId.OPTIMISM]: [ex, eO, eP],
                    [m.ChainId.OPTIMISM_GOERLI]: [eB, eF, eD],
                    [m.ChainId.ARBITRUM_GOERLI]: [ej],
                    [m.ChainId.GOERLI]: [eI, ev, eg, eA],
                    [m.ChainId.SEPOLIA]: [ed, eu],
                    [m.ChainId.BLAST]: [eh],
                    [m.ChainId.BLAST_SEPOLIA]: [ep],
                    [m.ChainId.POLYGON]: [eW],
                    [m.ChainId.POLYGON_MUMBAI]: [eX],
                    [m.ChainId.CELO]: [e5],
                    [m.ChainId.CELO_ALFAJORES]: [e9],
                    [m.ChainId.GNOSIS]: [tf],
                    [m.ChainId.MOONBEAM]: [ti],
                    [m.ChainId.BNB]: [e0, eZ, eY],
                    [m.ChainId.AVALANCHE]: [e7, te],
                    [m.ChainId.BASE]: [tt]
                },
                t5 = {
                    [m.ChainId.GOERLI]: [eE, eT, ew],
                    [m.ChainId.BLAST_SEPOLIA]: [eb, ey],
                    [m.ChainId.SEPOLIA]: [el, ec],
                    [m.ChainId.BLAST]: [em]
                };
            class t2 {}
            class t8 {}
            class t3 {}
            async function t9(e, t, f) {
                let n = M[e.chainId],
                    i = (await t.getPools([
                        [n, e]
                    ], f)).getPool(n, e);
                return !i || i.reserve0.equalTo(0) || i.reserve1.equalTo(0) ? (r.error({
                    weth: n,
                    token: e,
                    reserve0: null == i ? void 0 : i.reserve0.toExact(),
                    reserve1: null == i ? void 0 : i.reserve1.toExact()
                }, `Could not find a valid WETH V2 pool with ${e.symbol} for computing gas costs.`), null) : i
            }

            function t4(e, t) {
                let f = e.slice(2).match(/.{1,2}/g),
                    n = f.length,
                    r = 0;
                for (let e = 0; e < n; e += 1) 0 == parseInt(f[e], 16) ? r += 4 : r += 16;
                return t.add(r).add(1088)
            }
            let t7 = tl.O$.from(0),
                fe = e => {
                    switch (e) {
                        case m.ChainId.MAINNET:
                        case m.ChainId.GOERLI:
                        case m.ChainId.SEPOLIA:
                        case m.ChainId.BLAST:
                        case m.ChainId.BLAST_SEPOLIA:
                        case m.ChainId.OPTIMISM:
                        case m.ChainId.OPTIMISM_GOERLI:
                        case m.ChainId.BNB:
                        case m.ChainId.AVALANCHE:
                        case m.ChainId.BASE:
                        case m.ChainId.BASE_GOERLI:
                            return tl.O$.from(2e3);
                        case m.ChainId.ARBITRUM_ONE:
                        case m.ChainId.ARBITRUM_GOERLI:
                            return tl.O$.from(5e3);
                        case m.ChainId.POLYGON:
                        case m.ChainId.POLYGON_MUMBAI:
                        case m.ChainId.CELO:
                        case m.ChainId.CELO_ALFAJORES:
                        case m.ChainId.GNOSIS:
                        case m.ChainId.MOONBEAM:
                            return tl.O$.from(2e3)
                    }
                },
                ft = e => {
                    switch (e) {
                        case m.ChainId.MAINNET:
                        case m.ChainId.GOERLI:
                        case m.ChainId.SEPOLIA:
                        case m.ChainId.BLAST:
                        case m.ChainId.BLAST_SEPOLIA:
                        case m.ChainId.BNB:
                        case m.ChainId.AVALANCHE:
                        case m.ChainId.OPTIMISM:
                        case m.ChainId.OPTIMISM_GOERLI:
                        case m.ChainId.BASE:
                        case m.ChainId.BASE_GOERLI:
                        case m.ChainId.ARBITRUM_ONE:
                        case m.ChainId.ARBITRUM_GOERLI:
                        case m.ChainId.POLYGON:
                        case m.ChainId.POLYGON_MUMBAI:
                        case m.ChainId.CELO:
                        case m.ChainId.CELO_ALFAJORES:
                        case m.ChainId.GNOSIS:
                        case m.ChainId.MOONBEAM:
                            return tl.O$.from(31e3)
                    }
                },
                ff = e => {
                    switch (e) {
                        case m.ChainId.MAINNET:
                        case m.ChainId.GOERLI:
                        case m.ChainId.SEPOLIA:
                        case m.ChainId.BLAST_SEPOLIA:
                        case m.ChainId.BLAST:
                        case m.ChainId.BNB:
                        case m.ChainId.OPTIMISM:
                        case m.ChainId.OPTIMISM_GOERLI:
                        case m.ChainId.AVALANCHE:
                        case m.ChainId.BASE:
                        case m.ChainId.BASE_GOERLI:
                        case m.ChainId.ARBITRUM_ONE:
                        case m.ChainId.ARBITRUM_GOERLI:
                        case m.ChainId.POLYGON:
                        case m.ChainId.POLYGON_MUMBAI:
                        case m.ChainId.CELO:
                        case m.ChainId.CELO_ALFAJORES:
                        case m.ChainId.GNOSIS:
                        case m.ChainId.MOONBEAM:
                            return tl.O$.from(8e4)
                    }
                },
                fn = e => tl.O$.from(15e3),
                fr = (e, t) => {
                    let f = t.tokenPath,
                        n = tl.O$.from(0);
                    return e == m.ChainId.MAINNET && (f.some(e => e.equals(eo)) && (n = n.add(15e4)), f.some(e => e.equals(es)) && (n = n.add(15e4))), n
                },
                fi = e => tl.O$.from(27938),
                fa = e => tl.O$.from(36e3),
                fo = (e, t, f) => t.isNative ? fi(e) : f.isNative ? fa(e) : tl.O$.from(0);
            class fs extends t3 {
                async buildGasModel({
                    chainId: e,
                    gasPriceWei: t,
                    pools: f,
                    amountToken: n,
                    quoteToken: i,
                    l2GasDataProvider: a,
                    providerConfig: o
                }) {
                    let s = a ? await a.getGasData() : void 0,
                        u = f.usdPool,
                        d = async t => {
                            let n = {
                                    type: y.UNIVERSAL_ROUTER,
                                    recipient: "0x0000000000000000000000000000000000000001",
                                    deadlineOrPreviousBlockhash: 100,
                                    slippageTolerance: new m.Percent(5, 1e4)
                                },
                                a = tl.O$.from(0),
                                o = tl.O$.from(0);
                            [m.ChainId.OPTIMISM, m.ChainId.OPTIMISM_GOERLI, m.ChainId.BASE, m.ChainId.BASE_GOERLI].includes(e) ? [a, o] = this.calculateOptimismToL1SecurityFee(t, n, s) : (e == m.ChainId.ARBITRUM_ONE || e == m.ChainId.ARBITRUM_GOERLI) && ([a, o] = this.calculateArbitrumToL1SecurityFee(t, n, s));
                            let d = M[e],
                                c = $.fromRawAmount(d, o.toString()),
                                l = (u.token0.address == d.address ? u.token0Price : u.token1Price).quote(c),
                                p = c;
                            if (!i.equals(d)) {
                                let e = f.fewNativeQuoteTokenV3Pool;
                                e ? p = (e.token0.address == d.address ? e.token0Price : e.token1Price).quote(c) : (r.info("Could not find a pool to convert the cost into the quote token"), p = $.fromRawAmount(i, 0))
                            }
                            return {
                                gasUsedL1: a,
                                gasCostL1USD: l,
                                gasCostL1QuoteToken: p
                            }
                        },
                        c = M[e];
                    if (i.equals(c)) return {
                        estimateGasCost: f => {
                            let {
                                totalGasCostNativeCurrency: n,
                                baseGasUse: r
                            } = this.estimateGas(f, t, e, o), i = (u.token0.address == c.address ? u.token0Price : u.token1Price).quote(n);
                            return {
                                gasEstimate: r,
                                gasCostInToken: n,
                                gasCostInUSD: i
                            }
                        },
                        calculateL1GasFees: d
                    };
                    let l = f.fewNativeQuoteTokenV3Pool,
                        p = null;
                    n.equals(c) || (p = f.fewNativeAmountTokenV3Pool);
                    let b = u.token0.address == c.address ? u.token1 : u.token0;
                    return {
                        estimateGasCost: (f => {
                            let a;
                            let {
                                totalGasCostNativeCurrency: s,
                                baseGasUse: d
                            } = this.estimateGas(f, t, e, o), y = null;
                            if (l) {
                                let e = l.token0.address == c.address ? l.token0Price : l.token1Price;
                                try {
                                    y = e.quote(s)
                                } catch (t) {
                                    throw r.info({
                                        nativeTokenPriceBase: e.baseCurrency,
                                        nativeTokenPriceQuote: e.quoteCurrency,
                                        gasCostInEth: s.currency
                                    }, "Debug eth price token issue"), t
                                }
                            } else r.info(`Unable to find ${c.symbol} pool with the quote token, ${i.symbol} to produce gas adjusted costs. Using amountToken to calculate gas costs.`);
                            if (p) {
                                let e = new m.Price(f.amount.currency, f.quote.currency, f.amount.quotient, f.quote.quotient),
                                    t = p.token0.address == c.address ? p.token0Price : p.token1Price,
                                    n = t.quote(s),
                                    i = e.quote(n);
                                (null === y || i.lessThan(y.asFraction)) && (r.info({
                                    nativeAmountTokenPrice: t.toSignificant(6),
                                    gasCostInTermsOfQuoteToken: y ? y.toExact() : 0,
                                    gasCostInTermsOfAmountToken: n.toExact(),
                                    executionPrice: e.toSignificant(6),
                                    syntheticGasCostInTermsOfQuoteToken: i.toSignificant(6)
                                }, "New gasCostInTermsOfQuoteToken calculated with synthetic quote token price is less than original"), y = i)
                            }
                            let h = u.token0.address == c.address ? u.token0Price : u.token1Price;
                            try {
                                a = h.quote(s)
                            } catch (e) {
                                throw r.info({
                                    usdT1: u.token0.symbol,
                                    usdT2: u.token1.symbol,
                                    gasCostInNativeToken: s.currency.symbol
                                }, "Failed to compute USD gas price"), e
                            }
                            return null === y ? (r.info(`Unable to find ${c.symbol} pool with the quote token, ${i.symbol}, or amount Token, ${n.symbol} to produce gas adjusted costs. Route will not account for gas.`), {
                                gasEstimate: d,
                                gasCostInToken: $.fromRawAmount(i, 0),
                                gasCostInUSD: $.fromRawAmount(b, 0)
                            }) : {
                                gasEstimate: d,
                                gasCostInToken: y,
                                gasCostInUSD: a
                            }
                        }).bind(this),
                        calculateL1GasFees: d
                    }
                }
                estimateGas(e, t, f, n) {
                    var r;
                    let i = tl.O$.from(Math.max(1, _().sum(e.initializedTicksCrossedList))),
                        a = tl.O$.from(e.route.pools.length),
                        o = ff(f).mul(a);
                    a.eq(1) && (o = o.add(fn(f)));
                    let s = fr(f, e.route),
                        u = ft(f).mul(i),
                        d = t7.mul(0),
                        c = fe(f).add(o).add(s).add(u).add(d).add(null !== (r = null == n ? void 0 : n.additionalGasOverhead) && void 0 !== r ? r : tl.O$.from(0)),
                        l = t.mul(c),
                        p = M[f];
                    return {
                        totalGasCostNativeCurrency: $.fromRawAmount(p, l.toString()),
                        totalInitializedTicksCrossed: i,
                        baseGasUse: c
                    }
                }
                calculateOptimismToL1SecurityFee(e, t, f) {
                    let {
                        l1BaseFee: n,
                        scalar: r,
                        decimals: i,
                        overhead: a
                    } = f, o = e[0], s = t4(tH(t$(o.tradeType == m.TradeType.EXACT_INPUT ? o.amount.currency : o.quote.currency, o.tradeType == m.TradeType.EXACT_INPUT ? o.quote.currency : o.amount.currency, o.tradeType, e), t, m.ChainId.OPTIMISM).calldata, a), u = s.mul(n).mul(r), d = tl.O$.from(10).pow(i);
                    return [s, u.div(d)]
                }
                calculateArbitrumToL1SecurityFee(e, t, f) {
                    let {
                        perL2TxFee: n,
                        perL1CalldataFee: r
                    } = f, i = e[0], a = t4(tH(t$(i.tradeType == m.TradeType.EXACT_INPUT ? i.amount.currency : i.quote.currency, i.tradeType == m.TradeType.EXACT_INPUT ? i.quote.currency : i.amount.currency, i.tradeType, e), t, m.ChainId.ARBITRUM_ONE).calldata, tl.O$.from(0)), o = a.mul(r);
                    return [a, o = o.add(n)]
                }
                constructor() {
                    super()
                }
            }
            async function fu(e, t, f, n, i, a, s, u, d) {
                let c = Date.now(),
                    {
                        forceMixedRoutes: l
                    } = a;
                if (l && (r.info({
                        forceMixedRoutes: l
                    }, "Forcing mixed routes by filtering out other route types"), !(f = _().filter(f, e => e.protocol === tb.Protocol.MIXED)))) return null;
                let p = {};
                for (let e of f) p[e.percent] || (p[e.percent] = []), p[e.percent].push(e);
                w.putMetric("BuildRouteWithValidQuoteObjects", Date.now() - c, o.Milliseconds);
                let y = await fd(n, p, t, i, e => e.quoteAdjustedForGas, a, s, u, d);
                if (!y) return null;
                let {
                    routes: b
                } = y, h = _().reduce(b, (e, t) => e.add(t.amount), $.fromRawAmount(b[0].amount.currency, 0)), m = e.subtract(h);
                return m.greaterThan(0) && (r.info({
                    missingAmount: m.quotient.toString()
                }, "Optimal route's amounts did not equal exactIn/exactOut total. Adding missing amount to last route in array."), b[b.length - 1].amount = b[b.length - 1].amount.add(m)), r.info({
                    routes: z(b),
                    numSplits: b.length,
                    amount: e.toExact(),
                    quote: y.quote.toExact(),
                    quoteGasAdjusted: y.quoteGasAdjusted.toFixed(Math.min(y.quoteGasAdjusted.currency.decimals, 2)),
                    estimatedGasUSD: y.estimatedGasUsedUSD.toFixed(Math.min(y.estimatedGasUsedUSD.currency.decimals, 2)),
                    estimatedGasToken: y.estimatedGasUsedQuoteToken.toFixed(Math.min(y.estimatedGasUsedQuoteToken.currency.decimals, 2))
                }, `Found best swap route. ${b.length} split.`), y
            }
            async function fd(e, t, f, n, i, a, s, u, d) {
                var c;
                let l, p;
                let y = _().mapValues(t, t => t.sort((t, f) => e == m.TradeType.EXACT_INPUT ? i(t).greaterThan(i(f)) ? -1 : 1 : i(t).lessThan(i(f)) ? -1 : 1)),
                    b = e == m.TradeType.EXACT_INPUT ? (e, t) => e.greaterThan(t) : (e, t) => e.lessThan(t),
                    h = e => {
                        let t = e[0];
                        for (let f = 1; f < e.length; f++) t = t.add(e[f]);
                        return t
                    },
                    v = new(tZ())(Array, (e, t) => b(e.quote, t.quote) ? -1 : 1, 3),
                    {
                        minSplits: T,
                        maxSplits: g,
                        forceCrossProtocol: A
                    } = a;
                if (!y[100] || T > 1 || A) r.info({
                    percentToSortedQuotes: _().mapValues(y, e => e.length)
                }, "Did not find a valid route without any splits. Continuing search anyway.");
                else
                    for (let e of (l = i(y[100][0]), p = [y[100][0]], y[100].slice(0, 5))) v.push({
                        quote: i(e),
                        routes: [e]
                    });
                let I = new(t1());
                for (let e = f.length; e >= 0; e--) {
                    let t = f[e];
                    y[t] && (I.enqueue({
                        curRoutes: [y[t][0]],
                        percentIndex: e,
                        remainingPercent: 100 - t,
                        special: !1
                    }), y[t] && y[t][1] && I.enqueue({
                        curRoutes: [y[t][1]],
                        percentIndex: e,
                        remainingPercent: 100 - t,
                        special: !0
                    }))
                }
                let E = 1,
                    k = Date.now();
                for (; I.size > 0;) {
                    w.putMetric(`Split${E}Done`, Date.now() - k, o.Milliseconds), k = Date.now(), r.info({
                        top5: _().map(Array.from(v.consume()), e => `${e.quote.toExact()} (${_()(e.routes).map(e=>e.toString()).join(", ")})`),
                        onQueue: I.size
                    }, `Top 3 with ${E} splits`), v.clear();
                    let t = I.size;
                    if (++E >= 3 && p && p.length < E - 1) break;
                    if (E > g) {
                        r.info("Max splits reached. Stopping search."), w.putMetric("MaxSplitsHitReached", 1, o.Count);
                        break
                    }
                    for (; t > 0;) {
                        t--;
                        let {
                            remainingPercent: r,
                            curRoutes: a,
                            percentIndex: s,
                            special: d
                        } = I.dequeue();
                        for (let t = s; t >= 0; t--) {
                            let s = f[t];
                            if (s > r || !y[s]) continue;
                            let c = fc(a, y[s], A);
                            if (!c) continue;
                            let g = r - s,
                                k = [...a, c];
                            if (0 == g && E >= T) {
                                let t = h(_().map(k, e => i(e))),
                                    f = $.fromRawAmount(t.currency, 0);
                                if (C.includes(n)) {
                                    let e = k.every(e => e.protocol == tb.Protocol.V3);
                                    if (void 0 != u && e) f = (await u.calculateL1GasFees(k)).gasCostL1QuoteToken;
                                    else throw Error("Can't compute L1 gas fees.")
                                }
                                let r = e == m.TradeType.EXACT_INPUT ? t.subtract(f) : t.add(f);
                                v.push({
                                    quote: r,
                                    routes: k
                                }), (!l || b(r, l)) && (l = r, p = k, d && w.putMetric("BestSwapNotPickingBestForPercent", 1, o.Count))
                            } else I.enqueue({
                                curRoutes: k,
                                remainingPercent: g,
                                percentIndex: t,
                                special: d
                            })
                        }
                    }
                }
                if (!p) {
                    r.info("Could not find a valid swap");
                    return
                }
                let S = Date.now(),
                    O = h(_().map(p, e => e.quoteAdjustedForGas)),
                    P = _()(p).map(e => e.gasEstimate).reduce((e, t) => e.add(t), tl.O$.from(0));
                if (!t6[n] || !t6[n][0]) throw Error(`Could not find a USD token for computing gas costs on ${n}`);
                let M = t6[n][0],
                    x = M.decimals,
                    R = {
                        gasUsedL1: tl.O$.from(0),
                        gasCostL1USD: $.fromRawAmount(M, 0),
                        gasCostL1QuoteToken: $.fromRawAmount(null === (c = p[0]) || void 0 === c ? void 0 : c.quoteToken, 0)
                    };
                if (C.includes(n)) {
                    let e = p.every(e => e.protocol == tb.Protocol.V3);
                    if (void 0 != u && e) R = await u.calculateL1GasFees(p);
                    else throw Error("Can't compute L1 gas fees.")
                }
                let {
                    gasCostL1USD: F,
                    gasCostL1QuoteToken: D
                } = R, N = h(_()(p).map(e => {
                    let t = x - e.gasCostInUSD.currency.decimals;
                    return 0 == t ? $.fromRawAmount(M, e.gasCostInUSD.quotient) : $.fromRawAmount(M, j().multiply(e.gasCostInUSD.quotient, j().exponentiate(j().BigInt(10), j().BigInt(t))))
                }).value());
                if (N.currency != F.currency) {
                    let e = x - F.currency.decimals;
                    N = N.add($.fromRawAmount(M, j().multiply(F.quotient, j().exponentiate(j().BigInt(10), j().BigInt(e)))))
                } else N = N.add(F);
                r.info({
                    estimatedGasUsedUSD: N.toExact(),
                    normalizedUsdToken: M,
                    routeUSDGasEstimates: _().map(p, e => `${e.percent}% ${X(e.route)} ${e.gasCostInUSD.toExact()}`),
                    flatL1GasCostUSD: F.toExact()
                }, "USD gas estimates of best route");
                let B = h(_().map(p, e => e.gasCostInToken)).add(D),
                    L = h(_().map(p, e => e.quote));
                O = e == m.TradeType.EXACT_INPUT ? O.subtract(D) : O.add(D);
                let q = p.sort((e, t) => t.amount.greaterThan(e.amount) ? 1 : -1);
                return w.putMetric("PostSplitDone", Date.now() - S, o.Milliseconds), {
                    quote: L,
                    quoteGasAdjusted: O,
                    estimatedGasUsed: P,
                    estimatedGasUsedUSD: N,
                    estimatedGasUsedQuoteToken: B,
                    routes: s.getRouteWithQuotePortionAdjusted(e, q, d)
                }
            }
            let fc = (e, t, f) => {
                    let n = new Set;
                    for (let t of _()(e).flatMap(e => e.poolAddresses).value()) n.add(t);
                    let r = new Set;
                    for (let t of _()(e).flatMap(e => e.protocol).uniq().value()) r.add(t);
                    for (let e of t) {
                        let {
                            poolAddresses: t,
                            protocol: i
                        } = e;
                        if (!(t.some(e => n.has(e)) || f && 1 == r.size && r.has(i))) return e
                    }
                    return null
                },
                fl = {
                    [m.ChainId.MAINNET]: [ef, en, er, ei, M[1], ea],
                    [m.ChainId.OPTIMISM]: [ex, eO, eP, eM],
                    [m.ChainId.GOERLI]: [x[m.ChainId.GOERLI], e_],
                    [m.ChainId.BLAST_SEPOLIA]: [x[m.ChainId.BLAST_SEPOLIA], ek],
                    [m.ChainId.BLAST]: [x[m.ChainId.BLAST], eC, em],
                    [m.ChainId.SEPOLIA]: [ed, eu],
                    [m.ChainId.OPTIMISM_GOERLI]: [eB, eF, eD, eN],
                    [m.ChainId.ARBITRUM_ONE]: [eV, eL, eU, eq],
                    [m.ChainId.ARBITRUM_GOERLI]: [ej],
                    [m.ChainId.POLYGON]: [eW, e$],
                    [m.ChainId.POLYGON_MUMBAI]: [eX, eQ],
                    [m.ChainId.CELO]: [e5, e2, e1],
                    [m.ChainId.CELO_ALFAJORES]: [e9, e4, e8],
                    [m.ChainId.GNOSIS]: [tr, tn, tf],
                    [m.ChainId.MOONBEAM]: [to, ti, ts, ta],
                    [m.ChainId.BNB]: [eY, eZ, e0],
                    [m.ChainId.AVALANCHE]: [e7, te],
                    [m.ChainId.BASE]: [tt]
                },
                fp = class {
                    hasEnoughPools() {
                        return this.pools.length >= this.poolsNeeded
                    }
                    constructor(e, t) {
                        this.pools = e, this.poolsNeeded = t
                    }
                };
            async function fy({
                tokenIn: e,
                tokenOut: t,
                routeType: f,
                routingConfig: n,
                subgraphProvider: i,
                tokenProvider: a,
                poolProvider: s,
                blockedTokenListProvider: u,
                chainId: c
            }) {
                var l, p, y, b, h;
                let {
                    blockNumber: v,
                    v3PoolSelection: {
                        topN: T,
                        topNDirectSwaps: g,
                        topNTokenInOut: A,
                        topNSecondHop: I,
                        topNSecondHopForTokenAddress: E,
                        tokensToAvoidOnSecondHops: C,
                        topNWithEachBaseToken: S,
                        topNWithBaseToken: O
                    }
                } = n, P = e.address.toLowerCase(), M = t.address.toLowerCase(), R = Date.now(), F = await i.getPools(e, t, {
                    blockNumber: v
                });
                for (let e of (r.info({
                        samplePools: F.slice(0, 3)
                    }, "Got all pools from V3 subgraph provider"), F)) e.token0.id = e.token0.id.toLowerCase(), e.token1.id = e.token1.id.toLowerCase();
                w.putMetric("V3SubgraphPoolsLoad", Date.now() - R, o.Milliseconds);
                let D = Date.now(),
                    N = F;
                if (u)
                    for (let e of (N = [], F)) {
                        let t = await u.hasTokenByAddress(e.token0.id),
                            f = await u.hasTokenByAddress(e.token1.id);
                        t || f || N.push(e)
                    }
                let B = N.sort((e, t) => t.tvlUSD - e.tvlUSD);
                r.info(`After filtering blocked tokens went from ${F.length} to ${B.length}.`);
                let L = new Set,
                    q = e => {
                        _()(e).map(e => e.id).forEach(e => L.add(e))
                    },
                    U = null !== (l = fl[c]) && void 0 !== l ? l : [],
                    V = _()(U).flatMap(e => _()(B).filter(t => {
                        let f = e.address.toLowerCase();
                        return t.token0.id == f && t.token1.id == P || t.token1.id == f && t.token0.id == P
                    }).sortBy(e => -e.tvlUSD).slice(0, S).value()).sortBy(e => -e.tvlUSD).slice(0, O).value(),
                    G = _()(U).flatMap(e => _()(B).filter(t => {
                        let f = e.address.toLowerCase();
                        return t.token0.id == f && t.token1.id == M || t.token1.id == f && t.token0.id == M
                    }).sortBy(e => -e.tvlUSD).slice(0, S).value()).sortBy(e => -e.tvlUSD).slice(0, O).value(),
                    j = _()(B).filter(e => !L.has(e.id) && (e.token0.id == P && e.token1.id == M || e.token1.id == P && e.token0.id == M)).slice(0, g).value();
                0 == j.length && g > 0 && (j = _().map([k.FeeAmount.HIGH, k.FeeAmount.MEDIUM, k.FeeAmount.LOW, k.FeeAmount.LOWEST], f => {
                    let {
                        token0: n,
                        token1: r,
                        poolAddress: i
                    } = s.getPoolAddress(e, t, f);
                    return {
                        id: i,
                        feeTier: H(f),
                        liquidity: "10000",
                        token0: {
                            id: n.address
                        },
                        token1: {
                            id: r.address
                        },
                        tvlETH: 1e4,
                        tvlUSD: 1e4
                    }
                })), q(j);
                let $ = null === (p = x[c]) || void 0 === p ? void 0 : p.address.toLowerCase(),
                    W = [];
                ((null === (y = x[c]) || void 0 === y ? void 0 : y.symbol) == (null === (b = x[m.ChainId.MAINNET]) || void 0 === b ? void 0 : b.symbol) && "fwWETH" != t.symbol && "WETH" != t.symbol && "WETH9" != t.symbol && "ETH" != t.symbol || (null === (h = x[c]) || void 0 === h ? void 0 : h.symbol) == e$.symbol && "MATIC" != t.symbol && "WMATIC" != t.symbol) && (W = _()(B).filter(e => f == m.TradeType.EXACT_INPUT ? e.token0.id == $ && e.token1.id == M || e.token1.id == $ && e.token0.id == M : e.token0.id == $ && e.token1.id == P || e.token1.id == $ && e.token0.id == P).slice(0, 1).value()), q(W);
                let Q = _()(B).filter(e => !L.has(e.id)).slice(0, T).value();
                q(Q);
                let X = _()(B).filter(e => !L.has(e.id) && (e.token0.id == P || e.token1.id == P)).slice(0, A).value();
                q(X);
                let z = _()(B).filter(e => !L.has(e.id) && (e.token0.id == M || e.token1.id == M)).slice(0, A).value();
                q(z);
                let K = _()(X).map(e => P == e.token0.id ? e.token1.id : e.token0.id).flatMap(e => {
                    var t;
                    return _()(B).filter(t => !L.has(t.id) && !(null == C ? void 0 : C.includes(e.toLowerCase())) && (t.token0.id == e || t.token1.id == e)).slice(0, null !== (t = null == E ? void 0 : E.get(e)) && void 0 !== t ? t : I).value()
                }).uniqBy(e => e.id).value();
                q(K);
                let Y = _()(z).map(e => M == e.token0.id ? e.token1.id : e.token0.id).flatMap(e => {
                    var t;
                    return _()(B).filter(t => !L.has(t.id) && !(null == C ? void 0 : C.includes(e.toLowerCase())) && (t.token0.id == e || t.token1.id == e)).slice(0, null !== (t = null == E ? void 0 : E.get(e)) && void 0 !== t ? t : I).value()
                }).uniqBy(e => e.id).value();
                q(Y);
                let J = _()([...V, ...G, ...j, ...W, ...Q, ...X, ...z, ...K, ...Y]).compact().uniqBy(e => e.id).value(),
                    Z = _()(J).flatMap(e => [e.token0.id, e.token1.id]).compact().uniq().value();
                r.info(`Getting the ${Z.length} tokens within the ${J.length} V3 pools we are considering`);
                let ee = await a.getTokens(Z, {
                        blockNumber: v
                    }),
                    et = e => {
                        var t, f, n, r;
                        return `${null!==(f=null===(t=ee.getTokenByAddress(e.token0.id))||void 0===t?void 0:t.symbol)&&void 0!==f?f:e.token0.id}/${null!==(r=null===(n=ee.getTokenByAddress(e.token1.id))||void 0===n?void 0:n.symbol)&&void 0!==r?r:e.token1.id}/${e.feeTier}`
                    };
                r.info({
                    topByBaseWithTokenIn: V.map(et),
                    topByBaseWithTokenOut: G.map(et),
                    topByTVL: Q.map(et),
                    topByTVLUsingTokenIn: X.map(et),
                    topByTVLUsingTokenOut: z.map(et),
                    topByTVLUsingTokenInSecondHops: K.map(et),
                    topByTVLUsingTokenOutSecondHops: Y.map(et),
                    top2DirectSwap: j.map(et),
                    top2EthQuotePool: W.map(et)
                }, "V3 Candidate Pools");
                let ef = _().map(J, e => {
                        let t;
                        let f = ee.getTokenByAddress(e.token0.id),
                            n = ee.getTokenByAddress(e.token1.id);
                        try {
                            t = function(e) {
                                switch (e) {
                                    case "10000":
                                        return k.FeeAmount.HIGH;
                                    case "3000":
                                        return k.FeeAmount.MEDIUM;
                                    case "500":
                                        return k.FeeAmount.LOW;
                                    case "100":
                                        return k.FeeAmount.LOWEST;
                                    default:
                                        throw Error(`Fee amount ${e} not supported.`)
                                }
                            }(e.feeTier)
                        } catch (t) {
                            r.info({
                                subgraphPool: e
                            }, `Dropping candidate pool for ${e.token0.id}/${e.token1.id}/${e.feeTier} because fee tier not supported`);
                            return
                        }
                        if (!f || !n) {
                            r.info(`Dropping candidate pool for ${e.token0.id}/${e.token1.id}/${t} because ${f?e.token1.id:e.token0.id} not found by token provider`);
                            return
                        }
                        return [f, n, t]
                    }),
                    en = _().compact(ef);
                w.putMetric("V3PoolsFilterLoad", Date.now() - D, o.Milliseconds);
                let er = Date.now(),
                    ei = await s.getPools(en, {
                        blockNumber: v
                    });
                return w.putMetric("V3PoolsLoad", Date.now() - er, o.Milliseconds), {
                    poolAccessor: ei,
                    candidatePools: {
                        protocol: d.V3,
                        selections: {
                            topByBaseWithTokenIn: V,
                            topByBaseWithTokenOut: G,
                            topByDirectSwapPool: j,
                            topByEthQuoteTokenPool: W,
                            topByTVL: Q,
                            topByTVLUsingTokenIn: X,
                            topByTVLUsingTokenOut: z,
                            topByTVLUsingTokenInSecondHops: K,
                            topByTVLUsingTokenOutSecondHops: Y
                        }
                    },
                    subgraphPools: J
                }
            }
            async function fb({
                tokenIn: e,
                tokenOut: t,
                routeType: f,
                routingConfig: n,
                subgraphProvider: i,
                tokenProvider: a,
                poolProvider: s,
                blockedTokenListProvider: u,
                chainId: c
            }) {
                var l;
                let {
                    blockNumber: p,
                    v2PoolSelection: {
                        topN: y,
                        topNDirectSwaps: b,
                        topNTokenInOut: h,
                        topNSecondHop: v,
                        tokensToAvoidOnSecondHops: T,
                        topNWithEachBaseToken: g,
                        topNWithBaseToken: A
                    }
                } = n, I = e.address.toLowerCase(), E = t.address.toLowerCase(), k = Date.now(), C = await i.getPools(e, t, {
                    blockNumber: p
                });
                for (let e of C) e.token0.id = e.token0.id.toLowerCase(), e.token1.id = e.token1.id.toLowerCase();
                w.putMetric("V2SubgraphPoolsLoad", Date.now() - k, o.Milliseconds);
                let S = Date.now(),
                    O = C.sort((e, t) => t.reserve - e.reserve),
                    P = new Set,
                    M = [];
                if (b > 0) {
                    let {
                        token0: f,
                        token1: n,
                        poolAddress: r
                    } = s.getPoolAddress(e, t);
                    P.add(r.toLowerCase()), M = [{
                        id: r,
                        token0: {
                            id: f.address
                        },
                        token1: {
                            id: n.address
                        },
                        supply: 1e4,
                        reserve: 1e4,
                        reserveUSD: 1e4
                    }]
                }
                let R = x[c].address.toLowerCase(),
                    F = new Map,
                    D = new Map,
                    N = null !== (l = fl[c]) && void 0 !== l ? l : [],
                    B = new Set;
                N.forEach(e => {
                    let t = e.address.toLowerCase();
                    B.add(t), F.set(t, new fp([], g)), D.set(t, new fp([], g))
                });
                let L = 0,
                    q = 0,
                    U = 1;
                ("fwWETH" == t.symbol || "WETH" == t.symbol || "WETH9" == t.symbol || "ETH" == t.symbol) && (U = 0);
                let V = [],
                    G = [],
                    j = [],
                    $ = [],
                    H = 0;
                for (let e of O) {
                    if (H += 1, L >= A && q >= A && V.length >= U && $.length >= y && G.length >= h && j.length >= h) break;
                    if (P.has(e.id)) continue;
                    if (u) {
                        let [t, f] = await Promise.all([u.hasTokenByAddress(e.token0.id), u.hasTokenByAddress(e.token1.id)]);
                        if (t || f) continue
                    }
                    let t = F.get(e.token0.id);
                    if (L < A && t && e.token0.id != E && e.token1.id == I) {
                        L += 1, P.add(e.id), G.length < h && G.push(e), f === m.TradeType.EXACT_OUTPUT && e.token0.id == R && V.push(e), t.pools.push(e);
                        continue
                    }
                    let n = F.get(e.token1.id);
                    if (L < A && n && e.token0.id == I && e.token1.id != E) {
                        L += 1, P.add(e.id), G.length < h && G.push(e), f === m.TradeType.EXACT_OUTPUT && e.token1.id == R && V.push(e), n.pools.push(e);
                        continue
                    }
                    let r = D.get(e.token0.id);
                    if (q < A && r && e.token0.id != I && e.token1.id == E) {
                        q += 1, P.add(e.id), j.length < h && j.push(e), f === m.TradeType.EXACT_INPUT && e.token0.id == R && V.push(e), r.pools.push(e);
                        continue
                    }
                    let i = D.get(e.token1.id);
                    if (q < A && i && e.token0.id == E && e.token1.id != I) {
                        q += 1, P.add(e.id), j.length < h && j.push(e), f === m.TradeType.EXACT_INPUT && e.token1.id == R && V.push(e), i.pools.push(e);
                        continue
                    }
                    if (V.length < U && (f === m.TradeType.EXACT_INPUT && (e.token0.id == R && e.token1.id == E || e.token1.id == R && e.token0.id == E) || f === m.TradeType.EXACT_OUTPUT && (e.token0.id == R && e.token1.id == I || e.token1.id == R && e.token0.id == I))) {
                        P.add(e.id), V.push(e);
                        continue
                    }
                    if ($.length < y) {
                        P.add(e.id), $.push(e);
                        continue
                    }
                    if (G.length < h && (e.token0.id == I || e.token1.id == I)) {
                        P.add(e.id), G.push(e);
                        continue
                    }
                    if (j.length < h && (e.token0.id == E || e.token1.id == E)) {
                        P.add(e.id), j.push(e);
                        continue
                    }
                }
                w.putMetric("V2SubgraphLoopsInFirstIteration", H, o.Count);
                let W = [];
                for (let e of F.values()) W.push(...e.pools);
                let Q = [];
                for (let e of D.values()) Q.push(...e.pools);
                let X = new Map,
                    z = new Map,
                    K = G.filter(e => I === e.token0.id ? !(null == T ? void 0 : T.includes(e.token1.id.toLowerCase())) : !(null == T ? void 0 : T.includes(e.token0.id.toLowerCase()))).map(e => I === e.token0.id ? e.token1.id : e.token0.id),
                    Y = j.filter(e => E === e.token0.id ? !(null == T ? void 0 : T.includes(e.token1.id.toLowerCase())) : !(null == T ? void 0 : T.includes(e.token0.id.toLowerCase()))).map(e => E === e.token0.id ? e.token1.id : e.token0.id);
                for (let e of K) X.set(e, new fp([], v));
                for (let e of Y) z.set(e, new fp([], v));
                let J = 0;
                if (K.length > 0 || Y.length > 0)
                    for (let e of O) {
                        J += 1;
                        let t = !0;
                        for (let e of X.values())
                            if (!e.hasEnoughPools()) {
                                t = !1;
                                break
                            }
                        let f = !0;
                        for (let e of z.values())
                            if (!e.hasEnoughPools()) {
                                f = !1;
                                break
                            }
                        if (t && f) break;
                        if (P.has(e.id)) continue;
                        if (u) {
                            let [t, f] = await Promise.all([u.hasTokenByAddress(e.token0.id), u.hasTokenByAddress(e.token1.id)]);
                            if (t || f) continue
                        }
                        let n = X.get(e.token0.id);
                        if (n && !n.hasEnoughPools()) {
                            P.add(e.id), n.pools.push(e);
                            continue
                        }
                        let r = X.get(e.token1.id);
                        if (r && !r.hasEnoughPools()) {
                            P.add(e.id), r.pools.push(e);
                            continue
                        }
                        let i = z.get(e.token0.id);
                        if (i && !i.hasEnoughPools()) {
                            P.add(e.id), i.pools.push(e);
                            continue
                        }
                        let a = z.get(e.token1.id);
                        if (a && !a.hasEnoughPools()) {
                            P.add(e.id), a.pools.push(e);
                            continue
                        }
                    }
                w.putMetric("V2SubgraphLoopsInSecondIteration", J, o.Count);
                let Z = [];
                for (let e of X.values()) Z.push(...e.pools);
                let ee = [];
                for (let e of z.values()) ee.push(...e.pools);
                let et = _()([...W, ...Q, ...M, ...V, ...$, ...G, ...j, ...Z, ...ee]).uniqBy(e => e.id).value(),
                    ef = new Set;
                for (let e of et) ef.add(e.token0.id), ef.add(e.token1.id);
                let en = Array.from(ef);
                r.info(`Getting the ${en.length} tokens within the ${et.length} V2 pools we are considering`);
                let er = await a.getTokens(en, {
                        blockNumber: p
                    }),
                    ei = e => {
                        var t, f, n, r;
                        return `${null!==(f=null===(t=er.getTokenByAddress(e.token0.id))||void 0===t?void 0:t.symbol)&&void 0!==f?f:e.token0.id}/${null!==(r=null===(n=er.getTokenByAddress(e.token1.id))||void 0===n?void 0:n.symbol)&&void 0!==r?r:e.token1.id}`
                    };
                r.info({
                    topByBaseWithTokenIn: W.map(ei),
                    topByBaseWithTokenOut: Q.map(ei),
                    topByTVL: $.map(ei),
                    topByTVLUsingTokenIn: G.map(ei),
                    topByTVLUsingTokenOut: j.map(ei),
                    topByTVLUsingTokenInSecondHops: Z.map(ei),
                    topByTVLUsingTokenOutSecondHops: ee.map(ei),
                    top2DirectSwap: M.map(ei),
                    top2EthQuotePool: V.map(ei)
                }, "V2 Candidate pools");
                let ea = _().map(et, e => {
                        let t = er.getTokenByAddress(e.token0.id),
                            f = er.getTokenByAddress(e.token1.id);
                        if (!t || !f) {
                            r.info(`Dropping candidate pool for ${e.token0.id}/${e.token1.id}`);
                            return
                        }
                        return [t, f]
                    }),
                    eo = _().compact(ea);
                w.putMetric("V2PoolsFilterLoad", Date.now() - S, o.Milliseconds);
                let es = Date.now(),
                    eu = await s.getPools(eo, n);
                return w.putMetric("V2PoolsLoad", Date.now() - es, o.Milliseconds), {
                    poolAccessor: eu,
                    candidatePools: {
                        protocol: d.V2,
                        selections: {
                            topByBaseWithTokenIn: W,
                            topByBaseWithTokenOut: Q,
                            topByDirectSwapPool: M,
                            topByEthQuoteTokenPool: V,
                            topByTVL: $,
                            topByTVLUsingTokenIn: G,
                            topByTVLUsingTokenOut: j,
                            topByTVLUsingTokenInSecondHops: Z,
                            topByTVLUsingTokenOutSecondHops: ee
                        }
                    },
                    subgraphPools: et
                }
            }
            async function fh({
                tokenIn: e,
                tokenOut: t,
                routeType: f,
                routingConfig: n,
                subgraphProvider: i,
                tokenProvider: a,
                poolProvider: s,
                blockedTokenListProvider: u,
                chainId: c
            }) {
                var l;
                let {
                    blockNumber: p,
                    v2PoolSelection: {
                        topN: y,
                        topNDirectSwaps: b,
                        topNTokenInOut: h,
                        topNSecondHop: v,
                        tokensToAvoidOnSecondHops: T,
                        topNWithEachBaseToken: g,
                        topNWithBaseToken: A
                    }
                } = n, I = e.address.toLowerCase(), E = t.address.toLowerCase(), k = Date.now(), C = await i.getPools(e, t, {
                    blockNumber: p
                });
                for (let e of C) e.token0.id = e.token0.id.toLowerCase(), e.token1.id = e.token1.id.toLowerCase();
                w.putMetric("RingSubgraphPoolsLoad", Date.now() - k, o.Milliseconds);
                let S = Date.now(),
                    O = C.sort((e, t) => t.reserve - e.reserve),
                    P = new Set,
                    M = [];
                if (b > 0) {
                    let {
                        token0: f,
                        token1: n,
                        poolAddress: r
                    } = s.getPoolAddress(e, t);
                    P.add(r.toLowerCase()), M = [{
                        id: r,
                        token0: {
                            id: f.address
                        },
                        token1: {
                            id: n.address
                        },
                        supply: 1e4,
                        reserve: 1e4,
                        reserveUSD: 1e4
                    }]
                }
                let R = x[c].address.toLowerCase(),
                    F = new Map,
                    D = new Map,
                    N = null !== (l = fl[c]) && void 0 !== l ? l : [],
                    B = new Set;
                N.forEach(e => {
                    let t = e.address.toLowerCase();
                    B.add(t), F.set(t, new fp([], g)), D.set(t, new fp([], g))
                });
                let L = 0,
                    q = 0,
                    U = 1;
                ("fwWETH" == t.symbol || "WETH" == t.symbol || "WETH9" == t.symbol || "ETH" == t.symbol) && (U = 0);
                let V = [],
                    G = [],
                    j = [],
                    $ = [],
                    H = 0;
                for (let e of O) {
                    if (H += 1, L >= A && q >= A && V.length >= U && $.length >= y && G.length >= h && j.length >= h) break;
                    if (P.has(e.id)) continue;
                    if (u) {
                        let [t, f] = await Promise.all([u.hasTokenByAddress(e.token0.id), u.hasTokenByAddress(e.token1.id)]);
                        if (t || f) continue
                    }
                    let t = F.get(e.token0.id);
                    if (L < A && t && e.token0.id != E && e.token1.id == I) {
                        L += 1, P.add(e.id), G.length < h && G.push(e), f === m.TradeType.EXACT_OUTPUT && e.token0.id == R && V.push(e), t.pools.push(e);
                        continue
                    }
                    let n = F.get(e.token1.id);
                    if (L < A && n && e.token0.id == I && e.token1.id != E) {
                        L += 1, P.add(e.id), G.length < h && G.push(e), f === m.TradeType.EXACT_OUTPUT && e.token1.id == R && V.push(e), n.pools.push(e);
                        continue
                    }
                    let r = D.get(e.token0.id);
                    if (q < A && r && e.token0.id != I && e.token1.id == E) {
                        q += 1, P.add(e.id), j.length < h && j.push(e), f === m.TradeType.EXACT_INPUT && e.token0.id == R && V.push(e), r.pools.push(e);
                        continue
                    }
                    let i = D.get(e.token1.id);
                    if (q < A && i && e.token0.id == E && e.token1.id != I) {
                        q += 1, P.add(e.id), j.length < h && j.push(e), f === m.TradeType.EXACT_INPUT && e.token1.id == R && V.push(e), i.pools.push(e);
                        continue
                    }
                    if (V.length < U && (f === m.TradeType.EXACT_INPUT && (e.token0.id == R && e.token1.id == E || e.token1.id == R && e.token0.id == E) || f === m.TradeType.EXACT_OUTPUT && (e.token0.id == R && e.token1.id == I || e.token1.id == R && e.token0.id == I))) {
                        P.add(e.id), V.push(e);
                        continue
                    }
                    if ($.length < y) {
                        P.add(e.id), $.push(e);
                        continue
                    }
                    if (G.length < h && (e.token0.id == I || e.token1.id == I)) {
                        P.add(e.id), G.push(e);
                        continue
                    }
                    if (j.length < h && (e.token0.id == E || e.token1.id == E)) {
                        P.add(e.id), j.push(e);
                        continue
                    }
                }
                w.putMetric("RingSubgraphLoopsInFirstIteration", H, o.Count);
                let W = [];
                for (let e of F.values()) W.push(...e.pools);
                let Q = [];
                for (let e of D.values()) Q.push(...e.pools);
                let X = new Map,
                    z = new Map,
                    K = G.filter(e => I === e.token0.id ? !(null == T ? void 0 : T.includes(e.token1.id.toLowerCase())) : !(null == T ? void 0 : T.includes(e.token0.id.toLowerCase()))).map(e => I === e.token0.id ? e.token1.id : e.token0.id),
                    Y = j.filter(e => E === e.token0.id ? !(null == T ? void 0 : T.includes(e.token1.id.toLowerCase())) : !(null == T ? void 0 : T.includes(e.token0.id.toLowerCase()))).map(e => E === e.token0.id ? e.token1.id : e.token0.id);
                for (let e of K) X.set(e, new fp([], v));
                for (let e of Y) z.set(e, new fp([], v));
                let J = 0;
                if (K.length > 0 || Y.length > 0)
                    for (let e of O) {
                        J += 1;
                        let t = !0;
                        for (let e of X.values())
                            if (!e.hasEnoughPools()) {
                                t = !1;
                                break
                            }
                        let f = !0;
                        for (let e of z.values())
                            if (!e.hasEnoughPools()) {
                                f = !1;
                                break
                            }
                        if (t && f) break;
                        if (P.has(e.id)) continue;
                        if (u) {
                            let [t, f] = await Promise.all([u.hasTokenByAddress(e.token0.id), u.hasTokenByAddress(e.token1.id)]);
                            if (t || f) continue
                        }
                        let n = X.get(e.token0.id);
                        if (n && !n.hasEnoughPools()) {
                            P.add(e.id), n.pools.push(e);
                            continue
                        }
                        let r = X.get(e.token1.id);
                        if (r && !r.hasEnoughPools()) {
                            P.add(e.id), r.pools.push(e);
                            continue
                        }
                        let i = z.get(e.token0.id);
                        if (i && !i.hasEnoughPools()) {
                            P.add(e.id), i.pools.push(e);
                            continue
                        }
                        let a = z.get(e.token1.id);
                        if (a && !a.hasEnoughPools()) {
                            P.add(e.id), a.pools.push(e);
                            continue
                        }
                    }
                w.putMetric("V2SubgraphLoopsInSecondIteration", J, o.Count);
                let Z = [];
                for (let e of X.values()) Z.push(...e.pools);
                let ee = [];
                for (let e of z.values()) ee.push(...e.pools);
                let et = _()([...W, ...Q, ...M, ...V, ...$, ...G, ...j, ...Z, ...ee]).uniqBy(e => e.id).value(),
                    ef = new Set;
                for (let e of et) ef.add(e.token0.id), ef.add(e.token1.id);
                let en = Array.from(ef);
                r.info(`Getting the ${en.length} tokens within the ${et.length} V2 pools we are considering`);
                let er = await a.getTokens(en, {
                        blockNumber: p
                    }),
                    ei = e => {
                        var t, f, n, r;
                        return `${null!==(f=null===(t=er.getTokenByAddress(e.token0.id))||void 0===t?void 0:t.symbol)&&void 0!==f?f:e.token0.id}/${null!==(r=null===(n=er.getTokenByAddress(e.token1.id))||void 0===n?void 0:n.symbol)&&void 0!==r?r:e.token1.id}`
                    };
                r.info({
                    topByBaseWithTokenIn: W.map(ei),
                    topByBaseWithTokenOut: Q.map(ei),
                    topByTVL: $.map(ei),
                    topByTVLUsingTokenIn: G.map(ei),
                    topByTVLUsingTokenOut: j.map(ei),
                    topByTVLUsingTokenInSecondHops: Z.map(ei),
                    topByTVLUsingTokenOutSecondHops: ee.map(ei),
                    top2DirectSwap: M.map(ei),
                    top2EthQuotePool: V.map(ei)
                }, "V2 Candidate pools");
                let ea = _().map(et, e => {
                        let t = er.getTokenByAddress(e.token0.id),
                            f = er.getTokenByAddress(e.token1.id);
                        if (!t || !f) {
                            r.info(`Dropping candidate pool for ${e.token0.id}/${e.token1.id}`);
                            return
                        }
                        return [t, f]
                    }),
                    eo = _().compact(ea);
                w.putMetric("RingPoolsFilterLoad", Date.now() - S, o.Milliseconds);
                let es = Date.now(),
                    eu = await s.getPools(eo, n);
                return w.putMetric("RingPoolsLoad", Date.now() - es, o.Milliseconds), {
                    poolAccessor: eu,
                    candidatePools: {
                        protocol: d.RING,
                        selections: {
                            topByBaseWithTokenIn: W,
                            topByBaseWithTokenOut: Q,
                            topByDirectSwapPool: M,
                            topByEthQuoteTokenPool: V,
                            topByTVL: $,
                            topByTVLUsingTokenIn: G,
                            topByTVLUsingTokenOut: j,
                            topByTVLUsingTokenInSecondHops: Z,
                            topByTVLUsingTokenOutSecondHops: ee
                        }
                    },
                    subgraphPools: et
                }
            }
            async function fm({
                v2CandidatePools: e,
                ringCandidatePools: t,
                routingConfig: f,
                tokenProvider: n,
                v2poolProvider: i,
                ringPoolProvider: a
            }) {
                let s = Date.now(),
                    [{
                        subgraphPools: u,
                        candidatePools: c
                    }, {
                        subgraphPools: l,
                        candidatePools: p
                    }] = [e, t];
                w.putMetric("MixedSubgraphPoolsLoad", Date.now() - s, o.Milliseconds);
                let y = Date.now(),
                    b = new Set([...c.selections.topByTVLUsingTokenIn, ...c.selections.topByBaseWithTokenIn, ...c.selections.topByTVLUsingTokenOut, ...c.selections.topByBaseWithTokenOut, ...c.selections.topByDirectSwapPool].map(e => e.id)),
                    h = _()(u).filter(e => b.has(e.id)).sortBy(e => -e.reserveUSD).value(),
                    m = new Set([...p.selections.topByTVLUsingTokenIn, ...p.selections.topByBaseWithTokenIn, ...p.selections.topByTVLUsingTokenOut, ...p.selections.topByBaseWithTokenOut, ...p.selections.topByDirectSwapPool].map(e => e.id)),
                    v = _()(l).filter(e => m.has(e.id)).sortBy(e => -e.reserveUSD).value(),
                    T = [];
                h.forEach(e => {
                    r.info({
                        token0: e.token0.id,
                        token1: e.token1.id,
                        v2reserveUSD: e.reserveUSD
                    }, "MixedRoute heuristic, found a V2 pool with no V3 counterpart"), T.push(e)
                });
                let g = [];
                v.forEach(e => {
                    r.info({
                        token0: e.token0.id,
                        token1: e.token1.id,
                        ringReserveUSD: e.reserveUSD
                    }, "MixedRoute heuristic, found a Ring pool with no V3 counterpart"), g.push(e)
                }), r.info(T.length, "Number of V2 candidate pools that fit first heuristic"), r.info(g.length, "Number of Ring candidate pools that fit first heuristic");
                let A = [...T, ...g],
                    I = _()(A).flatMap(e => [e.token0.id, e.token1.id]).compact().uniq().value();
                r.info(`Getting the ${I.length} tokens within the ${A.length} pools we are considering`);
                let E = await n.getTokens(I, f),
                    k = _().map(T, e => {
                        let t = E.getTokenByAddress(e.token0.id),
                            f = E.getTokenByAddress(e.token1.id);
                        if (!t || !f) {
                            r.info(`Dropping candidate pool for ${e.token0.id}/${e.token1.id}`);
                            return
                        }
                        return [t, f]
                    }),
                    C = _().compact(k),
                    S = _().map(g, e => {
                        let t = E.getTokenByAddress(e.token0.id),
                            f = E.getTokenByAddress(e.token1.id);
                        if (!t || !f) {
                            r.info(`Dropping candidate pool for ${e.token0.id}/${e.token1.id}`);
                            return
                        }
                        return [t, f]
                    }),
                    O = _().compact(S);
                w.putMetric("MixedPoolsFilterLoad", Date.now() - y, o.Milliseconds);
                let P = Date.now(),
                    [M, x] = await Promise.all([i.getPools(C, f), a.getPools(O, f)]);
                w.putMetric("MixedPoolsLoad", Date.now() - P, o.Milliseconds);
                let R = e => [...T.filter(t => c.selections[e].map(e => e.id).includes(t.id)), ...g.filter(t => p.selections[e].map(e => e.id).includes(t.id))];
                return {
                    V2poolAccessor: M,
                    RingPoolAccessor: x,
                    candidatePools: {
                        protocol: d.MIXED,
                        selections: {
                            topByBaseWithTokenIn: R("topByBaseWithTokenIn"),
                            topByBaseWithTokenOut: R("topByBaseWithTokenOut"),
                            topByDirectSwapPool: R("topByDirectSwapPool"),
                            topByEthQuoteTokenPool: R("topByEthQuoteTokenPool"),
                            topByTVL: R("topByTVL"),
                            topByTVLUsingTokenIn: R("topByTVLUsingTokenIn"),
                            topByTVLUsingTokenOut: R("topByTVLUsingTokenOut"),
                            topByTVLUsingTokenInSecondHops: R("topByTVLUsingTokenInSecondHops"),
                            topByTVLUsingTokenOutSecondHops: R("topByTVLUsingTokenOutSecondHops")
                        }
                    },
                    subgraphPools: A
                }
            }
            let fv = tl.O$.from(135e3),
                fT = tl.O$.from(5e4);
            class fg extends t8 {
                async buildGasModel({
                    chainId: e,
                    gasPriceWei: t,
                    poolProvider: f,
                    token: n,
                    providerConfig: i
                }) {
                    if (n.equals(R[e])) {
                        let n = await this.getHighestLiquidityUSDPool(e, f, i);
                        return {
                            estimateGasCost: f => {
                                let {
                                    gasCostInEth: r,
                                    gasUse: a
                                } = this.estimateGas(f, t, e, i), o = (n.token0.address == R[e].address ? n.token0Price : n.token1Price).quote(r);
                                return {
                                    gasEstimate: a,
                                    gasCostInToken: r,
                                    gasCostInUSD: o
                                }
                            }
                        }
                    }
                    let a = this.getEthPool(e, n, f, i),
                        o = this.getHighestLiquidityUSDPool(e, f, i),
                        [s, u] = await Promise.all([a, o]);
                    return s || r.info("Unable to find fwETH pool with the quote token to produce gas adjusted costs. Route will not account for gas."), {
                        estimateGasCost: f => {
                            let a, o;
                            let d = u.token0.address == R[e].address ? u.token1 : u.token0,
                                {
                                    gasCostInEth: c,
                                    gasUse: l
                                } = this.estimateGas(f, t, e, { ...i
                                });
                            if (!s) return {
                                gasEstimate: l,
                                gasCostInToken: $.fromRawAmount(n, 0),
                                gasCostInUSD: $.fromRawAmount(d, 0)
                            };
                            let p = s.token0.address == R[e].address ? s.token0Price : s.token1Price;
                            try {
                                a = p.quote(c)
                            } catch (e) {
                                throw r.error({
                                    ethTokenPriceBase: p.baseCurrency,
                                    ethTokenPriceQuote: p.quoteCurrency,
                                    gasCostInEth: c.currency
                                }, "Debug eth price token issue"), e
                            }
                            let y = u.token0.address == R[e].address ? u.token0Price : u.token1Price;
                            try {
                                o = y.quote(c)
                            } catch (e) {
                                throw r.error({
                                    usdT1: u.token0.symbol,
                                    usdT2: u.token1.symbol,
                                    gasCostInEthToken: c.currency.symbol
                                }, "Failed to compute USD gas price"), e
                            }
                            return {
                                gasEstimate: l,
                                gasCostInToken: a,
                                gasCostInUSD: o
                            }
                        }
                    }
                }
                estimateGas(e, t, f, n) {
                    let r = e.route.pairs.length,
                        i = fv.add(fT.mul(r - 1));
                    (null == n ? void 0 : n.additionalGasOverhead) && (i = i.add(n.additionalGasOverhead));
                    let a = t.mul(i),
                        o = R[f];
                    return {
                        gasCostInEth: $.fromRawAmount(o, a.toString()),
                        gasUse: i
                    }
                }
                async getEthPool(e, t, f, n) {
                    let i = R[e],
                        a = (await f.getPools([
                            [i, t]
                        ], n)).getPool(i, t);
                    return !a || a.reserve0.equalTo(0) || a.reserve1.equalTo(0) ? (r.error({
                        weth: i,
                        token: t,
                        reserve0: null == a ? void 0 : a.reserve0.toExact(),
                        reserve1: null == a ? void 0 : a.reserve1.toExact()
                    }, `Could not find a valid fwWETH pool with ${t.symbol} for computing gas costs.`), null) : a
                }
                async getHighestLiquidityUSDPool(e, t, f) {
                    let n = t5[e];
                    if (!n) throw Error(`Could not find a USD token for computing gas costs on ${e}`);
                    let i = _().map(n, t => [t, x[e]]),
                        a = (await t.getPools(i, f)).getAllPools(),
                        o = _().filter(a, e => e.reserve0.greaterThan(0) && e.reserve1.greaterThan(0));
                    if (0 == o.length) throw r.error({
                        pools: o
                    }, "Could not find a USD/WETH pool for computing gas costs."), Error("Can't find USD/WETH pool for computing gas costs.");
                    return _().maxBy(o, t => t.token0.equals(R[e]) ? parseFloat(t.reserve0.toSignificant(2)) : parseFloat(t.reserve1.toSignificant(2)))
                }
                constructor() {
                    super()
                }
            }
            let fw = tl.O$.from(135e3),
                fA = tl.O$.from(5e4);
            class fI extends t2 {
                async buildGasModel({
                    chainId: e,
                    gasPriceWei: t,
                    poolProvider: f,
                    token: n,
                    providerConfig: i
                }) {
                    if (n.equals(x[e])) {
                        let n = await this.getHighestLiquidityUSDPool(e, f, i);
                        return {
                            estimateGasCost: f => {
                                let {
                                    gasCostInEth: r,
                                    gasUse: a
                                } = this.estimateGas(f, t, e, i), o = (n.token0.address == x[e].address ? n.token0Price : n.token1Price).quote(r);
                                return {
                                    gasEstimate: a,
                                    gasCostInToken: r,
                                    gasCostInUSD: o
                                }
                            }
                        }
                    }
                    let a = this.getEthPool(e, n, f, i),
                        o = this.getHighestLiquidityUSDPool(e, f, i),
                        [s, u] = await Promise.all([a, o]);
                    return s || r.info("Unable to find ETH pool with the quote token to produce gas adjusted costs. Route will not account for gas."), {
                        estimateGasCost: f => {
                            let a, o;
                            let d = u.token0.address == x[e].address ? u.token1 : u.token0,
                                {
                                    gasCostInEth: c,
                                    gasUse: l
                                } = this.estimateGas(f, t, e, { ...i
                                });
                            if (!s) return {
                                gasEstimate: l,
                                gasCostInToken: $.fromRawAmount(n, 0),
                                gasCostInUSD: $.fromRawAmount(d, 0)
                            };
                            let p = s.token0.address == x[e].address ? s.token0Price : s.token1Price;
                            try {
                                a = p.quote(c)
                            } catch (e) {
                                throw r.error({
                                    ethTokenPriceBase: p.baseCurrency,
                                    ethTokenPriceQuote: p.quoteCurrency,
                                    gasCostInEth: c.currency
                                }, "Debug eth price token issue"), e
                            }
                            let y = u.token0.address == x[e].address ? u.token0Price : u.token1Price;
                            try {
                                o = y.quote(c)
                            } catch (e) {
                                throw r.error({
                                    usdT1: u.token0.symbol,
                                    usdT2: u.token1.symbol,
                                    gasCostInEthToken: c.currency.symbol
                                }, "Failed to compute USD gas price"), e
                            }
                            return {
                                gasEstimate: l,
                                gasCostInToken: a,
                                gasCostInUSD: o
                            }
                        }
                    }
                }
                estimateGas(e, t, f, n) {
                    let r = e.route.pairs.length,
                        i = fw.add(fA.mul(r - 1));
                    (null == n ? void 0 : n.additionalGasOverhead) && (i = i.add(n.additionalGasOverhead));
                    let a = t.mul(i),
                        o = x[f];
                    return {
                        gasCostInEth: $.fromRawAmount(o, a.toString()),
                        gasUse: i
                    }
                }
                async getEthPool(e, t, f, n) {
                    let i = x[e],
                        a = (await f.getPools([
                            [i, t]
                        ], n)).getPool(i, t);
                    return !a || a.reserve0.equalTo(0) || a.reserve1.equalTo(0) ? (r.error({
                        weth: i,
                        token: t,
                        reserve0: null == a ? void 0 : a.reserve0.toExact(),
                        reserve1: null == a ? void 0 : a.reserve1.toExact()
                    }, `Could not find a valid WETH pool with ${t.symbol} for computing gas costs.`), null) : a
                }
                async getHighestLiquidityUSDPool(e, t, f) {
                    let n = t5[e];
                    if (!n) throw Error(`Could not find a USD token for computing gas costs on ${e}`);
                    let i = _().map(n, t => [t, x[e]]),
                        a = (await t.getPools(i, f)).getAllPools(),
                        o = _().filter(a, e => e.reserve0.greaterThan(0) && e.reserve1.greaterThan(0));
                    if (0 == o.length) throw r.error({
                        pools: o
                    }, "Could not find a USD/WETH pool for computing gas costs."), Error("Can't find USD/WETH pool for computing gas costs.");
                    return _().maxBy(o, t => t.token0.equals(x[e]) ? parseFloat(t.reserve0.toSignificant(2)) : parseFloat(t.reserve1.toSignificant(2)))
                }
                constructor() {
                    super()
                }
            }
            class fE extends t3 {
                async buildGasModel({
                    chainId: e,
                    gasPriceWei: t,
                    pools: f,
                    quoteToken: n,
                    v2poolProvider: i,
                    providerConfig: a
                }) {
                    let o;
                    let s = f.usdPool,
                        u = M[e];
                    if (n.equals(u)) return {
                        estimateGasCost: f => {
                            let {
                                totalGasCostNativeCurrency: n,
                                baseGasUse: r
                            } = this.estimateGas(f, t, e, a), i = (s.token0.address == u.address ? s.token0Price : s.token1Price).quote(n);
                            return {
                                gasEstimate: r,
                                gasCostInToken: n,
                                gasCostInUSD: i
                            }
                        }
                    };
                    let d = f.fewNativeQuoteTokenV3Pool;
                    i && (o = await t9(n, i, a));
                    let c = s.token0.address == u.address ? s.token1 : s.token0;
                    return {
                        estimateGasCost: (f => {
                            let i, l;
                            let {
                                totalGasCostNativeCurrency: p,
                                baseGasUse: y
                            } = this.estimateGas(f, t, e, a);
                            if (!d && !o) return r.info(`Unable to find ${u.symbol} pool with the quote token, ${n.symbol} to produce gas adjusted costs. Route will not account for gas.`), {
                                gasEstimate: y,
                                gasCostInToken: $.fromRawAmount(n, 0),
                                gasCostInUSD: $.fromRawAmount(c, 0)
                            };
                            let b = (!d || j().equal(d.liquidity, j().BigInt(0))) && o ? o : d,
                                h = b.token0.address == u.address ? b.token0Price : b.token1Price;
                            try {
                                i = h.quote(p)
                            } catch (e) {
                                throw r.info({
                                    nativeTokenPriceBase: h.baseCurrency,
                                    nativeTokenPriceQuote: h.quoteCurrency,
                                    gasCostInEth: p.currency
                                }, "Debug eth price token issue"), e
                            }
                            let m = s.token0.address == u.address ? s.token0Price : s.token1Price;
                            try {
                                l = m.quote(p)
                            } catch (e) {
                                throw r.info({
                                    usdT1: s.token0.symbol,
                                    usdT2: s.token1.symbol,
                                    gasCostInNativeToken: p.currency.symbol
                                }, "Failed to compute USD gas price"), e
                            }
                            return {
                                gasEstimate: y,
                                gasCostInToken: i,
                                gasCostInUSD: l
                            }
                        }).bind(this)
                    }
                }
                estimateGas(e, t, f, n) {
                    let r = tl.O$.from(Math.max(1, _().sum(e.initializedTicksCrossedList))),
                        i = tl.O$.from(0),
                        a = e.route;
                    (0, tb.partitionMixedRouteByProtocol)(a).map(e => {
                        e.every(e => e instanceof k.Pool) ? i = (i = i.add(fe(f))).add(ff(f).mul(e.length)) : e.every(e => e instanceof W.Pair) ? i = (i = i.add(fw)).add(fA.mul(e.length - 1)) : e.every(e => e instanceof Q.Pair) && (i = (i = i.add(fv)).add(fT.mul(e.length - 1)))
                    });
                    let o = ft(f).mul(r),
                        s = t7.mul(0);
                    i = i.add(o).add(s), (null == n ? void 0 : n.additionalGasOverhead) && (i = i.add(n.additionalGasOverhead));
                    let u = t.mul(i),
                        d = M[f];
                    return {
                        totalGasCostNativeCurrency: $.fromRawAmount(d, u.toString()),
                        totalInitializedTicksCrossed: r,
                        baseGasUse: i
                    }
                }
                constructor() {
                    super()
                }
            }
            class f_ {
                getRoutesThenQuotes(e, t, f, n, r, i, a, s, u, d, c) {
                    return this.getRoutes(e, t, a, s, u).then(e => (1 == e.routes.length && (w.putMetric(`${this.protocol}QuoterSingleRoute`, 1, o.Count), r = [100], n = [f]), e.routes.length > 0 ? w.putMetric(`${this.protocol}QuoterRoutesFound`, e.routes.length, o.Count) : w.putMetric(`${this.protocol}QuoterNoRoutesFound`, e.routes.length, o.Count), this.getQuotes(e.routes, n, r, i, s, u, e.candidatePools, d, c)))
                }
                async applyTokenValidatorToPools(e, t) {
                    if (!this.tokenValidatorProvider) return e;
                    r.info(`Running token validator on ${e.length} pools`);
                    let f = _().flatMap(e, e => [e.token0, e.token1]),
                        n = await this.tokenValidatorProvider.validateTokens(f);
                    return _().filter(e, e => {
                        let f = n.getValidationByToken(e.token0),
                            i = n.getValidationByToken(e.token1),
                            a = t(e.token0, f),
                            o = t(e.token1, i);
                        return (a || o) && r.info(`Dropping pool ${K(e)} because token is invalid. ${e.token0.symbol}: ${f}, ${e.token1.symbol}: ${i}`), !a && !o
                    })
                }
                constructor(e, t, f, n, r) {
                    this.tokenProvider = e, this.chainId = t, this.protocol = f, this.blockedTokenListProvider = n, this.tokenValidatorProvider = r
                }
            }
            class fk {
                toString() {
                    return `${this.percent.toFixed(2)}% QuoteGasAdj[${this.quoteAdjustedForGas.toExact()}] Quote[${this.quote.toExact()}] Gas[${this.gasEstimate.toString()}] = ${X(this.route)}`
                }
                constructor({
                    amount: e,
                    rawQuote: t,
                    percent: f,
                    route: n,
                    gasModel: r,
                    quoteToken: i,
                    tradeType: a,
                    v2PoolProvider: o
                }) {
                    this.protocol = d.V2, this.amount = e, this.rawQuote = t, this.quote = $.fromRawAmount(i, t.toString()), this.percent = f, this.route = n, this.gasModel = r, this.quoteToken = i, this.tradeType = a;
                    let {
                        gasEstimate: s,
                        gasCostInToken: u,
                        gasCostInUSD: c
                    } = this.gasModel.estimateGasCost(this);
                    if (this.gasCostInToken = u, this.gasCostInUSD = c, this.gasEstimate = s, this.tradeType == m.TradeType.EXACT_INPUT) {
                        let e = this.quote.subtract(u);
                        this.quoteAdjustedForGas = e
                    } else {
                        let e = this.quote.add(u);
                        this.quoteAdjustedForGas = e
                    }
                    this.poolAddresses = _().map(n.pairs, e => o.getPoolAddress(e.token0, e.token1).poolAddress), this.tokenPath = this.route.path
                }
            }
            class fC {
                toString() {
                    return `${this.percent.toFixed(2)}% QuoteGasAdj[${this.quoteAdjustedForGas.toExact()}] Quote[${this.quote.toExact()}] Gas[${this.gasEstimate.toString()}] = ${X(this.route)}`
                }
                constructor({
                    amount: e,
                    rawQuote: t,
                    percent: f,
                    route: n,
                    gasModel: r,
                    quoteToken: i,
                    tradeType: a,
                    ringPoolProvider: o
                }) {
                    this.protocol = d.RING, this.amount = e, this.rawQuote = t, this.quote = $.fromRawAmount(i, t.toString()), this.percent = f, this.route = n, this.gasModel = r, this.quoteToken = i, this.tradeType = a;
                    let {
                        gasEstimate: s,
                        gasCostInToken: u,
                        gasCostInUSD: c
                    } = this.gasModel.estimateGasCost(this);
                    if (this.gasCostInToken = u, this.gasCostInUSD = c, this.gasEstimate = s, this.tradeType == m.TradeType.EXACT_INPUT) {
                        let e = this.quote.subtract(u);
                        this.quoteAdjustedForGas = e
                    } else {
                        let e = this.quote.add(u);
                        this.quoteAdjustedForGas = e
                    }
                    this.poolAddresses = _().map(n.pairs, e => o.getPoolAddress(e.token0, e.token1).poolAddress), this.tokenPath = this.route.path
                }
            }
            class fS {
                toString() {
                    return `${this.percent.toFixed(2)}% QuoteGasAdj[${this.quoteAdjustedForGas.toExact()}] Quote[${this.quote.toExact()}] Gas[${this.gasEstimate.toString()}] = ${X(this.route)}`
                }
                constructor({
                    amount: e,
                    rawQuote: t,
                    sqrtPriceX96AfterList: f,
                    initializedTicksCrossedList: n,
                    quoterGasEstimate: r,
                    percent: i,
                    route: a,
                    gasModel: o,
                    quoteToken: s,
                    tradeType: u,
                    v3PoolProvider: c
                }) {
                    this.protocol = d.V3, this.amount = e, this.rawQuote = t, this.sqrtPriceX96AfterList = f, this.initializedTicksCrossedList = n, this.quoterGasEstimate = r, this.quote = $.fromRawAmount(s, t.toString()), this.percent = i, this.route = a, this.gasModel = o, this.quoteToken = s, this.tradeType = u;
                    let {
                        gasEstimate: l,
                        gasCostInToken: p,
                        gasCostInUSD: y
                    } = this.gasModel.estimateGasCost(this);
                    if (this.gasCostInToken = p, this.gasCostInUSD = y, this.gasEstimate = l, this.tradeType == m.TradeType.EXACT_INPUT) {
                        let e = this.quote.subtract(p);
                        this.quoteAdjustedForGas = e
                    } else {
                        let e = this.quote.add(p);
                        this.quoteAdjustedForGas = e
                    }
                    this.poolAddresses = _().map(a.pools, e => c.getPoolAddress(e.token0, e.token1, e.fee).poolAddress), this.tokenPath = this.route.tokenPath
                }
            }
            class fO {
                toString() {
                    return `${this.percent.toFixed(2)}% QuoteGasAdj[${this.quoteAdjustedForGas.toExact()}] Quote[${this.quote.toExact()}] Gas[${this.gasEstimate.toString()}] = ${X(this.route)}`
                }
                constructor({
                    amount: e,
                    rawQuote: t,
                    sqrtPriceX96AfterList: f,
                    initializedTicksCrossedList: n,
                    quoterGasEstimate: r,
                    percent: i,
                    route: a,
                    mixedRouteGasModel: o,
                    quoteToken: s,
                    tradeType: u,
                    v3PoolProvider: c,
                    v2PoolProvider: l,
                    ringPoolProvider: p
                }) {
                    this.protocol = d.MIXED, this.amount = e, this.rawQuote = t, this.sqrtPriceX96AfterList = f, this.initializedTicksCrossedList = n, this.quoterGasEstimate = r, this.quote = $.fromRawAmount(s, t.toString()), this.percent = i, this.route = a, this.gasModel = o, this.quoteToken = s, this.tradeType = u;
                    let {
                        gasEstimate: y,
                        gasCostInToken: b,
                        gasCostInUSD: h
                    } = this.gasModel.estimateGasCost(this);
                    if (this.gasCostInToken = b, this.gasCostInUSD = h, this.gasEstimate = y, this.tradeType == m.TradeType.EXACT_INPUT) {
                        let e = this.quote.subtract(b);
                        this.quoteAdjustedForGas = e
                    } else {
                        let e = this.quote.add(b);
                        this.quoteAdjustedForGas = e
                    }
                    this.poolAddresses = _().map(a.pools, e => e instanceof k.Pool ? c.getPoolAddress(e.token0, e.token1, e.fee).poolAddress : e instanceof Q.Pair ? p.getPoolAddress(e.token0, e.token1).poolAddress : l.getPoolAddress(e.token0, e.token1).poolAddress), this.tokenPath = this.route.path
                }
            }

            function fP(e, t, f, n) {
                return fx(e, t, (e, t, f) => new tX(e, t, f), f, n)
            }

            function fM(e, t, f, n) {
                return fx(e, t, (e, t, f) => new tz(e, t, f), f, n)
            }

            function fx(e, t, f, n, i) {
                var a;
                let o = Array(n.length).fill(!1),
                    s = [],
                    u = (e, t, r, a, o, d) => {
                        if (!(r.length > i)) {
                            if (r.length > 0 && r[r.length - 1].involvesToken(t)) {
                                s.push(f([...r], e, t));
                                return
                            }
                            for (let f = 0; f < n.length; f++) {
                                if (a[f]) continue;
                                let i = n[f],
                                    s = d || e;
                                if (!i.involvesToken(s)) continue;
                                let c = i.token0.equals(s) ? i.token1 : i.token0;
                                o.has(c.address.toLowerCase()) || (o.add(c.address.toLowerCase()), r.push(i), a[f] = !0, u(e, t, r, a, o, c), a[f] = !1, r.pop(), o.delete(c.address.toLowerCase()))
                            }
                        }
                    };
                return u(e, t, [], o, new Set([e.address.toLowerCase()])), r.info({
                    routes: s.map(X),
                    pools: n.map(K)
                }, `Computed ${s.length} possible routes for type ${null===(a=s[0])||void 0===a?void 0:a.protocol}.`), s
            }
            class fR extends f_ {
                async getRoutes(e, t, f, n, r) {
                    let i = Date.now();
                    if (n != m.TradeType.EXACT_INPUT) throw Error("Mixed route quotes are not supported for EXACT_OUTPUT");
                    let [a, s] = f, {
                        V2poolAccessor: u,
                        RingPoolAccessor: d,
                        candidatePools: c
                    } = await fm({
                        v2CandidatePools: a,
                        ringCandidatePools: s,
                        tokenProvider: this.tokenProvider,
                        v3poolProvider: this.v3PoolProvider,
                        v2poolProvider: this.v2PoolProvider,
                        ringPoolProvider: this.ringPoolProvider,
                        routingConfig: r,
                        chainId: this.chainId
                    }), p = [...u.getAllPools(), ...d.getAllPools()], y = await this.applyTokenValidatorToPools(p, (f, n) => !(!n || n == l.STF && (f.equals(e) || f.equals(t))) && (n == l.FOT || n == l.STF)), {
                        maxSwapsPerPath: b
                    } = r, h = fx(e, t, (e, t, f) => new tK(e, t, f), y, b).filter(e => !e.pools.every(e => e instanceof k.Pool) && !e.pools.every(e => e instanceof W.Pair) && !e.pools.every(e => e instanceof Q.Pair));
                    return w.putMetric("MixedGetRoutesLoad", Date.now() - i, o.Milliseconds), {
                        routes: h,
                        candidatePools: c
                    }
                }
                async getQuotes(e, t, f, n, i, a, s, u) {
                    let d = Date.now();
                    if (r.info("Starting to get mixed quotes"), void 0 === u) throw Error("GasModel for MixedRouteWithValidQuote is required to getQuotes");
                    if (0 == e.length) return {
                        routesWithValidQuotes: [],
                        candidatePools: s
                    };
                    let c = this.onChainQuoteProvider.getQuotesManyExactIn.bind(this.onChainQuoteProvider),
                        l = Date.now();
                    r.info(`Getting quotes for mixed for ${e.length} routes with ${t.length} amounts per route.`);
                    let {
                        routesWithQuotes: p
                    } = await c(t, e, {
                        blockNumber: a.blockNumber
                    });
                    w.putMetric("MixedQuotesLoad", Date.now() - l, o.Milliseconds), w.putMetric("MixedQuotesFetched", _()(p).map(([, e]) => e.length).sum(), o.Count);
                    let y = [];
                    for (let e of p) {
                        let [t, a] = e;
                        for (let e = 0; e < a.length; e++) {
                            let o = f[e],
                                s = a[e],
                                {
                                    quote: d,
                                    amount: c,
                                    sqrtPriceX96AfterList: l,
                                    initializedTicksCrossedList: p,
                                    gasEstimate: b
                                } = s;
                            if (!d || !l || !p || !b) {
                                r.debug({
                                    route: X(t),
                                    amountQuote: s
                                }, "Dropping a null mixed quote for route.");
                                continue
                            }
                            let h = new fO({
                                route: t,
                                rawQuote: d,
                                amount: c,
                                percent: o,
                                sqrtPriceX96AfterList: l,
                                initializedTicksCrossedList: p,
                                quoterGasEstimate: b,
                                mixedRouteGasModel: u,
                                quoteToken: n,
                                tradeType: i,
                                v3PoolProvider: this.v3PoolProvider,
                                v2PoolProvider: this.v2PoolProvider,
                                ringPoolProvider: this.ringPoolProvider
                            });
                            y.push(h)
                        }
                    }
                    return w.putMetric("MixedGetQuotesLoad", Date.now() - d, o.Milliseconds), {
                        routesWithValidQuotes: y,
                        candidatePools: s
                    }
                }
                constructor(e, t, f, n, r, i, a, o, s, u, d) {
                    super(o, s, tb.Protocol.MIXED, u, d), this.v3SubgraphProvider = e, this.v3PoolProvider = t, this.v2SubgraphProvider = f, this.v2PoolProvider = n, this.ringSubgraphProvider = r, this.ringPoolProvider = i, this.onChainQuoteProvider = a
                }
            }
            class fF extends f_ {
                async getRoutes(e, t, f, n, r) {
                    let i = Date.now(),
                        {
                            poolAccessor: a,
                            candidatePools: s
                        } = f,
                        u = a.getAllPools(),
                        d = await this.applyTokenValidatorToPools(u, (f, n) => !(!n || n == l.STF && (f.equals(e) || f.equals(t))) && n == l.STF),
                        {
                            maxSwapsPerPath: c
                        } = r,
                        p = fP(e, t, d, c);
                    return w.putMetric("V2GetRoutesLoad", Date.now() - i, o.Milliseconds), {
                        routes: p,
                        candidatePools: s
                    }
                }
                async getQuotes(e, t, f, n, i, a, s, u, d) {
                    let c = Date.now();
                    if (r.info("Starting to get V2 quotes"), void 0 === d) throw Error("GasPriceWei for V2Routes is required to getQuotes");
                    if (0 == t.length || !t.every(e => e.currency.equals(t[0].currency))) throw Error("Amounts must have at least one amount and must be same token");
                    let l = t[0].currency;
                    if (0 == e.length) return {
                        routesWithValidQuotes: [],
                        candidatePools: s
                    };
                    let p = i == m.TradeType.EXACT_INPUT ? this.v2QuoteProvider.getQuotesManyExactIn.bind(this.v2QuoteProvider) : this.v2QuoteProvider.getQuotesManyExactOut.bind(this.v2QuoteProvider),
                        y = Date.now();
                    r.info(`Getting quotes for V2 for ${e.length} routes with ${t.length} amounts per route.`);
                    let {
                        routesWithQuotes: b
                    } = await p(t, e, a), h = await this.v2GasModelFactory.buildGasModel({
                        chainId: this.chainId,
                        gasPriceWei: d,
                        poolProvider: this.v2PoolProvider,
                        token: n,
                        providerConfig: { ...a,
                            additionalGasOverhead: fo(this.chainId, l, n)
                        }
                    });
                    w.putMetric("V2QuotesLoad", Date.now() - y, o.Milliseconds), w.putMetric("V2QuotesFetched", _()(b).map(([, e]) => e.length).sum(), o.Count);
                    let v = [];
                    for (let e of b) {
                        let [t, a] = e;
                        for (let e = 0; e < a.length; e++) {
                            let o = f[e],
                                s = a[e],
                                {
                                    quote: u,
                                    amount: d
                                } = s;
                            if (!u) {
                                r.debug({
                                    route: X(t),
                                    amountQuote: s
                                }, "Dropping a null V2 quote for route.");
                                continue
                            }
                            let c = new fk({
                                route: t,
                                rawQuote: u,
                                amount: d,
                                percent: o,
                                gasModel: h,
                                quoteToken: n,
                                tradeType: i,
                                v2PoolProvider: this.v2PoolProvider
                            });
                            v.push(c)
                        }
                    }
                    return w.putMetric("V2GetQuotesLoad", Date.now() - c, o.Milliseconds), {
                        routesWithValidQuotes: v,
                        candidatePools: s
                    }
                }
                async refreshRoutesThenGetQuotes(e, t, f, n, r, i, a, o, s) {
                    let u = [];
                    return f.forEach(e => e.pairs.forEach(e => u.push([e.token0, e.token1]))), this.v2PoolProvider.getPools(u, o).then(f => {
                        let u = fP(e, t, f.getAllPools(), o.maxSwapsPerPath);
                        return this.getQuotes(u, n, r, i, a, o, void 0, void 0, s)
                    })
                }
                constructor(e, t, f, n, r, i, a, o) {
                    super(r, i, tb.Protocol.V2, a, o), this.v2SubgraphProvider = e, this.v2PoolProvider = t, this.v2QuoteProvider = f, this.v2GasModelFactory = n
                }
            }
            class fD extends f_ {
                async getRoutes(e, t, f, n, r) {
                    let i = Date.now(),
                        {
                            poolAccessor: a,
                            candidatePools: s
                        } = f,
                        u = a.getAllPools(),
                        d = await this.applyTokenValidatorToPools(u, (f, n) => !(!n || n == l.STF && (f.equals(e) || f.equals(t))) && (n == l.FOT || n == l.STF)),
                        {
                            maxSwapsPerPath: c
                        } = r,
                        p = fx(e, t, (e, t, f) => new tQ(e, t, f), d, c);
                    return w.putMetric("V3GetRoutesLoad", Date.now() - i, o.Milliseconds), {
                        routes: p,
                        candidatePools: s
                    }
                }
                async getQuotes(e, t, f, n, i, a, s, u) {
                    let d = Date.now();
                    if (r.info("Starting to get V3 quotes"), void 0 === u) throw Error("GasModel for V3RouteWithValidQuote is required to getQuotes");
                    if (0 == e.length) return {
                        routesWithValidQuotes: [],
                        candidatePools: s
                    };
                    let c = i == m.TradeType.EXACT_INPUT ? this.onChainQuoteProvider.getQuotesManyExactIn.bind(this.onChainQuoteProvider) : this.onChainQuoteProvider.getQuotesManyExactOut.bind(this.onChainQuoteProvider),
                        l = Date.now();
                    r.info(`Getting quotes for V3 for ${e.length} routes with ${t.length} amounts per route.`);
                    let {
                        routesWithQuotes: p
                    } = await c(t, e, {
                        blockNumber: a.blockNumber
                    });
                    w.putMetric("V3QuotesLoad", Date.now() - l, o.Milliseconds), w.putMetric("V3QuotesFetched", _()(p).map(([, e]) => e.length).sum(), o.Count);
                    let y = [];
                    for (let e of p) {
                        let [t, a] = e;
                        for (let e = 0; e < a.length; e++) {
                            let o = f[e],
                                s = a[e],
                                {
                                    quote: d,
                                    amount: c,
                                    sqrtPriceX96AfterList: l,
                                    initializedTicksCrossedList: p,
                                    gasEstimate: b
                                } = s;
                            if (!d || !l || !p || !b) {
                                r.debug({
                                    route: X(t),
                                    amountQuote: s
                                }, "Dropping a null V3 quote for route.");
                                continue
                            }
                            let h = new fS({
                                route: t,
                                rawQuote: d,
                                amount: c,
                                percent: o,
                                sqrtPriceX96AfterList: l,
                                initializedTicksCrossedList: p,
                                quoterGasEstimate: b,
                                gasModel: u,
                                quoteToken: n,
                                tradeType: i,
                                v3PoolProvider: this.v3PoolProvider
                            });
                            y.push(h)
                        }
                    }
                    return w.putMetric("V3GetQuotesLoad", Date.now() - d, o.Milliseconds), {
                        routesWithValidQuotes: y,
                        candidatePools: s
                    }
                }
                constructor(e, t, f, n, r, i, a) {
                    super(n, r, tb.Protocol.V3, i, a), this.v3SubgraphProvider = e, this.v3PoolProvider = t, this.onChainQuoteProvider = f
                }
            }
            class fN extends f_ {
                async getRoutes(e, t, f, n, r) {
                    let i = Date.now(),
                        {
                            poolAccessor: a,
                            candidatePools: s
                        } = f,
                        u = a.getAllPools(),
                        d = await this.applyTokenValidatorToPools(u, (f, n) => !(!n || n == l.STF && (f.equals(e) || f.equals(t))) && n == l.STF),
                        {
                            maxSwapsPerPath: c
                        } = r,
                        p = fM(e, t, d, c);
                    return w.putMetric("V2GetRoutesLoad", Date.now() - i, o.Milliseconds), {
                        routes: p,
                        candidatePools: s
                    }
                }
                async getQuotes(e, t, f, n, i, a, s, u, d) {
                    let c = Date.now();
                    if (r.info("Starting to get Ring quotes"), void 0 === d) throw Error("GasPriceWei for V2Routes is required to getQuotes");
                    if (0 == t.length || !t.every(e => e.currency.equals(t[0].currency))) throw Error("Amounts must have at least one amount and must be same token");
                    let l = t[0].currency;
                    if (0 == e.length) return {
                        routesWithValidQuotes: [],
                        candidatePools: s
                    };
                    let p = i == m.TradeType.EXACT_INPUT ? this.ringQuoteProvider.getQuotesManyExactIn.bind(this.ringQuoteProvider) : this.ringQuoteProvider.getQuotesManyExactOut.bind(this.ringQuoteProvider),
                        y = Date.now();
                    r.info(`Getting quotes for Ring for ${e.length} routes with ${t.length} amounts per route.`);
                    let {
                        routesWithQuotes: b
                    } = await p(t, e, a), h = await this.ringGasModelFactory.buildGasModel({
                        chainId: this.chainId,
                        gasPriceWei: d,
                        poolProvider: this.ringPoolProvider,
                        token: n,
                        providerConfig: { ...a,
                            additionalGasOverhead: fo(this.chainId, l, n)
                        }
                    });
                    w.putMetric("RingQuotesLoad", Date.now() - y, o.Milliseconds), w.putMetric("RingQuotesFetched", _()(b).map(([, e]) => e.length).sum(), o.Count);
                    let v = [];
                    for (let e of b) {
                        let [t, a] = e;
                        for (let e = 0; e < a.length; e++) {
                            let o = f[e],
                                s = a[e],
                                {
                                    quote: u,
                                    amount: d
                                } = s;
                            if (!u) {
                                r.debug({
                                    route: X(t),
                                    amountQuote: s
                                }, "Dropping a null Ring quote for route.");
                                continue
                            }
                            let c = new fC({
                                route: t,
                                rawQuote: u,
                                amount: d,
                                percent: o,
                                gasModel: h,
                                quoteToken: n,
                                tradeType: i,
                                ringPoolProvider: this.ringPoolProvider
                            });
                            v.push(c)
                        }
                    }
                    return w.putMetric("V2GetQuotesLoad", Date.now() - c, o.Milliseconds), {
                        routesWithValidQuotes: v,
                        candidatePools: s
                    }
                }
                async refreshRoutesThenGetQuotes(e, t, f, n, r, i, a, o, s) {
                    let u = [];
                    return f.forEach(e => e.pairs.forEach(e => u.push([e.token0, e.token1]))), this.ringPoolProvider.getPools(u, o).then(f => {
                        let u = fM(e, t, f.getAllPools(), o.maxSwapsPerPath);
                        return this.getQuotes(u, n, r, i, a, o, void 0, void 0, s)
                    })
                }
                constructor(e, t, f, n, r, i, a, o) {
                    super(r, i, d.RING, a, o), this.v2SubgraphProvider = e, this.ringPoolProvider = t, this.ringQuoteProvider = f, this.ringGasModelFactory = n
                }
            }
            class fB extends Array {
                constructor(...e) {
                    super(...e.map(e => e.toLowerCase()))
                }
            }
            class fL {
                async routeToRatio(e, t, f, n, i, a = tY(this.chainId)) {
                    let o, s;
                    t.currency.wrapped.sortsBefore(e.currency.wrapped) && ([e, t] = [t, e]);
                    let u = this.calculateOptimalRatio(f, f.pool.sqrtRatioX96, !0);
                    f.pool.tickCurrent > f.tickUpper ? o = !0 : f.pool.tickCurrent < f.tickLower ? o = !1 : (o = new m.Fraction(e.quotient, t.quotient).greaterThan(u)) || (u = u.invert());
                    let [c, l] = o ? [e, t] : [t, e], y = u, b = f.pool, h = o ? f.pool.token0Price : f.pool.token1Price, v = null, T = !1, g = 0;
                    for (; !T;) {
                        let e;
                        if (++g > n.maxIterations) return r.info("max iterations exceeded"), {
                            status: p.NO_ROUTE_FOUND,
                            error: "max iterations exceeded"
                        };
                        let t = function(e, t, f, n) {
                            let r = new m.Fraction(f.quotient).subtract(e.multiply(n.quotient)).divide(e.multiply(t).add(1));
                            if (r.lessThan(0)) throw Error("routeToRatio: insufficient input token amount");
                            return $.fromRawAmount(f.currency, r.quotient)
                        }(y, h, c, l);
                        if (t.equalTo(0)) return r.info("no swap needed: amountToSwap = 0"), {
                            status: p.NO_SWAP_NEEDED
                        };
                        if (!(v = await this.route(t, l.currency, m.TradeType.EXACT_INPUT, void 0, { ...tY(this.chainId),
                                ...a,
                                protocols: [d.V3, d.V2]
                            }))) return r.info("no route found from this.route()"), {
                            status: p.NO_ROUTE_FOUND,
                            error: "no route found"
                        };
                        let i = c.subtract(v.trade.inputAmount),
                            s = l.add(v.trade.outputAmount),
                            w = i.divide(s);
                        if (v.route.forEach(t => {
                                t.protocol === d.V3 && t.route.pools.forEach((n, r) => {
                                    n.token0.equals(f.pool.token0) && n.token1.equals(f.pool.token1) && n.fee === f.pool.fee && (e = j().BigInt(t.sqrtPriceX96AfterList[r].toString()), y = this.calculateOptimalRatio(f, j().BigInt(e.toString()), o))
                                })
                            }), e || (y = u), (T = w.equalTo(y) || this.absoluteValue(w.asFraction.divide(y).subtract(1)).lessThan(n.ratioErrorTolerance)) && e && (b = new k.Pool(f.pool.token0, f.pool.token1, f.pool.fee, e, f.pool.liquidity, k.TickMath.getTickAtSqrtRatio(e), f.pool.tickDataProvider)), h = v.trade.outputAmount.divide(v.trade.inputAmount), r.info({
                                exchangeRate: h.asFraction.toFixed(18),
                                optimalRatio: y.asFraction.toFixed(18),
                                newRatio: w.asFraction.toFixed(18),
                                inputBalanceUpdated: i.asFraction.toFixed(18),
                                outputBalanceUpdated: s.asFraction.toFixed(18),
                                ratioErrorTolerance: n.ratioErrorTolerance.toFixed(18),
                                iterationN: g.toString()
                            }, "QuoteToRatio Iteration Parameters"), h.equalTo(0)) return r.info("exchangeRate to 0"), {
                            status: p.NO_ROUTE_FOUND,
                            error: "insufficient liquidity to swap to optimal ratio"
                        }
                    }
                    return v ? (i && (s = await this.buildSwapAndAddMethodParameters(v.trade, i, {
                        initialBalanceTokenIn: c,
                        initialBalanceTokenOut: l,
                        preLiquidityPosition: f
                    })), {
                        status: p.SUCCESS,
                        result: { ...v,
                            methodParameters: s,
                            optimalRatio: y,
                            postSwapTargetPool: b
                        }
                    }) : {
                        status: p.NO_ROUTE_FOUND,
                        error: "no route found"
                    }
                }
                async route(e, t, f, n, i = {}) {
                    var a, s, u, d;
                    let l, p, y;
                    let b = e;
                    if (f === m.TradeType.EXACT_OUTPUT) {
                        let t = this.portionProvider.getPortionAmount(e, f, n);
                        t && t.greaterThan(tb.ZERO) && (e = e.add(t))
                    }
                    let {
                        currencyIn: h,
                        currencyOut: v
                    } = this.determineCurrencyInOutFromTradeType(f, e, t), T = h.wrapped, g = v.wrapped;
                    w.setProperty("chainId", this.chainId), w.setProperty("pair", `${T.symbol}/${g.symbol}`), w.setProperty("tokenIn", T.address), w.setProperty("tokenOut", g.address), w.setProperty("tradeType", f === m.TradeType.EXACT_INPUT ? "ExactIn" : "ExactOut"), w.putMetric(`QuoteRequestedForChain${this.chainId}`, 1, o.Count);
                    let A = null !== (a = i.blockNumber) && void 0 !== a ? a : this.getBlockNumberPromise(),
                        I = _().merge({
                            useCachedRoutes: !0,
                            writeToCachedRoutes: !0,
                            optimisticCachedRoutes: !1
                        }, tY(this.chainId), i, {
                            blockNumber: A
                        });
                    I.debugRouting && r.warn(`Finalized routing config is ${JSON.stringify(I)}`);
                    let E = await this.getGasPriceWei(await A),
                        k = t.wrapped,
                        C = { ...I,
                            blockNumber: A,
                            additionalGasOverhead: fo(this.chainId, e.currency, t)
                        },
                        S = {
                            estimateGasCost: () => ({
                                gasCostInToken: $.fromRawAmount(k, 0),
                                gasCostInUSD: $.fromRawAmount(eh, 0),
                                gasEstimate: tl.O$.from(0)
                            })
                        },
                        O = {
                            estimateGasCost: () => ({
                                gasCostInToken: $.fromRawAmount(k, 0),
                                gasCostInUSD: $.fromRawAmount(eh, 0),
                                gasEstimate: tl.O$.from(0)
                            })
                        },
                        P = Array.from(new Set(I.protocols).values()),
                        M = null !== (s = I.overwriteCacheMode) && void 0 !== s ? s : await (null === (u = this.routeCachingProvider) || void 0 === u ? void 0 : u.getCacheMode(this.chainId, e, k, f, P));
                    I.useCachedRoutes && M !== c.Darkmode && (l = await (null === (d = this.routeCachingProvider) || void 0 === d ? void 0 : d.getCachedRoute(this.chainId, e, k, f, P, await A, I.optimisticCachedRoutes))), w.putMetric(I.useCachedRoutes ? "GetQuoteUsingCachedRoutes" : "GetQuoteNotUsingCachedRoutes", 1, o.Count), M && I.useCachedRoutes && M !== c.Darkmode && !l ? (w.putMetric(`GetCachedRoute_miss_${M}`, 1, o.Count), r.info({
                        tokenIn: T.symbol,
                        tokenInAddress: T.address,
                        tokenOut: g.symbol,
                        tokenOutAddress: g.address,
                        cacheMode: M,
                        amount: e.toExact(),
                        chainId: this.chainId,
                        tradeType: this.tradeTypeStr(f)
                    }, `GetCachedRoute miss ${M} for ${this.tokenPairSymbolTradeTypeChainId(T,g,f)}`)) : l && I.useCachedRoutes && (w.putMetric(`GetCachedRoute_hit_${M}`, 1, o.Count), r.info({
                        tokenIn: T.symbol,
                        tokenInAddress: T.address,
                        tokenOut: g.symbol,
                        tokenOutAddress: g.address,
                        cacheMode: M,
                        amount: e.toExact(),
                        chainId: this.chainId,
                        tradeType: this.tradeTypeStr(f)
                    }, `GetCachedRoute hit ${M} for ${this.tokenPairSymbolTradeTypeChainId(T,g,f)}`));
                    let x = Promise.resolve(null);
                    l && (x = this.getSwapRouteFromCache(l, await A, e, k, f, I, S, O, E, n));
                    let R = Promise.resolve(null);
                    l && M === c.Livemode || (R = this.getSwapRouteFromChain(e, T, g, P, k, f, I, S, O, E, n));
                    let [F, D] = await Promise.all([x, R]), N = !1;
                    if (M === c.Livemode && F ? (r.info(`CacheMode is ${M}, and we are using swapRoute from cache`), N = !0, p = F) : (r.info(`CacheMode is ${M}, and we are using materialized swapRoute`), p = D), M === c.Tapcompare && F && D) {
                        let t = D.quote.subtract(F.quote),
                            n = D.quoteGasAdjusted.subtract(F.quoteGasAdjusted),
                            i = D.estimatedGasUsed.sub(F.estimatedGasUsed);
                        if (!t.equalTo(0) || !(n.equalTo(0) || i.eq(0))) {
                            let a = n.divide(D.quoteGasAdjusted).multiply(100);
                            w.putMetric("TapcompareCachedRoute_quoteGasAdjustedDiffPercent", Number(a.toExact()), o.Percent), r.warn({
                                quoteFromChain: D.quote.toExact(),
                                quoteFromCache: F.quote.toExact(),
                                quoteDiff: t.toExact(),
                                quoteGasAdjustedFromChain: D.quoteGasAdjusted.toExact(),
                                quoteGasAdjustedFromCache: F.quoteGasAdjusted.toExact(),
                                quoteGasAdjustedDiff: n.toExact(),
                                gasUsedFromChain: D.estimatedGasUsed.toString(),
                                gasUsedFromCache: F.estimatedGasUsed.toString(),
                                gasUsedDiff: i.toString(),
                                routesFromChain: D.routes.toString(),
                                routesFromCache: F.routes.toString(),
                                amount: e.toExact(),
                                originalAmount: null == l ? void 0 : l.originalAmount,
                                pair: this.tokenPairSymbolTradeTypeChainId(T, g, f),
                                blockNumber: A
                            }, `Comparing quotes between Chain and Cache for ${this.tokenPairSymbolTradeTypeChainId(T,g,f)}`)
                        }
                    }
                    if (!p) return null;
                    let {
                        quote: B,
                        quoteGasAdjusted: L,
                        estimatedGasUsed: q,
                        routes: U,
                        estimatedGasUsedQuoteToken: V,
                        estimatedGasUsedUSD: G
                    } = p;
                    if (this.routeCachingProvider && I.writeToCachedRoutes && M !== c.Darkmode && D) {
                        let t = fU.fromRoutesWithValidQuotes(D.routes, this.chainId, T, g, P.sort(), await A, f, e.toExact());
                        t ? this.routeCachingProvider.setCachedRoute(t, e).then(e => {
                            w.putMetric(`SetCachedRoute_${e?"success":"rejected"}`, 1, o.Count)
                        }).catch(e => {
                            r.error({
                                reason: e,
                                tokenPair: this.tokenPairSymbolTradeTypeChainId(T, g, f)
                            }, "SetCachedRoute failure"), w.putMetric("SetCachedRoute_failure", 1, o.Count)
                        }) : w.putMetric("SetCachedRoute_unnecessary", 1, o.Count)
                    }
                    w.putMetric(`QuoteFoundForChain${this.chainId}`, 1, o.Count);
                    let j = t$(h, v, f, U);
                    n && (y = tH(j, n, this.chainId));
                    let H = f === m.TradeType.EXACT_OUTPUT ? b : B,
                        W = this.portionProvider.getPortionAmount(H, f, n),
                        Q = this.portionProvider.getPortionQuoteAmount(f, B, e, W),
                        X = this.portionProvider.getQuote(f, B, Q),
                        z = this.portionProvider.getQuoteGasAdjusted(f, L, Q),
                        K = this.portionProvider.getQuoteGasAndPortionAdjusted(f, L, W),
                        Y = {
                            quote: X,
                            quoteGasAdjusted: z,
                            estimatedGasUsed: q,
                            estimatedGasUsedQuoteToken: V,
                            estimatedGasUsedUSD: G,
                            gasPriceWei: E,
                            route: U,
                            trade: j,
                            methodParameters: y,
                            blockNumber: tl.O$.from(await A),
                            hitsCachedRoute: N,
                            portionAmount: W,
                            quoteGasAndPortionAdjusted: K
                        };
                    if (n && n.simulate && y && y.calldata) {
                        if (!this.simulator) throw Error("Simulator not initialized!");
                        r.info(JSON.stringify({
                            swapConfig: n,
                            methodParameters: y,
                            providerConfig: C
                        }, null, 2), "Starting simulation");
                        let f = n.simulate.fromAddress,
                            i = Date.now(),
                            a = await this.simulator.simulate(f, n, Y, e, $.fromRawAmount(t, B.quotient.toString()), this.l2GasDataProvider ? await this.l2GasDataProvider.getGasData() : void 0, C);
                        return w.putMetric("SimulateTransaction", Date.now() - i, o.Milliseconds), a
                    }
                    return Y
                }
                async getSwapRouteFromCache(e, t, f, n, i, a, s, u, c, l) {
                    let p, y;
                    r.info({
                        protocols: e.protocolsCovered,
                        tradeType: e.tradeType,
                        cachedBlockNumber: e.blockNumber,
                        quoteBlockNumber: t
                    }, "Routing across CachedRoute");
                    let b = [],
                        h = e.routes.filter(e => e.protocol === d.V3),
                        m = e.routes.filter(e => e.protocol === d.V2),
                        v = e.routes.filter(e => e.protocol === d.RING),
                        T = e.routes.filter(e => e.protocol === d.MIXED);
                    if (e.routes.length > 1)[p, y] = this.getAmountDistribution(f, a);
                    else {
                        if (1 != e.routes.length) return Promise.resolve(null);
                        [p, y] = [
                            [100],
                            [f]
                        ]
                    }
                    if (h.length > 0) {
                        let e = h.map(e => e.route);
                        w.putMetric("SwapRouteFromCache_V3_GetQuotes_Request", 1, o.Count);
                        let t = Date.now();
                        b.push(this.v3Quoter.getQuotes(e, y, p, n, i, a, void 0, s).then(e => (w.putMetric("SwapRouteFromCache_V3_GetQuotes_Load", Date.now() - t, o.Milliseconds), e)))
                    }
                    if (m.length > 0) {
                        let t = m.map(e => e.route);
                        w.putMetric("SwapRouteFromCache_V2_GetQuotes_Request", 1, o.Count);
                        let f = Date.now();
                        b.push(this.v2Quoter.refreshRoutesThenGetQuotes(e.tokenIn, e.tokenOut, t, y, p, n, i, a, c).then(e => (w.putMetric("SwapRouteFromCache_V2_GetQuotes_Load", Date.now() - f, o.Milliseconds), e)))
                    }
                    if (v.length > 0) {
                        let t = v.map(e => e.route);
                        w.putMetric("SwapRouteFromCache_Ring_GetQuotes_Request", 1, o.Count);
                        let f = Date.now();
                        b.push(this.ringQuoter.refreshRoutesThenGetQuotes(e.tokenIn, e.tokenOut, t, y, p, n, i, a, c).then(e => (w.putMetric("SwapRouteFromCache_Ring_GetQuotes_Load", Date.now() - f, o.Milliseconds), e)))
                    }
                    if (T.length > 0) {
                        let e = T.map(e => e.route);
                        w.putMetric("SwapRouteFromCache_Mixed_GetQuotes_Request", 1, o.Count);
                        let t = Date.now();
                        b.push(this.mixedQuoter.getQuotes(e, y, p, n, i, a, void 0, u).then(e => (w.putMetric("SwapRouteFromCache_Mixed_GetQuotes_Load", Date.now() - t, o.Milliseconds), e)))
                    }
                    let g = await Promise.all(b);
                    return fu(f, p, _().flatMap(g, e => e.routesWithValidQuotes), i, this.chainId, a, this.portionProvider, s, l)
                }
                async getSwapRouteFromChain(e, t, f, n, i, a, s, u, c, l, p) {
                    let [y, b] = this.getAmountDistribution(e, s), h = 0 === n.length, v = n.includes(d.V3), T = n.includes(d.V2), g = n.includes(d.RING), A = n.includes(d.MIXED) || h, I = [m.ChainId.MAINNET, m.ChainId.GOERLI, m.ChainId.BLAST_SEPOLIA, m.ChainId.BLAST].includes(this.chainId) && a === m.TradeType.EXACT_INPUT, E = Date.now(), _ = Promise.resolve(void 0);
                    v && (_ = fy({
                        tokenIn: t,
                        tokenOut: f,
                        tokenProvider: this.tokenProvider,
                        blockedTokenListProvider: this.blockedTokenListProvider,
                        poolProvider: this.v3PoolProvider,
                        routeType: a,
                        subgraphProvider: this.v3SubgraphProvider,
                        routingConfig: s,
                        chainId: this.chainId
                    }).then(e => (w.putMetric("GetV3CandidatePools", Date.now() - E, o.Milliseconds), e)));
                    let k = Promise.resolve(void 0);
                    (T || h || A && I) && (k = fb({
                        tokenIn: t,
                        tokenOut: f,
                        tokenProvider: this.tokenProvider,
                        blockedTokenListProvider: this.blockedTokenListProvider,
                        poolProvider: this.v2PoolProvider,
                        routeType: a,
                        subgraphProvider: this.v2SubgraphProvider,
                        routingConfig: s,
                        chainId: this.chainId
                    }).then(e => (w.putMetric("GetV2CandidatePools", Date.now() - E, o.Milliseconds), e)));
                    let C = Promise.resolve(void 0);
                    (g || h || A && I) && (C = fh({
                        tokenIn: t,
                        tokenOut: f,
                        tokenProvider: this.tokenProvider,
                        blockedTokenListProvider: this.blockedTokenListProvider,
                        poolProvider: this.ringPoolProvider,
                        routeType: a,
                        subgraphProvider: this.ringSubgraphProvider,
                        routingConfig: s,
                        chainId: this.chainId
                    }).then(e => (w.putMetric("GetRingCandidatePools", Date.now() - E, o.Milliseconds), e)));
                    let S = [];
                    if (v) {
                        r.info({
                            protocols: n,
                            tradeType: a
                        }, "Routing across V3"), w.putMetric("SwapRouteFromChain_V3_GetRoutesThenQuotes_Request", 1, o.Count);
                        let d = Date.now();
                        S.push(_.then(n => this.v3Quoter.getRoutesThenQuotes(t, f, e, b, y, i, n, a, s, u).then(e => (w.putMetric("SwapRouteFromChain_V3_GetRoutesThenQuotes_Load", Date.now() - d, o.Milliseconds), e))))
                    }
                    if (T || h) {
                        r.info({
                            protocols: n,
                            tradeType: a
                        }, "Routing across V2"), w.putMetric("SwapRouteFromChain_V2_GetRoutesThenQuotes_Request", 1, o.Count);
                        let u = Date.now();
                        S.push(k.then(n => this.v2Quoter.getRoutesThenQuotes(t, f, e, b, y, i, n, a, s, void 0, l).then(e => (w.putMetric("SwapRouteFromChain_V2_GetRoutesThenQuotes_Load", Date.now() - u, o.Milliseconds), e))))
                    }
                    if (g || h) {
                        r.info({
                            protocols: n,
                            tradeType: a
                        }, "Routing across Ring"), w.putMetric("SwapRouteFromChain_V2_GetRoutesThenQuotes_Request", 1, o.Count);
                        let u = Date.now();
                        S.push(C.then(n => this.ringQuoter.getRoutesThenQuotes(t, f, e, b, y, i, n, a, s, void 0, l).then(e => (w.putMetric("SwapRouteFromChain_Ring_GetRoutesThenQuotes_Load", Date.now() - u, o.Milliseconds), e))))
                    }
                    if (A && I) {
                        r.info({
                            protocols: n,
                            tradeType: a
                        }, "Routing across MixedRoutes"), w.putMetric("SwapRouteFromChain_Mixed_GetRoutesThenQuotes_Request", 1, o.Count);
                        let u = Date.now();
                        S.push(Promise.all([k, C]).then(([n, r]) => this.mixedQuoter.getRoutesThenQuotes(t, f, e, b, y, i, [n, r], a, s, c).then(e => (w.putMetric("SwapRouteFromChain_Mixed_GetRoutesThenQuotes_Load", Date.now() - u, o.Milliseconds), e))))
                    }
                    let O = await Promise.all(S),
                        P = [],
                        M = [];
                    if (O.forEach(e => {
                            P.push(...e.routesWithValidQuotes), e.candidatePools && M.push(e.candidatePools)
                        }), 0 === P.length) return r.info({
                        allRoutesWithValidQuotes: P
                    }, "Received no valid quotes"), null;
                    let x = await fu(e, y, P, a, this.chainId, s, this.portionProvider, u, p);
                    return x && this.emitPoolSelectionMetrics(x, M), x
                }
                tradeTypeStr(e) {
                    return e === m.TradeType.EXACT_INPUT ? "ExactIn" : "ExactOut"
                }
                tokenPairSymbolTradeTypeChainId(e, t, f) {
                    return `${e.symbol}/${t.symbol}/${this.tradeTypeStr(f)}/${this.chainId}`
                }
                determineCurrencyInOutFromTradeType(e, t, f) {
                    return e === m.TradeType.EXACT_INPUT ? {
                        currencyIn: t.currency,
                        currencyOut: f
                    } : {
                        currencyIn: f,
                        currencyOut: t.currency
                    }
                }
                async getGasPriceWei(e) {
                    let t = Date.now(),
                        {
                            gasPriceWei: f
                        } = await this.gasPriceProvider.getGasPrice(e);
                    return w.putMetric("GasPriceLoad", Date.now() - t, o.Milliseconds), f
                }
                getAmountDistribution(e, t) {
                    let {
                        distributionPercent: f
                    } = t, n = [], r = [];
                    for (let t = 1; t <= 100 / f; t++) n.push(t * f), r.push(e.multiply(new m.Fraction(t * f, 100)));
                    return [n, r]
                }
                async buildSwapAndAddMethodParameters(e, t, f) {
                    let {
                        swapOptions: {
                            recipient: n,
                            slippageTolerance: r,
                            deadline: i,
                            inputTokenPermit: a
                        },
                        addLiquidityOptions: o
                    } = t, s = f.preLiquidityPosition, u = f.initialBalanceTokenIn.subtract(e.inputAmount), d = f.initialBalanceTokenOut.add(e.outputAmount), c = await this.swapRouterProvider.getApprovalType(u, d), l = u.currency.wrapped.sortsBefore(d.currency.wrapped);
                    return { ...tb.SwapRouter.swapAndAddCallParameters(e, {
                            recipient: n,
                            slippageTolerance: r,
                            deadlineOrPreviousBlockhash: i,
                            inputTokenPermit: a
                        }, k.Position.fromAmounts({
                            pool: s.pool,
                            tickLower: s.tickLower,
                            tickUpper: s.tickUpper,
                            amount0: l ? u.quotient.toString() : d.quotient.toString(),
                            amount1: l ? d.quotient.toString() : u.quotient.toString(),
                            useFullPrecision: !1
                        }), o, c.approvalTokenIn, c.approvalTokenOut),
                        to: U(this.chainId)
                    }
                }
                emitPoolSelectionMetrics(e, t) {
                    let f = new Set,
                        {
                            routes: n
                        } = e;
                    for (let e of (_()(n).flatMap(e => {
                            let {
                                poolAddresses: t
                            } = e;
                            return t
                        }).forEach(e => {
                            f.add(e.toLowerCase())
                        }), t)) {
                        let {
                            protocol: t
                        } = e;
                        _().forIn(e.selections, (e, n) => {
                            let r = _().findLastIndex(e, e => f.has(e.id.toLowerCase())) + 1;
                            w.putMetric(_().capitalize(`${t}${n}`), r, o.Count)
                        })
                    }
                    let r = !1,
                        i = !1,
                        a = !1,
                        s = !1;
                    for (let e of n) e.protocol === d.V3 && (r = !0), e.protocol === d.V2 && (i = !0), e.protocol === d.RING && (a = !0), e.protocol === d.MIXED && (s = !0);
                    s && (r || i || a) ? r && i && a ? (w.putMetric("MixedAndV3AndV2AndRingSplitRoute", 1, o.Count), w.putMetric(`MixedAndV3AndV2AndRingSplitRouteForChain${this.chainId}`, 1, o.Count)) : r && i ? (w.putMetric("MixedAndV3AndV2SplitRoute", 1, o.Count), w.putMetric(`MixedAndV3AndV2SplitRouteForChain${this.chainId}`, 1, o.Count)) : r && a ? (w.putMetric("MixedAndV3AndRingSplitRoute", 1, o.Count), w.putMetric(`MixedAndV3AndRingSplitRouteForChain${this.chainId}`, 1, o.Count)) : i && a ? (w.putMetric("MixedAndRingAndV2SplitRoute", 1, o.Count), w.putMetric(`MixedAndRingAndV2SplitRouteForChain${this.chainId}`, 1, o.Count)) : r ? (w.putMetric("MixedAndV3SplitRoute", 1, o.Count), w.putMetric(`MixedAndV3SplitRouteForChain${this.chainId}`, 1, o.Count)) : i ? (w.putMetric("MixedAndV3SplitRoute", 1, o.Count), w.putMetric(`MixedAndV2SplitRouteForChain${this.chainId}`, 1, o.Count)) : a && (w.putMetric("MixedAndRingSplitRoute", 1, o.Count), w.putMetric(`MixedAndRingSplitRouteForChain${this.chainId}`, 1, o.Count)) : r && i ? (w.putMetric("V3AndV2SplitRoute", 1, o.Count), w.putMetric(`V3AndV2SplitRouteForChain${this.chainId}`, 1, o.Count)) : r && a ? (w.putMetric("V3AndRingSplitRoute", 1, o.Count), w.putMetric(`V3AndRingSplitRouteForChain${this.chainId}`, 1, o.Count)) : a && i ? (w.putMetric("RingAndV2SplitRoute", 1, o.Count), w.putMetric(`RingAndV2SplitRouteForChain${this.chainId}`, 1, o.Count)) : s ? n.length > 1 ? (w.putMetric("MixedSplitRoute", 1, o.Count), w.putMetric(`MixedSplitRouteForChain${this.chainId}`, 1, o.Count)) : (w.putMetric("MixedRoute", 1, o.Count), w.putMetric(`MixedRouteForChain${this.chainId}`, 1, o.Count)) : r ? n.length > 1 ? (w.putMetric("V3SplitRoute", 1, o.Count), w.putMetric(`V3SplitRouteForChain${this.chainId}`, 1, o.Count)) : (w.putMetric("V3Route", 1, o.Count), w.putMetric(`V3RouteForChain${this.chainId}`, 1, o.Count)) : i ? n.length > 1 ? (w.putMetric("V2SplitRoute", 1, o.Count), w.putMetric(`V2SplitRouteForChain${this.chainId}`, 1, o.Count)) : (w.putMetric("V2Route", 1, o.Count), w.putMetric(`V2RouteForChain${this.chainId}`, 1, o.Count)) : a && (n.length > 1 ? (w.putMetric("RingSplitRoute", 1, o.Count), w.putMetric(`RingSplitRouteForChain${this.chainId}`, 1, o.Count)) : (w.putMetric("RingRoute", 1, o.Count), w.putMetric(`RingRouteForChain${this.chainId}`, 1, o.Count)))
                }
                calculateOptimalRatio(e, t, f) {
                    let n = k.TickMath.getSqrtRatioAtTick(e.tickUpper),
                        r = k.TickMath.getSqrtRatioAtTick(e.tickLower);
                    if (j().greaterThan(t, n) || j().lessThan(t, r)) return new m.Fraction(0, 1);
                    let i = j().BigInt("1" + "0".repeat(18)),
                        a = new m.Fraction(k.SqrtPriceMath.getAmount0Delta(t, n, i, !0), k.SqrtPriceMath.getAmount1Delta(t, r, i, !0));
                    return f || (a = a.invert()), a
                }
                async userHasSufficientBalance(e, t, f, n) {
                    try {
                        let r;
                        let i = t === m.TradeType.EXACT_INPUT ? f : n;
                        if (i.currency.isNative) r = await this.provider.getBalance(e);
                        else {
                            let t = tG.connect(i.currency.address, this.provider);
                            r = await t.balanceOf(e)
                        }
                        return r.gte(tl.O$.from(i.quotient.toString()))
                    } catch (e) {
                        return r.error(e, "Error while checking user balance"), !1
                    }
                }
                absoluteValue(e) {
                    let t = j().lessThan(e.numerator, j().BigInt(0)) ? j().unaryMinus(e.numerator) : e.numerator,
                        f = j().lessThan(e.denominator, j().BigInt(0)) ? j().unaryMinus(e.denominator) : e.denominator;
                    return new m.Fraction(t, f)
                }
                getBlockNumberPromise() {
                    return tm()(async (e, t) => (t > 1 && r.info(`Get block number attempt ${t}`), this.provider.getBlockNumber()), {
                        retries: 2,
                        minTimeout: 100,
                        maxTimeout: 1e3
                    })
                }
                constructor({
                    chainId: e,
                    provider: t,
                    multicall2Provider: f,
                    v3PoolProvider: r,
                    onChainQuoteProvider: i,
                    v2PoolProvider: o,
                    ringPoolProvider: s,
                    v2QuoteProvider: u,
                    ringQuoteProvider: d,
                    v2SubgraphProvider: c,
                    ringSubgraphProvider: l,
                    tokenProvider: p,
                    blockedTokenListProvider: y,
                    v3SubgraphProvider: b,
                    gasPriceProvider: h,
                    v3GasModelFactory: v,
                    v2GasModelFactory: T,
                    ringGasModelFactory: g,
                    mixedRouteGasModelFactory: w,
                    swapRouterProvider: A,
                    optimismGasDataProvider: E,
                    tokenValidatorProvider: _,
                    arbitrumGasDataProvider: k,
                    simulator: C,
                    routeCachingProvider: S,
                    tokenPropertiesProvider: M,
                    portionProvider: x
                }) {
                    let R;
                    if (this.chainId = e, this.provider = t, this.multicall2Provider = null != f ? f : new fJ(e, t, 375e3), this.v3PoolProvider = null != r ? r : new nb(this.chainId, new tU(O(e), this.multicall2Provider), new n(new(tT())({
                            stdTTL: 360,
                            useClones: !1
                        }))), this.simulator = C, this.routeCachingProvider = S, i) this.onChainQuoteProvider = i;
                    else switch (e) {
                        case m.ChainId.OPTIMISM:
                        case m.ChainId.OPTIMISM_GOERLI:
                            this.onChainQuoteProvider = new ne(e, t, this.multicall2Provider, {
                                retries: 2,
                                minTimeout: 100,
                                maxTimeout: 1e3
                            }, {
                                multicallChunk: 110,
                                gasLimitPerCall: 12e5,
                                quoteMinSuccessRate: .1
                            }, {
                                gasLimitOverride: 3e6,
                                multicallChunk: 45
                            }, {
                                gasLimitOverride: 3e6,
                                multicallChunk: 45
                            }, {
                                baseBlockOffset: -10,
                                rollback: {
                                    enabled: !0,
                                    attemptsBeforeRollback: 1,
                                    rollbackBlockOffset: -10
                                }
                            });
                            break;
                        case m.ChainId.BASE:
                        case m.ChainId.BASE_GOERLI:
                            this.onChainQuoteProvider = new ne(e, t, this.multicall2Provider, {
                                retries: 2,
                                minTimeout: 100,
                                maxTimeout: 1e3
                            }, {
                                multicallChunk: 80,
                                gasLimitPerCall: 12e5,
                                quoteMinSuccessRate: .1
                            }, {
                                gasLimitOverride: 3e6,
                                multicallChunk: 45
                            }, {
                                gasLimitOverride: 3e6,
                                multicallChunk: 45
                            }, {
                                baseBlockOffset: -10,
                                rollback: {
                                    enabled: !0,
                                    attemptsBeforeRollback: 1,
                                    rollbackBlockOffset: -10
                                }
                            });
                            break;
                        case m.ChainId.ARBITRUM_ONE:
                        case m.ChainId.ARBITRUM_GOERLI:
                            this.onChainQuoteProvider = new ne(e, t, this.multicall2Provider, {
                                retries: 2,
                                minTimeout: 100,
                                maxTimeout: 1e3
                            }, {
                                multicallChunk: 10,
                                gasLimitPerCall: 12e6,
                                quoteMinSuccessRate: .1
                            }, {
                                gasLimitOverride: 3e7,
                                multicallChunk: 6
                            }, {
                                gasLimitOverride: 3e7,
                                multicallChunk: 6
                            });
                            break;
                        case m.ChainId.CELO:
                        case m.ChainId.CELO_ALFAJORES:
                            this.onChainQuoteProvider = new ne(e, t, this.multicall2Provider, {
                                retries: 2,
                                minTimeout: 100,
                                maxTimeout: 1e3
                            }, {
                                multicallChunk: 10,
                                gasLimitPerCall: 5e6,
                                quoteMinSuccessRate: .1
                            }, {
                                gasLimitOverride: 5e6,
                                multicallChunk: 5
                            }, {
                                gasLimitOverride: 625e4,
                                multicallChunk: 4
                            });
                            break;
                        default:
                            this.onChainQuoteProvider = new ne(e, t, this.multicall2Provider, {
                                retries: 2,
                                minTimeout: 100,
                                maxTimeout: 1e3
                            }, {
                                multicallChunk: 210,
                                gasLimitPerCall: 705e3,
                                quoteMinSuccessRate: .15
                            }, {
                                gasLimitOverride: 2e6,
                                multicallChunk: 70
                            })
                    }
                    _ ? this.tokenValidatorProvider = _ : this.chainId === m.ChainId.MAINNET && (this.tokenValidatorProvider = new tS(this.chainId, this.multicall2Provider, new n(new(tT())({
                        stdTTL: 3e4,
                        useClones: !1
                    })))), M ? this.tokenPropertiesProvider = M : this.tokenPropertiesProvider = new ni(this.chainId, new n(new(tT())({
                        stdTTL: 86400,
                        useClones: !1
                    })), new tE(this.chainId, t)), this.v2PoolProvider = null != o ? o : new nu(e, new tM(e, this.multicall2Provider, this.tokenPropertiesProvider), new n(new(tT())({
                        stdTTL: 60,
                        useClones: !1
                    }))), this.ringPoolProvider = null != s ? s : new ng(e, new nA(e, this.multicall2Provider, this.tokenPropertiesProvider), new n(new(tT())({
                        stdTTL: 60,
                        useClones: !1
                    }))), this.v2QuoteProvider = null != u ? u : new nc, this.ringQuoteProvider = null != d ? d : new nI, this.blockedTokenListProvider = null != y ? y : new I(e, tW, new n(new(tT())({
                        stdTTL: 3600,
                        useClones: !1
                    }))), this.tokenProvider = null != p ? p : new tc(e, new n(new(tT())({
                        stdTTL: 3600,
                        useClones: !1
                    })), new I(e, ty, new n(new(tT())({
                        stdTTL: 3600,
                        useClones: !1
                    }))), new tu(e, this.multicall2Provider)), this.portionProvider = null != x ? x : new tg;
                    let F = P(e);
                    l ? this.ringSubgraphProvider = l : this.ringSubgraphProvider = new nk([new nw(e, new ns(e, `https://cloudflare-ipfs.com/ipns/api.uniswap.org/v1/pools/v2/${F}.json`, void 0, 0), new n(new(tT())({
                        stdTTL: 300,
                        useClones: !1
                    }))), new n_(e)]), c ? this.v2SubgraphProvider = c : this.v2SubgraphProvider = new ny([new nd(e, new ns(e, `https://cloudflare-ipfs.com/ipns/api.uniswap.org/v1/pools/v2/${F}.json`, void 0, 0), new n(new(tT())({
                        stdTTL: 300,
                        useClones: !1
                    }))), new np(e)]), b ? this.v3SubgraphProvider = b : this.v3SubgraphProvider = new nT([new nh(e, new ns(e, `https://cloudflare-ipfs.com/ipns/api.uniswap.org/v1/pools/v3/${F}.json`, void 0, 0), new n(new(tT())({
                        stdTTL: 300,
                        useClones: !1
                    }))), new nv(e, this.v3PoolProvider)]), R = tp.r.isProvider(this.provider) ? new f0(e, new fV(this.provider), new fW(this.provider)) : new fH("https://ethgasstation.info/api/ethgasAPI.json"), this.gasPriceProvider = null != h ? h : new a(e, R, new n(new(tT())({
                        stdTTL: 7,
                        useClones: !1
                    }))), this.v3GasModelFactory = null != v ? v : new fs, this.v2GasModelFactory = null != T ? T : new fI, this.ringGasModelFactory = null != g ? g : new fg, this.mixedRouteGasModelFactory = null != w ? w : new fE, this.swapRouterProvider = null != A ? A : new nr(this.multicall2Provider, this.chainId), (e === m.ChainId.OPTIMISM || e === m.ChainId.BASE) && (this.l2GasDataProvider = null != E ? E : new tN(e, this.multicall2Provider)), (e === m.ChainId.ARBITRUM_ONE || e === m.ChainId.ARBITRUM_GOERLI) && (this.l2GasDataProvider = null != k ? k : new tB(e, this.provider)), this.v2Quoter = new fF(this.v2SubgraphProvider, this.v2PoolProvider, this.v2QuoteProvider, this.v2GasModelFactory, this.tokenProvider, this.chainId, this.blockedTokenListProvider, this.tokenValidatorProvider), this.ringQuoter = new fN(this.ringSubgraphProvider, this.ringPoolProvider, this.ringQuoteProvider, this.ringGasModelFactory, this.tokenProvider, this.chainId, this.blockedTokenListProvider, this.tokenValidatorProvider), this.v3Quoter = new fD(this.v3SubgraphProvider, this.v3PoolProvider, this.onChainQuoteProvider, this.tokenProvider, this.chainId, this.blockedTokenListProvider, this.tokenValidatorProvider), this.mixedQuoter = new fR(this.v3SubgraphProvider, this.v3PoolProvider, this.v2SubgraphProvider, this.v2PoolProvider, this.ringSubgraphProvider, this.ringPoolProvider, this.onChainQuoteProvider, this.tokenProvider, this.chainId, this.blockedTokenListProvider, this.tokenValidatorProvider)
                }
            }
            class fq {
                get protocol() {
                    return this.route.protocol
                }
                get tokenIn() {
                    return this.route.input
                }
                get tokenOut() {
                    return this.route.output
                }
                get routePath() {
                    return this.protocol == d.V3 ? this.route.pools.map(e => `[V3]${e.token0.address}/${e.token1.address}/${e.fee}`).join("->") : this.protocol == d.V2 ? this.route.pairs.map(e => `[V2]${e.token0.address}/${e.token1.address}`).join("->") : this.protocol == d.RING ? this.route.pairs.map(e => `[RING]${e.token0.address}/${e.token1.address}`).join("->") : this.route.pools.map(e => e instanceof tz ? `[RING]${e.token0.address}/${e.token1.address}` : e instanceof k.Pool ? `[V3]${e.token0.address}/${e.token1.address}/${e.fee}` : `[V2]${e.token0.address}/${e.token1.address}`).join("->")
                }
                get routeId() {
                    return this.hashCode(this.routePath)
                }
                constructor({
                    route: e,
                    percent: t
                }) {
                    this.hashCode = e => [...e].reduce((e, t) => Math.imul(31, e) + t.charCodeAt(0) | 0, 0), this.route = e, this.percent = t
                }
            }
            class fU {
                static fromRoutesWithValidQuotes(e, t, f, n, r, i, a, o) {
                    if (0 != e.length) return new fU({
                        routes: _().map(e, e => new fq({
                            route: e.route,
                            percent: e.percent
                        })),
                        chainId: t,
                        tokenIn: f,
                        tokenOut: n,
                        protocolsCovered: r,
                        blockNumber: i,
                        tradeType: a,
                        originalAmount: o
                    })
                }
                notExpired(e, t = !1) {
                    let f = t ? this.blocksToLive : 0;
                    return e - this.blockNumber <= f
                }
                constructor({
                    routes: e,
                    chainId: t,
                    tokenIn: f,
                    tokenOut: n,
                    protocolsCovered: r,
                    blockNumber: i,
                    tradeType: a,
                    originalAmount: o,
                    blocksToLive: s = 0
                }) {
                    this.routes = e, this.chainId = t, this.tokenIn = f, this.tokenOut = n, this.protocolsCovered = r, this.blockNumber = i, this.tradeType = a, this.originalAmount = o, this.blocksToLive = s
                }
            }
            class fV extends i {
                async getGasPrice(e) {
                    let t = await this.provider.send("eth_feeHistory", [tl.O$.from(this.blocksToConsider).toHexString().replace("0x0", "0x"), tl.O$.from(e).toHexString().replace("0x0", "0x"), [this.priorityFeePercentile]]),
                        f = {
                            baseFeePerGas: _().map(t.baseFeePerGas, e => tl.O$.from(e)),
                            gasUsedRatio: t.gasUsedRatio,
                            oldestBlock: tl.O$.from(t.oldestBlock),
                            reward: _().map(t.reward, e => tl.O$.from(e[0]))
                        },
                        n = f.baseFeePerGas[f.baseFeePerGas.length - 1],
                        i = _().reduce(f.reward, (e, t) => e.add(t), tl.O$.from(0)).div(f.reward.length);
                    r.info({
                        feeHistory: f,
                        feeHistoryReadable: {
                            baseFeePerGas: _().map(f.baseFeePerGas, e => e.toString()),
                            oldestBlock: f.oldestBlock.toString(),
                            reward: _().map(f.reward, e => e.toString())
                        },
                        nextBlockBaseFeePerGas: n.toString(),
                        averagePriorityFeePerGas: i.toString()
                    }, "Got fee history from provider and computed gas estimate");
                    let a = n.add(i),
                        o = f.oldestBlock.add(this.blocksToConsider);
                    return r.info(`Estimated gas price in wei: ${a} as of block ${o.toString()}`), {
                        gasPriceWei: a
                    }
                }
                constructor(e, t = 50, f = 4) {
                    super(), this.provider = e, this.priorityFeePercentile = t, this.blocksToConsider = f
                }
            }
            let fG = [{
                    inputs: [{
                        internalType: "uint256",
                        name: "deadline",
                        type: "uint256"
                    }],
                    name: "AllowanceExpired",
                    type: "error"
                }, {
                    inputs: [],
                    name: "ExcessiveInvalidation",
                    type: "error"
                }, {
                    inputs: [{
                        internalType: "uint256",
                        name: "amount",
                        type: "uint256"
                    }],
                    name: "InsufficientAllowance",
                    type: "error"
                }, {
                    inputs: [{
                        internalType: "uint256",
                        name: "maxAmount",
                        type: "uint256"
                    }],
                    name: "InvalidAmount",
                    type: "error"
                }, {
                    inputs: [],
                    name: "InvalidContractSignature",
                    type: "error"
                }, {
                    inputs: [],
                    name: "InvalidNonce",
                    type: "error"
                }, {
                    inputs: [],
                    name: "InvalidSignature",
                    type: "error"
                }, {
                    inputs: [],
                    name: "InvalidSignatureLength",
                    type: "error"
                }, {
                    inputs: [],
                    name: "InvalidSigner",
                    type: "error"
                }, {
                    inputs: [],
                    name: "LengthMismatch",
                    type: "error"
                }, {
                    inputs: [{
                        internalType: "uint256",
                        name: "signatureDeadline",
                        type: "uint256"
                    }],
                    name: "SignatureExpired",
                    type: "error"
                }, {
                    anonymous: !1,
                    inputs: [{
                        indexed: !0,
                        internalType: "address",
                        name: "owner",
                        type: "address"
                    }, {
                        indexed: !0,
                        internalType: "address",
                        name: "token",
                        type: "address"
                    }, {
                        indexed: !0,
                        internalType: "address",
                        name: "spender",
                        type: "address"
                    }, {
                        indexed: !1,
                        internalType: "uint160",
                        name: "amount",
                        type: "uint160"
                    }, {
                        indexed: !1,
                        internalType: "uint48",
                        name: "expiration",
                        type: "uint48"
                    }],
                    name: "Approval",
                    type: "event"
                }, {
                    anonymous: !1,
                    inputs: [{
                        indexed: !0,
                        internalType: "address",
                        name: "owner",
                        type: "address"
                    }, {
                        indexed: !1,
                        internalType: "address",
                        name: "token",
                        type: "address"
                    }, {
                        indexed: !1,
                        internalType: "address",
                        name: "spender",
                        type: "address"
                    }],
                    name: "Lockdown",
                    type: "event"
                }, {
                    anonymous: !1,
                    inputs: [{
                        indexed: !0,
                        internalType: "address",
                        name: "owner",
                        type: "address"
                    }, {
                        indexed: !0,
                        internalType: "address",
                        name: "token",
                        type: "address"
                    }, {
                        indexed: !0,
                        internalType: "address",
                        name: "spender",
                        type: "address"
                    }, {
                        indexed: !1,
                        internalType: "uint48",
                        name: "newNonce",
                        type: "uint48"
                    }, {
                        indexed: !1,
                        internalType: "uint48",
                        name: "oldNonce",
                        type: "uint48"
                    }],
                    name: "NonceInvalidation",
                    type: "event"
                }, {
                    anonymous: !1,
                    inputs: [{
                        indexed: !0,
                        internalType: "address",
                        name: "owner",
                        type: "address"
                    }, {
                        indexed: !0,
                        internalType: "address",
                        name: "token",
                        type: "address"
                    }, {
                        indexed: !0,
                        internalType: "address",
                        name: "spender",
                        type: "address"
                    }, {
                        indexed: !1,
                        internalType: "uint160",
                        name: "amount",
                        type: "uint160"
                    }, {
                        indexed: !1,
                        internalType: "uint48",
                        name: "expiration",
                        type: "uint48"
                    }, {
                        indexed: !1,
                        internalType: "uint48",
                        name: "nonce",
                        type: "uint48"
                    }],
                    name: "Permit",
                    type: "event"
                }, {
                    anonymous: !1,
                    inputs: [{
                        indexed: !0,
                        internalType: "address",
                        name: "owner",
                        type: "address"
                    }, {
                        indexed: !1,
                        internalType: "uint256",
                        name: "word",
                        type: "uint256"
                    }, {
                        indexed: !1,
                        internalType: "uint256",
                        name: "mask",
                        type: "uint256"
                    }],
                    name: "UnorderedNonceInvalidation",
                    type: "event"
                }, {
                    inputs: [],
                    name: "DOMAIN_SEPARATOR",
                    outputs: [{
                        internalType: "bytes32",
                        name: "",
                        type: "bytes32"
                    }],
                    stateMutability: "view",
                    type: "function"
                }, {
                    inputs: [{
                        internalType: "address",
                        name: "",
                        type: "address"
                    }, {
                        internalType: "address",
                        name: "",
                        type: "address"
                    }, {
                        internalType: "address",
                        name: "",
                        type: "address"
                    }],
                    name: "allowance",
                    outputs: [{
                        internalType: "uint160",
                        name: "amount",
                        type: "uint160"
                    }, {
                        internalType: "uint48",
                        name: "expiration",
                        type: "uint48"
                    }, {
                        internalType: "uint48",
                        name: "nonce",
                        type: "uint48"
                    }],
                    stateMutability: "view",
                    type: "function"
                }, {
                    inputs: [{
                        internalType: "address",
                        name: "token",
                        type: "address"
                    }, {
                        internalType: "address",
                        name: "spender",
                        type: "address"
                    }, {
                        internalType: "uint160",
                        name: "amount",
                        type: "uint160"
                    }, {
                        internalType: "uint48",
                        name: "expiration",
                        type: "uint48"
                    }],
                    name: "approve",
                    outputs: [],
                    stateMutability: "nonpayable",
                    type: "function"
                }, {
                    inputs: [{
                        internalType: "address",
                        name: "token",
                        type: "address"
                    }, {
                        internalType: "address",
                        name: "spender",
                        type: "address"
                    }, {
                        internalType: "uint48",
                        name: "newNonce",
                        type: "uint48"
                    }],
                    name: "invalidateNonces",
                    outputs: [],
                    stateMutability: "nonpayable",
                    type: "function"
                }, {
                    inputs: [{
                        internalType: "uint256",
                        name: "wordPos",
                        type: "uint256"
                    }, {
                        internalType: "uint256",
                        name: "mask",
                        type: "uint256"
                    }],
                    name: "invalidateUnorderedNonces",
                    outputs: [],
                    stateMutability: "nonpayable",
                    type: "function"
                }, {
                    inputs: [{
                        components: [{
                            internalType: "address",
                            name: "token",
                            type: "address"
                        }, {
                            internalType: "address",
                            name: "spender",
                            type: "address"
                        }],
                        internalType: "struct IAllowanceTransfer.TokenSpenderPair[]",
                        name: "approvals",
                        type: "tuple[]"
                    }],
                    name: "lockdown",
                    outputs: [],
                    stateMutability: "nonpayable",
                    type: "function"
                }, {
                    inputs: [{
                        internalType: "address",
                        name: "",
                        type: "address"
                    }, {
                        internalType: "uint256",
                        name: "",
                        type: "uint256"
                    }],
                    name: "nonceBitmap",
                    outputs: [{
                        internalType: "uint256",
                        name: "",
                        type: "uint256"
                    }],
                    stateMutability: "view",
                    type: "function"
                }, {
                    inputs: [{
                        internalType: "address",
                        name: "owner",
                        type: "address"
                    }, {
                        components: [{
                            components: [{
                                internalType: "address",
                                name: "token",
                                type: "address"
                            }, {
                                internalType: "uint160",
                                name: "amount",
                                type: "uint160"
                            }, {
                                internalType: "uint48",
                                name: "expiration",
                                type: "uint48"
                            }, {
                                internalType: "uint48",
                                name: "nonce",
                                type: "uint48"
                            }],
                            internalType: "struct IAllowanceTransfer.PermitDetails[]",
                            name: "details",
                            type: "tuple[]"
                        }, {
                            internalType: "address",
                            name: "spender",
                            type: "address"
                        }, {
                            internalType: "uint256",
                            name: "sigDeadline",
                            type: "uint256"
                        }],
                        internalType: "struct IAllowanceTransfer.PermitBatch",
                        name: "permitBatch",
                        type: "tuple"
                    }, {
                        internalType: "bytes",
                        name: "signature",
                        type: "bytes"
                    }],
                    name: "permit",
                    outputs: [],
                    stateMutability: "nonpayable",
                    type: "function"
                }, {
                    inputs: [{
                        internalType: "address",
                        name: "owner",
                        type: "address"
                    }, {
                        components: [{
                            components: [{
                                internalType: "address",
                                name: "token",
                                type: "address"
                            }, {
                                internalType: "uint160",
                                name: "amount",
                                type: "uint160"
                            }, {
                                internalType: "uint48",
                                name: "expiration",
                                type: "uint48"
                            }, {
                                internalType: "uint48",
                                name: "nonce",
                                type: "uint48"
                            }],
                            internalType: "struct IAllowanceTransfer.PermitDetails",
                            name: "details",
                            type: "tuple"
                        }, {
                            internalType: "address",
                            name: "spender",
                            type: "address"
                        }, {
                            internalType: "uint256",
                            name: "sigDeadline",
                            type: "uint256"
                        }],
                        internalType: "struct IAllowanceTransfer.PermitSingle",
                        name: "permitSingle",
                        type: "tuple"
                    }, {
                        internalType: "bytes",
                        name: "signature",
                        type: "bytes"
                    }],
                    name: "permit",
                    outputs: [],
                    stateMutability: "nonpayable",
                    type: "function"
                }, {
                    inputs: [{
                        components: [{
                            components: [{
                                internalType: "address",
                                name: "token",
                                type: "address"
                            }, {
                                internalType: "uint256",
                                name: "amount",
                                type: "uint256"
                            }],
                            internalType: "struct ISignatureTransfer.TokenPermissions",
                            name: "permitted",
                            type: "tuple"
                        }, {
                            internalType: "uint256",
                            name: "nonce",
                            type: "uint256"
                        }, {
                            internalType: "uint256",
                            name: "deadline",
                            type: "uint256"
                        }],
                        internalType: "struct ISignatureTransfer.PermitTransferFrom",
                        name: "permit",
                        type: "tuple"
                    }, {
                        components: [{
                            internalType: "address",
                            name: "to",
                            type: "address"
                        }, {
                            internalType: "uint256",
                            name: "requestedAmount",
                            type: "uint256"
                        }],
                        internalType: "struct ISignatureTransfer.SignatureTransferDetails",
                        name: "transferDetails",
                        type: "tuple"
                    }, {
                        internalType: "address",
                        name: "owner",
                        type: "address"
                    }, {
                        internalType: "bytes",
                        name: "signature",
                        type: "bytes"
                    }],
                    name: "permitTransferFrom",
                    outputs: [],
                    stateMutability: "nonpayable",
                    type: "function"
                }, {
                    inputs: [{
                        components: [{
                            components: [{
                                internalType: "address",
                                name: "token",
                                type: "address"
                            }, {
                                internalType: "uint256",
                                name: "amount",
                                type: "uint256"
                            }],
                            internalType: "struct ISignatureTransfer.TokenPermissions[]",
                            name: "permitted",
                            type: "tuple[]"
                        }, {
                            internalType: "uint256",
                            name: "nonce",
                            type: "uint256"
                        }, {
                            internalType: "uint256",
                            name: "deadline",
                            type: "uint256"
                        }],
                        internalType: "struct ISignatureTransfer.PermitBatchTransferFrom",
                        name: "permit",
                        type: "tuple"
                    }, {
                        components: [{
                            internalType: "address",
                            name: "to",
                            type: "address"
                        }, {
                            internalType: "uint256",
                            name: "requestedAmount",
                            type: "uint256"
                        }],
                        internalType: "struct ISignatureTransfer.SignatureTransferDetails[]",
                        name: "transferDetails",
                        type: "tuple[]"
                    }, {
                        internalType: "address",
                        name: "owner",
                        type: "address"
                    }, {
                        internalType: "bytes",
                        name: "signature",
                        type: "bytes"
                    }],
                    name: "permitTransferFrom",
                    outputs: [],
                    stateMutability: "nonpayable",
                    type: "function"
                }, {
                    inputs: [{
                        components: [{
                            components: [{
                                internalType: "address",
                                name: "token",
                                type: "address"
                            }, {
                                internalType: "uint256",
                                name: "amount",
                                type: "uint256"
                            }],
                            internalType: "struct ISignatureTransfer.TokenPermissions",
                            name: "permitted",
                            type: "tuple"
                        }, {
                            internalType: "uint256",
                            name: "nonce",
                            type: "uint256"
                        }, {
                            internalType: "uint256",
                            name: "deadline",
                            type: "uint256"
                        }],
                        internalType: "struct ISignatureTransfer.PermitTransferFrom",
                        name: "permit",
                        type: "tuple"
                    }, {
                        components: [{
                            internalType: "address",
                            name: "to",
                            type: "address"
                        }, {
                            internalType: "uint256",
                            name: "requestedAmount",
                            type: "uint256"
                        }],
                        internalType: "struct ISignatureTransfer.SignatureTransferDetails",
                        name: "transferDetails",
                        type: "tuple"
                    }, {
                        internalType: "address",
                        name: "owner",
                        type: "address"
                    }, {
                        internalType: "bytes32",
                        name: "witness",
                        type: "bytes32"
                    }, {
                        internalType: "string",
                        name: "witnessTypeString",
                        type: "string"
                    }, {
                        internalType: "bytes",
                        name: "signature",
                        type: "bytes"
                    }],
                    name: "permitWitnessTransferFrom",
                    outputs: [],
                    stateMutability: "nonpayable",
                    type: "function"
                }, {
                    inputs: [{
                        components: [{
                            components: [{
                                internalType: "address",
                                name: "token",
                                type: "address"
                            }, {
                                internalType: "uint256",
                                name: "amount",
                                type: "uint256"
                            }],
                            internalType: "struct ISignatureTransfer.TokenPermissions[]",
                            name: "permitted",
                            type: "tuple[]"
                        }, {
                            internalType: "uint256",
                            name: "nonce",
                            type: "uint256"
                        }, {
                            internalType: "uint256",
                            name: "deadline",
                            type: "uint256"
                        }],
                        internalType: "struct ISignatureTransfer.PermitBatchTransferFrom",
                        name: "permit",
                        type: "tuple"
                    }, {
                        components: [{
                            internalType: "address",
                            name: "to",
                            type: "address"
                        }, {
                            internalType: "uint256",
                            name: "requestedAmount",
                            type: "uint256"
                        }],
                        internalType: "struct ISignatureTransfer.SignatureTransferDetails[]",
                        name: "transferDetails",
                        type: "tuple[]"
                    }, {
                        internalType: "address",
                        name: "owner",
                        type: "address"
                    }, {
                        internalType: "bytes32",
                        name: "witness",
                        type: "bytes32"
                    }, {
                        internalType: "string",
                        name: "witnessTypeString",
                        type: "string"
                    }, {
                        internalType: "bytes",
                        name: "signature",
                        type: "bytes"
                    }],
                    name: "permitWitnessTransferFrom",
                    outputs: [],
                    stateMutability: "nonpayable",
                    type: "function"
                }, {
                    inputs: [{
                        components: [{
                            internalType: "address",
                            name: "from",
                            type: "address"
                        }, {
                            internalType: "address",
                            name: "to",
                            type: "address"
                        }, {
                            internalType: "uint160",
                            name: "amount",
                            type: "uint160"
                        }, {
                            internalType: "address",
                            name: "token",
                            type: "address"
                        }],
                        internalType: "struct IAllowanceTransfer.AllowanceTransferDetails[]",
                        name: "transferDetails",
                        type: "tuple[]"
                    }],
                    name: "transferFrom",
                    outputs: [],
                    stateMutability: "nonpayable",
                    type: "function"
                }, {
                    inputs: [{
                        internalType: "address",
                        name: "from",
                        type: "address"
                    }, {
                        internalType: "address",
                        name: "to",
                        type: "address"
                    }, {
                        internalType: "uint160",
                        name: "amount",
                        type: "uint160"
                    }, {
                        internalType: "address",
                        name: "token",
                        type: "address"
                    }],
                    name: "transferFrom",
                    outputs: [],
                    stateMutability: "nonpayable",
                    type: "function"
                }],
                fj = "0x60c0346100bb574660a052602081017f8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a86681527f9ac997416e8ff9d2ff6bebeb7149f65cdae5e32e2b90440b566bb3044041d36a60408301524660608301523060808301526080825260a082019180831060018060401b038411176100a557826040525190206080526123c090816100c1823960805181611a90015260a05181611a6a0152f35b634e487b7160e01b600052604160045260246000fd5b600080fdfe6040608081526004908136101561001557600080fd5b600090813560e01c80630d58b1db1461126c578063137c29fe146110755780632a2d80d114610db75780632b67b57014610bde57806330f28b7a14610ade5780633644e51514610a9d57806336c7851614610a285780633ff9dcb1146109a85780634fe02b441461093f57806365d9723c146107ac57806387517c451461067a578063927da105146105c3578063cc53287f146104a3578063edd9444b1461033a5763fe8ec1a7146100c657600080fd5b346103365760c07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126103365767ffffffffffffffff833581811161033257610114903690860161164b565b60243582811161032e5761012b903690870161161a565b6101336114e6565b9160843585811161032a5761014b9036908a016115c1565b98909560a43590811161032657610164913691016115c1565b969095815190610173826113ff565b606b82527f5065726d697442617463685769746e6573735472616e7366657246726f6d285460208301527f6f6b656e5065726d697373696f6e735b5d207065726d69747465642c61646472838301527f657373207370656e6465722c75696e74323536206e6f6e63652c75696e74323560608301527f3620646561646c696e652c000000000000000000000000000000000000000000608083015282519a8b9181610222602085018096611edc565b918237018a8152039961025b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe09b8c8101835282611437565b5190209085515161026b81611e04565b908a5b8181106102f95750506102f6999a6102ed9183516102a081610294602082018095611eaf565b03848101835282611437565b519020602089810151858b015195519182019687526040820192909252336060820152608081019190915260a081019390935260643560c08401528260e081015b03908101835282611437565b51902093611c40565b80f35b8061031161030b610321938c5161175e565b51611f9d565b61031b828661175e565b52611e53565b61026e565b8880fd5b8780fd5b8480fd5b8380fd5b5080fd5b5091346103365760807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126103365767ffffffffffffffff9080358281116103325761038b903690830161164b565b60243583811161032e576103a2903690840161161a565b9390926103ad6114e6565b9160643590811161049f576103c4913691016115c1565b949093835151976103d489611e04565b98885b81811061047d5750506102f697988151610425816103f9602082018095611eaf565b037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08101835282611437565b5190206020860151828701519083519260208401947ffcf35f5ac6a2c28868dc44c302166470266239195f02b0ee408334829333b7668652840152336060840152608083015260a082015260a081526102ed8161141b565b808b61031b8261049461030b61049a968d5161175e565b9261175e565b6103d7565b8680fd5b5082346105bf57602090817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126103325780359067ffffffffffffffff821161032e576104f49136910161161a565b929091845b848110610504578580f35b8061051a61051560019388886118b5565b6118c5565b61052f84610529848a8a6118b5565b016118c5565b3389528385528589209173ffffffffffffffffffffffffffffffffffffffff80911692838b528652868a20911690818a5285528589207fffffffffffffffffffffffff000000000000000000000000000000000000000081541690558551918252848201527f89b1add15eff56b3dfe299ad94e01f2b52fbcb80ae1a3baea6ae8c04cb2b98a4853392a2016104f9565b8280fd5b50346103365760607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261033657610676816105ff6114a0565b936106086114c3565b6106106114e6565b73ffffffffffffffffffffffffffffffffffffffff968716835260016020908152848420928816845291825283832090871683528152919020549251938316845260a083901c65ffffffffffff169084015260d09190911c604083015281906060820190565b0390f35b50346103365760807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610336576106b26114a0565b906106bb6114c3565b916106c46114e6565b65ffffffffffff926064358481169081810361032a5779ffffffffffff0000000000000000000000000000000000000000947fda9fa7c1b00402c17d0161b249b1ab8bbec047c5a52207b9c112deffd817036b94338a5260016020527fffffffffffff0000000000000000000000000000000000000000000000000000858b209873ffffffffffffffffffffffffffffffffffffffff809416998a8d5260205283878d209b169a8b8d52602052868c209486156000146107a457504216925b8454921697889360a01b16911617179055815193845260208401523392a480f35b905092610783565b5082346105bf5760607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126105bf576107e56114a0565b906107ee6114c3565b9265ffffffffffff604435818116939084810361032a57338852602091600183528489209673ffffffffffffffffffffffffffffffffffffffff80911697888b528452858a20981697888a5283528489205460d01c93848711156109175761ffff9085840316116108f05750907f55eb90d810e1700b35a8e7e25395ff7f2b2259abd7415ca2284dfb1c246418f393929133895260018252838920878a528252838920888a5282528389209079ffffffffffffffffffffffffffffffffffffffffffffffffffff7fffffffffffff000000000000000000000000000000000000000000000000000083549260d01b16911617905582519485528401523392a480f35b84517f24d35a26000000000000000000000000000000000000000000000000000000008152fd5b5084517f756688fe000000000000000000000000000000000000000000000000000000008152fd5b503461033657807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610336578060209273ffffffffffffffffffffffffffffffffffffffff61098f6114a0565b1681528084528181206024358252845220549051908152f35b5082346105bf57817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126105bf577f3704902f963766a4e561bbaab6e6cdc1b1dd12f6e9e99648da8843b3f46b918d90359160243533855284602052818520848652602052818520818154179055815193845260208401523392a280f35b8234610a9a5760807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610a9a57610a606114a0565b610a686114c3565b610a706114e6565b6064359173ffffffffffffffffffffffffffffffffffffffff8316830361032e576102f6936117a1565b80fd5b503461033657817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261033657602090610ad7611a67565b9051908152f35b508290346105bf576101007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126105bf57610b1a3661152a565b90807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7c36011261033257610b4c611478565b9160e43567ffffffffffffffff8111610bda576102f694610b6f913691016115c1565b939092610b7c8351611f9d565b6020840151828501519083519260208401947f939c21a48a8dbe3a9a2404a1d46691e4d39f6583d6ec6b35714604c986d801068652840152336060840152608083015260a082015260a08152610bd18161141b565b51902091611b6e565b8580fd5b509134610336576101007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261033657610c186114a0565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffdc360160c08112610332576080855191610c51836113e3565b1261033257845190610c6282611398565b73ffffffffffffffffffffffffffffffffffffffff91602435838116810361049f578152604435838116810361049f57602082015265ffffffffffff606435818116810361032a5788830152608435908116810361049f576060820152815260a435938285168503610bda576020820194855260c4359087830182815260e43567ffffffffffffffff811161032657610cfe90369084016115c1565b929093804211610d88575050918591610d786102f6999a610d7e95610d238851611f07565b90898c511690519083519260208401947ff3841cd1ff0085026a6327b620b67997ce40f282c88a8e905a7a5626e310f3d086528401526060830152608082015260808152610d70816113ff565b519020611b22565b91612010565b51925116916118e6565b602492508a51917fcd21db4f000000000000000000000000000000000000000000000000000000008352820152fd5b5091346103365760607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc93818536011261033257610df36114a0565b9260249081359267ffffffffffffffff9788851161032a578590853603011261049f578051978589018981108282111761104a578252848301358181116103265785019036602383011215610326578382013591610e50836115ef565b90610e5d85519283611437565b838252602093878584019160071b83010191368311611046578801905b828210610fe9575050508a526044610e93868801611509565b96838c01978852013594838b0191868352604435908111610fe557610ebb90369087016115c1565b959096804211610fba575050508998995151610ed681611e04565b908b5b818110610f9757505092889492610d7892610f6497958351610f02816103f98682018095611eaf565b5190209073ffffffffffffffffffffffffffffffffffffffff9a8b8b51169151928551948501957faf1b0d30d2cab0380e68f0689007e3254993c596f2fdd0aaa7f4d04f794408638752850152830152608082015260808152610d70816113ff565b51169082515192845b848110610f78578580f35b80610f918585610f8b600195875161175e565b516118e6565b01610f6d565b80610311610fac8e9f9e93610fb2945161175e565b51611f07565b9b9a9b610ed9565b8551917fcd21db4f000000000000000000000000000000000000000000000000000000008352820152fd5b8a80fd5b6080823603126110465785608091885161100281611398565b61100b85611509565b8152611018838601611509565b838201526110278a8601611607565b8a8201528d611037818701611607565b90820152815201910190610e7a565b8c80fd5b84896041867f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b5082346105bf576101407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126105bf576110b03661152a565b91807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7c360112610332576110e2611478565b67ffffffffffffffff93906101043585811161049f5761110590369086016115c1565b90936101243596871161032a57611125610bd1966102f6983691016115c1565b969095825190611134826113ff565b606482527f5065726d69745769746e6573735472616e7366657246726f6d28546f6b656e5060208301527f65726d697373696f6e73207065726d69747465642c6164647265737320737065848301527f6e6465722c75696e74323536206e6f6e63652c75696e7432353620646561646c60608301527f696e652c0000000000000000000000000000000000000000000000000000000060808301528351948591816111e3602085018096611edc565b918237018b8152039361121c7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe095868101835282611437565b5190209261122a8651611f9d565b6020878101518589015195519182019687526040820192909252336060820152608081019190915260a081019390935260e43560c08401528260e081016102e1565b5082346105bf576020807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261033257813567ffffffffffffffff92838211610bda5736602383011215610bda5781013592831161032e576024906007368386831b8401011161049f57865b8581106112e5578780f35b80821b83019060807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffdc83360301126103265761139288876001946060835161132c81611398565b611368608461133c8d8601611509565b9485845261134c60448201611509565b809785015261135d60648201611509565b809885015201611509565b918291015273ffffffffffffffffffffffffffffffffffffffff80808093169516931691166117a1565b016112da565b6080810190811067ffffffffffffffff8211176113b457604052565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6060810190811067ffffffffffffffff8211176113b457604052565b60a0810190811067ffffffffffffffff8211176113b457604052565b60c0810190811067ffffffffffffffff8211176113b457604052565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff8211176113b457604052565b60c4359073ffffffffffffffffffffffffffffffffffffffff8216820361149b57565b600080fd5b6004359073ffffffffffffffffffffffffffffffffffffffff8216820361149b57565b6024359073ffffffffffffffffffffffffffffffffffffffff8216820361149b57565b6044359073ffffffffffffffffffffffffffffffffffffffff8216820361149b57565b359073ffffffffffffffffffffffffffffffffffffffff8216820361149b57565b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc01906080821261149b576040805190611563826113e3565b8082941261149b57805181810181811067ffffffffffffffff8211176113b457825260043573ffffffffffffffffffffffffffffffffffffffff8116810361149b578152602435602082015282526044356020830152606435910152565b9181601f8401121561149b5782359167ffffffffffffffff831161149b576020838186019501011161149b57565b67ffffffffffffffff81116113b45760051b60200190565b359065ffffffffffff8216820361149b57565b9181601f8401121561149b5782359167ffffffffffffffff831161149b576020808501948460061b01011161149b57565b91909160608184031261149b576040805191611666836113e3565b8294813567ffffffffffffffff9081811161149b57830182601f8201121561149b578035611693816115ef565b926116a087519485611437565b818452602094858086019360061b8501019381851161149b579086899897969594939201925b8484106116e3575050505050855280820135908501520135910152565b90919293949596978483031261149b578851908982019082821085831117611730578a928992845261171487611509565b81528287013583820152815201930191908897969594936116c6565b602460007f4e487b710000000000000000000000000000000000000000000000000000000081526041600452fd5b80518210156117725760209160051b010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b92919273ffffffffffffffffffffffffffffffffffffffff604060008284168152600160205282828220961695868252602052818120338252602052209485549565ffffffffffff8760a01c16804211611884575082871696838803611812575b5050611810955016926122fc565b565b878484161160001461184f57602488604051907ff96fb0710000000000000000000000000000000000000000000000000000000082526004820152fd5b7fffffffffffffffffffffffff000000000000000000000000000000000000000084846118109a031691161790553880611802565b602490604051907fd81b2f2e0000000000000000000000000000000000000000000000000000000082526004820152fd5b91908110156117725760061b0190565b3573ffffffffffffffffffffffffffffffffffffffff8116810361149b5790565b9065ffffffffffff908160608401511673ffffffffffffffffffffffffffffffffffffffff908185511694826020820151169280866040809401511695169560009187835260016020528383208984526020528383209916988983526020528282209184835460d01c03611a3e579185611a1794927fc6a377bfc4eb120024a8ac08eef205be16b817020812c73223e81d1bdb9708ec98979694508715600014611a1c5779ffffffffffff00000000000000000000000000000000000000009042165b60a01b167fffffffffffff00000000000000000000000000000000000000000000000000006001860160d01b1617179055519384938491604091949373ffffffffffffffffffffffffffffffffffffffff606085019616845265ffffffffffff809216602085015216910152565b0390a4565b5079ffffffffffff0000000000000000000000000000000000000000876119a9565b600484517f756688fe000000000000000000000000000000000000000000000000000000008152fd5b467f000000000000000000000000000000000000000000000000000000000000000003611ab2577f000000000000000000000000000000000000000000000000000000000000000090565b60405160208101907f8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a86682527f9ac997416e8ff9d2ff6bebeb7149f65cdae5e32e2b90440b566bb3044041d36a604082015246606082015230608082015260808152611b1c816113ff565b51902090565b611b2a611a67565b906040519060208201927f190100000000000000000000000000000000000000000000000000000000000084526022830152604282015260428152611b1c81611398565b9192909360a435936040840151804211611c0f5750602084510151808611611bde5750918591610d78611bae94611ba9602088015186611d90565b611b22565b73ffffffffffffffffffffffffffffffffffffffff809151511692608435918216820361149b57611810936122fc565b602490604051907f3728b83d0000000000000000000000000000000000000000000000000000000082526004820152fd5b602490604051907fcd21db4f0000000000000000000000000000000000000000000000000000000082526004820152fd5b959093958051519560409283830151804211611d605750848803611d3757611c77918691610d7860209b611ba98d88015186611d90565b60005b868110611c8b575050505050505050565b611c9681835161175e565b5188611ca383878a6118b5565b01359089810151808311611d07575091818888886001968596611ccd575b50505050505001611c7a565b611cfc95611cf69273ffffffffffffffffffffffffffffffffffffffff610515935116956118b5565b916122fc565b803888888883611cc1565b6024908651907f3728b83d0000000000000000000000000000000000000000000000000000000082526004820152fd5b600484517fff633a38000000000000000000000000000000000000000000000000000000008152fd5b6024908551907fcd21db4f0000000000000000000000000000000000000000000000000000000082526004820152fd5b9073ffffffffffffffffffffffffffffffffffffffff600160ff83161b9216600052600060205260406000209060081c6000526020526040600020818154188091551615611dda57565b60046040517f756688fe000000000000000000000000000000000000000000000000000000008152fd5b90611e0e826115ef565b611e1b6040519182611437565b8281527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0611e4982946115ef565b0190602036910137565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114611e805760010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b805160208092019160005b828110611ec8575050505090565b835185529381019392810192600101611eba565b9081519160005b838110611ef4575050016000815290565b8060208092840101518185015201611ee3565b60405160208101917f65626cad6cb96493bf6f5ebea28756c966f023ab9e8a83a7101849d5573b3678835273ffffffffffffffffffffffffffffffffffffffff8082511660408401526020820151166060830152606065ffffffffffff9182604082015116608085015201511660a082015260a0815260c0810181811067ffffffffffffffff8211176113b45760405251902090565b6040516020808201927f618358ac3db8dc274f0cd8829da7e234bd48cd73c4a740aede1adec9846d06a1845273ffffffffffffffffffffffffffffffffffffffff81511660408401520151606082015260608152611b1c81611398565b919082604091031261149b576020823592013590565b6000843b6121775750604182036120f55761202d82820182611ffa565b939092604010156117725760209360009360ff6040608095013560f81c5b60405194855216868401526040830152606082015282805260015afa156120e95773ffffffffffffffffffffffffffffffffffffffff80600051169182156120bf57160361209557565b60046040517f815e1d64000000000000000000000000000000000000000000000000000000008152fd5b60046040517f8baa579f000000000000000000000000000000000000000000000000000000008152fd5b6040513d6000823e3d90fd5b6040820361214d5761210991810190611ffa565b91601b7f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff84169360ff1c019060ff8211611e805760209360009360ff60809461204b565b60046040517f4be6321b000000000000000000000000000000000000000000000000000000008152fd5b929391601f928173ffffffffffffffffffffffffffffffffffffffff60646020957fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0604051988997889687947f1626ba7e000000000000000000000000000000000000000000000000000000009e8f8752600487015260406024870152816044870152868601378b85828601015201168101030192165afa9081156122f1578291612273575b507fffffffff000000000000000000000000000000000000000000000000000000009150160361224957565b60046040517fb0669cbc000000000000000000000000000000000000000000000000000000008152fd5b90506020813d82116122e9575b8161228d60209383611437565b810103126103365751907fffffffff0000000000000000000000000000000000000000000000000000000082168203610a9a57507fffffffff00000000000000000000000000000000000000000000000000000000903861221d565b3d9150612280565b6040513d84823e3d90fd5b9060006064926020958295604051947f23b872dd0000000000000000000000000000000000000000000000000000000086526004860152602485015260448401525af13d15601f3d116001600051141617161561235557565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f5452414e534645525f46524f4d5f4641494c45440000000000000000000000006044820152fdfea164736f6c6343000811000a";
            class f$ extends Z.ContractFactory {
                deploy(e) {
                    return super.deploy(e || {})
                }
                getDeployTransaction(e) {
                    return super.getDeployTransaction(e || {})
                }
                attach(e) {
                    return super.attach(e)
                }
                connect(e) {
                    return super.connect(e)
                }
                static createInterface() {
                    return new Y.vU(fG)
                }
                static connect(e, t) {
                    return new Z.Contract(e, fG, t)
                }
                constructor(e) {
                    super(fG, fj, e)
                }
            }
            f$.bytecode = fj, f$.abi = fG,
                function(e) {
                    e[e.NotSupported = 0] = "NotSupported", e[e.Failed = 1] = "Failed", e[e.Succeeded = 2] = "Succeeded", e[e.InsufficientBalance = 3] = "InsufficientBalance", e[e.NotApproved = 4] = "NotApproved"
                }(b || (b = {}));
            class fH extends i {
                async getGasPrice(e) {
                    r.info(`About to get gas prices from gas station ${this.url}`);
                    let t = await tm()(async () => T().get(this.url), {
                            retries: 1
                        }),
                        {
                            data: f,
                            status: n
                        } = t;
                    if (200 != n) throw r.error({
                        response: t
                    }, `Unabled to get gas price from ${this.url}.`), Error(`Unable to get gas price from ${this.url}`);
                    r.info({
                        gasPriceResponse: f
                    }, 'Gas price response from API. About to parse "fast" to big number');
                    let i = tl.O$.from(f.fast).div(tl.O$.from(10)).mul(tl.O$.from(10).pow(9));
                    return r.info(`Gas price in wei: ${i} as of block ${f.blockNum}`), {
                        gasPriceWei: i
                    }
                }
                constructor(e) {
                    super(), this.url = e
                }
            }
            class fW extends i {
                async getGasPrice(e) {
                    let t = await this.provider.getGasPrice();
                    return r.info({
                        gasPriceWei: t
                    }, `Got gas price ${t} using eth_gasPrice RPC`), {
                        gasPriceWei: t
                    }
                }
                constructor(e) {
                    super(), this.provider = e
                }
            }
            var fQ = f(34865);
            let fX = [{
                    inputs: [],
                    name: "getCurrentBlockTimestamp",
                    outputs: [{
                        internalType: "uint256",
                        name: "timestamp",
                        type: "uint256"
                    }],
                    stateMutability: "view",
                    type: "function"
                }, {
                    inputs: [{
                        internalType: "address",
                        name: "addr",
                        type: "address"
                    }],
                    name: "getEthBalance",
                    outputs: [{
                        internalType: "uint256",
                        name: "balance",
                        type: "uint256"
                    }],
                    stateMutability: "view",
                    type: "function"
                }, {
                    inputs: [{
                        components: [{
                            internalType: "address",
                            name: "target",
                            type: "address"
                        }, {
                            internalType: "uint256",
                            name: "gasLimit",
                            type: "uint256"
                        }, {
                            internalType: "bytes",
                            name: "callData",
                            type: "bytes"
                        }],
                        internalType: "struct UniswapInterfaceMulticall.Call[]",
                        name: "calls",
                        type: "tuple[]"
                    }],
                    name: "multicall",
                    outputs: [{
                        internalType: "uint256",
                        name: "blockNumber",
                        type: "uint256"
                    }, {
                        components: [{
                            internalType: "bool",
                            name: "success",
                            type: "bool"
                        }, {
                            internalType: "uint256",
                            name: "gasUsed",
                            type: "uint256"
                        }, {
                            internalType: "bytes",
                            name: "returnData",
                            type: "bytes"
                        }],
                        internalType: "struct UniswapInterfaceMulticall.Result[]",
                        name: "returnData",
                        type: "tuple[]"
                    }],
                    stateMutability: "nonpayable",
                    type: "function"
                }],
                fz = "0x608060405234801561001057600080fd5b50610567806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80630f28c97d146100465780631749e1e3146100645780634d2301cc14610085575b600080fd5b61004e610098565b60405161005b919061041f565b60405180910390f35b6100776100723660046102a7565b61009c565b60405161005b929190610428565b61004e610093366004610286565b610220565b4290565b8051439060609067ffffffffffffffff811180156100b957600080fd5b506040519080825280602002602001820160405280156100f357816020015b6100e061023a565b8152602001906001900390816100d85790505b50905060005b835181101561021a57600080600086848151811061011357fe5b60200260200101516000015187858151811061012b57fe5b60200260200101516020015188868151811061014357fe5b60200260200101516040015192509250925060005a90506000808573ffffffffffffffffffffffffffffffffffffffff1685856040516101839190610403565b60006040518083038160008787f1925050503d80600081146101c1576040519150601f19603f3d011682016040523d82523d6000602084013e6101c6565b606091505b509150915060005a8403905060405180606001604052808415158152602001828152602001838152508989815181106101fb57fe5b60200260200101819052505050505050505080806001019150506100f9565b50915091565b73ffffffffffffffffffffffffffffffffffffffff163190565b604051806060016040528060001515815260200160008152602001606081525090565b803573ffffffffffffffffffffffffffffffffffffffff8116811461028157600080fd5b919050565b600060208284031215610297578081fd5b6102a08261025d565b9392505050565b600060208083850312156102b9578182fd5b823567ffffffffffffffff808211156102d0578384fd5b818501915085601f8301126102e3578384fd5b8135818111156102ef57fe5b6102fc8485830201610506565b81815284810190848601875b848110156103f457813587017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0606081838f03011215610346578a8bfd5b60408051606081018181108b8211171561035c57fe5b8252610369848d0161025d565b8152818401358c82015260608401358a811115610384578d8efd5b8085019450508e603f850112610398578c8dfd5b8b8401358a8111156103a657fe5b6103b68d85601f84011601610506565b93508084528f838287010111156103cb578d8efd5b808386018e86013783018c018d9052908101919091528552509287019290870190600101610308565b50909998505050505050505050565b6000825161041581846020870161052a565b9190910192915050565b90815260200190565b600060408083018584526020828186015281865180845260609350838701915083838202880101838901875b838110156104f6578983037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa001855281518051151584528681015187850152880151888401889052805188850181905260806104b582828801858c0161052a565b96880196601f919091017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01694909401909301925090850190600101610454565b50909a9950505050505050505050565b60405181810167ffffffffffffffff8111828210171561052257fe5b604052919050565b60005b8381101561054557818101518382015260200161052d565b83811115610554576000848401525b5050505056fea164736f6c6343000706000a";
            class fK extends Z.ContractFactory {
                deploy(e) {
                    return super.deploy(e || {})
                }
                getDeployTransaction(e) {
                    return super.getDeployTransaction(e || {})
                }
                attach(e) {
                    return super.attach(e)
                }
                connect(e) {
                    return super.connect(e)
                }
                static createInterface() {
                    return new Y.vU(fX)
                }
                static connect(e, t) {
                    return new Z.Contract(e, fX, t)
                }
                constructor(e) {
                    super(fX, fz, e)
                }
            }
            fK.bytecode = fz, fK.abi = fX;
            class fY {}
            class fJ extends fY {
                async callSameFunctionOnMultipleContracts(e) {
                    var t;
                    let {
                        addresses: f,
                        contractInterface: n,
                        functionName: i,
                        functionParams: a,
                        providerConfig: o
                    } = e, s = null !== (t = null == o ? void 0 : o.blockNumber) && void 0 !== t ? t : void 0, u = n.getFunction(i), d = n.encodeFunctionData(u, a), c = _().map(f, e => ({
                        target: e,
                        callData: d,
                        gasLimit: this.gasLimitPerCall
                    }));
                    r.debug({
                        calls: c
                    }, `About to multicall for ${i} across ${f.length} addresses`);
                    let {
                        blockNumber: l,
                        returnData: p
                    } = await this.multicallContract.callStatic.multicall(c, {
                        blockTag: s
                    }), y = [];
                    for (let e = 0; e < p.length; e++) {
                        let {
                            success: t,
                            returnData: a
                        } = p[e];
                        if (!t || a.length <= 2) {
                            r.debug({
                                result: p[e]
                            }, `Invalid result calling ${i} on address ${f[e]}`), y.push({
                                success: !1,
                                returnData: a
                            });
                            continue
                        }
                        y.push({
                            success: !0,
                            result: n.decodeFunctionResult(u, a)
                        })
                    }
                    return r.debug({
                        results: y
                    }, `Results for multicall on ${i} across ${f.length} addresses as of block ${l}`), {
                        blockNumber: l,
                        results: y
                    }
                }
                async callSameFunctionOnContractWithMultipleParams(e) {
                    var t, f;
                    let {
                        address: n,
                        contractInterface: i,
                        functionName: a,
                        functionParams: o,
                        additionalConfig: s,
                        providerConfig: u
                    } = e, d = i.getFunction(a), c = null !== (t = null == s ? void 0 : s.gasLimitPerCallOverride) && void 0 !== t ? t : this.gasLimitPerCall, l = null !== (f = null == u ? void 0 : u.blockNumber) && void 0 !== f ? f : void 0, p = _().map(o, e => ({
                        target: n,
                        callData: i.encodeFunctionData(d, e),
                        gasLimit: c
                    }));
                    r.debug({
                        calls: p
                    }, `About to multicall for ${a} at address ${n} with ${o.length} different sets of params`);
                    let {
                        blockNumber: y,
                        returnData: b
                    } = await this.multicallContract.callStatic.multicall(p, {
                        blockTag: l
                    }), h = [], m = [];
                    for (let e = 0; e < b.length; e++) {
                        let {
                            success: t,
                            returnData: f,
                            gasUsed: n
                        } = b[e];
                        if (!t || f.length <= 2) {
                            r.debug({
                                result: b[e]
                            }, `Invalid result calling ${a} with params ${o[e]}`), h.push({
                                success: !1,
                                returnData: f
                            });
                            continue
                        }
                        m.push(n.toNumber()), h.push({
                            success: !0,
                            result: i.decodeFunctionResult(d, f)
                        })
                    }
                    return r.debug({
                        results: h,
                        functionName: a,
                        address: n
                    }, `Results for multicall for ${a} at address ${n} with ${o.length} different sets of params. Results as of block ${y}`), {
                        blockNumber: y,
                        results: h,
                        approxGasUsedPerSuccessCall: fQ.percentile(m, 99)
                    }
                }
                async callMultipleFunctionsOnSameContract(e) {
                    var t, f;
                    let {
                        address: n,
                        contractInterface: i,
                        functionNames: a,
                        functionParams: o,
                        additionalConfig: s,
                        providerConfig: u
                    } = e, d = null !== (t = null == s ? void 0 : s.gasLimitPerCallOverride) && void 0 !== t ? t : this.gasLimitPerCall, c = null !== (f = null == u ? void 0 : u.blockNumber) && void 0 !== f ? f : void 0, l = _().map(a, (e, t) => {
                        let f = i.getFunction(e),
                            r = o ? o[t] : [];
                        return {
                            target: n,
                            callData: i.encodeFunctionData(f, r),
                            gasLimit: d
                        }
                    });
                    r.debug({
                        calls: l
                    }, `About to multicall for ${a.length} functions at address ${n} with ${null==o?void 0:o.length} different sets of params`);
                    let {
                        blockNumber: p,
                        returnData: y
                    } = await this.multicallContract.callStatic.multicall(l, {
                        blockTag: c
                    }), b = [], h = [];
                    for (let e = 0; e < y.length; e++) {
                        let t = i.getFunction(a[e]),
                            {
                                success: f,
                                returnData: n,
                                gasUsed: s
                            } = y[e];
                        if (!f || n.length <= 2) {
                            r.debug({
                                result: y[e]
                            }, `Invalid result calling ${a[e]} with ${o?o[e]:"0"} params`), b.push({
                                success: !1,
                                returnData: n
                            });
                            continue
                        }
                        h.push(s.toNumber()), b.push({
                            success: !0,
                            result: i.decodeFunctionResult(t, n)
                        })
                    }
                    return r.debug({
                        results: b,
                        functionNames: a,
                        address: n
                    }, `Results for multicall for ${a.length} functions at address ${n} with ${o?o.length:" 0"} different sets of params. Results as of block ${p}`), {
                        blockNumber: p,
                        results: b,
                        approxGasUsedPerSuccessCall: fQ.percentile(h, 99)
                    }
                }
                constructor(e, t, f = 1e6) {
                    super(), this.chainId = e, this.provider = t, this.gasLimitPerCall = f;
                    let n = q[this.chainId];
                    if (!n) throw Error(`No address for Uniswap Multicall Contract on chain id: ${e}`);
                    this.multicallContract = fK.connect(n, this.provider)
                }
            }
            let fZ = [m.ChainId.MAINNET, m.ChainId.GOERLI, m.ChainId.BLAST_SEPOLIA, m.ChainId.POLYGON_MUMBAI];
            class f0 extends i {
                async getGasPrice(e) {
                    return this.eipChains.includes(this.chainId) ? this.eip1559GasPriceProvider.getGasPrice(e) : this.legacyGasPriceProvider.getGasPrice(e)
                }
                constructor(e, t, f, n = fZ) {
                    super(), this.chainId = e, this.eip1559GasPriceProvider = t, this.legacyGasPriceProvider = f, this.eipChains = n
                }
            }
            let f1 = [{
                inputs: [{
                    internalType: "bytes",
                    name: "path",
                    type: "bytes"
                }, {
                    internalType: "uint256",
                    name: "amountIn",
                    type: "uint256"
                }],
                name: "quoteExactInput",
                outputs: [{
                    internalType: "uint256",
                    name: "amountOut",
                    type: "uint256"
                }, {
                    internalType: "uint160[]",
                    name: "v3SqrtPriceX96AfterList",
                    type: "uint160[]"
                }, {
                    internalType: "uint32[]",
                    name: "v3InitializedTicksCrossedList",
                    type: "uint32[]"
                }, {
                    internalType: "uint256",
                    name: "v3SwapGasEstimate",
                    type: "uint256"
                }],
                stateMutability: "nonpayable",
                type: "function"
            }, {
                inputs: [{
                    components: [{
                        internalType: "address",
                        name: "tokenIn",
                        type: "address"
                    }, {
                        internalType: "address",
                        name: "tokenOut",
                        type: "address"
                    }, {
                        internalType: "uint256",
                        name: "amountIn",
                        type: "uint256"
                    }],
                    internalType: "struct IMixedRouteQuoterV1.QuoteExactInputSingleV2Params",
                    name: "params",
                    type: "tuple"
                }],
                name: "quoteExactInputSingleV2",
                outputs: [{
                    internalType: "uint256",
                    name: "amountOut",
                    type: "uint256"
                }],
                stateMutability: "nonpayable",
                type: "function"
            }, {
                inputs: [{
                    components: [{
                        internalType: "address",
                        name: "tokenIn",
                        type: "address"
                    }, {
                        internalType: "address",
                        name: "tokenOut",
                        type: "address"
                    }, {
                        internalType: "uint256",
                        name: "amountIn",
                        type: "uint256"
                    }, {
                        internalType: "uint24",
                        name: "fee",
                        type: "uint24"
                    }, {
                        internalType: "uint160",
                        name: "sqrtPriceLimitX96",
                        type: "uint160"
                    }],
                    internalType: "struct IMixedRouteQuoterV1.QuoteExactInputSingleV3Params",
                    name: "params",
                    type: "tuple"
                }],
                name: "quoteExactInputSingleV3",
                outputs: [{
                    internalType: "uint256",
                    name: "amountOut",
                    type: "uint256"
                }, {
                    internalType: "uint160",
                    name: "sqrtPriceX96After",
                    type: "uint160"
                }, {
                    internalType: "uint32",
                    name: "initializedTicksCrossed",
                    type: "uint32"
                }, {
                    internalType: "uint256",
                    name: "gasEstimate",
                    type: "uint256"
                }],
                stateMutability: "nonpayable",
                type: "function"
            }];
            class f6 {
                static createInterface() {
                    return new Y.vU(f1)
                }
                static connect(e, t) {
                    return new Z.Contract(e, f1, t)
                }
            }
            f6.abi = f1;
            let f5 = [{
                inputs: [{
                    internalType: "bytes",
                    name: "path",
                    type: "bytes"
                }, {
                    internalType: "uint256",
                    name: "amountIn",
                    type: "uint256"
                }],
                name: "quoteExactInput",
                outputs: [{
                    internalType: "uint256",
                    name: "amountOut",
                    type: "uint256"
                }, {
                    internalType: "uint160[]",
                    name: "sqrtPriceX96AfterList",
                    type: "uint160[]"
                }, {
                    internalType: "uint32[]",
                    name: "initializedTicksCrossedList",
                    type: "uint32[]"
                }, {
                    internalType: "uint256",
                    name: "gasEstimate",
                    type: "uint256"
                }],
                stateMutability: "nonpayable",
                type: "function"
            }, {
                inputs: [{
                    components: [{
                        internalType: "address",
                        name: "tokenIn",
                        type: "address"
                    }, {
                        internalType: "address",
                        name: "tokenOut",
                        type: "address"
                    }, {
                        internalType: "uint256",
                        name: "amountIn",
                        type: "uint256"
                    }, {
                        internalType: "uint24",
                        name: "fee",
                        type: "uint24"
                    }, {
                        internalType: "uint160",
                        name: "sqrtPriceLimitX96",
                        type: "uint160"
                    }],
                    internalType: "struct IQuoterV2.QuoteExactInputSingleParams",
                    name: "params",
                    type: "tuple"
                }],
                name: "quoteExactInputSingle",
                outputs: [{
                    internalType: "uint256",
                    name: "amountOut",
                    type: "uint256"
                }, {
                    internalType: "uint160",
                    name: "sqrtPriceX96After",
                    type: "uint160"
                }, {
                    internalType: "uint32",
                    name: "initializedTicksCrossed",
                    type: "uint32"
                }, {
                    internalType: "uint256",
                    name: "gasEstimate",
                    type: "uint256"
                }],
                stateMutability: "nonpayable",
                type: "function"
            }, {
                inputs: [{
                    internalType: "bytes",
                    name: "path",
                    type: "bytes"
                }, {
                    internalType: "uint256",
                    name: "amountOut",
                    type: "uint256"
                }],
                name: "quoteExactOutput",
                outputs: [{
                    internalType: "uint256",
                    name: "amountIn",
                    type: "uint256"
                }, {
                    internalType: "uint160[]",
                    name: "sqrtPriceX96AfterList",
                    type: "uint160[]"
                }, {
                    internalType: "uint32[]",
                    name: "initializedTicksCrossedList",
                    type: "uint32[]"
                }, {
                    internalType: "uint256",
                    name: "gasEstimate",
                    type: "uint256"
                }],
                stateMutability: "nonpayable",
                type: "function"
            }, {
                inputs: [{
                    components: [{
                        internalType: "address",
                        name: "tokenIn",
                        type: "address"
                    }, {
                        internalType: "address",
                        name: "tokenOut",
                        type: "address"
                    }, {
                        internalType: "uint256",
                        name: "amount",
                        type: "uint256"
                    }, {
                        internalType: "uint24",
                        name: "fee",
                        type: "uint24"
                    }, {
                        internalType: "uint160",
                        name: "sqrtPriceLimitX96",
                        type: "uint160"
                    }],
                    internalType: "struct IQuoterV2.QuoteExactOutputSingleParams",
                    name: "params",
                    type: "tuple"
                }],
                name: "quoteExactOutputSingle",
                outputs: [{
                    internalType: "uint256",
                    name: "amountIn",
                    type: "uint256"
                }, {
                    internalType: "uint160",
                    name: "sqrtPriceX96After",
                    type: "uint160"
                }, {
                    internalType: "uint32",
                    name: "initializedTicksCrossed",
                    type: "uint32"
                }, {
                    internalType: "uint256",
                    name: "gasEstimate",
                    type: "uint256"
                }],
                stateMutability: "nonpayable",
                type: "function"
            }];
            class f2 {
                static createInterface() {
                    return new Y.vU(f5)
                }
                static connect(e, t) {
                    return new Z.Contract(e, f5, t)
                }
            }
            f2.abi = f5;
            class f8 extends Error {
                constructor() {
                    super(...arguments), this.name = "BlockConflictError"
                }
            }
            class f3 extends Error {
                constructor() {
                    super(...arguments), this.name = "SuccessRateError"
                }
            }
            class f9 extends Error {
                constructor() {
                    super(...arguments), this.name = "ProviderBlockHeaderError"
                }
            }
            class f4 extends Error {
                constructor() {
                    super(...arguments), this.name = "ProviderTimeoutError"
                }
            }
            class f7 extends Error {
                constructor() {
                    super(...arguments), this.name = "ProviderGasError"
                }
            }
            class ne {
                getQuoterAddress(e) {
                    if (this.quoterAddressOverride) return this.quoterAddressOverride;
                    let t = e ? L[this.chainId] : B[this.chainId];
                    if (!t) throw Error(`No address for the quoter contract on chain id: ${this.chainId}`);
                    return t
                }
                async getQuotesManyExactIn(e, t, f) {
                    return this.getQuotesManyData(e, t, "quoteExactInput", f)
                }
                async getQuotesManyExactOut(e, t, f) {
                    return this.getQuotesManyData(e, t, "quoteExactOutput", f)
                }
                async getQuotesManyData(e, t, f, n) {
                    var i;
                    let a = t.some(e => e.protocol === tb.Protocol.V2) || t.some(e => e.protocol === tb.Protocol.RING) || t.some(e => e.protocol === tb.Protocol.MIXED);
                    this.validateRoutes(t, f, a);
                    let s = this.batchParams.multicallChunk,
                        u = this.batchParams.gasLimitPerCall,
                        {
                            baseBlockOffset: d,
                            rollback: c
                        } = this.blockNumberConfig,
                        l = await this.provider.getBlockNumber(),
                        p = { ...n,
                            blockNumber: null !== (i = null == n ? void 0 : n.blockNumber) && void 0 !== i ? i : l + d
                        },
                        y = _()(t).flatMap(t => {
                            let n = t.protocol === tb.Protocol.V3 ? (0, k.encodeRouteToPath)(t, "quoteExactOutput" == f) : (0, tb.encodeMixedRouteToPath)(t instanceof tX || t instanceof tz ? new tb.MixedRouteSDK(t.pairs, t.input, t.output) : t);
                            return e.map(e => [n, `0x${e.quotient.toString(16)}`])
                        }).value(),
                        b = Math.ceil(y.length / Math.ceil(y.length / s)),
                        h = _().chunk(y, b),
                        v = _().map(h, e => ({
                            status: "pending",
                            inputs: e
                        }));
                    r.info(`About to get ${y.length} quotes in chunks of ${b} [${_().map(h,e=>e.length).join(",")}] ${u?`with a gas limit override of ${u}`:""} and block number: ${await p.blockNumber} [Original before offset: ${l}].`), w.putMetric("QuoteBatchSize", y.length, o.Count), w.putMetric(`QuoteBatchSize_${P(this.chainId)}`, y.length, o.Count);
                    let T = !1,
                        g = !1,
                        A = 0,
                        I = !1,
                        E = !1,
                        C = !1,
                        S = !1,
                        O = !1,
                        M = !1,
                        x = 1,
                        R = v.length,
                        F = 0,
                        {
                            results: D,
                            blockNumber: N,
                            approxGasUsedPerSuccessCall: B
                        } = await tm()(async (e, t) => {
                            I = !1, x = t;
                            let [n, i, d] = this.partitionQuotes(v);
                            r.info(`Starting attempt: ${t}.
          Currently ${n.length} success, ${i.length} failed, ${d.length} pending.
          Gas limit override: ${u} Block number override: ${p.blockNumber}.`), v = await Promise.all(_().map(v, async (e, t) => {
                                if ("success" == e.status) return e;
                                let {
                                    inputs: n
                                } = e;
                                try {
                                    F += 1;
                                    let e = await this.multicall2Provider.callSameFunctionOnContractWithMultipleParams({
                                            address: this.getQuoterAddress(a),
                                            contractInterface: a ? f6.createInterface() : f2.createInterface(),
                                            functionName: f,
                                            functionParams: n,
                                            providerConfig: p,
                                            additionalConfig: {
                                                gasLimitPerCallOverride: u
                                            }
                                        }),
                                        t = this.validateSuccessRate(e.results, T);
                                    if (t) return {
                                        status: "failed",
                                        inputs: n,
                                        reason: t,
                                        results: e
                                    };
                                    return {
                                        status: "success",
                                        inputs: n,
                                        results: e
                                    }
                                } catch (e) {
                                    if (e.message.includes("header not found")) return {
                                        status: "failed",
                                        inputs: n,
                                        reason: new f9(e.message.slice(0, 500))
                                    };
                                    if (e.message.includes("timeout")) return {
                                        status: "failed",
                                        inputs: n,
                                        reason: new f4(`Req ${t}/${v.length}. Request had ${n.length} inputs. ${e.message.slice(0,500)}`)
                                    };
                                    if (e.message.includes("out of gas")) return {
                                        status: "failed",
                                        inputs: n,
                                        reason: new f7(e.message.slice(0, 500))
                                    };
                                    return {
                                        status: "failed",
                                        inputs: n,
                                        reason: Error(`Unknown error from provider: ${e.message.slice(0,500)}`)
                                    }
                                }
                            }));
                            let [l, b, k] = this.partitionQuotes(v);
                            if (k.length > 0) throw Error("Pending quote after waiting for all promises.");
                            let P = !1;
                            this.validateBlockNumbers(l, h.length, u) && (P = !0);
                            let R = _().map(b, e => e.reason.name).join(", ");
                            if (b.length > 0)
                                for (let e of (r.info(`On attempt ${t}: ${b.length}/${v.length} quotes failed. Reasons: ${R}`), b)) {
                                    let {
                                        reason: f
                                    } = e;
                                    if (r.info({
                                            error: f
                                        }, `[QuoteFetchError] Attempt ${t}. ${f.message}`), f instanceof f8) C || (w.putMetric("QuoteBlockConflictErrorRetry", 1, o.Count), C = !0), P = !0;
                                    else if (f instanceof f9) {
                                        if (g || (w.putMetric("QuoteBlockHeaderNotFoundRetry", 1, o.Count), g = !0), I || (A += 1, I = !0), c.enabled) {
                                            let {
                                                rollbackBlockOffset: e,
                                                attemptsBeforeRollback: f
                                            } = c;
                                            A >= f && !E && (r.info(`Attempt ${t}. Have failed due to block header ${A-1} times. Rolling back block number by ${e} for next retry`), p.blockNumber = p.blockNumber ? await p.blockNumber + e : await this.provider.getBlockNumber() + e, P = !0, E = !0)
                                        }
                                    } else f instanceof f4 ? O || (w.putMetric("QuoteTimeoutRetry", 1, o.Count), O = !0) : f instanceof f7 ? (S || (w.putMetric("QuoteOutOfGasExceptionRetry", 1, o.Count), S = !0), u = this.gasErrorFailureOverride.gasLimitOverride, s = this.gasErrorFailureOverride.multicallChunk, P = !0) : f instanceof f3 ? T || (w.putMetric("QuoteSuccessRateRetry", 1, o.Count), T = !0, u = this.successRateFailureOverrides.gasLimitOverride, s = this.successRateFailureOverrides.multicallChunk, P = !0) : M || (w.putMetric("QuoteUnknownReasonRetry", 1, o.Count), M = !0)
                                }
                            if (P) {
                                r.info(`Attempt ${t}. Resetting all requests to pending for next attempt.`);
                                let e = Math.ceil(y.length / Math.ceil(y.length / s)),
                                    f = _().chunk(y, e);
                                v = _().map(f, e => ({
                                    status: "pending",
                                    inputs: e
                                }))
                            }
                            if (b.length > 0) {
                                if ((this.chainId == m.ChainId.ARBITRUM_ONE || this.chainId == m.ChainId.ARBITRUM_GOERLI) && _().every(b, e => e.reason instanceof f7) && t == this.retryOptions.retries) return r.error("Failed to get quotes on Arbitrum due to provider gas error issue. Overriding error to return 0 quotes."), {
                                    results: [],
                                    blockNumber: tl.O$.from(0),
                                    approxGasUsedPerSuccessCall: 0
                                };
                                throw Error(`Failed to get ${b.length} quotes. Reasons: ${R}`)
                            }
                            let D = _().map(l, e => e.results);
                            return {
                                results: _().flatMap(D, e => e.results),
                                blockNumber: tl.O$.from(D[0].blockNumber),
                                approxGasUsedPerSuccessCall: fQ.percentile(_().map(D, e => e.approxGasUsedPerSuccessCall), 100)
                            }
                        }, {
                            retries: 2,
                            ...this.retryOptions
                        }),
                        L = this.processQuoteResults(D, t, e);
                    w.putMetric("QuoteApproxGasUsedPerSuccessfulCall", B, o.Count), w.putMetric("QuoteNumRetryLoops", x - 1, o.Count), w.putMetric("QuoteTotalCallsToProvider", F, o.Count), w.putMetric("QuoteExpectedCallsToProvider", R, o.Count), w.putMetric("QuoteNumRetriedCalls", F - R, o.Count);
                    let [q, U] = _()(L).flatMap(e => e[1]).partition(e => null != e.quote).value();
                    return r.info(`Got ${q.length} successful quotes, ${U.length} failed quotes. Took ${x-1} attempt loops. Total calls made to provider: ${F}. Have retried for timeout: ${O}`), {
                        routesWithQuotes: L,
                        blockNumber: N
                    }
                }
                partitionQuotes(e) {
                    return [_().filter(e, e => "success" == e.status), _().filter(e, e => "failed" == e.status), _().filter(e, e => "pending" == e.status)]
                }
                processQuoteResults(e, t, f) {
                    let n = [],
                        i = _().chunk(e, f.length),
                        a = [];
                    for (let e = 0; e < i.length; e++) {
                        let r = t[e],
                            o = i[e],
                            s = _().map(o, (e, t) => {
                                let n = f[t];
                                if (!e.success) {
                                    let e = 100 / f.length * (t + 1),
                                        i = n.toFixed(Math.min(n.currency.decimals, 2)),
                                        o = X(r);
                                    return a.push({
                                        route: o,
                                        percent: e,
                                        amount: i
                                    }), {
                                        amount: n,
                                        quote: null,
                                        sqrtPriceX96AfterList: null,
                                        gasEstimate: null,
                                        initializedTicksCrossedList: null
                                    }
                                }
                                return {
                                    amount: n,
                                    quote: e.result[0],
                                    sqrtPriceX96AfterList: e.result[1],
                                    initializedTicksCrossedList: e.result[2],
                                    gasEstimate: e.result[3]
                                }
                            });
                        n.push([r, s])
                    }
                    return _().forEach(_().chunk(a, 80), (e, t) => {
                        let f = _().groupBy(e, e => e.route),
                            n = _().mapValues(f, e => _()(e).map(e => `${e.percent}%[${e.amount}]`).join(","));
                        r.info({
                            failedQuotes: _().map(n, (e, t) => `${t} : ${e}`)
                        }, `Failed on chain quotes for routes Part ${t}/${Math.ceil(a.length/80)}`)
                    }), n
                }
                validateBlockNumbers(e, t, f) {
                    if (e.length <= 1) return null;
                    let n = _().map(e, e => e.results),
                        r = _().map(n, e => e.blockNumber),
                        i = _()(r).map(e => e.toNumber()).uniq().value();
                    return 1 == i.length ? null : new f8(`Quotes returned from different blocks. ${i}. ${t} calls were made with gas limit ${f}`)
                }
                validateSuccessRate(e, t) {
                    let f = e.length,
                        n = 1 * e.filter(e => e.success).length / f,
                        {
                            quoteMinSuccessRate: i
                        } = this.batchParams;
                    if (n < i) {
                        if (t) {
                            r.info(`Quote success rate still below threshold despite retry. Continuing. ${i}: ${n}`);
                            return
                        }
                        return new f3(`Quote success rate below threshold of ${i}: ${n}`)
                    }
                }
                validateRoutes(e, t, f) {
                    if (e.some(e => e.protocol === tb.Protocol.V3) && f) throw Error("Cannot use mixed route quoter with V3 routes");
                    if ("quoteExactOutput" === t && f) throw Error("Cannot call quoteExactOutput with V2 or Mixed routes")
                }
                constructor(e, t, f, n = {
                    retries: 2,
                    minTimeout: 25,
                    maxTimeout: 250
                }, r = {
                    multicallChunk: 150,
                    gasLimitPerCall: 1e6,
                    quoteMinSuccessRate: .2
                }, i = {
                    gasLimitOverride: 15e5,
                    multicallChunk: 100
                }, a = {
                    gasLimitOverride: 13e5,
                    multicallChunk: 110
                }, o = {
                    baseBlockOffset: 0,
                    rollback: {
                        enabled: !1
                    }
                }, s) {
                    this.chainId = e, this.provider = t, this.multicall2Provider = f, this.retryOptions = n, this.batchParams = r, this.gasErrorFailureOverride = i, this.successRateFailureOverrides = a, this.blockNumberConfig = o, this.quoterAddressOverride = s
                }
            }
            let nt = [{
                    inputs: [{
                        internalType: "address",
                        name: "_factoryV2",
                        type: "address"
                    }, {
                        internalType: "address",
                        name: "factoryV3",
                        type: "address"
                    }, {
                        internalType: "address",
                        name: "_positionManager",
                        type: "address"
                    }, {
                        internalType: "address",
                        name: "_WETH9",
                        type: "address"
                    }],
                    stateMutability: "nonpayable",
                    type: "constructor"
                }, {
                    inputs: [],
                    name: "WETH9",
                    outputs: [{
                        internalType: "address",
                        name: "",
                        type: "address"
                    }],
                    stateMutability: "view",
                    type: "function"
                }, {
                    inputs: [{
                        internalType: "address",
                        name: "token",
                        type: "address"
                    }],
                    name: "approveMax",
                    outputs: [],
                    stateMutability: "payable",
                    type: "function"
                }, {
                    inputs: [{
                        internalType: "address",
                        name: "token",
                        type: "address"
                    }],
                    name: "approveMaxMinusOne",
                    outputs: [],
                    stateMutability: "payable",
                    type: "function"
                }, {
                    inputs: [{
                        internalType: "address",
                        name: "token",
                        type: "address"
                    }],
                    name: "approveZeroThenMax",
                    outputs: [],
                    stateMutability: "payable",
                    type: "function"
                }, {
                    inputs: [{
                        internalType: "address",
                        name: "token",
                        type: "address"
                    }],
                    name: "approveZeroThenMaxMinusOne",
                    outputs: [],
                    stateMutability: "payable",
                    type: "function"
                }, {
                    inputs: [{
                        internalType: "bytes",
                        name: "data",
                        type: "bytes"
                    }],
                    name: "callPositionManager",
                    outputs: [{
                        internalType: "bytes",
                        name: "result",
                        type: "bytes"
                    }],
                    stateMutability: "payable",
                    type: "function"
                }, {
                    inputs: [{
                        internalType: "bytes[]",
                        name: "paths",
                        type: "bytes[]"
                    }, {
                        internalType: "uint128[]",
                        name: "amounts",
                        type: "uint128[]"
                    }, {
                        internalType: "uint24",
                        name: "maximumTickDivergence",
                        type: "uint24"
                    }, {
                        internalType: "uint32",
                        name: "secondsAgo",
                        type: "uint32"
                    }],
                    name: "checkOracleSlippage",
                    outputs: [],
                    stateMutability: "view",
                    type: "function"
                }, {
                    inputs: [{
                        internalType: "bytes",
                        name: "path",
                        type: "bytes"
                    }, {
                        internalType: "uint24",
                        name: "maximumTickDivergence",
                        type: "uint24"
                    }, {
                        internalType: "uint32",
                        name: "secondsAgo",
                        type: "uint32"
                    }],
                    name: "checkOracleSlippage",
                    outputs: [],
                    stateMutability: "view",
                    type: "function"
                }, {
                    inputs: [{
                        components: [{
                            internalType: "bytes",
                            name: "path",
                            type: "bytes"
                        }, {
                            internalType: "address",
                            name: "recipient",
                            type: "address"
                        }, {
                            internalType: "uint256",
                            name: "amountIn",
                            type: "uint256"
                        }, {
                            internalType: "uint256",
                            name: "amountOutMinimum",
                            type: "uint256"
                        }],
                        internalType: "struct IV3SwapRouter.ExactInputParams",
                        name: "params",
                        type: "tuple"
                    }],
                    name: "exactInput",
                    outputs: [{
                        internalType: "uint256",
                        name: "amountOut",
                        type: "uint256"
                    }],
                    stateMutability: "payable",
                    type: "function"
                }, {
                    inputs: [{
                        components: [{
                            internalType: "address",
                            name: "tokenIn",
                            type: "address"
                        }, {
                            internalType: "address",
                            name: "tokenOut",
                            type: "address"
                        }, {
                            internalType: "uint24",
                            name: "fee",
                            type: "uint24"
                        }, {
                            internalType: "address",
                            name: "recipient",
                            type: "address"
                        }, {
                            internalType: "uint256",
                            name: "amountIn",
                            type: "uint256"
                        }, {
                            internalType: "uint256",
                            name: "amountOutMinimum",
                            type: "uint256"
                        }, {
                            internalType: "uint160",
                            name: "sqrtPriceLimitX96",
                            type: "uint160"
                        }],
                        internalType: "struct IV3SwapRouter.ExactInputSingleParams",
                        name: "params",
                        type: "tuple"
                    }],
                    name: "exactInputSingle",
                    outputs: [{
                        internalType: "uint256",
                        name: "amountOut",
                        type: "uint256"
                    }],
                    stateMutability: "payable",
                    type: "function"
                }, {
                    inputs: [{
                        components: [{
                            internalType: "bytes",
                            name: "path",
                            type: "bytes"
                        }, {
                            internalType: "address",
                            name: "recipient",
                            type: "address"
                        }, {
                            internalType: "uint256",
                            name: "amountOut",
                            type: "uint256"
                        }, {
                            internalType: "uint256",
                            name: "amountInMaximum",
                            type: "uint256"
                        }],
                        internalType: "struct IV3SwapRouter.ExactOutputParams",
                        name: "params",
                        type: "tuple"
                    }],
                    name: "exactOutput",
                    outputs: [{
                        internalType: "uint256",
                        name: "amountIn",
                        type: "uint256"
                    }],
                    stateMutability: "payable",
                    type: "function"
                }, {
                    inputs: [{
                        components: [{
                            internalType: "address",
                            name: "tokenIn",
                            type: "address"
                        }, {
                            internalType: "address",
                            name: "tokenOut",
                            type: "address"
                        }, {
                            internalType: "uint24",
                            name: "fee",
                            type: "uint24"
                        }, {
                            internalType: "address",
                            name: "recipient",
                            type: "address"
                        }, {
                            internalType: "uint256",
                            name: "amountOut",
                            type: "uint256"
                        }, {
                            internalType: "uint256",
                            name: "amountInMaximum",
                            type: "uint256"
                        }, {
                            internalType: "uint160",
                            name: "sqrtPriceLimitX96",
                            type: "uint160"
                        }],
                        internalType: "struct IV3SwapRouter.ExactOutputSingleParams",
                        name: "params",
                        type: "tuple"
                    }],
                    name: "exactOutputSingle",
                    outputs: [{
                        internalType: "uint256",
                        name: "amountIn",
                        type: "uint256"
                    }],
                    stateMutability: "payable",
                    type: "function"
                }, {
                    inputs: [],
                    name: "factory",
                    outputs: [{
                        internalType: "address",
                        name: "",
                        type: "address"
                    }],
                    stateMutability: "view",
                    type: "function"
                }, {
                    inputs: [],
                    name: "factoryV2",
                    outputs: [{
                        internalType: "address",
                        name: "",
                        type: "address"
                    }],
                    stateMutability: "view",
                    type: "function"
                }, {
                    inputs: [{
                        internalType: "address",
                        name: "token",
                        type: "address"
                    }, {
                        internalType: "uint256",
                        name: "amount",
                        type: "uint256"
                    }],
                    name: "getApprovalType",
                    outputs: [{
                        internalType: "enum IApproveAndCall.ApprovalType",
                        name: "",
                        type: "uint8"
                    }],
                    stateMutability: "nonpayable",
                    type: "function"
                }, {
                    inputs: [{
                        components: [{
                            internalType: "address",
                            name: "token0",
                            type: "address"
                        }, {
                            internalType: "address",
                            name: "token1",
                            type: "address"
                        }, {
                            internalType: "uint256",
                            name: "tokenId",
                            type: "uint256"
                        }, {
                            internalType: "uint256",
                            name: "amount0Min",
                            type: "uint256"
                        }, {
                            internalType: "uint256",
                            name: "amount1Min",
                            type: "uint256"
                        }],
                        internalType: "struct IApproveAndCall.IncreaseLiquidityParams",
                        name: "params",
                        type: "tuple"
                    }],
                    name: "increaseLiquidity",
                    outputs: [{
                        internalType: "bytes",
                        name: "result",
                        type: "bytes"
                    }],
                    stateMutability: "payable",
                    type: "function"
                }, {
                    inputs: [{
                        components: [{
                            internalType: "address",
                            name: "token0",
                            type: "address"
                        }, {
                            internalType: "address",
                            name: "token1",
                            type: "address"
                        }, {
                            internalType: "uint24",
                            name: "fee",
                            type: "uint24"
                        }, {
                            internalType: "int24",
                            name: "tickLower",
                            type: "int24"
                        }, {
                            internalType: "int24",
                            name: "tickUpper",
                            type: "int24"
                        }, {
                            internalType: "uint256",
                            name: "amount0Min",
                            type: "uint256"
                        }, {
                            internalType: "uint256",
                            name: "amount1Min",
                            type: "uint256"
                        }, {
                            internalType: "address",
                            name: "recipient",
                            type: "address"
                        }],
                        internalType: "struct IApproveAndCall.MintParams",
                        name: "params",
                        type: "tuple"
                    }],
                    name: "mint",
                    outputs: [{
                        internalType: "bytes",
                        name: "result",
                        type: "bytes"
                    }],
                    stateMutability: "payable",
                    type: "function"
                }, {
                    inputs: [{
                        internalType: "bytes32",
                        name: "previousBlockhash",
                        type: "bytes32"
                    }, {
                        internalType: "bytes[]",
                        name: "data",
                        type: "bytes[]"
                    }],
                    name: "multicall",
                    outputs: [{
                        internalType: "bytes[]",
                        name: "",
                        type: "bytes[]"
                    }],
                    stateMutability: "payable",
                    type: "function"
                }, {
                    inputs: [{
                        internalType: "uint256",
                        name: "deadline",
                        type: "uint256"
                    }, {
                        internalType: "bytes[]",
                        name: "data",
                        type: "bytes[]"
                    }],
                    name: "multicall",
                    outputs: [{
                        internalType: "bytes[]",
                        name: "",
                        type: "bytes[]"
                    }],
                    stateMutability: "payable",
                    type: "function"
                }, {
                    inputs: [{
                        internalType: "bytes[]",
                        name: "data",
                        type: "bytes[]"
                    }],
                    name: "multicall",
                    outputs: [{
                        internalType: "bytes[]",
                        name: "results",
                        type: "bytes[]"
                    }],
                    stateMutability: "payable",
                    type: "function"
                }, {
                    inputs: [],
                    name: "positionManager",
                    outputs: [{
                        internalType: "address",
                        name: "",
                        type: "address"
                    }],
                    stateMutability: "view",
                    type: "function"
                }, {
                    inputs: [{
                        internalType: "address",
                        name: "token",
                        type: "address"
                    }, {
                        internalType: "uint256",
                        name: "value",
                        type: "uint256"
                    }],
                    name: "pull",
                    outputs: [],
                    stateMutability: "payable",
                    type: "function"
                }, {
                    inputs: [],
                    name: "refundETH",
                    outputs: [],
                    stateMutability: "payable",
                    type: "function"
                }, {
                    inputs: [{
                        internalType: "address",
                        name: "token",
                        type: "address"
                    }, {
                        internalType: "uint256",
                        name: "value",
                        type: "uint256"
                    }, {
                        internalType: "uint256",
                        name: "deadline",
                        type: "uint256"
                    }, {
                        internalType: "uint8",
                        name: "v",
                        type: "uint8"
                    }, {
                        internalType: "bytes32",
                        name: "r",
                        type: "bytes32"
                    }, {
                        internalType: "bytes32",
                        name: "s",
                        type: "bytes32"
                    }],
                    name: "selfPermit",
                    outputs: [],
                    stateMutability: "payable",
                    type: "function"
                }, {
                    inputs: [{
                        internalType: "address",
                        name: "token",
                        type: "address"
                    }, {
                        internalType: "uint256",
                        name: "nonce",
                        type: "uint256"
                    }, {
                        internalType: "uint256",
                        name: "expiry",
                        type: "uint256"
                    }, {
                        internalType: "uint8",
                        name: "v",
                        type: "uint8"
                    }, {
                        internalType: "bytes32",
                        name: "r",
                        type: "bytes32"
                    }, {
                        internalType: "bytes32",
                        name: "s",
                        type: "bytes32"
                    }],
                    name: "selfPermitAllowed",
                    outputs: [],
                    stateMutability: "payable",
                    type: "function"
                }, {
                    inputs: [{
                        internalType: "address",
                        name: "token",
                        type: "address"
                    }, {
                        internalType: "uint256",
                        name: "nonce",
                        type: "uint256"
                    }, {
                        internalType: "uint256",
                        name: "expiry",
                        type: "uint256"
                    }, {
                        internalType: "uint8",
                        name: "v",
                        type: "uint8"
                    }, {
                        internalType: "bytes32",
                        name: "r",
                        type: "bytes32"
                    }, {
                        internalType: "bytes32",
                        name: "s",
                        type: "bytes32"
                    }],
                    name: "selfPermitAllowedIfNecessary",
                    outputs: [],
                    stateMutability: "payable",
                    type: "function"
                }, {
                    inputs: [{
                        internalType: "address",
                        name: "token",
                        type: "address"
                    }, {
                        internalType: "uint256",
                        name: "value",
                        type: "uint256"
                    }, {
                        internalType: "uint256",
                        name: "deadline",
                        type: "uint256"
                    }, {
                        internalType: "uint8",
                        name: "v",
                        type: "uint8"
                    }, {
                        internalType: "bytes32",
                        name: "r",
                        type: "bytes32"
                    }, {
                        internalType: "bytes32",
                        name: "s",
                        type: "bytes32"
                    }],
                    name: "selfPermitIfNecessary",
                    outputs: [],
                    stateMutability: "payable",
                    type: "function"
                }, {
                    inputs: [{
                        internalType: "uint256",
                        name: "amountIn",
                        type: "uint256"
                    }, {
                        internalType: "uint256",
                        name: "amountOutMin",
                        type: "uint256"
                    }, {
                        internalType: "address[]",
                        name: "path",
                        type: "address[]"
                    }, {
                        internalType: "address",
                        name: "to",
                        type: "address"
                    }],
                    name: "swapExactTokensForTokens",
                    outputs: [{
                        internalType: "uint256",
                        name: "amountOut",
                        type: "uint256"
                    }],
                    stateMutability: "payable",
                    type: "function"
                }, {
                    inputs: [{
                        internalType: "uint256",
                        name: "amountOut",
                        type: "uint256"
                    }, {
                        internalType: "uint256",
                        name: "amountInMax",
                        type: "uint256"
                    }, {
                        internalType: "address[]",
                        name: "path",
                        type: "address[]"
                    }, {
                        internalType: "address",
                        name: "to",
                        type: "address"
                    }],
                    name: "swapTokensForExactTokens",
                    outputs: [{
                        internalType: "uint256",
                        name: "amountIn",
                        type: "uint256"
                    }],
                    stateMutability: "payable",
                    type: "function"
                }, {
                    inputs: [{
                        internalType: "address",
                        name: "token",
                        type: "address"
                    }, {
                        internalType: "uint256",
                        name: "amountMinimum",
                        type: "uint256"
                    }, {
                        internalType: "address",
                        name: "recipient",
                        type: "address"
                    }],
                    name: "sweepToken",
                    outputs: [],
                    stateMutability: "payable",
                    type: "function"
                }, {
                    inputs: [{
                        internalType: "address",
                        name: "token",
                        type: "address"
                    }, {
                        internalType: "uint256",
                        name: "amountMinimum",
                        type: "uint256"
                    }],
                    name: "sweepToken",
                    outputs: [],
                    stateMutability: "payable",
                    type: "function"
                }, {
                    inputs: [{
                        internalType: "address",
                        name: "token",
                        type: "address"
                    }, {
                        internalType: "uint256",
                        name: "amountMinimum",
                        type: "uint256"
                    }, {
                        internalType: "uint256",
                        name: "feeBips",
                        type: "uint256"
                    }, {
                        internalType: "address",
                        name: "feeRecipient",
                        type: "address"
                    }],
                    name: "sweepTokenWithFee",
                    outputs: [],
                    stateMutability: "payable",
                    type: "function"
                }, {
                    inputs: [{
                        internalType: "address",
                        name: "token",
                        type: "address"
                    }, {
                        internalType: "uint256",
                        name: "amountMinimum",
                        type: "uint256"
                    }, {
                        internalType: "address",
                        name: "recipient",
                        type: "address"
                    }, {
                        internalType: "uint256",
                        name: "feeBips",
                        type: "uint256"
                    }, {
                        internalType: "address",
                        name: "feeRecipient",
                        type: "address"
                    }],
                    name: "sweepTokenWithFee",
                    outputs: [],
                    stateMutability: "payable",
                    type: "function"
                }, {
                    inputs: [{
                        internalType: "int256",
                        name: "amount0Delta",
                        type: "int256"
                    }, {
                        internalType: "int256",
                        name: "amount1Delta",
                        type: "int256"
                    }, {
                        internalType: "bytes",
                        name: "_data",
                        type: "bytes"
                    }],
                    name: "uniswapV3SwapCallback",
                    outputs: [],
                    stateMutability: "nonpayable",
                    type: "function"
                }, {
                    inputs: [{
                        internalType: "uint256",
                        name: "amountMinimum",
                        type: "uint256"
                    }, {
                        internalType: "address",
                        name: "recipient",
                        type: "address"
                    }],
                    name: "unwrapWETH9",
                    outputs: [],
                    stateMutability: "payable",
                    type: "function"
                }, {
                    inputs: [{
                        internalType: "uint256",
                        name: "amountMinimum",
                        type: "uint256"
                    }],
                    name: "unwrapWETH9",
                    outputs: [],
                    stateMutability: "payable",
                    type: "function"
                }, {
                    inputs: [{
                        internalType: "uint256",
                        name: "amountMinimum",
                        type: "uint256"
                    }, {
                        internalType: "address",
                        name: "recipient",
                        type: "address"
                    }, {
                        internalType: "uint256",
                        name: "feeBips",
                        type: "uint256"
                    }, {
                        internalType: "address",
                        name: "feeRecipient",
                        type: "address"
                    }],
                    name: "unwrapWETH9WithFee",
                    outputs: [],
                    stateMutability: "payable",
                    type: "function"
                }, {
                    inputs: [{
                        internalType: "uint256",
                        name: "amountMinimum",
                        type: "uint256"
                    }, {
                        internalType: "uint256",
                        name: "feeBips",
                        type: "uint256"
                    }, {
                        internalType: "address",
                        name: "feeRecipient",
                        type: "address"
                    }],
                    name: "unwrapWETH9WithFee",
                    outputs: [],
                    stateMutability: "payable",
                    type: "function"
                }, {
                    inputs: [{
                        internalType: "uint256",
                        name: "value",
                        type: "uint256"
                    }],
                    name: "wrapETH",
                    outputs: [],
                    stateMutability: "payable",
                    type: "function"
                }, {
                    stateMutability: "payable",
                    type: "receive"
                }],
                nf = "";
            class nn extends Z.ContractFactory {
                deploy(e, t, f, n, r) {
                    return super.deploy(e, t, f, n, r || {})
                }
                getDeployTransaction(e, t, f, n, r) {
                    return super.getDeployTransaction(e, t, f, n, r || {})
                }
                attach(e) {
                    return super.attach(e)
                }
                connect(e) {
                    return super.connect(e)
                }
                static createInterface() {
                    return new Y.vU(nt)
                }
                static connect(e, t) {
                    return new Z.Contract(e, nt, t)
                }
                constructor(e) {
                    super(nt, nf, e)
                }
            }
            nn.bytecode = nf, nn.abi = nt;
            class nr {
                async getApprovalType(e, t) {
                    var f, n;
                    let i = [
                            [e.currency.wrapped.address, e.quotient.toString()],
                            [t.currency.wrapped.address, t.quotient.toString()]
                        ],
                        a = await this.multicall2Provider.callSameFunctionOnContractWithMultipleParams({
                            address: U(this.chainId),
                            contractInterface: nn.createInterface(),
                            functionName: "getApprovalType",
                            functionParams: i
                        });
                    if (!(null === (f = a.results[0]) || void 0 === f ? void 0 : f.success) || !(null === (n = a.results[1]) || void 0 === n ? void 0 : n.success)) throw r.info({
                        results: a.results
                    }, "Failed to get approval type from swap router for token in or token out"), Error("Failed to get approval type from swap router for token in or token out");
                    let {
                        result: o
                    } = a.results[0], {
                        result: s
                    } = a.results[1];
                    return {
                        approvalTokenIn: o[0],
                        approvalTokenOut: s[0]
                    }
                }
                constructor(e, t) {
                    this.multicall2Provider = e, this.chainId = t
                }
            }! function(e) {
                e.QUICK = "quick", e.FULL = "full", e.ABI = "abi"
            }(h || (h = {}));
            class ni {
                async getTokensProperties(e, t) {
                    let f = {};
                    if (!(null == t ? void 0 : t.enableFeeOnTransferFeeFetching) || this.chainId !== m.ChainId.MAINNET) return f;
                    let n = [],
                        i = this.buildAddressesRaw(e),
                        a = await this.tokenPropertiesCache.batchGet(i);
                    for (let e of i) {
                        let t = a[e];
                        if (t) {
                            w.putMetric("TokenPropertiesProviderBatchGetCacheHit", 1, o.Count);
                            let n = t.tokenFeeResult,
                                r = n && (n.buyFeeBps || n.sellFeeBps);
                            r ? w.putMetric(`TokenPropertiesProviderCacheHitTokenFeeResultExists${r}`, 1, o.Count) : w.putMetric("TokenPropertiesProviderCacheHitTokenFeeResultNotExists", 1, o.Count), f[e] = t
                        } else this.allowList.has(e) ? f[e] = {
                            tokenValidationResult: l.UNKN
                        } : n.push(e)
                    }
                    if (n.length > 0) {
                        let e = {};
                        try {
                            e = await this.tokenFeeFetcher.fetchFees(n, t)
                        } catch (e) {
                            r.error({
                                err: e
                            }, `Error fetching fees for tokens ${n}`)
                        }
                        await Promise.all(n.map(t => {
                            let n = e[t],
                                r = n && (n.buyFeeBps || n.sellFeeBps);
                            if (r) {
                                w.putMetric(`TokenPropertiesProviderTokenFeeResultCacheMissExists${r}`, 1, o.Count);
                                let e = {
                                    tokenFeeResult: n,
                                    tokenValidationResult: l.FOT
                                };
                                return f[t] = e, w.putMetric("TokenPropertiesProviderBatchGetCacheMiss", 1, o.Count), this.tokenPropertiesCache.set(this.CACHE_KEY(this.chainId, t), e, this.positiveCacheEntryTTL)
                            } {
                                w.putMetric("TokenPropertiesProviderTokenFeeResultCacheMissNotExists", 1, o.Count);
                                let e = {
                                    tokenFeeResult: void 0,
                                    tokenValidationResult: void 0
                                };
                                return f[t] = e, this.tokenPropertiesCache.set(this.CACHE_KEY(this.chainId, t), e, this.negativeCacheEntryTTL)
                            }
                        }))
                    }
                    return f
                }
                buildAddressesRaw(e) {
                    let t = new Set;
                    for (let f of e) {
                        let e = f.address.toLowerCase();
                        t.has(e) || t.add(e)
                    }
                    return t
                }
                constructor(e, t, f, n = tC, r = 600, i = 600) {
                    this.chainId = e, this.tokenPropertiesCache = t, this.tokenFeeFetcher = f, this.allowList = n, this.positiveCacheEntryTTL = r, this.negativeCacheEntryTTL = i, this.CACHE_KEY = (e, t) => `token-properties-${e}-${t}`
                }
            }
            var na = f(2286),
                no = f.n(na);
            class ns {
                async getPools() {
                    r.info({
                        uri: this.uri
                    }, `About to get subgraph pools from URI ${this.uri}`);
                    let e = [];
                    return await tm()(async () => {
                        let t;
                        let f = new(no()),
                            n = f.set(this.timeout).then(() => {
                                throw Error(`Timed out getting pools from subgraph: ${this.timeout}`)
                            });
                        try {
                            t = await Promise.race([T().get(this.uri), n])
                        } catch (e) {
                            throw e
                        } finally {
                            f.clear()
                        }
                        let {
                            data: i,
                            status: a
                        } = t;
                        if (200 != a) throw r.error({
                            response: t
                        }, `Unabled to get pools from ${this.uri}.`), Error(`Unable to get pools from ${this.uri}`);
                        r.info({
                            uri: this.uri,
                            chain: this.chainId
                        }, `Got subgraph pools from uri. Num: ${i.length}`), e = i
                    }, {
                        retries: this.retries,
                        onRetry: (e, t) => {
                            r.info({
                                err: e
                            }, `Failed to get pools from uri ${this.uri}. Retry attempt: ${t}`)
                        }
                    }), e
                }
                constructor(e, t, f = 6e3, n = 2) {
                    this.chainId = e, this.uri = t, this.timeout = f, this.retries = n
                }
            }
            class nu {
                async getPools(e, t) {
                    let f = new Set,
                        n = [],
                        i = [],
                        a = {},
                        o = await (null == t ? void 0 : t.blockNumber);
                    for (let [t, r] of e) {
                        let {
                            poolAddress: e,
                            token0: s,
                            token1: u
                        } = this.getPoolAddress(t, r);
                        if (f.has(e)) continue;
                        f.add(e);
                        let d = await this.cache.get(this.POOL_KEY(this.chainId, e));
                        if (d && (!o || o && d.block == o)) {
                            a[e] = d.pair;
                            continue
                        }
                        n.push([s, u]), i.push(e)
                    }
                    if (r.info({
                            poolsFound: _().map(Object.values(a), e => e.token0.symbol + " " + e.token1.symbol),
                            poolsToGetTokenPairs: _().map(n, e => e[0].symbol + " " + e[1].symbol)
                        }, `Found ${Object.keys(a).length} V2 pools already in local cache for block ${o}. About to get reserves for ${n.length} pools.`), i.length > 0) {
                        let e = await this.poolProvider.getPools(n, { ...t,
                            enableFeeOnTransferFeeFetching: !0
                        });
                        for (let t of i) {
                            let f = e.getPoolByAddress(t);
                            f && (a[t] = f, this.cache.set(this.POOL_KEY(this.chainId, t), {
                                pair: f,
                                block: o
                            }))
                        }
                    }
                    return {
                        getPool: (e, t) => {
                            let {
                                poolAddress: f
                            } = this.getPoolAddress(e, t);
                            return a[f]
                        },
                        getPoolByAddress: e => a[e],
                        getAllPools: () => Object.values(a)
                    }
                }
                getPoolAddress(e, t) {
                    return this.poolProvider.getPoolAddress(e, t)
                }
                constructor(e, t, f) {
                    this.chainId = e, this.poolProvider = t, this.cache = f, this.POOL_KEY = (e, t) => `pool-${e}-${t}`
                }
            }
            class nd {
                async getPools() {
                    let e = await this.cache.get(this.SUBGRAPH_KEY(this.chainId));
                    if (e) return e;
                    let t = await this.subgraphProvider.getPools();
                    return await this.cache.set(this.SUBGRAPH_KEY(this.chainId), t), t
                }
                constructor(e, t, f) {
                    this.chainId = e, this.subgraphProvider = t, this.cache = f, this.SUBGRAPH_KEY = e => `subgraph-pools-v2-${e}`
                }
            }
            class nc {
                async getQuotesManyExactIn(e, t, f) {
                    return this.getQuotes(e, t, m.TradeType.EXACT_INPUT, f)
                }
                async getQuotesManyExactOut(e, t, f) {
                    return this.getQuotes(e, t, m.TradeType.EXACT_OUTPUT, f)
                }
                async getQuotes(e, t, f, n) {
                    let i = [],
                        a = [];
                    for (let r of t) {
                        let t = [],
                            o = 0,
                            s = 0;
                        for (let i of e) try {
                            if (f == m.TradeType.EXACT_INPUT) {
                                let e = i.wrapped;
                                for (let t of r.pairs)[e] = t.getOutputAmount(e, !0 === n.enableFeeOnTransferFeeFetching);
                                t.push({
                                    amount: i,
                                    quote: tl.O$.from(e.quotient.toString())
                                })
                            } else {
                                let e = i.wrapped;
                                for (let t = r.pairs.length - 1; t >= 0; t--) {
                                    let f = r.pairs[t];
                                    [e] = f.getInputAmount(e, !0 === n.enableFeeOnTransferFeeFetching)
                                }
                                t.push({
                                    amount: i,
                                    quote: tl.O$.from(e.quotient.toString())
                                })
                            }
                        } catch (e) {
                            if (e instanceof W.InsufficientInputAmountError) o += 1, t.push({
                                amount: i,
                                quote: null
                            });
                            else if (e instanceof W.InsufficientReservesError) s += 1, t.push({
                                amount: i,
                                quote: null
                            });
                            else throw e
                        }(o > 0 || s > 0) && a.push(`${[X(r)]} Input: ${o} Reserves: ${s} }`), i.push([r, t])
                    }
                    return a.length > 0 && r.info({
                        debugStrs: a
                    }, "Failed quotes for V2 routes"), {
                        routesWithQuotes: i
                    }
                }
                constructor() {}
            }
            let nl = {
                [m.ChainId.MAINNET]: [M[m.ChainId.MAINNET], ei, ef, en, er],
                [m.ChainId.GOERLI]: [x[m.ChainId.GOERLI], e_],
                [m.ChainId.SEPOLIA]: [x[m.ChainId.SEPOLIA], eS],
                [m.ChainId.BLAST]: [x[m.ChainId.BLAST], eC, em],
                [m.ChainId.BLAST_SEPOLIA]: [x[m.ChainId.BLAST_SEPOLIA], ek],
                [m.ChainId.OPTIMISM]: [],
                [m.ChainId.ARBITRUM_ONE]: [],
                [m.ChainId.ARBITRUM_GOERLI]: [],
                [m.ChainId.OPTIMISM_GOERLI]: [],
                [m.ChainId.POLYGON]: [],
                [m.ChainId.POLYGON_MUMBAI]: [],
                [m.ChainId.CELO]: [],
                [m.ChainId.CELO_ALFAJORES]: [],
                [m.ChainId.GNOSIS]: [],
                [m.ChainId.MOONBEAM]: [],
                [m.ChainId.BNB]: [],
                [m.ChainId.AVALANCHE]: [],
                [m.ChainId.BASE_GOERLI]: [],
                [m.ChainId.BASE]: []
            };
            class np {
                async getPools(e, t) {
                    r.info("In static subgraph provider for V2");
                    let f = nl[this.chainId],
                        n = _().flatMap(f, e => f.map(t => [e, t]));
                    e && t && n.push([e, t], ...f.map(t => [e, t]), ...f.map(e => [t, e]));
                    let i = _()(n).filter(e => !!(e[0] && e[1])).filter(([e, t]) => e.address !== t.address && !e.equals(t)).value(),
                        a = new Set;
                    return _()(i).map(([e, t]) => {
                        let f = W.Pair.getAddress(e, t);
                        if (a.has(f)) return;
                        a.add(f);
                        let [n, r] = e.sortsBefore(t) ? [e, t] : [t, e];
                        return {
                            id: f,
                            liquidity: "100",
                            token0: {
                                id: n.address
                            },
                            token1: {
                                id: r.address
                            },
                            supply: 100,
                            reserve: 100,
                            reserveUSD: 100
                        }
                    }).compact().value()
                }
                constructor(e) {
                    this.chainId = e
                }
            }
            f(15400), m.ChainId.MAINNET, m.ChainId.BLAST_SEPOLIA, m.ChainId.BLAST;
            class ny {
                async getPools(e, t, f) {
                    for (let n = 0; n < this.fallbacks.length; n++) {
                        let i = this.fallbacks[n];
                        try {
                            return await i.getPools(e, t, f)
                        } catch (e) {
                            r.info(`Failed to get subgraph pools for V2 from fallback #${n}`)
                        }
                    }
                    throw Error("Failed to get subgraph pools from any providers")
                }
                constructor(e) {
                    this.fallbacks = e
                }
            }
            class nb {
                async getPools(e, t) {
                    let f = new Set,
                        n = [],
                        i = [],
                        a = {},
                        s = await (null == t ? void 0 : t.blockNumber);
                    for (let [t, r, u] of e) {
                        let {
                            poolAddress: e,
                            token0: d,
                            token1: c
                        } = this.getPoolAddress(t, r, u);
                        if (f.has(e)) continue;
                        f.add(e);
                        let l = await this.cache.get(this.POOL_KEY(this.chainId, e, s));
                        if (l) {
                            w.putMetric("V3_INMEMORY_CACHING_POOL_HIT_IN_MEMORY", 1, o.None), a[e] = l;
                            continue
                        }
                        w.putMetric("V3_INMEMORY_CACHING_POOL_MISS_NOT_IN_MEMORY", 1, o.None), n.push([d, c, u]), i.push(e)
                    }
                    if (r.info({
                            poolsFound: _().map(Object.values(a), e => `${e.token0.symbol} ${e.token1.symbol} ${e.fee}`),
                            poolsToGetTokenPairs: _().map(n, e => `${e[0].symbol} ${e[1].symbol} ${e[2]}`)
                        }, `Found ${Object.keys(a).length} V3 pools already in local cache. About to get liquidity and slot0s for ${n.length} pools.`), i.length > 0) {
                        let e = await this.poolProvider.getPools(n, t);
                        for (let t of i) {
                            let f = e.getPoolByAddress(t);
                            f && (a[t] = f, this.cache.set(this.POOL_KEY(this.chainId, t, s), f))
                        }
                    }
                    return {
                        getPool: (e, t, f) => {
                            let {
                                poolAddress: n
                            } = this.getPoolAddress(e, t, f);
                            return a[n]
                        },
                        getPoolByAddress: e => a[e],
                        getAllPools: () => Object.values(a)
                    }
                }
                getPoolAddress(e, t, f) {
                    return this.poolProvider.getPoolAddress(e, t, f)
                }
                constructor(e, t, f) {
                    this.chainId = e, this.poolProvider = t, this.cache = f, this.POOL_KEY = (e, t, f) => f ? `pool-${e}-${t}-${f}` : `pool-${e}-${t}`
                }
            }
            class nh {
                async getPools() {
                    let e = await this.cache.get(this.SUBGRAPH_KEY(this.chainId));
                    if (e) return e;
                    let t = await this.subgraphProvider.getPools();
                    return await this.cache.set(this.SUBGRAPH_KEY(this.chainId), t), t
                }
                constructor(e, t, f) {
                    this.chainId = e, this.subgraphProvider = t, this.cache = f, this.SUBGRAPH_KEY = e => `subgraph-pools-${e}`
                }
            }
            let nm = {
                [m.ChainId.MAINNET]: [M[m.ChainId.MAINNET], ei, ef, en, er],
                [m.ChainId.GOERLI]: [x[m.ChainId.GOERLI], e_],
                [m.ChainId.SEPOLIA]: [M[m.ChainId.SEPOLIA], eu],
                [m.ChainId.BLAST]: [x[m.ChainId.BLAST], eC, em],
                [m.ChainId.BLAST_SEPOLIA]: [x[m.ChainId.BLAST_SEPOLIA], ek],
                [m.ChainId.OPTIMISM]: [M[m.ChainId.OPTIMISM], eO, ex, eP, eM, eR],
                [m.ChainId.ARBITRUM_ONE]: [M[m.ChainId.ARBITRUM_ONE], eU, eV, eL, eq, eG],
                [m.ChainId.ARBITRUM_GOERLI]: [M[m.ChainId.ARBITRUM_GOERLI], ej],
                [m.ChainId.OPTIMISM_GOERLI]: [M[m.ChainId.OPTIMISM_GOERLI], eF, eB, eD, eN],
                [m.ChainId.POLYGON]: [eW, eH, e$],
                [m.ChainId.POLYGON_MUMBAI]: [eX, M[m.ChainId.POLYGON_MUMBAI], eQ],
                [m.ChainId.CELO]: [e1, e5, e2, e6],
                [m.ChainId.CELO_ALFAJORES]: [e8, e9, e4, e3],
                [m.ChainId.GNOSIS]: [M[m.ChainId.GNOSIS], tr, tn, tf],
                [m.ChainId.BNB]: [M[m.ChainId.BNB], eK, eY, eZ, e0, ez, eJ],
                [m.ChainId.AVALANCHE]: [M[m.ChainId.AVALANCHE], te, e7],
                [m.ChainId.MOONBEAM]: [M[m.ChainId.MOONBEAM], to, ti, ts],
                [m.ChainId.BASE_GOERLI]: [M[m.ChainId.BASE_GOERLI]],
                [m.ChainId.BASE]: [M[m.ChainId.BASE], tt]
            };
            class nv {
                async getPools(e, t, f) {
                    r.info("In static subgraph provider for V3");
                    let n = nm[this.chainId],
                        i = _().flatMap(n, e => n.map(t => [e, t]));
                    e && t && i.push([e, t], ...n.map(t => [e, t]), ...n.map(e => [t, e]));
                    let a = _()(i).filter(e => !!(e[0] && e[1])).filter(([e, t]) => e.address !== t.address && !e.equals(t)).flatMap(([e, t]) => [
                        [e, t, k.FeeAmount.LOWEST],
                        [e, t, k.FeeAmount.LOW],
                        [e, t, k.FeeAmount.MEDIUM],
                        [e, t, k.FeeAmount.HIGH]
                    ]).value();
                    r.info(`V3 Static subgraph provider about to get ${a.length} pools on-chain`);
                    let o = (await this.poolProvider.getPools(a, f)).getAllPools(),
                        s = new Set;
                    return _()(o).map(e => {
                        let {
                            token0: t,
                            token1: f,
                            fee: n,
                            liquidity: r
                        } = e, i = k.Pool.getAddress(e.token0, e.token1, e.fee);
                        if (s.has(i)) return;
                        s.add(i);
                        let a = j().toNumber(r);
                        return {
                            id: i,
                            feeTier: H(n),
                            liquidity: r.toString(),
                            token0: {
                                id: t.address
                            },
                            token1: {
                                id: f.address
                            },
                            tvlETH: a,
                            tvlUSD: a
                        }
                    }).compact().value()
                }
                constructor(e, t) {
                    this.chainId = e, this.poolProvider = t
                }
            }
            m.ChainId.MAINNET, m.ChainId.OPTIMISM, m.ChainId.ARBITRUM_ONE, m.ChainId.POLYGON, m.ChainId.CELO, m.ChainId.GOERLI, m.ChainId.BLAST_SEPOLIA, m.ChainId.BLAST, m.ChainId.BNB, m.ChainId.AVALANCHE, m.ChainId.BASE;
            class nT {
                async getPools(e, t, f) {
                    for (let n = 0; n < this.fallbacks.length; n++) {
                        let i = this.fallbacks[n];
                        try {
                            return await i.getPools(e, t, f)
                        } catch (e) {
                            r.info(`Failed to get subgraph pools for V3 from fallback #${n}`)
                        }
                    }
                    throw Error("Failed to get subgraph pools from any providers")
                }
                constructor(e) {
                    this.fallbacks = e
                }
            }
            class ng {
                async getPools(e, t) {
                    let f = new Set,
                        n = [],
                        i = [],
                        a = {},
                        o = await (null == t ? void 0 : t.blockNumber);
                    for (let [t, r] of e) {
                        let {
                            poolAddress: e,
                            token0: s,
                            token1: u
                        } = this.getPoolAddress(t, r);
                        if (f.has(e)) continue;
                        f.add(e);
                        let d = await this.cache.get(this.POOL_KEY(this.chainId, e));
                        if (d && (!o || o && d.block == o)) {
                            a[e] = d.pair;
                            continue
                        }
                        n.push([s, u]), i.push(e)
                    }
                    if (r.info({
                            poolsFound: _().map(Object.values(a), e => e.token0.symbol + " " + e.token1.symbol),
                            poolsToGetTokenPairs: _().map(n, e => e[0].symbol + " " + e[1].symbol)
                        }, `Found ${Object.keys(a).length} V2 pools already in local cache for block ${o}. About to get reserves for ${n.length} pools.`), i.length > 0) {
                        let e = await this.poolProvider.getPools(n, { ...t,
                            enableFeeOnTransferFeeFetching: !0
                        });
                        for (let t of i) {
                            let f = e.getPoolByAddress(t);
                            f && (a[t] = f, this.cache.set(this.POOL_KEY(this.chainId, t), {
                                pair: f,
                                block: o
                            }))
                        }
                    }
                    return {
                        getPool: (e, t) => {
                            let {
                                poolAddress: f
                            } = this.getPoolAddress(e, t);
                            return a[f]
                        },
                        getPoolByAddress: e => a[e],
                        getAllPools: () => Object.values(a)
                    }
                }
                getPoolAddress(e, t) {
                    return this.poolProvider.getPoolAddress(e, t)
                }
                constructor(e, t, f) {
                    this.chainId = e, this.poolProvider = t, this.cache = f, this.POOL_KEY = (e, t) => `pool-${e}-${t}`
                }
            }
            class nw {
                async getPools() {
                    let e = await this.cache.get(this.SUBGRAPH_KEY(this.chainId));
                    if (e) return e;
                    let t = await this.subgraphProvider.getPools();
                    return await this.cache.set(this.SUBGRAPH_KEY(this.chainId), t), t
                }
                constructor(e, t, f) {
                    this.chainId = e, this.subgraphProvider = t, this.cache = f, this.SUBGRAPH_KEY = e => `subgraph-pools-ring-${e}`
                }
            }
            class nA {
                async getPools(e, t) {
                    var f, n, i, a, s, u, d, c, p, y;
                    let b = new Set,
                        h = [],
                        v = [];
                    for (let t of e) {
                        let [e, f] = t, {
                            poolAddress: n,
                            token0: r,
                            token1: i
                        } = this.getPoolAddress(e, f);
                        b.has(n) || (b.add(n), h.push([r, i]), v.push(n))
                    }
                    r.debug(`getPools called with ${e.length} token pairs. Deduped down to ${b.size}`), w.putMetric("RING_RPC_POOL_RPC_CALL", 1, o.None), w.putMetric("RingGetReservesBatchSize", v.length, o.Count), w.putMetric(`RingGetReservesBatchSize_${P(this.chainId)}`, v.length, o.Count);
                    let [T, g] = await Promise.all([this.getPoolsData(v, "getReserves", t), this.tokenPropertiesProvider.getTokensProperties(this.flatten(e), t)]);
                    r.info(`Got reserves for ${b.size} pools ${(null==t?void 0:t.blockNumber)?`as of block: ${await(null==t?void 0:t.blockNumber)}.`:""}`);
                    let A = {},
                        I = [];
                    for (let e = 0; e < v.length; e++) {
                        let t = T[e];
                        if (!(null == t ? void 0 : t.success)) {
                            let [t, f] = h[e];
                            I.push([t, f]);
                            continue
                        }
                        let [r, o] = h[e];
                        (null === (f = g[r.address.toLowerCase()]) || void 0 === f ? void 0 : f.tokenValidationResult) === l.FOT && (r = new m.Token(r.chainId, r.address, r.decimals, r.symbol, r.name, !0, null === (i = null === (n = g[r.address.toLowerCase()]) || void 0 === n ? void 0 : n.tokenFeeResult) || void 0 === i ? void 0 : i.buyFeeBps, null === (s = null === (a = g[r.address.toLowerCase()]) || void 0 === a ? void 0 : a.tokenFeeResult) || void 0 === s ? void 0 : s.sellFeeBps)), (null === (u = g[o.address.toLowerCase()]) || void 0 === u ? void 0 : u.tokenValidationResult) === l.FOT && (o = new m.Token(o.chainId, o.address, o.decimals, o.symbol, o.name, !0, null === (c = null === (d = g[o.address.toLowerCase()]) || void 0 === d ? void 0 : d.tokenFeeResult) || void 0 === c ? void 0 : c.buyFeeBps, null === (y = null === (p = g[o.address.toLowerCase()]) || void 0 === p ? void 0 : p.tokenFeeResult) || void 0 === y ? void 0 : y.sellFeeBps));
                        let {
                            reserve0: b,
                            reserve1: w
                        } = t.result, E = new Q.Pair($.fromRawAmount(r, b.toString()), $.fromRawAmount(o, w.toString()));
                        A[v[e]] = E
                    }
                    I.length > 0 && r.info({
                        invalidPools: _().map(I, ([e, t]) => `${e.symbol}/${t.symbol}`)
                    }, `${I.length} pools invalid after checking their slot0 and liquidity results. Dropping.`);
                    let E = _().map(Object.values(A), K);
                    return r.debug({
                        poolStrs: E
                    }, `Found ${E.length} valid ring pools`), {
                        getPool: (e, t) => {
                            let {
                                poolAddress: f
                            } = this.getPoolAddress(e, t);
                            return A[f]
                        },
                        getPoolByAddress: e => A[e],
                        getAllPools: () => Object.values(A)
                    }
                }
                getPoolAddress(e, t) {
                    let [f, n] = e.sortsBefore(t) ? [e, t] : [t, e], r = `${this.chainId}/${f.address}/${n.address}`, i = this.POOL_ADDRESS_CACHE[r];
                    if (i) return {
                        poolAddress: i,
                        token0: f,
                        token1: n
                    };
                    let a = Q.Pair.getAddress(f, n);
                    return this.POOL_ADDRESS_CACHE[r] = a, {
                        poolAddress: a,
                        token0: f,
                        token1: n
                    }
                }
                async getPoolsData(e, t, f) {
                    let {
                        results: n,
                        blockNumber: i
                    } = await tm()(async () => this.multicall2Provider.callSameFunctionOnMultipleContracts({
                        addresses: e,
                        contractInterface: tP.createInterface(),
                        functionName: t,
                        providerConfig: f
                    }), this.retryOptions);
                    return r.debug(`Pool data fetched as of block ${i}`), n
                }
                flatten(e) {
                    let t = [];
                    for (let [f, n] of e) t.push(f), t.push(n);
                    return t
                }
                constructor(e, t, f, n = {
                    retries: 2,
                    minTimeout: 50,
                    maxTimeout: 500
                }) {
                    this.chainId = e, this.multicall2Provider = t, this.tokenPropertiesProvider = f, this.retryOptions = n, this.POOL_ADDRESS_CACHE = {}
                }
            }
            class nI {
                async getQuotesManyExactIn(e, t, f) {
                    return this.getQuotes(e, t, m.TradeType.EXACT_INPUT, f)
                }
                async getQuotesManyExactOut(e, t, f) {
                    return this.getQuotes(e, t, m.TradeType.EXACT_OUTPUT, f)
                }
                async getQuotes(e, t, f, n) {
                    let i = [],
                        a = [];
                    for (let r of t) {
                        let t = [],
                            o = 0,
                            s = 0;
                        for (let i of e) try {
                            if (f == m.TradeType.EXACT_INPUT) {
                                let e = i.wrapped;
                                for (let t of r.pairs)[e] = t.getOutputAmount(e, !0 === n.enableFeeOnTransferFeeFetching);
                                t.push({
                                    amount: i,
                                    quote: tl.O$.from(e.quotient.toString())
                                })
                            } else {
                                let e = i.wrapped;
                                for (let t = r.pairs.length - 1; t >= 0; t--) {
                                    let f = r.pairs[t];
                                    [e] = f.getInputAmount(e, !0 === n.enableFeeOnTransferFeeFetching)
                                }
                                t.push({
                                    amount: i,
                                    quote: tl.O$.from(e.quotient.toString())
                                })
                            }
                        } catch (e) {
                            if (e instanceof Q.InsufficientInputAmountError) o += 1, t.push({
                                amount: i,
                                quote: null
                            });
                            else if (e instanceof Q.InsufficientReservesError) s += 1, t.push({
                                amount: i,
                                quote: null
                            });
                            else throw e
                        }(o > 0 || s > 0) && a.push(`${[X(r)]} Input: ${o} Reserves: ${s} }`), i.push([r, t])
                    }
                    return a.length > 0 && r.info({
                        debugStrs: a
                    }, "Failed quotes for V2 routes"), {
                        routesWithQuotes: i
                    }
                }
                constructor() {}
            }
            let nE = {
                [m.ChainId.MAINNET]: [M[m.ChainId.MAINNET], ei, ef, en, er],
                [m.ChainId.GOERLI]: [x[m.ChainId.GOERLI], e_],
                [m.ChainId.BLAST]: [x[m.ChainId.BLAST], eC, em],
                [m.ChainId.BLAST_SEPOLIA]: [x[m.ChainId.BLAST_SEPOLIA], ek],
                [m.ChainId.SEPOLIA]: [M[m.ChainId.SEPOLIA]],
                [m.ChainId.OPTIMISM]: [],
                [m.ChainId.ARBITRUM_ONE]: [],
                [m.ChainId.ARBITRUM_GOERLI]: [],
                [m.ChainId.OPTIMISM_GOERLI]: [],
                [m.ChainId.POLYGON]: [],
                [m.ChainId.POLYGON_MUMBAI]: [],
                [m.ChainId.CELO]: [],
                [m.ChainId.CELO_ALFAJORES]: [],
                [m.ChainId.GNOSIS]: [],
                [m.ChainId.MOONBEAM]: [],
                [m.ChainId.BNB]: [],
                [m.ChainId.AVALANCHE]: [],
                [m.ChainId.BASE_GOERLI]: [],
                [m.ChainId.BASE]: []
            };
            class n_ {
                async getPools(e, t) {
                    r.info("In static subgraph provider for ring");
                    let f = nE[this.chainId],
                        n = _().flatMap(f, e => f.map(t => [e, t]));
                    e && t && n.push([e, t], ...f.map(t => [e, t]), ...f.map(e => [t, e]));
                    let i = _()(n).filter(e => !!(e[0] && e[1])).filter(([e, t]) => e.address !== t.address && !e.equals(t)).value(),
                        a = new Set;
                    return _()(i).map(([e, t]) => {
                        let f = Q.Pair.getAddress(e, t);
                        if (a.has(f)) return;
                        a.add(f);
                        let [n, r] = e.sortsBefore(t) ? [e, t] : [t, e];
                        return {
                            id: f,
                            liquidity: "100",
                            token0: {
                                id: n.address
                            },
                            token1: {
                                id: r.address
                            },
                            supply: 100,
                            reserve: 100,
                            reserveUSD: 100
                        }
                    }).compact().value()
                }
                constructor(e) {
                    this.chainId = e
                }
            }
            m.ChainId.MAINNET, m.ChainId.BLAST_SEPOLIA, m.ChainId.BLAST;
            class nk {
                async getPools(e, t, f) {
                    for (let n = 0; n < this.fallbacks.length; n++) {
                        let i = this.fallbacks[n];
                        try {
                            return await i.getPools(e, t, f)
                        } catch (e) {
                            r.info(`Failed to get subgraph pools for V2 from fallback #${n}`)
                        }
                    }
                    throw Error("Failed to get subgraph pools from any providers")
                }
                constructor(e) {
                    this.fallbacks = e
                }
            }
        },
        31651: (e, t, f) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.DutchOrderBuilder = void 0;
            let n = f(51113),
                r = f(72637),
                i = n.__importDefault(f(84861)),
                a = f(63104),
                o = f(75866),
                s = f(23539),
                u = f(9467),
                d = class e extends u.OrderBuilder {
                    static fromOrder(t) {
                        let f = new e(t.chainId, t.info.reactor).deadline(t.info.deadline).decayEndTime(t.info.decayEndTime).decayStartTime(t.info.decayStartTime).swapper(t.info.swapper).nonce(t.info.nonce).input(t.info.input).exclusiveFiller(t.info.exclusiveFiller, t.info.exclusivityOverrideBps).validation({
                            additionalValidationContract: t.info.additionalValidationContract,
                            additionalValidationData: t.info.additionalValidationData
                        });
                        for (let e of t.info.outputs) f.output(e);
                        return f
                    }
                    decayStartTime(e) {
                        return this.info.decayStartTime = e, this
                    }
                    decayEndTime(e) {
                        return void 0 === this.orderInfo.deadline && super.deadline(e), this.info.decayEndTime = e, this
                    }
                    input(e) {
                        return this.info.input = e, this
                    }
                    output(e) {
                        return this.info.outputs || (this.info.outputs = []), (0, i.default)(e.startAmount.gte(e.endAmount), `startAmount must be greater than endAmount: ${e.startAmount.toString()}`), this.info.outputs.push(e), this
                    }
                    deadline(e) {
                        return super.deadline(e), void 0 === this.info.decayEndTime && this.decayEndTime(e), this
                    }
                    swapper(e) {
                        return super.swapper(e), this
                    }
                    nonce(e) {
                        return super.nonce(e), this
                    }
                    validation(e) {
                        return super.validation(e), this
                    }
                    nonFeeRecipient(e) {
                        return this.info.outputs && (this.info.outputs = this.info.outputs.map(t => Object.assign(Object.assign({}, t), {
                            recipient: e
                        }))), this
                    }
                    exclusiveFiller(e, t) {
                        return this.info.exclusiveFiller = e, this.info.exclusivityOverrideBps = t, this
                    }
                    build() {
                        return (0, i.default)(void 0 !== this.info.decayStartTime, "decayStartTime not set"), (0, i.default)(void 0 !== this.info.input, "input not set"), (0, i.default)(void 0 !== this.info.decayEndTime, "decayEndTime not set"), (0, i.default)(void 0 !== this.info.exclusiveFiller, "exclusiveFiller not set"), (0, i.default)(void 0 !== this.info.exclusivityOverrideBps, "exclusivityOverrideBps not set"), (0, i.default)(void 0 !== this.info.outputs && 0 !== this.info.outputs.length, "outputs not set"), (0, i.default)(void 0 !== this.info.decayEndTime || void 0 !== this.getOrderInfo().deadline, "Must set either deadline or decayEndTime"), (0, i.default)(!this.orderInfo.deadline || this.info.decayStartTime <= this.orderInfo.deadline, `decayStartTime must be before or same as deadline: ${this.info.decayStartTime}`), (0, i.default)(!this.orderInfo.deadline || this.info.decayEndTime <= this.orderInfo.deadline, `decayEndTime must be before or same as deadline: ${this.info.decayEndTime}`), new s.DutchOrder(Object.assign(this.getOrderInfo(), {
                            decayStartTime: this.info.decayStartTime,
                            decayEndTime: this.info.decayEndTime,
                            exclusiveFiller: this.info.exclusiveFiller,
                            exclusivityOverrideBps: this.info.exclusivityOverrideBps,
                            input: this.info.input,
                            outputs: this.info.outputs
                        }), this.chainId, this.permit2Address)
                    }
                    constructor(e, t, f) {
                        if (super(), this.chainId = e, this.permit2Address = f, t) this.reactor(t);
                        else if (a.REACTOR_ADDRESS_MAPPING[e] && a.REACTOR_ADDRESS_MAPPING[e][a.OrderType.Dutch]) {
                            let t = a.REACTOR_ADDRESS_MAPPING[e][a.OrderType.Dutch];
                            this.reactor(t)
                        } else throw new o.MissingConfiguration("reactor", e.toString());
                        this.info = {
                            outputs: [],
                            exclusiveFiller: r.ethers.constants.AddressZero,
                            exclusivityOverrideBps: r.BigNumber.from(0)
                        }
                    }
                };
            t.DutchOrderBuilder = d
        },
        9467: (e, t, f) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.OrderBuilder = void 0;
            let n = f(51113),
                r = f(72637),
                i = n.__importDefault(f(84861)),
                a = class {
                    deadline(e) {
                        return this.orderInfo.deadline = e, this
                    }
                    nonce(e) {
                        return this.orderInfo.nonce = e, this
                    }
                    swapper(e) {
                        return this.orderInfo.swapper = e, this
                    }
                    validation(e) {
                        return this.orderInfo.additionalValidationContract = e.additionalValidationContract, this.orderInfo.additionalValidationData = e.additionalValidationData, this
                    }
                    reactor(e) {
                        return this.orderInfo.reactor = e, this
                    }
                    getOrderInfo() {
                        return (0, i.default)(void 0 !== this.orderInfo.reactor, "reactor not set"), (0, i.default)(void 0 !== this.orderInfo.nonce, "nonce not set"), (0, i.default)(void 0 !== this.orderInfo.deadline, "deadline not set"), (0, i.default)(this.orderInfo.deadline > Date.now() / 1e3, `Deadline must be in the future: ${this.orderInfo.deadline}`), (0, i.default)(void 0 !== this.orderInfo.swapper, "swapper not set"), (0, i.default)(void 0 !== this.orderInfo.additionalValidationContract, "validation contract not set"), (0, i.default)(void 0 !== this.orderInfo.additionalValidationData, "validation data not set"), {
                            reactor: this.orderInfo.reactor,
                            swapper: this.orderInfo.swapper,
                            nonce: this.orderInfo.nonce,
                            deadline: this.orderInfo.deadline,
                            additionalValidationContract: this.orderInfo.additionalValidationContract,
                            additionalValidationData: this.orderInfo.additionalValidationData
                        }
                    }
                    constructor() {
                        this.orderInfo = {
                            additionalValidationContract: r.ethers.constants.AddressZero,
                            additionalValidationData: "0x"
                        }
                    }
                };
            t.OrderBuilder = a
        },
        63236: (e, t, f) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            });
            let n = f(51113);
            n.__exportStar(f(31651), t), n.__exportStar(f(9467), t)
        },
        63104: (e, t) => {
            "use strict";
            var f;
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.BPS = t.REVERSE_REACTOR_MAPPING = t.MULTICALL_ADDRESS = t.REACTOR_ADDRESS_MAPPING = t.OrderType = t.KNOWN_EVENT_SIGNATURES = t.EXCLUSIVE_FILLER_VALIDATION_MAPPING = t.ORDER_QUOTER_MAPPING = t.PERMIT2_MAPPING = void 0, t.PERMIT2_MAPPING = {
                1: "0x000000000022d473030f116ddee9f6b43ac78ba3",
                5: "0x000000000022d473030f116ddee9f6b43ac78ba3",
                137: "0x000000000022d473030f116ddee9f6b43ac78ba3",
                12341234: "0x000000000022d473030f116ddee9f6b43ac78ba3"
            }, t.ORDER_QUOTER_MAPPING = {
                1: "0x54539967a06Fc0E3C3ED0ee320Eb67362D13C5fF",
                5: "0x54539967a06Fc0E3C3ED0ee320Eb67362D13C5fF",
                137: "0x54539967a06Fc0E3C3ED0ee320Eb67362D13C5fF",
                12341234: "0xbea0901A41177811b099F787D753436b2c47690E"
            }, t.EXCLUSIVE_FILLER_VALIDATION_MAPPING = {
                1: "0x8A66A74e15544db9688B68B06E116f5d19e5dF90",
                5: "0x0000000000000000000000000000000000000000",
                12341234: "0x8A66A74e15544db9688B68B06E116f5d19e5dF90"
            }, (t.KNOWN_EVENT_SIGNATURES || (t.KNOWN_EVENT_SIGNATURES = {})).ERC20_TRANSFER = "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef", (f = t.OrderType || (t.OrderType = {})).Dutch = "Dutch", t.REACTOR_ADDRESS_MAPPING = {
                1: {
                    [f.Dutch]: "0x6000da47483062A0D734Ba3dc7576Ce6A0B645C4"
                },
                5: {
                    [f.Dutch]: "0x6000da47483062A0D734Ba3dc7576Ce6A0B645C4"
                },
                137: {
                    [f.Dutch]: "0x6000da47483062A0D734Ba3dc7576Ce6A0B645C4"
                },
                12341234: {
                    [f.Dutch]: "0xbD7F9D0239f81C94b728d827a87b9864972661eC"
                }
            }, t.MULTICALL_ADDRESS = "0xcA11bde05977b3631167028862bE2a173976CA11", t.REVERSE_REACTOR_MAPPING = Object.entries(t.REACTOR_ADDRESS_MAPPING).reduce((e, [t, n]) => {
                for (let [r, i] of Object.entries(n)) e[i.toLowerCase()] = {
                    chainId: parseInt(t),
                    orderType: f[r]
                };
                return e
            }, {}), t.BPS = 1e4
        },
        11409: (e, t, f) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.DeploylessMulticall2__factory = void 0;
            let n = f(72637),
                r = [{
                    inputs: [{
                        internalType: "bool",
                        name: "requireSuccess",
                        type: "bool"
                    }, {
                        components: [{
                            internalType: "address",
                            name: "target",
                            type: "address"
                        }, {
                            internalType: "bytes",
                            name: "callData",
                            type: "bytes"
                        }],
                        internalType: "struct DeploylessMulticall2.Call[]",
                        name: "calls",
                        type: "tuple[]"
                    }],
                    stateMutability: "nonpayable",
                    type: "constructor"
                }],
                i = class {
                    static createInterface() {
                        return new n.utils.Interface(r)
                    }
                    static connect(e, t) {
                        return new n.Contract(e, r, t)
                    }
                };
            t.DeploylessMulticall2__factory = i, i.abi = r
        },
        98158: (e, t, f) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.ExclusiveDutchOrderReactor__factory = void 0;
            let n = f(72637),
                r = [{
                    inputs: [{
                        internalType: "contract IPermit2",
                        name: "_permit2",
                        type: "address"
                    }, {
                        internalType: "address",
                        name: "_protocolFeeOwner",
                        type: "address"
                    }],
                    stateMutability: "nonpayable",
                    type: "constructor"
                }, {
                    inputs: [],
                    name: "DeadlineBeforeEndTime",
                    type: "error"
                }, {
                    inputs: [],
                    name: "DeadlinePassed",
                    type: "error"
                }, {
                    inputs: [{
                        internalType: "address",
                        name: "duplicateToken",
                        type: "address"
                    }],
                    name: "DuplicateFeeOutput",
                    type: "error"
                }, {
                    inputs: [],
                    name: "EndTimeBeforeStartTime",
                    type: "error"
                }, {
                    inputs: [{
                        internalType: "address",
                        name: "token",
                        type: "address"
                    }, {
                        internalType: "uint256",
                        name: "amount",
                        type: "uint256"
                    }, {
                        internalType: "address",
                        name: "recipient",
                        type: "address"
                    }],
                    name: "FeeTooLarge",
                    type: "error"
                }, {
                    inputs: [],
                    name: "IncorrectAmounts",
                    type: "error"
                }, {
                    inputs: [],
                    name: "InputAndOutputDecay",
                    type: "error"
                }, {
                    inputs: [],
                    name: "InsufficientEth",
                    type: "error"
                }, {
                    inputs: [{
                        internalType: "address",
                        name: "feeToken",
                        type: "address"
                    }],
                    name: "InvalidFeeToken",
                    type: "error"
                }, {
                    inputs: [],
                    name: "InvalidReactor",
                    type: "error"
                }, {
                    inputs: [],
                    name: "NativeTransferFailed",
                    type: "error"
                }, {
                    inputs: [],
                    name: "NoExclusiveOverride",
                    type: "error"
                }, {
                    inputs: [],
                    name: "OrderEndTimeBeforeStartTime",
                    type: "error"
                }, {
                    anonymous: !1,
                    inputs: [{
                        indexed: !0,
                        internalType: "bytes32",
                        name: "orderHash",
                        type: "bytes32"
                    }, {
                        indexed: !0,
                        internalType: "address",
                        name: "filler",
                        type: "address"
                    }, {
                        indexed: !0,
                        internalType: "address",
                        name: "swapper",
                        type: "address"
                    }, {
                        indexed: !1,
                        internalType: "uint256",
                        name: "nonce",
                        type: "uint256"
                    }],
                    name: "Fill",
                    type: "event"
                }, {
                    anonymous: !1,
                    inputs: [{
                        indexed: !0,
                        internalType: "address",
                        name: "user",
                        type: "address"
                    }, {
                        indexed: !0,
                        internalType: "address",
                        name: "newOwner",
                        type: "address"
                    }],
                    name: "OwnershipTransferred",
                    type: "event"
                }, {
                    anonymous: !1,
                    inputs: [{
                        indexed: !1,
                        internalType: "address",
                        name: "oldFeeController",
                        type: "address"
                    }, {
                        indexed: !1,
                        internalType: "address",
                        name: "newFeeController",
                        type: "address"
                    }],
                    name: "ProtocolFeeControllerSet",
                    type: "event"
                }, {
                    inputs: [{
                        components: [{
                            internalType: "bytes",
                            name: "order",
                            type: "bytes"
                        }, {
                            internalType: "bytes",
                            name: "sig",
                            type: "bytes"
                        }],
                        internalType: "struct SignedOrder",
                        name: "order",
                        type: "tuple"
                    }],
                    name: "execute",
                    outputs: [],
                    stateMutability: "payable",
                    type: "function"
                }, {
                    inputs: [{
                        components: [{
                            internalType: "bytes",
                            name: "order",
                            type: "bytes"
                        }, {
                            internalType: "bytes",
                            name: "sig",
                            type: "bytes"
                        }],
                        internalType: "struct SignedOrder[]",
                        name: "orders",
                        type: "tuple[]"
                    }],
                    name: "executeBatch",
                    outputs: [],
                    stateMutability: "payable",
                    type: "function"
                }, {
                    inputs: [{
                        components: [{
                            internalType: "bytes",
                            name: "order",
                            type: "bytes"
                        }, {
                            internalType: "bytes",
                            name: "sig",
                            type: "bytes"
                        }],
                        internalType: "struct SignedOrder[]",
                        name: "orders",
                        type: "tuple[]"
                    }, {
                        internalType: "bytes",
                        name: "callbackData",
                        type: "bytes"
                    }],
                    name: "executeBatchWithCallback",
                    outputs: [],
                    stateMutability: "payable",
                    type: "function"
                }, {
                    inputs: [{
                        components: [{
                            internalType: "bytes",
                            name: "order",
                            type: "bytes"
                        }, {
                            internalType: "bytes",
                            name: "sig",
                            type: "bytes"
                        }],
                        internalType: "struct SignedOrder",
                        name: "order",
                        type: "tuple"
                    }, {
                        internalType: "bytes",
                        name: "callbackData",
                        type: "bytes"
                    }],
                    name: "executeWithCallback",
                    outputs: [],
                    stateMutability: "payable",
                    type: "function"
                }, {
                    inputs: [],
                    name: "feeController",
                    outputs: [{
                        internalType: "contract IProtocolFeeController",
                        name: "",
                        type: "address"
                    }],
                    stateMutability: "view",
                    type: "function"
                }, {
                    inputs: [],
                    name: "owner",
                    outputs: [{
                        internalType: "address",
                        name: "",
                        type: "address"
                    }],
                    stateMutability: "view",
                    type: "function"
                }, {
                    inputs: [],
                    name: "permit2",
                    outputs: [{
                        internalType: "contract IPermit2",
                        name: "",
                        type: "address"
                    }],
                    stateMutability: "view",
                    type: "function"
                }, {
                    inputs: [{
                        internalType: "address",
                        name: "_newFeeController",
                        type: "address"
                    }],
                    name: "setProtocolFeeController",
                    outputs: [],
                    stateMutability: "nonpayable",
                    type: "function"
                }, {
                    inputs: [{
                        internalType: "address",
                        name: "newOwner",
                        type: "address"
                    }],
                    name: "transferOwnership",
                    outputs: [],
                    stateMutability: "nonpayable",
                    type: "function"
                }, {
                    stateMutability: "payable",
                    type: "receive"
                }],
                i = "0x60a06040523480156200001157600080fd5b5060405162003136380380620031368339810160408190526200003491620000b8565b600080546001600160a01b0319166001600160a01b03831690811782556040518492849283928392907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350506001600255506001600160a01b031660805250620000f79050565b6001600160a01b0381168114620000b557600080fd5b50565b60008060408385031215620000cc57600080fd5b8251620000d9816200009f565b6020840151909250620000ec816200009f565b809150509250929050565b60805161301d620001196000396000818160e0015261191b015261301d6000f3fe60806040526004361061009a5760003560e01c80632d771389116100695780636999b3771161004e5780636999b377146101715780638da5cb5b1461019e578063f2fde38b146101cb57600080fd5b80632d7713891461013e5780633f62192e1461015e57600080fd5b80630d335884146100a65780630d7a16c3146100bb57806312261ee7146100ce57806313fb72c71461012b57600080fd5b366100a157005b600080fd5b6100b96100b4366004612281565b6101eb565b005b6100b96100c936600461232f565b610364565b3480156100da57600080fd5b506101027f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390f35b6100b9610139366004612371565b6104c5565b34801561014a57600080fd5b506100b961015936600461240f565b610683565b6100b961016c366004612433565b61078f565b34801561017d57600080fd5b506001546101029073ffffffffffffffffffffffffffffffffffffffff1681565b3480156101aa57600080fd5b506000546101029073ffffffffffffffffffffffffffffffffffffffff1681565b3480156101d757600080fd5b506100b96101e636600461240f565b610894565b6101f3610985565b604080516001808252818301909252600091816020015b6040805161016081018252600060a0820181815260c0830182905260e0830182905261010083018290526101208301829052606061014084018190529083528351808201855282815260208082018490528186018490528085019190915293830181905280830152608082015282527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff90920191018161020a5790505090506102b2846109f6565b816000815181106102c5576102c5612497565b60200260200101819052506102d981610b62565b6040517f585da628000000000000000000000000000000000000000000000000000000008152339063585da6289061031990849087908790600401612699565b600060405180830381600087803b15801561033357600080fd5b505af1158015610347573d6000803e3d6000fd5b5050505061035481610bb3565b5061035f6001600255565b505050565b61036c610985565b8060008167ffffffffffffffff81111561038857610388612468565b60405190808252806020026020018201604052801561044357816020015b6040805161016081018252600060a0820181815260c0830182905260e0830182905261010083018290526101208301829052606061014084018190529083528351808201855282815260208082018490528186018490528085019190915293830181905280830152608082015282527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9092019101816103a65790505b50905060005b828110156104a25761047d85858381811061046657610466612497565b9050602002810190610478919061275f565b6109f6565b82828151811061048f5761048f612497565b6020908102919091010152600101610449565b506104ac81610b62565b6104b581610bb3565b50506104c16001600255565b5050565b6104cd610985565b8260008167ffffffffffffffff8111156104e9576104e9612468565b6040519080825280602002602001820160405280156105a457816020015b6040805161016081018252600060a0820181815260c0830182905260e0830182905261010083018290526101208301829052606061014084018190529083528351808201855282815260208082018490528186018490528085019190915293830181905280830152608082015282527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9092019101816105075790505b50905060005b828110156105ec576105c787878381811061046657610466612497565b8282815181106105d9576105d9612497565b60209081029190910101526001016105aa565b506105f681610b62565b6040517f585da628000000000000000000000000000000000000000000000000000000008152339063585da6289061063690849088908890600401612699565b600060405180830381600087803b15801561065057600080fd5b505af1158015610664573d6000803e3d6000fd5b5050505061067181610bb3565b505061067d6001600255565b50505050565b60005473ffffffffffffffffffffffffffffffffffffffff163314610709576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f554e415554484f52495a4544000000000000000000000000000000000000000060448201526064015b60405180910390fd5b6001805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff000000000000000000000000000000000000000083168117909355604080519190921680825260208201939093527fb904ae9529e373e48bc82df4326cceaf1b4c472babf37f5b7dec46fecc6b53e0910160405180910390a15050565b610797610985565b604080516001808252818301909252600091816020015b6040805161016081018252600060a0820181815260c0830182905260e0830182905261010083018290526101208301829052606061014084018190529083528351808201855282815260208082018490528186018490528085019190915293830181905280830152608082015282527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9092019101816107ae579050509050610856826109f6565b8160008151811061086957610869612497565b602002602001018190525061087d81610b62565b61088681610bb3565b506108916001600255565b50565b60005473ffffffffffffffffffffffffffffffffffffffff163314610915576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f554e415554484f52495a454400000000000000000000000000000000000000006044820152606401610700565b600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081178255604051909133917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a350565b60028054036109f0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610700565b60028055565b6040805161016081018252600060a0820181815260c0830182905260e083018290526101008301829052610120830182905260606101408401819052908352835180820185528281526020808201849052818601849052840152928201839052828201929092526080810182905290610a6f838061279d565b810190610a7c9190612b26565b9050610a8781610d06565b6040518060a0016040528082600001518152602001610abd836020015184604001518560a00151610e339092919063ffffffff16565b8152602001610ae3836020015184604001518560c00151610f059092919063ffffffff16565b8152602001848060200190610af8919061279d565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250505090825250602001610b3b83610fec565b9052606082015160208301516080840151929450610b5c92859291906112be565b50919050565b805160005b8181101561035f576000838281518110610b8357610b83612497565b60200260200101519050610b9681611367565b610ba081336117e1565b610baa8133611919565b50600101610b67565b805160005b81811015610cf5576000838281518110610bd457610bd4612497565b602002602001015190506000816040015151905060005b81811015610c5557600083604001518281518110610c0b57610c0b612497565b60200260200101519050610c4c81604001518260200151836000015173ffffffffffffffffffffffffffffffffffffffff16611cac9092919063ffffffff16565b50600101610beb565b5081600001516020015173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16868581518110610c9e57610c9e612497565b6020026020010151608001517f78ad7ec0e9f89e74012afa58738b6b661c024cb0fd185ee2f616c0a28924bd66856000015160400151604051610ce391815260200190565b60405180910390a45050600101610bb8565b5047156104c1576104c13347611cf3565b60408101518151606001511015610d49576040517f773a618700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b806020015181604001511015610d8b576040517f48fee69c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60a08101516040810151602090910151146108915760005b8160c00151518110156104c1578160c001518181518110610dc657610dc6612497565b6020026020010151604001518260c001518281518110610de857610de8612497565b60200260200101516020015114610e2b576040517fd303758b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600101610da3565b610e6d6040518060600160405280600073ffffffffffffffffffffffffffffffffffffffff16815260200160008152602001600081525090565b836040015184602001511115610eaf576040517f7c1f811300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000610ec5856020015186604001518686611d92565b60408051606081018252875173ffffffffffffffffffffffffffffffffffffffff1681526020810192909252958601519581019590955250929392505050565b82516060908067ffffffffffffffff811115610f2357610f23612468565b604051908082528060200260200182016040528015610f8c57816020015b60408051606081018252600080825260208083018290529282015282527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff909201910181610f415790505b50915060005b81811015610fe357610fbe868281518110610faf57610faf612497565b60200260200101518686611e2c565b838281518110610fd057610fd0612497565b6020908102919091010152600101610f92565b50509392505050565b6040517f4578636c757369766544757463684f726465722800000000000000000000000060208201527f4f72646572496e666f20696e666f2c000000000000000000000000000000000060348201527f75696e74323536206465636179537461727454696d652c00000000000000000060438201527f75696e74323536206465636179456e6454696d652c0000000000000000000000605a8201527f61646472657373206578636c757369766546696c6c65722c0000000000000000606f8201527f75696e74323536206578636c757369766974794f766572726964654270732c0060878201527f6164647265737320696e707574546f6b656e2c0000000000000000000000000060a68201527f75696e7432353620696e7075745374617274416d6f756e742c0000000000000060b98201527f75696e7432353620696e707574456e64416d6f756e742c00000000000000000060d28201527f44757463684f75747075745b5d206f757470757473290000000000000000000060e982015260009060ff01604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152608083019091526052808352909190612edb60208301396040518060c00160405280608d8152602001612f5b608d91396040516020016111de93929190612bfa565b604051602081830303815290604052805190602001206112018360000151611efc565b83602001518460400151856060015186608001518760a00151600001518860a00151602001518960a001516040015161123d8b60c00151611f96565b60408051602081019b909b528a01989098526060890196909652608088019490945273ffffffffffffffffffffffffffffffffffffffff92831660a088015260c08701919091521660e0850152610100840152610120830152610140820152610160015b604051602081830303815290604052805190602001209050919050565b6112c88383612034565b61067d5780611303576040517fb9ec1e9600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b604084015160005b815181101561135f57600082828151811061132857611328612497565b60200260200101519050611351846127106113439190612c3d565b602083015190612710612081565b60209091015260010161130b565b505050505050565b60015473ffffffffffffffffffffffffffffffffffffffff166113875750565b6001546040517f8aa6cf0300000000000000000000000000000000000000000000000000000000815260009173ffffffffffffffffffffffffffffffffffffffff1690638aa6cf03906113de908590600401612c77565b600060405180830381865afa1580156113fb573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526114419190810190612c8a565b60408301515181519192509060006114598284612c3d565b67ffffffffffffffff81111561147157611471612468565b6040519080825280602002602001820160405280156114da57816020015b60408051606081018252600080825260208083018290529282015282527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff90920191018161148f5790505b50905060005b8381101561152b57856040015181815181106114fe576114fe612497565b602002602001015182828151811061151857611518612497565b60209081029190910101526001016114e0565b5060005b828110156117d257600085828151811061154b5761154b612497565b6020026020010151905060005b828110156116095786818151811061157257611572612497565b60200260200101516000015173ffffffffffffffffffffffffffffffffffffffff16826000015173ffffffffffffffffffffffffffffffffffffffff16036116015781516040517ffff0830300000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9091166004820152602401610700565b600101611558565b506000805b8681101561168e5760008960400151828151811061162e5761162e612497565b60200260200101519050836000015173ffffffffffffffffffffffffffffffffffffffff16816000015173ffffffffffffffffffffffffffffffffffffffff16036116855760208101516116829084612c3d565b92505b5060010161160e565b50815160208901515173ffffffffffffffffffffffffffffffffffffffff9182169116036116cb5760208089015101516116c89082612c3d565b90505b806000036117205781516040517feddf07f500000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9091166004820152602401610700565b61172e816005612710612081565b826020015111156117a1578151602083015160408085015190517f82e7565600000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff93841660048201526024810192909252919091166044820152606401610700565b81846117ad8589612c3d565b815181106117bd576117bd612497565b6020908102919091010152505060010161152f565b50604090940193909352505050565b81515173ffffffffffffffffffffffffffffffffffffffff163014611832576040517f4ddf4a6400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b815160600151421115611871576040517f70f65caa00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b81516080015173ffffffffffffffffffffffffffffffffffffffff16156104c1578151608001516040517f6e84ba2b00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff90911690636e84ba2b906118ed9084908690600401612d5a565b60006040518083038186803b15801561190557600080fd5b505afa15801561135f573d6000803e3d6000fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663137c29fe6119d9846040805160a0810182526000606082018181526080830182905282526020820181905291810191909152506040805160a081018252602080840180515173ffffffffffffffffffffffffffffffffffffffff1660608085019182529151850151608085015283528451840151918301919091529251909201519082015290565b6040805180820182526000808252602091820152815180830190925273ffffffffffffffffffffffffffffffffffffffff8616825280870151810151908201528560000151602001518660800151604051806080016040528060528152602001612edb60529139604080517f4578636c757369766544757463684f726465722800000000000000000000000060208201527f4f72646572496e666f20696e666f2c000000000000000000000000000000000060348201527f75696e74323536206465636179537461727454696d652c00000000000000000060438201527f75696e74323536206465636179456e6454696d652c0000000000000000000000605a8201527f61646472657373206578636c757369766546696c6c65722c0000000000000000606f8201527f75696e74323536206578636c757369766974794f766572726964654270732c0060878201527f6164647265737320696e707574546f6b656e2c0000000000000000000000000060a68201527f75696e7432353620696e7075745374617274416d6f756e742c0000000000000060b98201527f75696e7432353620696e707574456e64416d6f756e742c00000000000000000060d28201527f44757463684f75747075745b5d206f757470757473290000000000000000000060e9820152815160df8183030181526101bf8201909252608d60ff820181815291612f5b9061011f01396040518060600160405280602e8152602001612f2d602e9139604051602001611c119493929190612d89565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529082905260608a01517fffffffff0000000000000000000000000000000000000000000000000000000060e089901b168352611c7e9695949392600401612e12565b600060405180830381600087803b158015611c9857600080fd5b505af115801561135f573d6000803e3d6000fd5b73ffffffffffffffffffffffffffffffffffffffff8316611cd15761035f8282611cf3565b61035f73ffffffffffffffffffffffffffffffffffffffff84163384846120bd565b60008273ffffffffffffffffffffffffffffffffffffffff1682611af490604051600060405180830381858888f193505050503d8060008114611d52576040519150601f19603f3d011682016040523d82523d6000602084013e611d57565b606091505b505090508061035f576040517ff4b3b1bc00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600082821015611dce576040517f4313345300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b428211611ddc575082611e24565b428310611dea575083611e24565b4283900383830386861015611e0f57611e068688038383612081565b87039250611e21565b611e1c8787038383612081565b870192505b50505b949350505050565b6040805160608101825260008082526020820181905291810191909152836040015184602001511015611e8b576040517f7c1f811300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000611ea1856020015186604001518686611d92565b90506040518060600160405280866000015173ffffffffffffffffffffffffffffffffffffffff168152602001828152602001866060015173ffffffffffffffffffffffffffffffffffffffff168152509150509392505050565b60006040518060c00160405280608d8152602001612f5b608d913980516020918201208351848301516040808701516060880151608089015160a08a015180519089012093516112a198939492939192910196875273ffffffffffffffffffffffffffffffffffffffff958616602088015293851660408701526060860192909252608085015290911660a083015260c082015260e00190565b600080825160200267ffffffffffffffff811115611fb657611fb6612468565b6040519080825280601f01601f191660200182016040528015611fe0576020820181803683370190505b50905060005b835181101561202557600061201385838151811061200657612006612497565b60200260200101516121af565b60208381028501015250600101611fe6565b50805160209091012092915050565b600073ffffffffffffffffffffffffffffffffffffffff8316158061205857508142115b80612078575073ffffffffffffffffffffffffffffffffffffffff831633145b90505b92915050565b6000827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04841183021582026120b657600080fd5b5091020490565b60006040517f23b872dd00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8516600482015273ffffffffffffffffffffffffffffffffffffffff841660248201528260448201526020600060648360008a5af13d15601f3d11600160005114161716915050806121a8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f5452414e534645525f46524f4d5f4641494c45440000000000000000000000006044820152606401610700565b5050505050565b6000604051806080016040528060528152602001612edb605291398051602091820120835184830151604080870151606088015191516112a1969192910194855273ffffffffffffffffffffffffffffffffffffffff93841660208601526040850192909252606084015216608082015260a00190565b600060408284031215610b5c57600080fd5b60008083601f84011261224a57600080fd5b50813567ffffffffffffffff81111561226257600080fd5b60208301915083602082850101111561227a57600080fd5b9250929050565b60008060006040848603121561229657600080fd5b833567ffffffffffffffff808211156122ae57600080fd5b6122ba87838801612226565b945060208601359150808211156122d057600080fd5b506122dd86828701612238565b9497909650939450505050565b60008083601f8401126122fc57600080fd5b50813567ffffffffffffffff81111561231457600080fd5b6020830191508360208260051b850101111561227a57600080fd5b6000806020838503121561234257600080fd5b823567ffffffffffffffff81111561235957600080fd5b612365858286016122ea565b90969095509350505050565b6000806000806040858703121561238757600080fd5b843567ffffffffffffffff8082111561239f57600080fd5b6123ab888389016122ea565b909650945060208701359150808211156123c457600080fd5b506123d187828801612238565b95989497509550505050565b73ffffffffffffffffffffffffffffffffffffffff8116811461089157600080fd5b803561240a816123dd565b919050565b60006020828403121561242157600080fd5b813561242c816123dd565b9392505050565b60006020828403121561244557600080fd5b813567ffffffffffffffff81111561245c57600080fd5b611e2484828501612226565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60005b838110156124e15781810151838201526020016124c9565b50506000910152565b600081518084526125028160208601602086016124c6565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b600081518084526020808501945080840160005b83811015612593578151805173ffffffffffffffffffffffffffffffffffffffff908116895284820151858a0152604091820151169088015260609096019590820190600101612548565b509495945050505050565b6000815160e0845273ffffffffffffffffffffffffffffffffffffffff8082511660e08601528060208301511661010086015260408201516101208601526060820151610140860152806080830151166101608601525060a0810151905060c06101808501526126126101a08501826124ea565b905060208301516126506020860182805173ffffffffffffffffffffffffffffffffffffffff16825260208082015190830152604090810151910152565b50604083015184820360808601526126688282612534565b915050606083015184820360a086015261268282826124ea565b915050608083015160c08501528091505092915050565b6000604082016040835280865180835260608501915060608160051b8601019250602080890160005b8381101561270e577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa08887030185526126fc86835161259e565b955093820193908201906001016126c2565b5050858403818701528684528688828601376000848801820152601f9096017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169092019094019695505050505050565b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc183360301811261279357600080fd5b9190910192915050565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe18436030181126127d257600080fd5b83018035915067ffffffffffffffff8211156127ed57600080fd5b60200191503681900382131561227a57600080fd5b6040516060810167ffffffffffffffff8111828210171561282557612825612468565b60405290565b6040516080810167ffffffffffffffff8111828210171561282557612825612468565b60405160e0810167ffffffffffffffff8111828210171561282557612825612468565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff811182821017156128b8576128b8612468565b604052919050565b600082601f8301126128d157600080fd5b813567ffffffffffffffff8111156128eb576128eb612468565b61291c60207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f84011601612871565b81815284602083860101111561293157600080fd5b816020850160208301376000918101602001919091529392505050565b600060c0828403121561296057600080fd5b60405160c0810167ffffffffffffffff828210818311171561298457612984612468565b8160405282935084359150612998826123dd565b9082526020840135906129aa826123dd565b8160208401526040850135604084015260608501356060840152608085013591506129d4826123dd565b81608084015260a08501359150808211156129ee57600080fd5b506129fb858286016128c0565b60a0830152505092915050565b600060608284031215612a1a57600080fd5b612a22612802565b90508135612a2f816123dd565b80825250602082013560208201526040820135604082015292915050565b600067ffffffffffffffff821115612a6757612a67612468565b5060051b60200190565b600082601f830112612a8257600080fd5b81356020612a97612a9283612a4d565b612871565b82815260079290921b84018101918181019086841115612ab657600080fd5b8286015b84811015612b1b5760808189031215612ad35760008081fd5b612adb61282b565b8135612ae6816123dd565b8152818501358582015260408083013590820152606080830135612b09816123dd565b90820152835291830191608001612aba565b509695505050505050565b600060208284031215612b3857600080fd5b813567ffffffffffffffff80821115612b5057600080fd5b908301906101208286031215612b6557600080fd5b612b6d61284e565b823582811115612b7c57600080fd5b612b888782860161294e565b8252506020830135602082015260408301356040820152612bab606084016123ff565b606082015260808301356080820152612bc78660a08501612a08565b60a082015261010083013582811115612bdf57600080fd5b612beb87828601612a71565b60c08301525095945050505050565b60008451612c0c8184602089016124c6565b845190830190612c208183602089016124c6565b8451910190612c338183602088016124c6565b0195945050505050565b8082018082111561207b577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b602081526000612078602083018461259e565b60006020808385031215612c9d57600080fd5b825167ffffffffffffffff811115612cb457600080fd5b8301601f81018513612cc557600080fd5b8051612cd3612a9282612a4d565b81815260609182028301840191848201919088841115612cf257600080fd5b938501935b83851015612d4e5780858a031215612d0f5760008081fd5b612d17612802565b8551612d22816123dd565b81528587015187820152604080870151612d3b816123dd565b9082015283529384019391850191612cf7565b50979650505050505050565b73ffffffffffffffffffffffffffffffffffffffff83168152604060208201526000611e24604083018461259e565b7f4578636c757369766544757463684f72646572207769746e6573732900000000815260008551612dc181601c850160208a016124c6565b855190830190612dd881601c840160208a016124c6565b8551910190612dee81601c8401602089016124c6565b8451910190612e0481601c8401602088016124c6565b01601c019695505050505050565b6000610140612e42838a51805173ffffffffffffffffffffffffffffffffffffffff168252602090810151910152565b6020890151604084015260408901516060840152612e836080840189805173ffffffffffffffffffffffffffffffffffffffff168252602090810151910152565b73ffffffffffffffffffffffffffffffffffffffff871660c08401528560e084015280610100840152612eb8818401866124ea565b9050828103610120840152612ecd81856124ea565b999850505050505050505056fe44757463684f7574707574286164647265737320746f6b656e2c75696e74323536207374617274416d6f756e742c75696e7432353620656e64416d6f756e742c6164647265737320726563697069656e7429546f6b656e5065726d697373696f6e73286164647265737320746f6b656e2c75696e7432353620616d6f756e74294f72646572496e666f28616464726573732072656163746f722c6164647265737320737761707065722c75696e74323536206e6f6e63652c75696e7432353620646561646c696e652c61646472657373206164646974696f6e616c56616c69646174696f6e436f6e74726163742c6279746573206164646974696f6e616c56616c69646174696f6e4461746129a2646970667358221220895643e805129fd4ed4b9dbb76b8350150a9a20556a76ca1da49adf06223485b64736f6c63430008130033",
                a = e => e.length > 1,
                o = class extends n.ContractFactory {
                    deploy(e, t, f) {
                        return super.deploy(e, t, f || {})
                    }
                    getDeployTransaction(e, t, f) {
                        return super.getDeployTransaction(e, t, f || {})
                    }
                    attach(e) {
                        return super.attach(e)
                    }
                    connect(e) {
                        return super.connect(e)
                    }
                    static createInterface() {
                        return new n.utils.Interface(r)
                    }
                    static connect(e, t) {
                        return new n.Contract(e, r, t)
                    }
                    constructor(...e) {
                        a(e) ? super(...e) : super(r, i, e[0])
                    }
                };
            t.ExclusiveDutchOrderReactor__factory = o, o.bytecode = i, o.abi = r
        },
        32864: (e, t, f) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.ExclusiveFillerValidation__factory = void 0;
            let n = f(72637),
                r = [{
                    inputs: [{
                        internalType: "address",
                        name: "filler",
                        type: "address"
                    }],
                    name: "NotExclusiveFiller",
                    type: "error"
                }, {
                    inputs: [{
                        internalType: "address",
                        name: "filler",
                        type: "address"
                    }, {
                        components: [{
                            components: [{
                                internalType: "contract IReactor",
                                name: "reactor",
                                type: "address"
                            }, {
                                internalType: "address",
                                name: "swapper",
                                type: "address"
                            }, {
                                internalType: "uint256",
                                name: "nonce",
                                type: "uint256"
                            }, {
                                internalType: "uint256",
                                name: "deadline",
                                type: "uint256"
                            }, {
                                internalType: "contract IValidationCallback",
                                name: "additionalValidationContract",
                                type: "address"
                            }, {
                                internalType: "bytes",
                                name: "additionalValidationData",
                                type: "bytes"
                            }],
                            internalType: "struct OrderInfo",
                            name: "info",
                            type: "tuple"
                        }, {
                            components: [{
                                internalType: "contract ERC20",
                                name: "token",
                                type: "address"
                            }, {
                                internalType: "uint256",
                                name: "amount",
                                type: "uint256"
                            }, {
                                internalType: "uint256",
                                name: "maxAmount",
                                type: "uint256"
                            }],
                            internalType: "struct InputToken",
                            name: "input",
                            type: "tuple"
                        }, {
                            components: [{
                                internalType: "address",
                                name: "token",
                                type: "address"
                            }, {
                                internalType: "uint256",
                                name: "amount",
                                type: "uint256"
                            }, {
                                internalType: "address",
                                name: "recipient",
                                type: "address"
                            }],
                            internalType: "struct OutputToken[]",
                            name: "outputs",
                            type: "tuple[]"
                        }, {
                            internalType: "bytes",
                            name: "sig",
                            type: "bytes"
                        }, {
                            internalType: "bytes32",
                            name: "hash",
                            type: "bytes32"
                        }],
                        internalType: "struct ResolvedOrder",
                        name: "resolvedOrder",
                        type: "tuple"
                    }],
                    name: "validate",
                    outputs: [],
                    stateMutability: "view",
                    type: "function"
                }],
                i = "0x608060405234801561001057600080fd5b5061028e806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80636e84ba2b14610030575b600080fd5b61004361003e36600461012b565b610045565b005b6000806100528380610182565b6100609060a08101906101c0565b81019061006d919061022c565b915091504281101580156100ad57508173ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614155b15610100576040517f75c1bb1400000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8516600482015260240160405180910390fd5b50505050565b73ffffffffffffffffffffffffffffffffffffffff8116811461012857600080fd5b50565b6000806040838503121561013e57600080fd5b823561014981610106565b9150602083013567ffffffffffffffff81111561016557600080fd5b830160e0818603121561017757600080fd5b809150509250929050565b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff418336030181126101b657600080fd5b9190910192915050565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe18436030181126101f557600080fd5b83018035915067ffffffffffffffff82111561021057600080fd5b60200191503681900382131561022557600080fd5b9250929050565b6000806040838503121561023f57600080fd5b823561024a81610106565b94602093909301359350505056fea26469706673582212202652af5f1081880a9970e6ddff1d7310c1d0628325e5337a98595a88d332dd8164736f6c63430008130033",
                a = e => e.length > 1,
                o = class extends n.ContractFactory {
                    deploy(e) {
                        return super.deploy(e || {})
                    }
                    getDeployTransaction(e) {
                        return super.getDeployTransaction(e || {})
                    }
                    attach(e) {
                        return super.attach(e)
                    }
                    connect(e) {
                        return super.connect(e)
                    }
                    static createInterface() {
                        return new n.utils.Interface(r)
                    }
                    static connect(e, t) {
                        return new n.Contract(e, r, t)
                    }
                    constructor(...e) {
                        a(e) ? super(...e) : super(r, i, e[0])
                    }
                };
            t.ExclusiveFillerValidation__factory = o, o.bytecode = i, o.abi = r
        },
        86894: (e, t, f) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.MockERC20__factory = void 0;
            let n = f(72637),
                r = [{
                    inputs: [{
                        internalType: "string",
                        name: "name",
                        type: "string"
                    }, {
                        internalType: "string",
                        name: "symbol",
                        type: "string"
                    }, {
                        internalType: "uint8",
                        name: "decimals",
                        type: "uint8"
                    }],
                    stateMutability: "nonpayable",
                    type: "constructor"
                }, {
                    anonymous: !1,
                    inputs: [{
                        indexed: !0,
                        internalType: "address",
                        name: "owner",
                        type: "address"
                    }, {
                        indexed: !0,
                        internalType: "address",
                        name: "spender",
                        type: "address"
                    }, {
                        indexed: !1,
                        internalType: "uint256",
                        name: "amount",
                        type: "uint256"
                    }],
                    name: "Approval",
                    type: "event"
                }, {
                    anonymous: !1,
                    inputs: [{
                        indexed: !0,
                        internalType: "address",
                        name: "from",
                        type: "address"
                    }, {
                        indexed: !0,
                        internalType: "address",
                        name: "to",
                        type: "address"
                    }, {
                        indexed: !1,
                        internalType: "uint256",
                        name: "amount",
                        type: "uint256"
                    }],
                    name: "Transfer",
                    type: "event"
                }, {
                    inputs: [],
                    name: "DOMAIN_SEPARATOR",
                    outputs: [{
                        internalType: "bytes32",
                        name: "",
                        type: "bytes32"
                    }],
                    stateMutability: "view",
                    type: "function"
                }, {
                    inputs: [{
                        internalType: "address",
                        name: "",
                        type: "address"
                    }, {
                        internalType: "address",
                        name: "",
                        type: "address"
                    }],
                    name: "allowance",
                    outputs: [{
                        internalType: "uint256",
                        name: "",
                        type: "uint256"
                    }],
                    stateMutability: "view",
                    type: "function"
                }, {
                    inputs: [{
                        internalType: "address",
                        name: "spender",
                        type: "address"
                    }, {
                        internalType: "uint256",
                        name: "amount",
                        type: "uint256"
                    }],
                    name: "approve",
                    outputs: [{
                        internalType: "bool",
                        name: "",
                        type: "bool"
                    }],
                    stateMutability: "nonpayable",
                    type: "function"
                }, {
                    inputs: [{
                        internalType: "address",
                        name: "",
                        type: "address"
                    }],
                    name: "balanceOf",
                    outputs: [{
                        internalType: "uint256",
                        name: "",
                        type: "uint256"
                    }],
                    stateMutability: "view",
                    type: "function"
                }, {
                    inputs: [],
                    name: "decimals",
                    outputs: [{
                        internalType: "uint8",
                        name: "",
                        type: "uint8"
                    }],
                    stateMutability: "view",
                    type: "function"
                }, {
                    inputs: [{
                        internalType: "address",
                        name: "_from",
                        type: "address"
                    }, {
                        internalType: "address",
                        name: "_to",
                        type: "address"
                    }, {
                        internalType: "uint256",
                        name: "_amount",
                        type: "uint256"
                    }],
                    name: "forceApprove",
                    outputs: [{
                        internalType: "bool",
                        name: "",
                        type: "bool"
                    }],
                    stateMutability: "nonpayable",
                    type: "function"
                }, {
                    inputs: [{
                        internalType: "address",
                        name: "_to",
                        type: "address"
                    }, {
                        internalType: "uint256",
                        name: "_amount",
                        type: "uint256"
                    }],
                    name: "mint",
                    outputs: [],
                    stateMutability: "nonpayable",
                    type: "function"
                }, {
                    inputs: [],
                    name: "name",
                    outputs: [{
                        internalType: "string",
                        name: "",
                        type: "string"
                    }],
                    stateMutability: "view",
                    type: "function"
                }, {
                    inputs: [{
                        internalType: "address",
                        name: "",
                        type: "address"
                    }],
                    name: "nonces",
                    outputs: [{
                        internalType: "uint256",
                        name: "",
                        type: "uint256"
                    }],
                    stateMutability: "view",
                    type: "function"
                }, {
                    inputs: [{
                        internalType: "address",
                        name: "owner",
                        type: "address"
                    }, {
                        internalType: "address",
                        name: "spender",
                        type: "address"
                    }, {
                        internalType: "uint256",
                        name: "value",
                        type: "uint256"
                    }, {
                        internalType: "uint256",
                        name: "deadline",
                        type: "uint256"
                    }, {
                        internalType: "uint8",
                        name: "v",
                        type: "uint8"
                    }, {
                        internalType: "bytes32",
                        name: "r",
                        type: "bytes32"
                    }, {
                        internalType: "bytes32",
                        name: "s",
                        type: "bytes32"
                    }],
                    name: "permit",
                    outputs: [],
                    stateMutability: "nonpayable",
                    type: "function"
                }, {
                    inputs: [],
                    name: "symbol",
                    outputs: [{
                        internalType: "string",
                        name: "",
                        type: "string"
                    }],
                    stateMutability: "view",
                    type: "function"
                }, {
                    inputs: [],
                    name: "totalSupply",
                    outputs: [{
                        internalType: "uint256",
                        name: "",
                        type: "uint256"
                    }],
                    stateMutability: "view",
                    type: "function"
                }, {
                    inputs: [{
                        internalType: "address",
                        name: "to",
                        type: "address"
                    }, {
                        internalType: "uint256",
                        name: "amount",
                        type: "uint256"
                    }],
                    name: "transfer",
                    outputs: [{
                        internalType: "bool",
                        name: "",
                        type: "bool"
                    }],
                    stateMutability: "nonpayable",
                    type: "function"
                }, {
                    inputs: [{
                        internalType: "address",
                        name: "from",
                        type: "address"
                    }, {
                        internalType: "address",
                        name: "to",
                        type: "address"
                    }, {
                        internalType: "uint256",
                        name: "amount",
                        type: "uint256"
                    }],
                    name: "transferFrom",
                    outputs: [{
                        internalType: "bool",
                        name: "",
                        type: "bool"
                    }],
                    stateMutability: "nonpayable",
                    type: "function"
                }],
                i = "0x60e06040523480156200001157600080fd5b5060405162001039380380620010398339810160408190526200003491620001db565b8282826000620000458482620002ef565b506001620000548382620002ef565b5060ff81166080524660a0526200006a6200007a565b60c0525062000439945050505050565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6000604051620000ae9190620003bb565b6040805191829003822060208301939093528101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260c00160405160208183030381529060405280519060200120905090565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200013e57600080fd5b81516001600160401b03808211156200015b576200015b62000116565b604051601f8301601f19908116603f0116810190828211818310171562000186576200018662000116565b81604052838152602092508683858801011115620001a357600080fd5b600091505b83821015620001c75785820183015181830184015290820190620001a8565b600093810190920192909252949350505050565b600080600060608486031215620001f157600080fd5b83516001600160401b03808211156200020957600080fd5b62000217878388016200012c565b945060208601519150808211156200022e57600080fd5b506200023d868287016200012c565b925050604084015160ff811681146200025557600080fd5b809150509250925092565b600181811c908216806200027557607f821691505b6020821081036200029657634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620002ea57600081815260208120601f850160051c81016020861015620002c55750805b601f850160051c820191505b81811015620002e657828155600101620002d1565b5050505b505050565b81516001600160401b038111156200030b576200030b62000116565b62000323816200031c845462000260565b846200029c565b602080601f8311600181146200035b5760008415620003425750858301515b600019600386901b1c1916600185901b178555620002e6565b600085815260208120601f198616915b828110156200038c578886015182559484019460019091019084016200036b565b5085821015620003ab5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6000808354620003cb8162000260565b60018281168015620003e65760018114620003fc576200042d565b60ff19841687528215158302870194506200042d565b8760005260208060002060005b85811015620004245781548a82015290840190820162000409565b50505082870194505b50929695505050505050565b60805160a05160c051610bd06200046960003960006104820152600061044d0152600061015f0152610bd06000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c806361f49ed61161008c57806395d89b411161006657806395d89b4114610203578063a9059cbb1461020b578063d505accf1461021e578063dd62ed3e1461023157600080fd5b806361f49ed6146101b057806370a08231146101c35780637ecebe00146101e357600080fd5b806323b872dd116100c857806323b872dd14610147578063313ce5671461015a5780633644e5151461019357806340c10f191461019b57600080fd5b806306fdde03146100ef578063095ea7b31461010d57806318160ddd14610130575b600080fd5b6100f761025c565b60405161010491906108ed565b60405180910390f35b61012061011b366004610957565b6102ea565b6040519015158152602001610104565b61013960025481565b604051908152602001610104565b610120610155366004610981565b610357565b6101817f000000000000000000000000000000000000000000000000000000000000000081565b60405160ff9091168152602001610104565b610139610449565b6101ae6101a9366004610957565b6104a4565b005b6101206101be366004610981565b6104b2565b6101396101d13660046109bd565b60036020526000908152604090205481565b6101396101f13660046109bd565b60056020526000908152604090205481565b6100f761051a565b610120610219366004610957565b610527565b6101ae61022c3660046109df565b61059f565b61013961023f366004610a52565b600460209081526000928352604080842090915290825290205481565b6000805461026990610a85565b80601f016020809104026020016040519081016040528092919081815260200182805461029590610a85565b80156102e25780601f106102b7576101008083540402835291602001916102e2565b820191906000526020600020905b8154815290600101906020018083116102c557829003601f168201915b505050505081565b3360008181526004602090815260408083206001600160a01b038716808552925280832085905551919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925906103459086815260200190565b60405180910390a35060015b92915050565b6001600160a01b038316600090815260046020908152604080832033845290915281205460001981146103b35761038e8382610ad5565b6001600160a01b03861660009081526004602090815260408083203384529091529020555b6001600160a01b038516600090815260036020526040812080548592906103db908490610ad5565b90915550506001600160a01b03808516600081815260036020526040908190208054870190555190918716907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906104369087815260200190565b60405180910390a3506001949350505050565b60007f0000000000000000000000000000000000000000000000000000000000000000461461047f5761047a6107e8565b905090565b507f000000000000000000000000000000000000000000000000000000000000000090565b6104ae8282610882565b5050565b6001600160a01b03838116600081815260046020908152604080832094871680845294825280832086905551858152919392917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a35060019392505050565b6001805461026990610a85565b33600090815260036020526040812080548391908390610548908490610ad5565b90915550506001600160a01b038316600081815260036020526040908190208054850190555133907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906103459086815260200190565b428410156105f45760405162461bcd60e51b815260206004820152601760248201527f5045524d49545f444541444c494e455f4558504952454400000000000000000060448201526064015b60405180910390fd5b60006001610600610449565b6001600160a01b038a811660008181526005602090815260409182902080546001810190915582517f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98184015280840194909452938d166060840152608083018c905260a083019390935260c08083018b90528151808403909101815260e08301909152805192019190912061190160f01b6101008301526101028201929092526101228101919091526101420160408051601f198184030181528282528051602091820120600084529083018083525260ff871690820152606081018590526080810184905260a0016020604051602081039080840390855afa15801561070c573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116158015906107425750876001600160a01b0316816001600160a01b0316145b61077f5760405162461bcd60e51b815260206004820152600e60248201526d24a72b20a624a22fa9a4a3a722a960911b60448201526064016105eb565b6001600160a01b0390811660009081526004602090815260408083208a8516808552908352928190208990555188815291928a16917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a350505050505050565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f600060405161081a9190610ae8565b6040805191829003822060208301939093528101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260c00160405160208183030381529060405280519060200120905090565b80600260008282546108949190610b87565b90915550506001600160a01b0382166000818152600360209081526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b600060208083528351808285015260005b8181101561091a578581018301518582016040015282016108fe565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b038116811461095257600080fd5b919050565b6000806040838503121561096a57600080fd5b6109738361093b565b946020939093013593505050565b60008060006060848603121561099657600080fd5b61099f8461093b565b92506109ad6020850161093b565b9150604084013590509250925092565b6000602082840312156109cf57600080fd5b6109d88261093b565b9392505050565b600080600080600080600060e0888a0312156109fa57600080fd5b610a038861093b565b9650610a116020890161093b565b95506040880135945060608801359350608088013560ff81168114610a3557600080fd5b9699959850939692959460a0840135945060c09093013592915050565b60008060408385031215610a6557600080fd5b610a6e8361093b565b9150610a7c6020840161093b565b90509250929050565b600181811c90821680610a9957607f821691505b602082108103610ab957634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b8181038181111561035157610351610abf565b600080835481600182811c915080831680610b0457607f831692505b60208084108203610b2357634e487b7160e01b86526022600452602486fd5b818015610b375760018114610b4c57610b79565b60ff1986168952841515850289019650610b79565b60008a81526020902060005b86811015610b715781548b820152908501908301610b58565b505084890196505b509498975050505050505050565b8082018082111561035157610351610abf56fea26469706673582212203582f9ba28e259cd1bb001b79d8e065911e52d22256508983534d64d7fdc459664736f6c63430008100033",
                a = e => e.length > 1,
                o = class extends n.ContractFactory {
                    deploy(e, t, f, n) {
                        return super.deploy(e, t, f, n || {})
                    }
                    getDeployTransaction(e, t, f, n) {
                        return super.getDeployTransaction(e, t, f, n || {})
                    }
                    attach(e) {
                        return super.attach(e)
                    }
                    connect(e) {
                        return super.connect(e)
                    }
                    static createInterface() {
                        return new n.utils.Interface(r)
                    }
                    static connect(e, t) {
                        return new n.Contract(e, r, t)
                    }
                    constructor(...e) {
                        a(e) ? super(...e) : super(r, i, e[0])
                    }
                };
            t.MockERC20__factory = o, o.bytecode = i, o.abi = r
        },
        58258: (e, t, f) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.Multicall2__factory = void 0;
            let n = f(72637),
                r = [{
                    inputs: [{
                        components: [{
                            internalType: "address",
                            name: "target",
                            type: "address"
                        }, {
                            internalType: "bytes",
                            name: "callData",
                            type: "bytes"
                        }],
                        internalType: "struct Multicall2.Call[]",
                        name: "calls",
                        type: "tuple[]"
                    }],
                    name: "aggregate",
                    outputs: [{
                        internalType: "uint256",
                        name: "blockNumber",
                        type: "uint256"
                    }, {
                        internalType: "bytes[]",
                        name: "returnData",
                        type: "bytes[]"
                    }],
                    payable: !1,
                    stateMutability: "view",
                    type: "function"
                }, {
                    inputs: [{
                        components: [{
                            internalType: "address",
                            name: "target",
                            type: "address"
                        }, {
                            internalType: "bytes",
                            name: "callData",
                            type: "bytes"
                        }],
                        internalType: "struct Multicall2.Call[]",
                        name: "calls",
                        type: "tuple[]"
                    }],
                    name: "blockAndAggregate",
                    outputs: [{
                        internalType: "uint256",
                        name: "blockNumber",
                        type: "uint256"
                    }, {
                        internalType: "bytes32",
                        name: "blockHash",
                        type: "bytes32"
                    }, {
                        components: [{
                            internalType: "bool",
                            name: "success",
                            type: "bool"
                        }, {
                            internalType: "bytes",
                            name: "returnData",
                            type: "bytes"
                        }],
                        internalType: "struct Multicall2.Result[]",
                        name: "returnData",
                        type: "tuple[]"
                    }],
                    stateMutability: "nonpayable",
                    type: "function"
                }, {
                    inputs: [{
                        internalType: "uint256",
                        name: "blockNumber",
                        type: "uint256"
                    }],
                    name: "getBlockHash",
                    outputs: [{
                        internalType: "bytes32",
                        name: "blockHash",
                        type: "bytes32"
                    }],
                    stateMutability: "view",
                    type: "function"
                }, {
                    inputs: [],
                    name: "getBlockNumber",
                    outputs: [{
                        internalType: "uint256",
                        name: "blockNumber",
                        type: "uint256"
                    }],
                    stateMutability: "view",
                    type: "function"
                }, {
                    inputs: [],
                    name: "getCurrentBlockCoinbase",
                    outputs: [{
                        internalType: "address",
                        name: "coinbase",
                        type: "address"
                    }],
                    stateMutability: "view",
                    type: "function"
                }, {
                    inputs: [],
                    name: "getCurrentBlockDifficulty",
                    outputs: [{
                        internalType: "uint256",
                        name: "difficulty",
                        type: "uint256"
                    }],
                    stateMutability: "view",
                    type: "function"
                }, {
                    inputs: [],
                    name: "getCurrentBlockGasLimit",
                    outputs: [{
                        internalType: "uint256",
                        name: "gaslimit",
                        type: "uint256"
                    }],
                    stateMutability: "view",
                    type: "function"
                }, {
                    inputs: [],
                    name: "getCurrentBlockTimestamp",
                    outputs: [{
                        internalType: "uint256",
                        name: "timestamp",
                        type: "uint256"
                    }],
                    stateMutability: "view",
                    type: "function"
                }, {
                    inputs: [{
                        internalType: "address",
                        name: "addr",
                        type: "address"
                    }],
                    name: "getEthBalance",
                    outputs: [{
                        internalType: "uint256",
                        name: "balance",
                        type: "uint256"
                    }],
                    stateMutability: "view",
                    type: "function"
                }, {
                    inputs: [],
                    name: "getLastBlockHash",
                    outputs: [{
                        internalType: "bytes32",
                        name: "blockHash",
                        type: "bytes32"
                    }],
                    stateMutability: "view",
                    type: "function"
                }, {
                    inputs: [{
                        internalType: "bool",
                        name: "requireSuccess",
                        type: "bool"
                    }, {
                        components: [{
                            internalType: "address",
                            name: "target",
                            type: "address"
                        }, {
                            internalType: "bytes",
                            name: "callData",
                            type: "bytes"
                        }],
                        internalType: "struct Multicall2.Call[]",
                        name: "calls",
                        type: "tuple[]"
                    }],
                    name: "tryAggregate",
                    outputs: [{
                        components: [{
                            internalType: "bool",
                            name: "success",
                            type: "bool"
                        }, {
                            internalType: "bytes",
                            name: "returnData",
                            type: "bytes"
                        }],
                        internalType: "struct Multicall2.Result[]",
                        name: "returnData",
                        type: "tuple[]"
                    }],
                    payable: !1,
                    stateMutability: "view",
                    type: "function"
                }, {
                    inputs: [{
                        internalType: "bool",
                        name: "requireSuccess",
                        type: "bool"
                    }, {
                        components: [{
                            internalType: "address",
                            name: "target",
                            type: "address"
                        }, {
                            internalType: "bytes",
                            name: "callData",
                            type: "bytes"
                        }],
                        internalType: "struct Multicall2.Call[]",
                        name: "calls",
                        type: "tuple[]"
                    }],
                    name: "tryBlockAndAggregate",
                    outputs: [{
                        internalType: "uint256",
                        name: "blockNumber",
                        type: "uint256"
                    }, {
                        internalType: "bytes32",
                        name: "blockHash",
                        type: "bytes32"
                    }, {
                        components: [{
                            internalType: "bool",
                            name: "success",
                            type: "bool"
                        }, {
                            internalType: "bytes",
                            name: "returnData",
                            type: "bytes"
                        }],
                        internalType: "struct Multicall2.Result[]",
                        name: "returnData",
                        type: "tuple[]"
                    }],
                    stateMutability: "nonpayable",
                    type: "function"
                }],
                i = class {
                    static createInterface() {
                        return new n.utils.Interface(r)
                    }
                    static connect(e, t) {
                        return new n.Contract(e, r, t)
                    }
                };
            t.Multicall2__factory = i, i.abi = r
        },
        33476: (e, t, f) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.OrderQuoter__factory = void 0;
            let n = f(72637),
                r = [{
                    inputs: [],
                    name: "OrdersLengthIncorrect",
                    type: "error"
                }, {
                    inputs: [{
                        internalType: "bytes",
                        name: "order",
                        type: "bytes"
                    }],
                    name: "getReactor",
                    outputs: [{
                        internalType: "contract IReactor",
                        name: "reactor",
                        type: "address"
                    }],
                    stateMutability: "pure",
                    type: "function"
                }, {
                    inputs: [{
                        internalType: "bytes",
                        name: "order",
                        type: "bytes"
                    }, {
                        internalType: "bytes",
                        name: "sig",
                        type: "bytes"
                    }],
                    name: "quote",
                    outputs: [{
                        components: [{
                            components: [{
                                internalType: "contract IReactor",
                                name: "reactor",
                                type: "address"
                            }, {
                                internalType: "address",
                                name: "swapper",
                                type: "address"
                            }, {
                                internalType: "uint256",
                                name: "nonce",
                                type: "uint256"
                            }, {
                                internalType: "uint256",
                                name: "deadline",
                                type: "uint256"
                            }, {
                                internalType: "contract IValidationCallback",
                                name: "additionalValidationContract",
                                type: "address"
                            }, {
                                internalType: "bytes",
                                name: "additionalValidationData",
                                type: "bytes"
                            }],
                            internalType: "struct OrderInfo",
                            name: "info",
                            type: "tuple"
                        }, {
                            components: [{
                                internalType: "contract ERC20",
                                name: "token",
                                type: "address"
                            }, {
                                internalType: "uint256",
                                name: "amount",
                                type: "uint256"
                            }, {
                                internalType: "uint256",
                                name: "maxAmount",
                                type: "uint256"
                            }],
                            internalType: "struct InputToken",
                            name: "input",
                            type: "tuple"
                        }, {
                            components: [{
                                internalType: "address",
                                name: "token",
                                type: "address"
                            }, {
                                internalType: "uint256",
                                name: "amount",
                                type: "uint256"
                            }, {
                                internalType: "address",
                                name: "recipient",
                                type: "address"
                            }],
                            internalType: "struct OutputToken[]",
                            name: "outputs",
                            type: "tuple[]"
                        }, {
                            internalType: "bytes",
                            name: "sig",
                            type: "bytes"
                        }, {
                            internalType: "bytes32",
                            name: "hash",
                            type: "bytes32"
                        }],
                        internalType: "struct ResolvedOrder",
                        name: "result",
                        type: "tuple"
                    }],
                    stateMutability: "nonpayable",
                    type: "function"
                }, {
                    inputs: [{
                        components: [{
                            components: [{
                                internalType: "contract IReactor",
                                name: "reactor",
                                type: "address"
                            }, {
                                internalType: "address",
                                name: "swapper",
                                type: "address"
                            }, {
                                internalType: "uint256",
                                name: "nonce",
                                type: "uint256"
                            }, {
                                internalType: "uint256",
                                name: "deadline",
                                type: "uint256"
                            }, {
                                internalType: "contract IValidationCallback",
                                name: "additionalValidationContract",
                                type: "address"
                            }, {
                                internalType: "bytes",
                                name: "additionalValidationData",
                                type: "bytes"
                            }],
                            internalType: "struct OrderInfo",
                            name: "info",
                            type: "tuple"
                        }, {
                            components: [{
                                internalType: "contract ERC20",
                                name: "token",
                                type: "address"
                            }, {
                                internalType: "uint256",
                                name: "amount",
                                type: "uint256"
                            }, {
                                internalType: "uint256",
                                name: "maxAmount",
                                type: "uint256"
                            }],
                            internalType: "struct InputToken",
                            name: "input",
                            type: "tuple"
                        }, {
                            components: [{
                                internalType: "address",
                                name: "token",
                                type: "address"
                            }, {
                                internalType: "uint256",
                                name: "amount",
                                type: "uint256"
                            }, {
                                internalType: "address",
                                name: "recipient",
                                type: "address"
                            }],
                            internalType: "struct OutputToken[]",
                            name: "outputs",
                            type: "tuple[]"
                        }, {
                            internalType: "bytes",
                            name: "sig",
                            type: "bytes"
                        }, {
                            internalType: "bytes32",
                            name: "hash",
                            type: "bytes32"
                        }],
                        internalType: "struct ResolvedOrder[]",
                        name: "resolvedOrders",
                        type: "tuple[]"
                    }, {
                        internalType: "bytes",
                        name: "",
                        type: "bytes"
                    }],
                    name: "reactorCallback",
                    outputs: [],
                    stateMutability: "pure",
                    type: "function"
                }],
                i = "0x608060405234801561001057600080fd5b50610df8806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806341d88d6914610046578063585da6281461006f5780637671d07b14610084575b600080fd5b6100596100543660046104bb565b6100c5565b60405161006691906105f7565b60405180910390f35b61008261007d3660046108ec565b610221565b005b6100a0610092366004610a62565b604081810151909101015190565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610066565b6040805161016081018252600060a0820181815260c0830182905260e083018290526101008301829052610120830182905260606101408401819052908352835180820185528281526020808201849052818601849052840152928201839052828201929092526080810191909152604080840151840101516040805180820182528581526020808201869052825190810183526000815291517f0d33588400000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9390931692630d335884926101af9291600401610a9f565b600060405180830381600087803b1580156101c957600080fd5b505af19250505080156101da575060015b61021b573d808015610208576040519150601f19603f3d011682016040523d82523d6000602084013e61020d565b606091505b50610217816102a2565b9150505b92915050565b815160011461025c576040517f06ee987800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008260008151811061027157610271610b13565b602002602001015160405160200161028991906105f7565b6040516020818303038152906040529050805181602001fd5b6040805161016081018252600060a0820181815260c080840183905260e08401839052610100840183905261012084018390526060610140850181905291845284518083018652838152602080820185905281870185905285015293830181905280830152608082015282519091111561031e57815182602001fd5b8180602001905181019061021b9190610cf0565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60405160c0810167ffffffffffffffff8111828210171561038457610384610332565b60405290565b6040516060810167ffffffffffffffff8111828210171561038457610384610332565b60405160a0810167ffffffffffffffff8111828210171561038457610384610332565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff8111828210171561041757610417610332565b604052919050565b600067ffffffffffffffff82111561043957610439610332565b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b600082601f83011261047657600080fd5b81356104896104848261041f565b6103d0565b81815284602083860101111561049e57600080fd5b816020850160208301376000918101602001919091529392505050565b600080604083850312156104ce57600080fd5b823567ffffffffffffffff808211156104e657600080fd5b6104f286838701610465565b9350602085013591508082111561050857600080fd5b5061051585828601610465565b9150509250929050565b60005b8381101561053a578181015183820152602001610522565b50506000910152565b6000815180845261055b81602086016020860161051f565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b600081518084526020808501945080840160005b838110156105ec578151805173ffffffffffffffffffffffffffffffffffffffff908116895284820151858a01526040918201511690880152606090960195908201906001016105a1565b509495945050505050565b602081526000825160e0602084015273ffffffffffffffffffffffffffffffffffffffff808251166101008501528060208301511661012085015260408201516101408501526060820151610160850152806080830151166101808501525060a0810151905060c06101a08401526106736101c0840182610543565b905060208401516106b16040850182805173ffffffffffffffffffffffffffffffffffffffff16825260208082015190830152604090810151910152565b5060408401517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0808584030160a08601526106ec838361058d565b925060608601519150808584030160c08601525061070a8282610543565b915050608084015160e08401528091505092915050565b600067ffffffffffffffff82111561073b5761073b610332565b5060051b60200190565b73ffffffffffffffffffffffffffffffffffffffff8116811461076757600080fd5b50565b600060c0828403121561077c57600080fd5b610784610361565b9050813561079181610745565b815260208201356107a181610745565b80602083015250604082013560408201526060820135606082015260808201356107ca81610745565b608082015260a082013567ffffffffffffffff8111156107e957600080fd5b6107f584828501610465565b60a08301525092915050565b60006060828403121561081357600080fd5b61081b61038a565b9050813561082881610745565b80825250602082013560208201526040820135604082015292915050565b600082601f83011261085757600080fd5b8135602061086761048483610721565b8281526060928302850182019282820191908785111561088657600080fd5b8387015b858110156108df5781818a0312156108a25760008081fd5b6108aa61038a565b81356108b581610745565b815281860135868201526040808301356108ce81610745565b90820152845292840192810161088a565b5090979650505050505050565b600080604083850312156108ff57600080fd5b823567ffffffffffffffff8082111561091757600080fd5b818501915085601f83011261092b57600080fd5b8135602061093b61048483610721565b82815260059290921b8401810191818101908984111561095a57600080fd5b8286015b84811015610a4b578035868111156109765760008081fd5b870160e0818d037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0018113156109ac5760008081fd5b6109b46103ad565b86830135898111156109c65760008081fd5b6109d48f898387010161076a565b8252506109e48e60408501610801565b8782015260a0830135898111156109fb5760008081fd5b610a098f8983870101610846565b60408301525060c083013589811115610a225760008081fd5b610a308f8983870101610465565b6060830152509101356080820152835291830191830161095e565b509650508601359250508082111561050857600080fd5b600060208284031215610a7457600080fd5b813567ffffffffffffffff811115610a8b57600080fd5b610a9784828501610465565b949350505050565b6040815260008351604080840152610aba6080840182610543565b905060208501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0848303016060850152610af58282610543565b9150508281036020840152610b0a8185610543565b95945050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600082601f830112610b5357600080fd5b8151610b616104848261041f565b818152846020838601011115610b7657600080fd5b610a9782602083016020870161051f565b600060c08284031215610b9957600080fd5b610ba1610361565b90508151610bae81610745565b81526020820151610bbe81610745565b8060208301525060408201516040820152606082015160608201526080820151610be781610745565b608082015260a082015167ffffffffffffffff811115610c0657600080fd5b6107f584828501610b42565b600060608284031215610c2457600080fd5b610c2c61038a565b90508151610c3981610745565b80825250602082015160208201526040820151604082015292915050565b600082601f830112610c6857600080fd5b81516020610c7861048483610721565b82815260609283028501820192828201919087851115610c9757600080fd5b8387015b858110156108df5781818a031215610cb35760008081fd5b610cbb61038a565b8151610cc681610745565b81528186015186820152604080830151610cdf81610745565b908201528452928401928101610c9b565b600060208284031215610d0257600080fd5b815167ffffffffffffffff80821115610d1a57600080fd5b9083019060e08286031215610d2e57600080fd5b610d366103ad565b825182811115610d4557600080fd5b610d5187828601610b87565b825250610d618660208501610c12565b6020820152608083015182811115610d7857600080fd5b610d8487828601610c57565b60408301525060a083015182811115610d9c57600080fd5b610da887828601610b42565b60608301525060c09290920151608083015250939250505056fea26469706673582212200f8bfac10e493298054283c6a1044fad50f6979a90490fcbe07d79ecea4c1f8964736f6c63430008130033",
                a = e => e.length > 1,
                o = class extends n.ContractFactory {
                    deploy(e) {
                        return super.deploy(e || {})
                    }
                    getDeployTransaction(e) {
                        return super.getDeployTransaction(e || {})
                    }
                    attach(e) {
                        return super.attach(e)
                    }
                    connect(e) {
                        return super.connect(e)
                    }
                    static createInterface() {
                        return new n.utils.Interface(r)
                    }
                    static connect(e, t) {
                        return new n.Contract(e, r, t)
                    }
                    constructor(...e) {
                        a(e) ? super(...e) : super(r, i, e[0])
                    }
                };
            t.OrderQuoter__factory = o, o.bytecode = i, o.abi = r
        },
        48282: (e, t, f) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.Permit2__factory = void 0;
            let n = f(72637),
                r = [{
                    inputs: [{
                        internalType: "uint256",
                        name: "deadline",
                        type: "uint256"
                    }],
                    name: "AllowanceExpired",
                    type: "error"
                }, {
                    inputs: [],
                    name: "ExcessiveInvalidation",
                    type: "error"
                }, {
                    inputs: [{
                        internalType: "uint256",
                        name: "amount",
                        type: "uint256"
                    }],
                    name: "InsufficientAllowance",
                    type: "error"
                }, {
                    inputs: [{
                        internalType: "uint256",
                        name: "maxAmount",
                        type: "uint256"
                    }],
                    name: "InvalidAmount",
                    type: "error"
                }, {
                    inputs: [],
                    name: "InvalidContractSignature",
                    type: "error"
                }, {
                    inputs: [],
                    name: "InvalidNonce",
                    type: "error"
                }, {
                    inputs: [],
                    name: "InvalidSignature",
                    type: "error"
                }, {
                    inputs: [],
                    name: "InvalidSignatureLength",
                    type: "error"
                }, {
                    inputs: [],
                    name: "InvalidSigner",
                    type: "error"
                }, {
                    inputs: [],
                    name: "LengthMismatch",
                    type: "error"
                }, {
                    inputs: [{
                        internalType: "uint256",
                        name: "signatureDeadline",
                        type: "uint256"
                    }],
                    name: "SignatureExpired",
                    type: "error"
                }, {
                    anonymous: !1,
                    inputs: [{
                        indexed: !0,
                        internalType: "address",
                        name: "owner",
                        type: "address"
                    }, {
                        indexed: !0,
                        internalType: "address",
                        name: "token",
                        type: "address"
                    }, {
                        indexed: !0,
                        internalType: "address",
                        name: "spender",
                        type: "address"
                    }, {
                        indexed: !1,
                        internalType: "uint160",
                        name: "amount",
                        type: "uint160"
                    }, {
                        indexed: !1,
                        internalType: "uint48",
                        name: "expiration",
                        type: "uint48"
                    }],
                    name: "Approval",
                    type: "event"
                }, {
                    anonymous: !1,
                    inputs: [{
                        indexed: !0,
                        internalType: "address",
                        name: "owner",
                        type: "address"
                    }, {
                        indexed: !1,
                        internalType: "address",
                        name: "token",
                        type: "address"
                    }, {
                        indexed: !1,
                        internalType: "address",
                        name: "spender",
                        type: "address"
                    }],
                    name: "Lockdown",
                    type: "event"
                }, {
                    anonymous: !1,
                    inputs: [{
                        indexed: !0,
                        internalType: "address",
                        name: "owner",
                        type: "address"
                    }, {
                        indexed: !0,
                        internalType: "address",
                        name: "token",
                        type: "address"
                    }, {
                        indexed: !0,
                        internalType: "address",
                        name: "spender",
                        type: "address"
                    }, {
                        indexed: !1,
                        internalType: "uint48",
                        name: "newNonce",
                        type: "uint48"
                    }, {
                        indexed: !1,
                        internalType: "uint48",
                        name: "oldNonce",
                        type: "uint48"
                    }],
                    name: "NonceInvalidation",
                    type: "event"
                }, {
                    anonymous: !1,
                    inputs: [{
                        indexed: !0,
                        internalType: "address",
                        name: "owner",
                        type: "address"
                    }, {
                        indexed: !0,
                        internalType: "address",
                        name: "token",
                        type: "address"
                    }, {
                        indexed: !0,
                        internalType: "address",
                        name: "spender",
                        type: "address"
                    }, {
                        indexed: !1,
                        internalType: "uint160",
                        name: "amount",
                        type: "uint160"
                    }, {
                        indexed: !1,
                        internalType: "uint48",
                        name: "expiration",
                        type: "uint48"
                    }, {
                        indexed: !1,
                        internalType: "uint48",
                        name: "nonce",
                        type: "uint48"
                    }],
                    name: "Permit",
                    type: "event"
                }, {
                    anonymous: !1,
                    inputs: [{
                        indexed: !0,
                        internalType: "address",
                        name: "owner",
                        type: "address"
                    }, {
                        indexed: !1,
                        internalType: "uint256",
                        name: "word",
                        type: "uint256"
                    }, {
                        indexed: !1,
                        internalType: "uint256",
                        name: "mask",
                        type: "uint256"
                    }],
                    name: "UnorderedNonceInvalidation",
                    type: "event"
                }, {
                    inputs: [],
                    name: "DOMAIN_SEPARATOR",
                    outputs: [{
                        internalType: "bytes32",
                        name: "",
                        type: "bytes32"
                    }],
                    stateMutability: "view",
                    type: "function"
                }, {
                    inputs: [{
                        internalType: "address",
                        name: "",
                        type: "address"
                    }, {
                        internalType: "address",
                        name: "",
                        type: "address"
                    }, {
                        internalType: "address",
                        name: "",
                        type: "address"
                    }],
                    name: "allowance",
                    outputs: [{
                        internalType: "uint160",
                        name: "amount",
                        type: "uint160"
                    }, {
                        internalType: "uint48",
                        name: "expiration",
                        type: "uint48"
                    }, {
                        internalType: "uint48",
                        name: "nonce",
                        type: "uint48"
                    }],
                    stateMutability: "view",
                    type: "function"
                }, {
                    inputs: [{
                        internalType: "address",
                        name: "token",
                        type: "address"
                    }, {
                        internalType: "address",
                        name: "spender",
                        type: "address"
                    }, {
                        internalType: "uint160",
                        name: "amount",
                        type: "uint160"
                    }, {
                        internalType: "uint48",
                        name: "expiration",
                        type: "uint48"
                    }],
                    name: "approve",
                    outputs: [],
                    stateMutability: "nonpayable",
                    type: "function"
                }, {
                    inputs: [{
                        internalType: "address",
                        name: "token",
                        type: "address"
                    }, {
                        internalType: "address",
                        name: "spender",
                        type: "address"
                    }, {
                        internalType: "uint48",
                        name: "newNonce",
                        type: "uint48"
                    }],
                    name: "invalidateNonces",
                    outputs: [],
                    stateMutability: "nonpayable",
                    type: "function"
                }, {
                    inputs: [{
                        internalType: "uint256",
                        name: "wordPos",
                        type: "uint256"
                    }, {
                        internalType: "uint256",
                        name: "mask",
                        type: "uint256"
                    }],
                    name: "invalidateUnorderedNonces",
                    outputs: [],
                    stateMutability: "nonpayable",
                    type: "function"
                }, {
                    inputs: [{
                        components: [{
                            internalType: "address",
                            name: "token",
                            type: "address"
                        }, {
                            internalType: "address",
                            name: "spender",
                            type: "address"
                        }],
                        internalType: "struct IAllowanceTransfer.TokenSpenderPair[]",
                        name: "approvals",
                        type: "tuple[]"
                    }],
                    name: "lockdown",
                    outputs: [],
                    stateMutability: "nonpayable",
                    type: "function"
                }, {
                    inputs: [{
                        internalType: "address",
                        name: "",
                        type: "address"
                    }, {
                        internalType: "uint256",
                        name: "",
                        type: "uint256"
                    }],
                    name: "nonceBitmap",
                    outputs: [{
                        internalType: "uint256",
                        name: "",
                        type: "uint256"
                    }],
                    stateMutability: "view",
                    type: "function"
                }, {
                    inputs: [{
                        internalType: "address",
                        name: "owner",
                        type: "address"
                    }, {
                        components: [{
                            components: [{
                                internalType: "address",
                                name: "token",
                                type: "address"
                            }, {
                                internalType: "uint160",
                                name: "amount",
                                type: "uint160"
                            }, {
                                internalType: "uint48",
                                name: "expiration",
                                type: "uint48"
                            }, {
                                internalType: "uint48",
                                name: "nonce",
                                type: "uint48"
                            }],
                            internalType: "struct IAllowanceTransfer.PermitDetails[]",
                            name: "details",
                            type: "tuple[]"
                        }, {
                            internalType: "address",
                            name: "spender",
                            type: "address"
                        }, {
                            internalType: "uint256",
                            name: "sigDeadline",
                            type: "uint256"
                        }],
                        internalType: "struct IAllowanceTransfer.PermitBatch",
                        name: "permitBatch",
                        type: "tuple"
                    }, {
                        internalType: "bytes",
                        name: "signature",
                        type: "bytes"
                    }],
                    name: "permit",
                    outputs: [],
                    stateMutability: "nonpayable",
                    type: "function"
                }, {
                    inputs: [{
                        internalType: "address",
                        name: "owner",
                        type: "address"
                    }, {
                        components: [{
                            components: [{
                                internalType: "address",
                                name: "token",
                                type: "address"
                            }, {
                                internalType: "uint160",
                                name: "amount",
                                type: "uint160"
                            }, {
                                internalType: "uint48",
                                name: "expiration",
                                type: "uint48"
                            }, {
                                internalType: "uint48",
                                name: "nonce",
                                type: "uint48"
                            }],
                            internalType: "struct IAllowanceTransfer.PermitDetails",
                            name: "details",
                            type: "tuple"
                        }, {
                            internalType: "address",
                            name: "spender",
                            type: "address"
                        }, {
                            internalType: "uint256",
                            name: "sigDeadline",
                            type: "uint256"
                        }],
                        internalType: "struct IAllowanceTransfer.PermitSingle",
                        name: "permitSingle",
                        type: "tuple"
                    }, {
                        internalType: "bytes",
                        name: "signature",
                        type: "bytes"
                    }],
                    name: "permit",
                    outputs: [],
                    stateMutability: "nonpayable",
                    type: "function"
                }, {
                    inputs: [{
                        components: [{
                            components: [{
                                internalType: "address",
                                name: "token",
                                type: "address"
                            }, {
                                internalType: "uint256",
                                name: "amount",
                                type: "uint256"
                            }],
                            internalType: "struct ISignatureTransfer.TokenPermissions",
                            name: "permitted",
                            type: "tuple"
                        }, {
                            internalType: "uint256",
                            name: "nonce",
                            type: "uint256"
                        }, {
                            internalType: "uint256",
                            name: "deadline",
                            type: "uint256"
                        }],
                        internalType: "struct ISignatureTransfer.PermitTransferFrom",
                        name: "permit",
                        type: "tuple"
                    }, {
                        components: [{
                            internalType: "address",
                            name: "to",
                            type: "address"
                        }, {
                            internalType: "uint256",
                            name: "requestedAmount",
                            type: "uint256"
                        }],
                        internalType: "struct ISignatureTransfer.SignatureTransferDetails",
                        name: "transferDetails",
                        type: "tuple"
                    }, {
                        internalType: "address",
                        name: "owner",
                        type: "address"
                    }, {
                        internalType: "bytes",
                        name: "signature",
                        type: "bytes"
                    }],
                    name: "permitTransferFrom",
                    outputs: [],
                    stateMutability: "nonpayable",
                    type: "function"
                }, {
                    inputs: [{
                        components: [{
                            components: [{
                                internalType: "address",
                                name: "token",
                                type: "address"
                            }, {
                                internalType: "uint256",
                                name: "amount",
                                type: "uint256"
                            }],
                            internalType: "struct ISignatureTransfer.TokenPermissions[]",
                            name: "permitted",
                            type: "tuple[]"
                        }, {
                            internalType: "uint256",
                            name: "nonce",
                            type: "uint256"
                        }, {
                            internalType: "uint256",
                            name: "deadline",
                            type: "uint256"
                        }],
                        internalType: "struct ISignatureTransfer.PermitBatchTransferFrom",
                        name: "permit",
                        type: "tuple"
                    }, {
                        components: [{
                            internalType: "address",
                            name: "to",
                            type: "address"
                        }, {
                            internalType: "uint256",
                            name: "requestedAmount",
                            type: "uint256"
                        }],
                        internalType: "struct ISignatureTransfer.SignatureTransferDetails[]",
                        name: "transferDetails",
                        type: "tuple[]"
                    }, {
                        internalType: "address",
                        name: "owner",
                        type: "address"
                    }, {
                        internalType: "bytes",
                        name: "signature",
                        type: "bytes"
                    }],
                    name: "permitTransferFrom",
                    outputs: [],
                    stateMutability: "nonpayable",
                    type: "function"
                }, {
                    inputs: [{
                        components: [{
                            components: [{
                                internalType: "address",
                                name: "token",
                                type: "address"
                            }, {
                                internalType: "uint256",
                                name: "amount",
                                type: "uint256"
                            }],
                            internalType: "struct ISignatureTransfer.TokenPermissions",
                            name: "permitted",
                            type: "tuple"
                        }, {
                            internalType: "uint256",
                            name: "nonce",
                            type: "uint256"
                        }, {
                            internalType: "uint256",
                            name: "deadline",
                            type: "uint256"
                        }],
                        internalType: "struct ISignatureTransfer.PermitTransferFrom",
                        name: "permit",
                        type: "tuple"
                    }, {
                        components: [{
                            internalType: "address",
                            name: "to",
                            type: "address"
                        }, {
                            internalType: "uint256",
                            name: "requestedAmount",
                            type: "uint256"
                        }],
                        internalType: "struct ISignatureTransfer.SignatureTransferDetails",
                        name: "transferDetails",
                        type: "tuple"
                    }, {
                        internalType: "address",
                        name: "owner",
                        type: "address"
                    }, {
                        internalType: "bytes32",
                        name: "witness",
                        type: "bytes32"
                    }, {
                        internalType: "string",
                        name: "witnessTypeString",
                        type: "string"
                    }, {
                        internalType: "bytes",
                        name: "signature",
                        type: "bytes"
                    }],
                    name: "permitWitnessTransferFrom",
                    outputs: [],
                    stateMutability: "nonpayable",
                    type: "function"
                }, {
                    inputs: [{
                        components: [{
                            components: [{
                                internalType: "address",
                                name: "token",
                                type: "address"
                            }, {
                                internalType: "uint256",
                                name: "amount",
                                type: "uint256"
                            }],
                            internalType: "struct ISignatureTransfer.TokenPermissions[]",
                            name: "permitted",
                            type: "tuple[]"
                        }, {
                            internalType: "uint256",
                            name: "nonce",
                            type: "uint256"
                        }, {
                            internalType: "uint256",
                            name: "deadline",
                            type: "uint256"
                        }],
                        internalType: "struct ISignatureTransfer.PermitBatchTransferFrom",
                        name: "permit",
                        type: "tuple"
                    }, {
                        components: [{
                            internalType: "address",
                            name: "to",
                            type: "address"
                        }, {
                            internalType: "uint256",
                            name: "requestedAmount",
                            type: "uint256"
                        }],
                        internalType: "struct ISignatureTransfer.SignatureTransferDetails[]",
                        name: "transferDetails",
                        type: "tuple[]"
                    }, {
                        internalType: "address",
                        name: "owner",
                        type: "address"
                    }, {
                        internalType: "bytes32",
                        name: "witness",
                        type: "bytes32"
                    }, {
                        internalType: "string",
                        name: "witnessTypeString",
                        type: "string"
                    }, {
                        internalType: "bytes",
                        name: "signature",
                        type: "bytes"
                    }],
                    name: "permitWitnessTransferFrom",
                    outputs: [],
                    stateMutability: "nonpayable",
                    type: "function"
                }, {
                    inputs: [{
                        components: [{
                            internalType: "address",
                            name: "from",
                            type: "address"
                        }, {
                            internalType: "address",
                            name: "to",
                            type: "address"
                        }, {
                            internalType: "uint160",
                            name: "amount",
                            type: "uint160"
                        }, {
                            internalType: "address",
                            name: "token",
                            type: "address"
                        }],
                        internalType: "struct IAllowanceTransfer.AllowanceTransferDetails[]",
                        name: "transferDetails",
                        type: "tuple[]"
                    }],
                    name: "transferFrom",
                    outputs: [],
                    stateMutability: "nonpayable",
                    type: "function"
                }, {
                    inputs: [{
                        internalType: "address",
                        name: "from",
                        type: "address"
                    }, {
                        internalType: "address",
                        name: "to",
                        type: "address"
                    }, {
                        internalType: "uint160",
                        name: "amount",
                        type: "uint160"
                    }, {
                        internalType: "address",
                        name: "token",
                        type: "address"
                    }],
                    name: "transferFrom",
                    outputs: [],
                    stateMutability: "nonpayable",
                    type: "function"
                }],
                i = "0x60c0346100bb574660a052602081017f8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a86681527f9ac997416e8ff9d2ff6bebeb7149f65cdae5e32e2b90440b566bb3044041d36a60408301524660608301523060808301526080825260a082019180831060018060401b038411176100a557826040525190206080526123c090816100c1823960805181611b47015260a05181611b210152f35b634e487b7160e01b600052604160045260246000fd5b600080fdfe6040608081526004908136101561001557600080fd5b600090813560e01c80630d58b1db1461126c578063137c29fe146110755780632a2d80d114610db75780632b67b57014610bde57806330f28b7a14610ade5780633644e51514610a9d57806336c7851614610a285780633ff9dcb1146109a85780634fe02b441461093f57806365d9723c146107ac57806387517c451461067a578063927da105146105c3578063cc53287f146104a3578063edd9444b1461033a5763fe8ec1a7146100c657600080fd5b346103365760c07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126103365767ffffffffffffffff833581811161033257610114903690860161164b565b60243582811161032e5761012b903690870161161a565b6101336114e6565b9160843585811161032a5761014b9036908a016115c1565b98909560a43590811161032657610164913691016115c1565b969095815190610173826113ff565b606b82527f5065726d697442617463685769746e6573735472616e7366657246726f6d285460208301527f6f6b656e5065726d697373696f6e735b5d207065726d69747465642c61646472838301527f657373207370656e6465722c75696e74323536206e6f6e63652c75696e74323560608301527f3620646561646c696e652c000000000000000000000000000000000000000000608083015282519a8b9181610222602085018096611f93565b918237018a8152039961025b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe09b8c8101835282611437565b5190209085515161026b81611ebb565b908a5b8181106102f95750506102f6999a6102ed9183516102a081610294602082018095611f66565b03848101835282611437565b519020602089810151858b015195519182019687526040820192909252336060820152608081019190915260a081019390935260643560c08401528260e081015b03908101835282611437565b51902093611cf7565b80f35b8061031161030b610321938c5161175e565b51612054565b61031b828661175e565b52611f0a565b61026e565b8880fd5b8780fd5b8480fd5b8380fd5b5080fd5b5091346103365760807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126103365767ffffffffffffffff9080358281116103325761038b903690830161164b565b60243583811161032e576103a2903690840161161a565b9390926103ad6114e6565b9160643590811161049f576103c4913691016115c1565b949093835151976103d489611ebb565b98885b81811061047d5750506102f697988151610425816103f9602082018095611f66565b037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08101835282611437565b5190206020860151828701519083519260208401947ffcf35f5ac6a2c28868dc44c302166470266239195f02b0ee408334829333b7668652840152336060840152608083015260a082015260a081526102ed8161141b565b808b61031b8261049461030b61049a968d5161175e565b9261175e565b6103d7565b8680fd5b5082346105bf57602090817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126103325780359067ffffffffffffffff821161032e576104f49136910161161a565b929091845b848110610504578580f35b8061051a610515600193888861196c565b61197c565b61052f84610529848a8a61196c565b0161197c565b3389528385528589209173ffffffffffffffffffffffffffffffffffffffff80911692838b528652868a20911690818a5285528589207fffffffffffffffffffffffff000000000000000000000000000000000000000081541690558551918252848201527f89b1add15eff56b3dfe299ad94e01f2b52fbcb80ae1a3baea6ae8c04cb2b98a4853392a2016104f9565b8280fd5b50346103365760607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261033657610676816105ff6114a0565b936106086114c3565b6106106114e6565b73ffffffffffffffffffffffffffffffffffffffff968716835260016020908152848420928816845291825283832090871683528152919020549251938316845260a083901c65ffffffffffff169084015260d09190911c604083015281906060820190565b0390f35b50346103365760807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610336576106b26114a0565b906106bb6114c3565b916106c46114e6565b65ffffffffffff926064358481169081810361032a5779ffffffffffff0000000000000000000000000000000000000000947fda9fa7c1b00402c17d0161b249b1ab8bbec047c5a52207b9c112deffd817036b94338a5260016020527fffffffffffff0000000000000000000000000000000000000000000000000000858b209873ffffffffffffffffffffffffffffffffffffffff809416998a8d5260205283878d209b169a8b8d52602052868c209486156000146107a457504216925b8454921697889360a01b16911617179055815193845260208401523392a480f35b905092610783565b5082346105bf5760607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126105bf576107e56114a0565b906107ee6114c3565b9265ffffffffffff604435818116939084810361032a57338852602091600183528489209673ffffffffffffffffffffffffffffffffffffffff80911697888b528452858a20981697888a5283528489205460d01c93848711156109175761ffff9085840316116108f05750907f55eb90d810e1700b35a8e7e25395ff7f2b2259abd7415ca2284dfb1c246418f393929133895260018252838920878a528252838920888a5282528389209079ffffffffffffffffffffffffffffffffffffffffffffffffffff7fffffffffffff000000000000000000000000000000000000000000000000000083549260d01b16911617905582519485528401523392a480f35b84517f24d35a26000000000000000000000000000000000000000000000000000000008152fd5b5084517f756688fe000000000000000000000000000000000000000000000000000000008152fd5b503461033657807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610336578060209273ffffffffffffffffffffffffffffffffffffffff61098f6114a0565b1681528084528181206024358252845220549051908152f35b5082346105bf57817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126105bf577f3704902f963766a4e561bbaab6e6cdc1b1dd12f6e9e99648da8843b3f46b918d90359160243533855284602052818520848652602052818520818154179055815193845260208401523392a280f35b8234610a9a5760807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610a9a57610a606114a0565b610a686114c3565b610a706114e6565b6064359173ffffffffffffffffffffffffffffffffffffffff8316830361032e576102f6936117a1565b80fd5b503461033657817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261033657602090610ad7611b1e565b9051908152f35b508290346105bf576101007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126105bf57610b1a3661152a565b90807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7c36011261033257610b4c611478565b9160e43567ffffffffffffffff8111610bda576102f694610b6f913691016115c1565b939092610b7c8351612054565b6020840151828501519083519260208401947f939c21a48a8dbe3a9a2404a1d46691e4d39f6583d6ec6b35714604c986d801068652840152336060840152608083015260a082015260a08152610bd18161141b565b51902091611c25565b8580fd5b509134610336576101007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261033657610c186114a0565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffdc360160c08112610332576080855191610c51836113e3565b1261033257845190610c6282611398565b73ffffffffffffffffffffffffffffffffffffffff91602435838116810361049f578152604435838116810361049f57602082015265ffffffffffff606435818116810361032a5788830152608435908116810361049f576060820152815260a435938285168503610bda576020820194855260c4359087830182815260e43567ffffffffffffffff811161032657610cfe90369084016115c1565b929093804211610d88575050918591610d786102f6999a610d7e95610d238851611fbe565b90898c511690519083519260208401947ff3841cd1ff0085026a6327b620b67997ce40f282c88a8e905a7a5626e310f3d086528401526060830152608082015260808152610d70816113ff565b519020611bd9565b916120c7565b519251169161199d565b602492508a51917fcd21db4f000000000000000000000000000000000000000000000000000000008352820152fd5b5091346103365760607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc93818536011261033257610df36114a0565b9260249081359267ffffffffffffffff9788851161032a578590853603011261049f578051978589018981108282111761104a578252848301358181116103265785019036602383011215610326578382013591610e50836115ef565b90610e5d85519283611437565b838252602093878584019160071b83010191368311611046578801905b828210610fe9575050508a526044610e93868801611509565b96838c01978852013594838b0191868352604435908111610fe557610ebb90369087016115c1565b959096804211610fba575050508998995151610ed681611ebb565b908b5b818110610f9757505092889492610d7892610f6497958351610f02816103f98682018095611f66565b5190209073ffffffffffffffffffffffffffffffffffffffff9a8b8b51169151928551948501957faf1b0d30d2cab0380e68f0689007e3254993c596f2fdd0aaa7f4d04f794408638752850152830152608082015260808152610d70816113ff565b51169082515192845b848110610f78578580f35b80610f918585610f8b600195875161175e565b5161199d565b01610f6d565b80610311610fac8e9f9e93610fb2945161175e565b51611fbe565b9b9a9b610ed9565b8551917fcd21db4f000000000000000000000000000000000000000000000000000000008352820152fd5b8a80fd5b6080823603126110465785608091885161100281611398565b61100b85611509565b8152611018838601611509565b838201526110278a8601611607565b8a8201528d611037818701611607565b90820152815201910190610e7a565b8c80fd5b84896041867f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b5082346105bf576101407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126105bf576110b03661152a565b91807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff7c360112610332576110e2611478565b67ffffffffffffffff93906101043585811161049f5761110590369086016115c1565b90936101243596871161032a57611125610bd1966102f6983691016115c1565b969095825190611134826113ff565b606482527f5065726d69745769746e6573735472616e7366657246726f6d28546f6b656e5060208301527f65726d697373696f6e73207065726d69747465642c6164647265737320737065848301527f6e6465722c75696e74323536206e6f6e63652c75696e7432353620646561646c60608301527f696e652c0000000000000000000000000000000000000000000000000000000060808301528351948591816111e3602085018096611f93565b918237018b8152039361121c7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe095868101835282611437565b5190209261122a8651612054565b6020878101518589015195519182019687526040820192909252336060820152608081019190915260a081019390935260e43560c08401528260e081016102e1565b5082346105bf576020807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261033257813567ffffffffffffffff92838211610bda5736602383011215610bda5781013592831161032e576024906007368386831b8401011161049f57865b8581106112e5578780f35b80821b83019060807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffdc83360301126103265761139288876001946060835161132c81611398565b611368608461133c8d8601611509565b9485845261134c60448201611509565b809785015261135d60648201611509565b809885015201611509565b918291015273ffffffffffffffffffffffffffffffffffffffff80808093169516931691166117a1565b016112da565b6080810190811067ffffffffffffffff8211176113b457604052565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6060810190811067ffffffffffffffff8211176113b457604052565b60a0810190811067ffffffffffffffff8211176113b457604052565b60c0810190811067ffffffffffffffff8211176113b457604052565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff8211176113b457604052565b60c4359073ffffffffffffffffffffffffffffffffffffffff8216820361149b57565b600080fd5b6004359073ffffffffffffffffffffffffffffffffffffffff8216820361149b57565b6024359073ffffffffffffffffffffffffffffffffffffffff8216820361149b57565b6044359073ffffffffffffffffffffffffffffffffffffffff8216820361149b57565b359073ffffffffffffffffffffffffffffffffffffffff8216820361149b57565b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc01906080821261149b576040805190611563826113e3565b8082941261149b57805181810181811067ffffffffffffffff8211176113b457825260043573ffffffffffffffffffffffffffffffffffffffff8116810361149b578152602435602082015282526044356020830152606435910152565b9181601f8401121561149b5782359167ffffffffffffffff831161149b576020838186019501011161149b57565b67ffffffffffffffff81116113b45760051b60200190565b359065ffffffffffff8216820361149b57565b9181601f8401121561149b5782359167ffffffffffffffff831161149b576020808501948460061b01011161149b57565b91909160608184031261149b576040805191611666836113e3565b8294813567ffffffffffffffff9081811161149b57830182601f8201121561149b578035611693816115ef565b926116a087519485611437565b818452602094858086019360061b8501019381851161149b579086899897969594939201925b8484106116e3575050505050855280820135908501520135910152565b90919293949596978483031261149b578851908982019082821085831117611730578a928992845261171487611509565b81528287013583820152815201930191908897969594936116c6565b602460007f4e487b710000000000000000000000000000000000000000000000000000000081526041600452fd5b80518210156117725760209160051b010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b92919273ffffffffffffffffffffffffffffffffffffffff604060008284168152600160205282828220961695868252602052818120338252602052209485549565ffffffffffff8760a01c16804211611884575082871696838803611812575b5050611810955016926118b5565b565b878484161160001461184f57602488604051907ff96fb0710000000000000000000000000000000000000000000000000000000082526004820152fd5b7fffffffffffffffffffffffff000000000000000000000000000000000000000084846118109a031691161790553880611802565b602490604051907fd81b2f2e0000000000000000000000000000000000000000000000000000000082526004820152fd5b9060006064926020958295604051947f23b872dd0000000000000000000000000000000000000000000000000000000086526004860152602485015260448401525af13d15601f3d116001600051141617161561190e57565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f5452414e534645525f46524f4d5f4641494c45440000000000000000000000006044820152fd5b91908110156117725760061b0190565b3573ffffffffffffffffffffffffffffffffffffffff8116810361149b5790565b9065ffffffffffff908160608401511673ffffffffffffffffffffffffffffffffffffffff908185511694826020820151169280866040809401511695169560009187835260016020528383208984526020528383209916988983526020528282209184835460d01c03611af5579185611ace94927fc6a377bfc4eb120024a8ac08eef205be16b817020812c73223e81d1bdb9708ec98979694508715600014611ad35779ffffffffffff00000000000000000000000000000000000000009042165b60a01b167fffffffffffff00000000000000000000000000000000000000000000000000006001860160d01b1617179055519384938491604091949373ffffffffffffffffffffffffffffffffffffffff606085019616845265ffffffffffff809216602085015216910152565b0390a4565b5079ffffffffffff000000000000000000000000000000000000000087611a60565b600484517f756688fe000000000000000000000000000000000000000000000000000000008152fd5b467f000000000000000000000000000000000000000000000000000000000000000003611b69577f000000000000000000000000000000000000000000000000000000000000000090565b60405160208101907f8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a86682527f9ac997416e8ff9d2ff6bebeb7149f65cdae5e32e2b90440b566bb3044041d36a604082015246606082015230608082015260808152611bd3816113ff565b51902090565b611be1611b1e565b906040519060208201927f190100000000000000000000000000000000000000000000000000000000000084526022830152604282015260428152611bd381611398565b9192909360a435936040840151804211611cc65750602084510151808611611c955750918591610d78611c6594611c60602088015186611e47565b611bd9565b73ffffffffffffffffffffffffffffffffffffffff809151511692608435918216820361149b57611810936118b5565b602490604051907f3728b83d0000000000000000000000000000000000000000000000000000000082526004820152fd5b602490604051907fcd21db4f0000000000000000000000000000000000000000000000000000000082526004820152fd5b959093958051519560409283830151804211611e175750848803611dee57611d2e918691610d7860209b611c608d88015186611e47565b60005b868110611d42575050505050505050565b611d4d81835161175e565b5188611d5a83878a61196c565b01359089810151808311611dbe575091818888886001968596611d84575b50505050505001611d31565b611db395611dad9273ffffffffffffffffffffffffffffffffffffffff6105159351169561196c565b916118b5565b803888888883611d78565b6024908651907f3728b83d0000000000000000000000000000000000000000000000000000000082526004820152fd5b600484517fff633a38000000000000000000000000000000000000000000000000000000008152fd5b6024908551907fcd21db4f0000000000000000000000000000000000000000000000000000000082526004820152fd5b9073ffffffffffffffffffffffffffffffffffffffff600160ff83161b9216600052600060205260406000209060081c6000526020526040600020818154188091551615611e9157565b60046040517f756688fe000000000000000000000000000000000000000000000000000000008152fd5b90611ec5826115ef565b611ed26040519182611437565b8281527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0611f0082946115ef565b0190602036910137565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114611f375760010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b805160208092019160005b828110611f7f575050505090565b835185529381019392810192600101611f71565b9081519160005b838110611fab575050016000815290565b8060208092840101518185015201611f9a565b60405160208101917f65626cad6cb96493bf6f5ebea28756c966f023ab9e8a83a7101849d5573b3678835273ffffffffffffffffffffffffffffffffffffffff8082511660408401526020820151166060830152606065ffffffffffff9182604082015116608085015201511660a082015260a0815260c0810181811067ffffffffffffffff8211176113b45760405251902090565b6040516020808201927f618358ac3db8dc274f0cd8829da7e234bd48cd73c4a740aede1adec9846d06a1845273ffffffffffffffffffffffffffffffffffffffff81511660408401520151606082015260608152611bd381611398565b919082604091031261149b576020823592013590565b6000843b61222e5750604182036121ac576120e4828201826120b1565b939092604010156117725760209360009360ff6040608095013560f81c5b60405194855216868401526040830152606082015282805260015afa156121a05773ffffffffffffffffffffffffffffffffffffffff806000511691821561217657160361214c57565b60046040517f815e1d64000000000000000000000000000000000000000000000000000000008152fd5b60046040517f8baa579f000000000000000000000000000000000000000000000000000000008152fd5b6040513d6000823e3d90fd5b60408203612204576121c0918101906120b1565b91601b7f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff84169360ff1c019060ff8211611f375760209360009360ff608094612102565b60046040517f4be6321b000000000000000000000000000000000000000000000000000000008152fd5b929391601f928173ffffffffffffffffffffffffffffffffffffffff60646020957fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0604051988997889687947f1626ba7e000000000000000000000000000000000000000000000000000000009e8f8752600487015260406024870152816044870152868601378b85828601015201168101030192165afa9081156123a857829161232a575b507fffffffff000000000000000000000000000000000000000000000000000000009150160361230057565b60046040517fb0669cbc000000000000000000000000000000000000000000000000000000008152fd5b90506020813d82116123a0575b8161234460209383611437565b810103126103365751907fffffffff0000000000000000000000000000000000000000000000000000000082168203610a9a57507fffffffff0000000000000000000000000000000000000000000000000000000090386122d4565b3d9150612337565b6040513d84823e3d90fdfea164736f6c6343000811000a",
                a = e => e.length > 1,
                o = class extends n.ContractFactory {
                    deploy(e) {
                        return super.deploy(e || {})
                    }
                    getDeployTransaction(e) {
                        return super.getDeployTransaction(e || {})
                    }
                    attach(e) {
                        return super.attach(e)
                    }
                    connect(e) {
                        return super.connect(e)
                    }
                    static createInterface() {
                        return new n.utils.Interface(r)
                    }
                    static connect(e, t) {
                        return new n.Contract(e, r, t)
                    }
                    constructor(...e) {
                        a(e) ? super(...e) : super(r, i, e[0])
                    }
                };
            t.Permit2__factory = o, o.bytecode = i, o.abi = r
        },
        47275: (e, t, f) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.SwapRouter02Executor__factory = void 0;
            let n = f(72637),
                r = [{
                    inputs: [{
                        internalType: "address",
                        name: "_whitelistedCaller",
                        type: "address"
                    }, {
                        internalType: "contract IReactor",
                        name: "_reactor",
                        type: "address"
                    }, {
                        internalType: "address",
                        name: "_owner",
                        type: "address"
                    }, {
                        internalType: "contract ISwapRouter02",
                        name: "_swapRouter02",
                        type: "address"
                    }],
                    stateMutability: "nonpayable",
                    type: "constructor"
                }, {
                    inputs: [],
                    name: "CallerNotWhitelisted",
                    type: "error"
                }, {
                    inputs: [],
                    name: "MsgSenderNotReactor",
                    type: "error"
                }, {
                    inputs: [],
                    name: "NativeTransferFailed",
                    type: "error"
                }, {
                    anonymous: !1,
                    inputs: [{
                        indexed: !0,
                        internalType: "address",
                        name: "user",
                        type: "address"
                    }, {
                        indexed: !0,
                        internalType: "address",
                        name: "newOwner",
                        type: "address"
                    }],
                    name: "OwnershipTransferred",
                    type: "event"
                }, {
                    inputs: [{
                        components: [{
                            internalType: "bytes",
                            name: "order",
                            type: "bytes"
                        }, {
                            internalType: "bytes",
                            name: "sig",
                            type: "bytes"
                        }],
                        internalType: "struct SignedOrder",
                        name: "order",
                        type: "tuple"
                    }, {
                        internalType: "bytes",
                        name: "callbackData",
                        type: "bytes"
                    }],
                    name: "execute",
                    outputs: [],
                    stateMutability: "nonpayable",
                    type: "function"
                }, {
                    inputs: [{
                        components: [{
                            internalType: "bytes",
                            name: "order",
                            type: "bytes"
                        }, {
                            internalType: "bytes",
                            name: "sig",
                            type: "bytes"
                        }],
                        internalType: "struct SignedOrder[]",
                        name: "orders",
                        type: "tuple[]"
                    }, {
                        internalType: "bytes",
                        name: "callbackData",
                        type: "bytes"
                    }],
                    name: "executeBatch",
                    outputs: [],
                    stateMutability: "nonpayable",
                    type: "function"
                }, {
                    inputs: [{
                        internalType: "contract ERC20[]",
                        name: "tokensToApprove",
                        type: "address[]"
                    }, {
                        internalType: "bytes[]",
                        name: "multicallData",
                        type: "bytes[]"
                    }],
                    name: "multicall",
                    outputs: [],
                    stateMutability: "nonpayable",
                    type: "function"
                }, {
                    inputs: [],
                    name: "owner",
                    outputs: [{
                        internalType: "address",
                        name: "",
                        type: "address"
                    }],
                    stateMutability: "view",
                    type: "function"
                }, {
                    inputs: [{
                        components: [{
                            components: [{
                                internalType: "contract IReactor",
                                name: "reactor",
                                type: "address"
                            }, {
                                internalType: "address",
                                name: "swapper",
                                type: "address"
                            }, {
                                internalType: "uint256",
                                name: "nonce",
                                type: "uint256"
                            }, {
                                internalType: "uint256",
                                name: "deadline",
                                type: "uint256"
                            }, {
                                internalType: "contract IValidationCallback",
                                name: "additionalValidationContract",
                                type: "address"
                            }, {
                                internalType: "bytes",
                                name: "additionalValidationData",
                                type: "bytes"
                            }],
                            internalType: "struct OrderInfo",
                            name: "info",
                            type: "tuple"
                        }, {
                            components: [{
                                internalType: "contract ERC20",
                                name: "token",
                                type: "address"
                            }, {
                                internalType: "uint256",
                                name: "amount",
                                type: "uint256"
                            }, {
                                internalType: "uint256",
                                name: "maxAmount",
                                type: "uint256"
                            }],
                            internalType: "struct InputToken",
                            name: "input",
                            type: "tuple"
                        }, {
                            components: [{
                                internalType: "address",
                                name: "token",
                                type: "address"
                            }, {
                                internalType: "uint256",
                                name: "amount",
                                type: "uint256"
                            }, {
                                internalType: "address",
                                name: "recipient",
                                type: "address"
                            }],
                            internalType: "struct OutputToken[]",
                            name: "outputs",
                            type: "tuple[]"
                        }, {
                            internalType: "bytes",
                            name: "sig",
                            type: "bytes"
                        }, {
                            internalType: "bytes32",
                            name: "hash",
                            type: "bytes32"
                        }],
                        internalType: "struct ResolvedOrder[]",
                        name: "",
                        type: "tuple[]"
                    }, {
                        internalType: "bytes",
                        name: "callbackData",
                        type: "bytes"
                    }],
                    name: "reactorCallback",
                    outputs: [],
                    stateMutability: "nonpayable",
                    type: "function"
                }, {
                    inputs: [{
                        internalType: "address",
                        name: "newOwner",
                        type: "address"
                    }],
                    name: "transferOwnership",
                    outputs: [],
                    stateMutability: "nonpayable",
                    type: "function"
                }, {
                    inputs: [{
                        internalType: "address",
                        name: "recipient",
                        type: "address"
                    }],
                    name: "unwrapWETH",
                    outputs: [],
                    stateMutability: "nonpayable",
                    type: "function"
                }, {
                    inputs: [{
                        internalType: "address",
                        name: "recipient",
                        type: "address"
                    }],
                    name: "withdrawETH",
                    outputs: [],
                    stateMutability: "nonpayable",
                    type: "function"
                }, {
                    stateMutability: "payable",
                    type: "receive"
                }],
                i = "0x6101006040523480156200001257600080fd5b5060405162001a2338038062001a2383398101604081905262000035916200012b565b600080546001600160a01b0319166001600160a01b03841690811782556040518492907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a3506001600160a01b0380851660a05283811660c05281166080819052604080516312a9293f60e21b81529051634aa4a4fc916004808201926020929091908290030181865afa158015620000d5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000fb919062000193565b6001600160a01b031660e05250620001ba92505050565b6001600160a01b03811681146200012857600080fd5b50565b600080600080608085870312156200014257600080fd5b84516200014f8162000112565b6020860151909450620001628162000112565b6040860151909350620001758162000112565b6060860151909250620001888162000112565b939692955090935050565b600060208284031215620001a657600080fd5b8151620001b38162000112565b9392505050565b60805160a05160c05160e0516117f062000233600039600081816107ef01526108a10152600081816101db015281816102f201528181610452015281816109cc0152610adf0152600081816109380152610a4b0152600081816102590152818161038a0152818161051601526105ea01526117f06000f3fe60806040526004361061007f5760003560e01c80638da5cb5b1161004e5780638da5cb5b1461010d578063d0f2d8ac14610163578063e5135ec614610183578063f2fde38b146101a357600080fd5b8063585da6281461008b57806363fb0b96146100ad578063690d8320146100cd57806389a3f136146100ed57600080fd5b3661008657005b600080fd5b34801561009757600080fd5b506100ab6100a6366004610ebf565b6101c3565b005b3480156100b957600080fd5b506100ab6100c8366004610f2b565b610480565b3480156100d957600080fd5b506100ab6100e8366004610fad565b6106af565b3480156100f957600080fd5b506100ab610108366004610fad565b61073d565b34801561011957600080fd5b5060005461013a9073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390f35b34801561016f57600080fd5b506100ab61017e366004610fd1565b610920565b34801561018f57600080fd5b506100ab61019e366004610ebf565b610a33565b3480156101af57600080fd5b506100ab6101be366004610fad565b610b52565b3373ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001614610232576040517f933fe52f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600080806102428486018661119e565b92509250925060005b83518110156102e0576102d87f00000000000000000000000000000000000000000000000000000000000000007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8684815181106102ab576102ab6112d4565b602002602001015173ffffffffffffffffffffffffffffffffffffffff16610c439092919063ffffffff16565b60010161024b565b5060005b825181101561034c576103447f00000000000000000000000000000000000000000000000000000000000000007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8584815181106102ab576102ab6112d4565b6001016102e4565b506040517f5ae401dc00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001690635ae401dc906103e1907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff908590600401611327565b6000604051808303816000875af1158015610400573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820160405261044691908101906113e5565b504715610477576104777f000000000000000000000000000000000000000000000000000000000000000047610d18565b50505050505050565b60005473ffffffffffffffffffffffffffffffffffffffff163314610506576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f554e415554484f52495a4544000000000000000000000000000000000000000060448201526064015b60405180910390fd5b60005b838110156105ac5761059a7f00000000000000000000000000000000000000000000000000000000000000007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff878785818110610568576105686112d4565b905060200201602081019061057d9190610fad565b73ffffffffffffffffffffffffffffffffffffffff169190610c43565b806105a4816114d2565b915050610509565b506040517f5ae401dc00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001690635ae401dc90610643907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff90869086906004016115de565b6000604051808303816000875af1158015610662573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526106a891908101906113e5565b5050505050565b60005473ffffffffffffffffffffffffffffffffffffffff163314610730576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f554e415554484f52495a4544000000000000000000000000000000000000000060448201526064016104fd565b61073a8147610dbc565b50565b60005473ffffffffffffffffffffffffffffffffffffffff1633146107be576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f554e415554484f52495a4544000000000000000000000000000000000000000060448201526064016104fd565b6040517f70a082310000000000000000000000000000000000000000000000000000000081523060048201526000907f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16906370a0823190602401602060405180830381865afa15801561084b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061086f919061166e565b6040517f2e1a7d4d000000000000000000000000000000000000000000000000000000008152600481018290529091507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1690632e1a7d4d90602401600060405180830381600087803b1580156108fa57600080fd5b505af115801561090e573d6000803e3d6000fd5b5050505061091c8247610dbc565b5050565b3373ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000161461098f576040517f8c6e5d7100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f0d33588400000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001690630d33588490610a05908690869086906004016116d2565b600060405180830381600087803b158015610a1f57600080fd5b505af1158015610477573d6000803e3d6000fd5b3373ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001614610aa2576040517f8c6e5d7100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040517f13fb72c700000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016906313fb72c790610b1a9087908790879087906004016116f8565b600060405180830381600087803b158015610b3457600080fd5b505af1158015610b48573d6000803e3d6000fd5b5050505050505050565b60005473ffffffffffffffffffffffffffffffffffffffff163314610bd3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f554e415554484f52495a4544000000000000000000000000000000000000000060448201526064016104fd565b600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081178255604051909133917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a350565b60006040517f095ea7b300000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff84166004820152826024820152602060006044836000895af13d15601f3d1160016000511416171691505080610d12576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f415050524f56455f4641494c454400000000000000000000000000000000000060448201526064016104fd565b50505050565b60008273ffffffffffffffffffffffffffffffffffffffff1682611af490604051600060405180830381858888f193505050503d8060008114610d77576040519150601f19603f3d011682016040523d82523d6000602084013e610d7c565b606091505b5050905080610db7576040517ff4b3b1bc00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505050565b600080600080600085875af1905080610db7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f4554485f5452414e534645525f4641494c45440000000000000000000000000060448201526064016104fd565b60008083601f840112610e4357600080fd5b50813567ffffffffffffffff811115610e5b57600080fd5b6020830191508360208260051b8501011115610e7657600080fd5b9250929050565b60008083601f840112610e8f57600080fd5b50813567ffffffffffffffff811115610ea757600080fd5b602083019150836020828501011115610e7657600080fd5b60008060008060408587031215610ed557600080fd5b843567ffffffffffffffff80821115610eed57600080fd5b610ef988838901610e31565b90965094506020870135915080821115610f1257600080fd5b50610f1f87828801610e7d565b95989497509550505050565b60008060008060408587031215610f4157600080fd5b843567ffffffffffffffff80821115610f5957600080fd5b610f6588838901610e31565b90965094506020870135915080821115610f7e57600080fd5b50610f1f87828801610e31565b73ffffffffffffffffffffffffffffffffffffffff8116811461073a57600080fd5b600060208284031215610fbf57600080fd5b8135610fca81610f8b565b9392505050565b600080600060408486031215610fe657600080fd5b833567ffffffffffffffff80821115610ffe57600080fd5b908501906040828803121561101257600080fd5b9093506020850135908082111561102857600080fd5b5061103586828701610e7d565b9497909650939450505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff811182821017156110b8576110b8611042565b604052919050565b600067ffffffffffffffff8211156110da576110da611042565b5060051b60200190565b600082601f8301126110f557600080fd5b8135602061110a611105836110c0565b611071565b82815260059290921b8401810191818101908684111561112957600080fd5b8286015b8481101561114d57803561114081610f8b565b835291830191830161112d565b509695505050505050565b600067ffffffffffffffff82111561117257611172611042565b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b6000806000606084860312156111b357600080fd5b833567ffffffffffffffff808211156111cb57600080fd5b6111d7878388016110e4565b94506020915081860135818111156111ee57600080fd5b6111fa888289016110e4565b9450506040808701358281111561121057600080fd5b8701601f8101891361122157600080fd5b803561122f611105826110c0565b81815260059190911b8201850190858101908b83111561124e57600080fd5b8684015b838110156112c25780358781111561126a5760008081fd5b8501603f81018e1361127c5760008081fd5b8881013561128c61110582611158565b8181528f898385010111156112a15760008081fd5b818984018c83013760009181018b0191909152845250918701918701611252565b50809750505050505050509250925092565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60005b8381101561131e578181015183820152602001611306565b50506000910152565b600060408201848352602060408185015281855180845260608601915060608160051b870101935082870160005b828110156113d7577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa08887030184528151805180885261139a81888a01898501611303565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01696909601850195509284019290840190600101611355565b509398975050505050505050565b600060208083850312156113f857600080fd5b825167ffffffffffffffff8082111561141057600080fd5b818501915085601f83011261142457600080fd5b8151611432611105826110c0565b81815260059190911b8301840190848101908883111561145157600080fd5b8585015b838110156114c55780518581111561146d5760008081fd5b8601603f81018b1361147f5760008081fd5b87810151604061149161110583611158565b8281528d828486010111156114a65760008081fd5b6114b5838c8301848701611303565b8652505050918601918601611455565b5098975050505050505050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361152a577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b5060010190565b8183528181602085013750600060208284010152600060207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116840101905092915050565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe18436030181126115af57600080fd5b830160208101925035905067ffffffffffffffff8111156115cf57600080fd5b803603821315610e7657600080fd5b60006040820185835260206040818501528185835260608501905060608660051b86010192508660005b87811015611660577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa0878603018352611641828a61157a565b61164c878284611531565b965050509183019190830190600101611608565b509298975050505050505050565b60006020828403121561168057600080fd5b5051919050565b6000611693828361157a565b604085526116a5604086018284611531565b9150506116b5602084018461157a565b85830360208701526116c8838284611531565b9695505050505050565b6040815260006116e56040830186611687565b82810360208401526116c8818587611531565b6040808252810184905260006060600586901b830181019083018783805b89811015611798577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa087860301845282357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc18c3603018112611776578283fd5b611782868d8301611687565b9550506020938401939290920191600101611716565b5050505082810360208401526117af818587611531565b97965050505050505056fea26469706673582212203213842a8731c49c3a030adacfde592b28c5d22332b28c4beff280c5ee5b867964736f6c63430008130033",
                a = e => e.length > 1,
                o = class extends n.ContractFactory {
                    deploy(e, t, f, n, r) {
                        return super.deploy(e, t, f, n, r || {})
                    }
                    getDeployTransaction(e, t, f, n, r) {
                        return super.getDeployTransaction(e, t, f, n, r || {})
                    }
                    attach(e) {
                        return super.attach(e)
                    }
                    connect(e) {
                        return super.connect(e)
                    }
                    static createInterface() {
                        return new n.utils.Interface(r)
                    }
                    static connect(e, t) {
                        return new n.Contract(e, r, t)
                    }
                    constructor(...e) {
                        a(e) ? super(...e) : super(r, i, e[0])
                    }
                };
            t.SwapRouter02Executor__factory = o, o.bytecode = i, o.abi = r
        },
        98966: (e, t, f) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.Multicall2__factory = t.DeploylessMulticall2__factory = t.SwapRouter02Executor__factory = t.Permit2__factory = t.OrderQuoter__factory = t.MockERC20__factory = t.ExclusiveFillerValidation__factory = t.ExclusiveDutchOrderReactor__factory = void 0;
            var n = f(98158);
            Object.defineProperty(t, "ExclusiveDutchOrderReactor__factory", {
                enumerable: !0,
                get: function() {
                    return n.ExclusiveDutchOrderReactor__factory
                }
            });
            var r = f(32864);
            Object.defineProperty(t, "ExclusiveFillerValidation__factory", {
                enumerable: !0,
                get: function() {
                    return r.ExclusiveFillerValidation__factory
                }
            });
            var i = f(86894);
            Object.defineProperty(t, "MockERC20__factory", {
                enumerable: !0,
                get: function() {
                    return i.MockERC20__factory
                }
            });
            var a = f(33476);
            Object.defineProperty(t, "OrderQuoter__factory", {
                enumerable: !0,
                get: function() {
                    return a.OrderQuoter__factory
                }
            });
            var o = f(48282);
            Object.defineProperty(t, "Permit2__factory", {
                enumerable: !0,
                get: function() {
                    return o.Permit2__factory
                }
            });
            var s = f(47275);
            Object.defineProperty(t, "SwapRouter02Executor__factory", {
                enumerable: !0,
                get: function() {
                    return s.SwapRouter02Executor__factory
                }
            });
            var u = f(11409);
            Object.defineProperty(t, "DeploylessMulticall2__factory", {
                enumerable: !0,
                get: function() {
                    return u.DeploylessMulticall2__factory
                }
            });
            var d = f(58258);
            Object.defineProperty(t, "Multicall2__factory", {
                enumerable: !0,
                get: function() {
                    return d.Multicall2__factory
                }
            })
        },
        29792: (e, t, f) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.SwapRouter02Executor__factory = t.Permit2__factory = t.OrderQuoter__factory = t.Multicall2__factory = t.MockERC20__factory = t.ExclusiveFillerValidation__factory = t.ExclusiveDutchOrderReactor__factory = t.DeploylessMulticall2__factory = t.factories = void 0;
            let n = f(51113);
            t.factories = n.__importStar(f(98966));
            var r = f(11409);
            Object.defineProperty(t, "DeploylessMulticall2__factory", {
                enumerable: !0,
                get: function() {
                    return r.DeploylessMulticall2__factory
                }
            });
            var i = f(98158);
            Object.defineProperty(t, "ExclusiveDutchOrderReactor__factory", {
                enumerable: !0,
                get: function() {
                    return i.ExclusiveDutchOrderReactor__factory
                }
            });
            var a = f(32864);
            Object.defineProperty(t, "ExclusiveFillerValidation__factory", {
                enumerable: !0,
                get: function() {
                    return a.ExclusiveFillerValidation__factory
                }
            });
            var o = f(86894);
            Object.defineProperty(t, "MockERC20__factory", {
                enumerable: !0,
                get: function() {
                    return o.MockERC20__factory
                }
            });
            var s = f(58258);
            Object.defineProperty(t, "Multicall2__factory", {
                enumerable: !0,
                get: function() {
                    return s.Multicall2__factory
                }
            });
            var u = f(33476);
            Object.defineProperty(t, "OrderQuoter__factory", {
                enumerable: !0,
                get: function() {
                    return u.OrderQuoter__factory
                }
            });
            var d = f(48282);
            Object.defineProperty(t, "Permit2__factory", {
                enumerable: !0,
                get: function() {
                    return d.Permit2__factory
                }
            });
            var c = f(47275);
            Object.defineProperty(t, "SwapRouter02Executor__factory", {
                enumerable: !0,
                get: function() {
                    return c.SwapRouter02Executor__factory
                }
            })
        },
        75866: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.MissingConfiguration = void 0;
            let f = class e extends Error {
                constructor(t, f) {
                    super(`Missing configuration for ${t}: ${f}`), Object.setPrototypeOf(this, e.prototype)
                }
            };
            t.MissingConfiguration = f
        },
        58177: (e, t, f) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            });
            let n = f(51113);
            n.__exportStar(f(23539), t), n.__exportStar(f(53892), t), n.__exportStar(f(63236), t), n.__exportStar(f(7704), t), n.__exportStar(f(63104), t)
        },
        12098: (e, t, f) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.DutchOrder = t.id = void 0;
            let n = f(74187),
                r = f(35411),
                i = f(68205),
                a = f(72637),
                o = f(63104),
                s = f(75866),
                u = f(64816),
                d = f(75487);
            t.id = function(e) {
                return (0, n.keccak256)((0, r.toUtf8Bytes)(e))
            };
            let c = a.BigNumber.from(0),
                l = {
                    ExclusiveDutchOrder: [{
                        name: "info",
                        type: "OrderInfo"
                    }, {
                        name: "decayStartTime",
                        type: "uint256"
                    }, {
                        name: "decayEndTime",
                        type: "uint256"
                    }, {
                        name: "exclusiveFiller",
                        type: "address"
                    }, {
                        name: "exclusivityOverrideBps",
                        type: "uint256"
                    }, {
                        name: "inputToken",
                        type: "address"
                    }, {
                        name: "inputStartAmount",
                        type: "uint256"
                    }, {
                        name: "inputEndAmount",
                        type: "uint256"
                    }, {
                        name: "outputs",
                        type: "DutchOutput[]"
                    }],
                    OrderInfo: [{
                        name: "reactor",
                        type: "address"
                    }, {
                        name: "swapper",
                        type: "address"
                    }, {
                        name: "nonce",
                        type: "uint256"
                    }, {
                        name: "deadline",
                        type: "uint256"
                    }, {
                        name: "additionalValidationContract",
                        type: "address"
                    }, {
                        name: "additionalValidationData",
                        type: "bytes"
                    }],
                    DutchOutput: [{
                        name: "token",
                        type: "address"
                    }, {
                        name: "startAmount",
                        type: "uint256"
                    }, {
                        name: "endAmount",
                        type: "uint256"
                    }, {
                        name: "recipient",
                        type: "address"
                    }]
                },
                p = ["tuple(tuple(address,address,uint256,uint256,address,bytes),uint256,uint256,address,uint256,tuple(address,uint256,uint256),tuple(address,uint256,uint256,address)[])"],
                y = class e extends d.Order {
                    static fromJSON(t, f, n) {
                        return new e(Object.assign(Object.assign({}, t), {
                            exclusivityOverrideBps: a.BigNumber.from(t.exclusivityOverrideBps),
                            nonce: a.BigNumber.from(t.nonce),
                            input: {
                                token: t.input.token,
                                startAmount: a.BigNumber.from(t.input.startAmount),
                                endAmount: a.BigNumber.from(t.input.endAmount)
                            },
                            outputs: t.outputs.map(e => ({
                                token: e.token,
                                startAmount: a.BigNumber.from(e.startAmount),
                                endAmount: a.BigNumber.from(e.endAmount),
                                recipient: e.recipient
                            }))
                        }), f, n)
                    }
                    static parse(t, f, n) {
                        let [
                            [
                                [r, i, o, s, u, d], c, l, y, b, [h, m, v], T
                            ]
                        ] = new a.ethers.utils.AbiCoder().decode(p, t);
                        return new e({
                            reactor: r,
                            swapper: i,
                            nonce: o,
                            deadline: s.toNumber(),
                            additionalValidationContract: u,
                            additionalValidationData: d,
                            decayStartTime: c.toNumber(),
                            decayEndTime: l.toNumber(),
                            exclusiveFiller: y,
                            exclusivityOverrideBps: b,
                            input: {
                                token: h,
                                startAmount: m,
                                endAmount: v
                            },
                            outputs: T.map(([e, t, f, n]) => ({
                                token: e,
                                startAmount: t,
                                endAmount: f,
                                recipient: n
                            }))
                        }, f, n)
                    }
                    toJSON() {
                        return {
                            chainId: this.chainId,
                            permit2Address: this.permit2Address,
                            reactor: this.info.reactor,
                            swapper: this.info.swapper,
                            nonce: this.info.nonce.toString(),
                            deadline: this.info.deadline,
                            additionalValidationContract: this.info.additionalValidationContract,
                            additionalValidationData: this.info.additionalValidationData,
                            decayStartTime: this.info.decayStartTime,
                            decayEndTime: this.info.decayEndTime,
                            exclusiveFiller: this.info.exclusiveFiller,
                            exclusivityOverrideBps: this.info.exclusivityOverrideBps.toString(),
                            input: {
                                token: this.info.input.token,
                                startAmount: this.info.input.startAmount.toString(),
                                endAmount: this.info.input.endAmount.toString()
                            },
                            outputs: this.info.outputs.map(e => ({
                                token: e.token,
                                startAmount: e.startAmount.toString(),
                                endAmount: e.endAmount.toString(),
                                recipient: e.recipient
                            }))
                        }
                    }
                    serialize() {
                        return new a.ethers.utils.AbiCoder().encode(p, [
                            [
                                [this.info.reactor, this.info.swapper, this.info.nonce, this.info.deadline, this.info.additionalValidationContract, this.info.additionalValidationData], this.info.decayStartTime, this.info.decayEndTime, this.info.exclusiveFiller, this.info.exclusivityOverrideBps, [this.info.input.token, this.info.input.startAmount, this.info.input.endAmount], this.info.outputs.map(e => [e.token, e.startAmount, e.endAmount, e.recipient])
                            ]
                        ])
                    }
                    getSigner(e) {
                        return a.ethers.utils.computeAddress(a.ethers.utils.recoverPublicKey(i.SignatureTransfer.hash(this.toPermit(), this.permit2Address, this.chainId, this.witness()), e))
                    }
                    permitData() {
                        return i.SignatureTransfer.getPermitData(this.toPermit(), this.permit2Address, this.chainId, this.witness())
                    }
                    hash() {
                        return a.ethers.utils._TypedDataEncoder.from(l).hash(this.witnessInfo())
                    }
                    resolve(e) {
                        let t = this.info.exclusiveFiller !== a.ethers.constants.AddressZero && e.timestamp <= this.info.decayStartTime && e.filler !== this.info.exclusiveFiller;
                        return {
                            input: {
                                token: this.info.input.token,
                                amount: (0, u.getDecayedAmount)({
                                    decayStartTime: this.info.decayStartTime,
                                    decayEndTime: this.info.decayEndTime,
                                    startAmount: this.info.input.startAmount,
                                    endAmount: this.info.input.endAmount
                                }, e.timestamp)
                            },
                            outputs: this.info.outputs.map(f => {
                                let n = (0, u.getDecayedAmount)({
                                        decayStartTime: this.info.decayStartTime,
                                        decayEndTime: this.info.decayEndTime,
                                        startAmount: f.startAmount,
                                        endAmount: f.endAmount
                                    }, e.timestamp),
                                    r = n;
                                return t && (r = this.info.exclusivityOverrideBps.eq(c) ? a.ethers.constants.MaxUint256 : n.mul(this.info.exclusivityOverrideBps.add(o.BPS)).div(o.BPS)), {
                                    token: f.token,
                                    amount: r
                                }
                            })
                        }
                    }
                    toPermit() {
                        return {
                            permitted: {
                                token: this.info.input.token,
                                amount: this.info.input.endAmount
                            },
                            spender: this.info.reactor,
                            nonce: this.info.nonce,
                            deadline: this.info.deadline
                        }
                    }
                    witnessInfo() {
                        return {
                            info: {
                                reactor: this.info.reactor,
                                swapper: this.info.swapper,
                                nonce: this.info.nonce,
                                deadline: this.info.deadline,
                                additionalValidationContract: this.info.additionalValidationContract,
                                additionalValidationData: this.info.additionalValidationData
                            },
                            decayStartTime: this.info.decayStartTime,
                            decayEndTime: this.info.decayEndTime,
                            exclusiveFiller: this.info.exclusiveFiller,
                            exclusivityOverrideBps: this.info.exclusivityOverrideBps,
                            inputToken: this.info.input.token,
                            inputStartAmount: this.info.input.startAmount,
                            inputEndAmount: this.info.input.endAmount,
                            outputs: this.info.outputs
                        }
                    }
                    witness() {
                        return {
                            witness: this.witnessInfo(),
                            witnessTypeName: "ExclusiveDutchOrder",
                            witnessType: l
                        }
                    }
                    constructor(e, t, f) {
                        if (super(), this.info = e, this.chainId = t, this._permit2Address = f, f) this.permit2Address = f;
                        else if (o.PERMIT2_MAPPING[t]) this.permit2Address = o.PERMIT2_MAPPING[t];
                        else throw new s.MissingConfiguration("permit2", t.toString())
                    }
                };
            t.DutchOrder = y
        },
        23539: (e, t, f) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.parseOrder = void 0;
            let n = f(51113),
                r = f(63104),
                i = f(75866),
                a = f(7704),
                o = f(12098);
            n.__exportStar(f(12098), t), n.__exportStar(f(75487), t), n.__exportStar(f(73300), t), t.parseOrder = function(e) {
                let t = "0x" + (0, a.stripHexPrefix)(e).slice(88, 128).toLowerCase();
                if (!r.REVERSE_REACTOR_MAPPING[t]) throw new i.MissingConfiguration("reactor", t);
                let {
                    chainId: f,
                    orderType: n
                } = r.REVERSE_REACTOR_MAPPING[t];
                if (n === r.OrderType.Dutch) return o.DutchOrder.parse(e, f);
                throw new i.MissingConfiguration("orderType", n)
            }
        },
        75487: (e, t, f) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.Order = void 0;
            let n = f(73300);
            t.Order = class {
                get validation() {
                    return (0, n.parseValidation)(this.info)
                }
            }
        },
        73300: (e, t, f) => {
            "use strict";
            var n;
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.encodeExclusiveFillerData = t.parseExclusiveFillerData = t.parseValidation = t.ValidationType = void 0;
            let r = f(72637),
                i = f(63104);
            ! function(e) {
                e[e.None = 0] = "None", e[e.ExclusiveFiller = 1] = "ExclusiveFiller"
            }(n = t.ValidationType || (t.ValidationType = {}));
            let a = {
                type: n.None,
                data: null
            };

            function o(e) {
                try {
                    let [t, f] = new r.ethers.utils.AbiCoder().decode(["address", "uint256"], e);
                    return {
                        type: n.ExclusiveFiller,
                        data: {
                            filler: t,
                            lastExclusiveTimestamp: f.toNumber()
                        }
                    }
                } catch (e) {
                    return a
                }
            }
            t.parseValidation = function(e) {
                let t = o(e.additionalValidationData);
                return t.type !== n.None ? t : a
            }, t.parseExclusiveFillerData = o, t.encodeExclusiveFillerData = function(e, t, f, n) {
                let a = "";
                if (n) a = n;
                else if (f) a = i.EXCLUSIVE_FILLER_VALIDATION_MAPPING[f];
                else throw Error("No validation contract provided");
                return {
                    additionalValidationContract: a,
                    additionalValidationData: new r.ethers.utils.AbiCoder().encode(["address", "uint256"], [e, t])
                }
            }
        },
        4366: (e, t, f) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.DutchOrderTrade = void 0;
            let n = f(22158),
                r = f(23539),
                i = f(86772),
                a = class {
                    get inputAmount() {
                        if (this._inputAmount) return this._inputAmount;
                        let e = n.CurrencyAmount.fromRawAmount(this._currencyIn, this.order.info.input.startAmount.toString());
                        return this._inputAmount = e, e
                    }
                    get outputAmounts() {
                        if (this._outputAmounts) return this._outputAmounts;
                        let e = this.order.info.outputs.map(e => {
                            let t = this._currenciesOut.find(t => (0, i.areCurrenciesEqual)(t, e.token, t.chainId));
                            if (!t) throw Error("currency not found in output array");
                            return n.CurrencyAmount.fromRawAmount(t, e.startAmount.toString())
                        });
                        return this._outputAmounts = e, e
                    }
                    getFirstNonFeeOutputStartEndAmounts() {
                        if (this._firstNonFeeOutputStartEndAmounts) return this._firstNonFeeOutputStartEndAmounts;
                        if (0 === this.order.info.outputs.length) throw Error("there must be at least one output token");
                        let e = this.order.info.outputs[0],
                            t = this._currenciesOut.find(t => (0, i.areCurrenciesEqual)(t, e.token, t.chainId));
                        if (!t) throw Error("currency output from order must exist in currenciesOut list");
                        let f = {
                            startAmount: n.CurrencyAmount.fromRawAmount(t, e.startAmount.toString()),
                            endAmount: n.CurrencyAmount.fromRawAmount(t, e.endAmount.toString())
                        };
                        return this._firstNonFeeOutputStartEndAmounts = f, f
                    }
                    get outputAmount() {
                        return this.getFirstNonFeeOutputStartEndAmounts().startAmount
                    }
                    minimumAmountOut() {
                        return this.getFirstNonFeeOutputStartEndAmounts().endAmount
                    }
                    maximumAmountIn() {
                        return n.CurrencyAmount.fromRawAmount(this._currencyIn, this.order.info.input.endAmount.toString())
                    }
                    get executionPrice() {
                        var e;
                        return null !== (e = this._executionPrice) && void 0 !== e ? e : this._executionPrice = new n.Price(this.inputAmount.currency, this.outputAmount.currency, this.inputAmount.quotient, this.outputAmount.quotient)
                    }
                    worstExecutionPrice() {
                        return new n.Price(this.inputAmount.currency, this.outputAmount.currency, this.maximumAmountIn().quotient, this.minimumAmountOut().quotient)
                    }
                    constructor({
                        currencyIn: e,
                        currenciesOut: t,
                        orderInfo: f,
                        tradeType: n
                    }) {
                        this._currencyIn = e, this._currenciesOut = t, this.tradeType = n, this.order = new r.DutchOrder(f, e.chainId)
                    }
                };
            t.DutchOrderTrade = a
        },
        53892: (e, t, f) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), f(51113).__exportStar(f(4366), t)
        },
        86772: (e, t, f) => {
            "use strict";
            var n;
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.areCurrenciesEqual = t.NativeAssets = void 0;
            let r = f(22158),
                i = f(72637);
            ! function(e) {
                e.MATIC = "MATIC", e.BNB = "BNB", e.AVAX = "AVAX", e.ETH = "ETH"
            }(n = t.NativeAssets || (t.NativeAssets = {})), t.areCurrenciesEqual = function(e, t, f) {
                return e.chainId === f && (e.isNative ? t === i.constants.AddressZero || t === function(e) {
                    switch (e) {
                        case r.ChainId.POLYGON:
                            return n.MATIC;
                        case r.ChainId.BNB:
                            return n.BNB;
                        case r.ChainId.AVALANCHE:
                            return n.AVAX;
                        default:
                            return n.ETH
                    }
                }(f) : e.address.toLowerCase() === (null == t ? void 0 : t.toLowerCase()))
            }
        },
        51502: (e, t, f) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.EventWatcher = void 0;
            let n = f(51113),
                r = f(72637),
                i = n.__importDefault(f(61599)),
                a = f(29792),
                o = class {
                    getFillLogs(e, t) {
                        return n.__awaiter(this, void 0, void 0, function*() {
                            return yield this.reactor.queryFilter(this.reactor.filters.Fill(), e, t)
                        })
                    }
                    getFillEvents(e, t) {
                        return n.__awaiter(this, void 0, void 0, function*() {
                            return (yield this.getFillLogs(e, t)).map(e => e.args)
                        })
                    }
                    getFillInfo(e, t) {
                        return n.__awaiter(this, void 0, void 0, function*() {
                            let f = yield this.getFillLogs(e, t), n = f.map(e => e.args), a = f.reduce((e, t) => e.add(this.reactor.provider.getTransactionReceipt(t.transactionHash)), new Set), o = yield Promise.all(a), s = n.map((e, t) => ({
                                orderHash: e.orderHash,
                                swapper: e.swapper,
                                filler: e.filler,
                                nonce: e.nonce,
                                txLogs: o[t].logs,
                                blockNumber: o[t].blockNumber,
                                txHash: o[t].transactionHash
                            })), u = new r.utils.Interface(i.default.abi);
                            return s.map(e => {
                                let t = e.txLogs.reduce((t, f) => {
                                    try {
                                        let n = u.parseLog(f);
                                        return "Transfer" === n.name && n.args.to === e.swapper && t.push({
                                            token: f.address,
                                            amount: n.args.amount
                                        }), t
                                    } catch (e) {
                                        return t
                                    }
                                }, []);
                                return {
                                    orderHash: e.orderHash,
                                    swapper: e.swapper,
                                    filler: e.filler,
                                    nonce: e.nonce,
                                    blockNumber: e.blockNumber,
                                    txHash: e.txHash,
                                    outputs: t
                                }
                            })
                        })
                    }
                    onFill(e) {
                        this.reactor.on(this.reactor.filters.Fill(), (t, f, n, r, i) => {
                            e({
                                orderHash: t,
                                filler: f,
                                nonce: r,
                                swapper: n
                            }, i)
                        })
                    }
                    constructor(e, t) {
                        this.reactor = a.ExclusiveDutchOrderReactor__factory.connect(t, e)
                    }
                };
            t.EventWatcher = o
        },
        32682: (e, t, f) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.getCancelSingleParams = t.setBit = t.getFirstUnsetBit = t.buildNonce = t.splitNonce = t.NonceManager = void 0;
            let n = f(51113),
                r = f(72637),
                i = f(63104),
                a = f(29792),
                o = f(75866),
                s = class {
                    useNonce(e) {
                        return n.__awaiter(this, void 0, void 0, function*() {
                            let {
                                word: t,
                                bitmap: f
                            } = yield this.getNextOpenWord(e), n = c(f);
                            return this.currentWord.set(e, t), this.currentBitmap.set(e, l(f, n)), d(t, n)
                        })
                    }
                    isUsed(e, t) {
                        return n.__awaiter(this, void 0, void 0, function*() {
                            let {
                                word: f,
                                bitPos: n
                            } = u(t);
                            return (yield this.permit2.nonceBitmap(e, f)).div(r.BigNumber.from(2).pow(n)).mod(2).eq(1)
                        })
                    }
                    getNextOpenWord(e) {
                        return n.__awaiter(this, void 0, void 0, function*() {
                            let t = this.currentWord.get(e) || r.BigNumber.from(0),
                                f = this.currentBitmap.get(e) || (yield this.permit2.nonceBitmap(e, t));
                            for (; f.eq(r.ethers.constants.MaxUint256);) t = t.add(1), f = yield this.permit2.nonceBitmap(e, t);
                            return {
                                word: t,
                                bitmap: f
                            }
                        })
                    }
                    constructor(e, t, f) {
                        if (this.provider = e, f) this.permit2 = a.Permit2__factory.connect(f, e);
                        else if (i.PERMIT2_MAPPING[t]) this.permit2 = a.Permit2__factory.connect(i.PERMIT2_MAPPING[t], this.provider);
                        else throw new o.MissingConfiguration("orderQuoter", t.toString());
                        this.currentWord = new Map, this.currentBitmap = new Map
                    }
                };

            function u(e) {
                return {
                    word: e.div(256),
                    bitPos: e.mod(256)
                }
            }

            function d(e, t) {
                return e.mul(256).add(t)
            }

            function c(e) {
                for (let t = 0; t < 256; t++)
                    if (e.div(r.BigNumber.from(2).pow(t)).mod(2).eq(0)) return t;
                return -1
            }

            function l(e, t) {
                let f = r.BigNumber.from(2).pow(t);
                return e.div(f).mod(2).eq(1) ? e : e.add(f)
            }
            t.NonceManager = s, t.splitNonce = u, t.buildNonce = d, t.getFirstUnsetBit = c, t.setBit = l, t.getCancelSingleParams = function(e) {
                let {
                    word: t,
                    bitPos: f
                } = u(e);
                return {
                    word: t,
                    mask: r.BigNumber.from(2).pow(f)
                }
            }
        },
        26335: (e, t, f) => {
            "use strict";
            var n;
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.OrderQuoter = t.OrderValidation = void 0;
            let r = f(51113),
                i = f(72637),
                a = f(63104),
                o = f(29792),
                s = f(75866),
                u = f(73300),
                d = f(32682),
                c = f(91283);
            ! function(e) {
                e[e.Expired = 0] = "Expired", e[e.NonceUsed = 1] = "NonceUsed", e[e.InsufficientFunds = 2] = "InsufficientFunds", e[e.InvalidSignature = 3] = "InvalidSignature", e[e.InvalidOrderFields = 4] = "InvalidOrderFields", e[e.UnknownError = 5] = "UnknownError", e[e.ValidationFailed = 6] = "ValidationFailed", e[e.ExclusivityPeriod = 7] = "ExclusivityPeriod", e[e.OK = 8] = "OK"
            }(n = t.OrderValidation || (t.OrderValidation = {}));
            let l = {
                    "8baa579f": n.InvalidSignature,
                    "815e1d64": n.InvalidSignature,
                    "756688fe": n.NonceUsed,
                    "302e5b7c": n.InvalidOrderFields,
                    "773a6187": n.InvalidOrderFields,
                    "4ddf4a64": n.InvalidOrderFields,
                    d303758b: n.InvalidOrderFields,
                    "7c1f8113": n.InvalidOrderFields,
                    43133453: n.InvalidOrderFields,
                    "48fee69c": n.InvalidOrderFields,
                    "70f65caa": n.Expired,
                    ee3b3d4b: n.NonceUsed,
                    "0a0b0d79": n.ValidationFailed,
                    b9ec1e96: n.ExclusivityPeriod,
                    "062dec56": n.ExclusivityPeriod,
                    "75c1bb14": n.ExclusivityPeriod,
                    TRANSFER_FROM_FAILED: n.InsufficientFunds
                },
                p = class {
                    quote(e) {
                        return r.__awaiter(this, void 0, void 0, function*() {
                            return (yield this.quoteBatch([e]))[0]
                        })
                    }
                    quoteBatch(e) {
                        return r.__awaiter(this, void 0, void 0, function*() {
                            let t = e.map(e => [e.order.serialize(), e.signature]),
                                f = yield(0, c.multicallSameContractManyFunctions)(this.provider, {
                                    address: this.orderQuoter.address,
                                    contractInterface: this.orderQuoter.interface,
                                    functionName: "quote",
                                    functionParams: t
                                }), n = yield this.getValidations(e, f), r = f.map(({
                                    success: e,
                                    returnData: t
                                }) => {
                                    if (e) return this.orderQuoter.interface.decodeFunctionResult("quote", t).result
                                });
                            return n.map((e, t) => ({
                                validation: e,
                                quote: r[t]
                            }))
                        })
                    }
                    getValidations(e, t) {
                        return r.__awaiter(this, void 0, void 0, function*() {
                            let f = t.map((t, f) => {
                                if (t.success) return n.OK; {
                                    let r = t.returnData;
                                    for (let t of (r.startsWith("0x08c379a0") && (r = new i.ethers.utils.AbiCoder().decode(["string"], "0x" + r.slice(10))[0]), Object.keys(l)))
                                        if (r.includes(t)) {
                                            if ("0a0b0d79" === t) {
                                                let t = (0, u.parseExclusiveFillerData)(e[f].order.info.additionalValidationData);
                                                if (t.type === u.ValidationType.ExclusiveFiller && t.data.filler !== i.ethers.constants.AddressZero) return n.ExclusivityPeriod;
                                                return n.ValidationFailed
                                            }
                                            return l[t]
                                        }
                                    return n.UnknownError
                                }
                            });
                            return yield this.checkTerminalStates(e, f)
                        })
                    }
                    checkTerminalStates(e, t) {
                        return r.__awaiter(this, void 0, void 0, function*() {
                            return yield Promise.all(t.map((t, f) => r.__awaiter(this, void 0, void 0, function*() {
                                let r = e[f];
                                if (!(t === n.Expired || r.order.info.deadline < Math.floor(new Date().getTime() / 1e3))) return t; {
                                    let e = o.ExclusiveDutchOrderReactor__factory.connect(r.order.info.reactor, this.provider),
                                        t = new d.NonceManager(this.provider, this.chainId, (yield e.permit2())),
                                        f = r.order.getSigner(r.signature);
                                    return (yield t.isUsed(f, r.order.info.nonce)) ? n.NonceUsed : n.Expired
                                }
                            })))
                        })
                    }
                    get orderQuoterAddress() {
                        return this.orderQuoter.address
                    }
                    constructor(e, t, f) {
                        if (this.provider = e, this.chainId = t, f) this.orderQuoter = o.OrderQuoter__factory.connect(f, e);
                        else if (a.ORDER_QUOTER_MAPPING[t]) this.orderQuoter = o.OrderQuoter__factory.connect(a.ORDER_QUOTER_MAPPING[t], this.provider);
                        else throw new s.MissingConfiguration("orderQuoter", t.toString())
                    }
                };
            t.OrderQuoter = p
        },
        97012: (e, t, f) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.OrderValidator = void 0;
            let n = f(51113),
                r = f(26335),
                i = class extends r.OrderQuoter {
                    validate(e) {
                        let t = Object.create(null, {
                            quote: {
                                get: () => super.quote
                            }
                        });
                        return n.__awaiter(this, void 0, void 0, function*() {
                            return (yield t.quote.call(this, e)).validation
                        })
                    }
                    validateBatch(e) {
                        let t = Object.create(null, {
                            quoteBatch: {
                                get: () => super.quoteBatch
                            }
                        });
                        return n.__awaiter(this, void 0, void 0, function*() {
                            return (yield t.quoteBatch.call(this, e)).map(e => e.validation)
                        })
                    }
                };
            t.OrderValidator = i
        },
        64816: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.getDecayedAmount = void 0, t.getDecayedAmount = function(e, t = Math.floor(Date.now() / 1e3)) {
                let {
                    startAmount: f,
                    endAmount: n,
                    decayStartTime: r,
                    decayEndTime: i
                } = e;
                if (i <= t) return n;
                if (r >= t || f.eq(n)) return f;
                let a = i - r,
                    o = t - r;
                if (f.gt(n)) {
                    let e = f.sub(n).mul(o).div(a);
                    return f.sub(e)
                } {
                    let e = n.sub(f).mul(o).div(a);
                    return f.add(e)
                }
            }
        },
        7704: (e, t, f) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.stripHexPrefix = void 0;
            let n = f(51113);
            n.__exportStar(f(97012), t), n.__exportStar(f(32682), t), n.__exportStar(f(26335), t), n.__exportStar(f(51502), t), n.__exportStar(f(91283), t), n.__exportStar(f(64816), t), t.stripHexPrefix = function(e) {
                return e.startsWith("0x") ? e.slice(2) : e
            }
        },
        91283: (e, t, f) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.multicall = t.multicallSameFunctionManyContracts = t.multicallSameContractManyFunctions = void 0;
            let n = f(51113),
                r = f(90825),
                i = f(72674),
                a = n.__importDefault(f(33405)),
                o = n.__importDefault(f(9614)),
                s = f(63104),
                u = f(29792);

            function d(e, t) {
                return n.__awaiter(this, void 0, void 0, function*() {
                    if ((yield e.getCode(s.MULTICALL_ADDRESS)).length > 2) {
                        let f = u.Multicall2__factory.connect(s.MULTICALL_ADDRESS, e);
                        return yield f.callStatic.tryAggregate(!1, t)
                    } {
                        let f = new r.Interface(a.default).encodeDeploy([!1, t]),
                            n = (0, i.hexConcat)(["0x608060405234801561001057600080fd5b5060405161087538038061087583398181016040528101906100329190610666565b6000815167ffffffffffffffff81111561004f5761004e610358565b5b60405190808252806020026020018201604052801561008857816020015b6100756102da565b81526020019060019003908161006d5790505b50905060005b82518110156101d3576000808483815181106100ad576100ac6106c2565b5b60200260200101516000015173ffffffffffffffffffffffffffffffffffffffff168584815181106100e2576100e16106c2565b5b6020026020010151602001516040516100fb9190610738565b6000604051808303816000865af19150503d8060008114610138576040519150601f19603f3d011682016040523d82523d6000602084013e61013d565b606091505b509150915085156101895781610188576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161017f906107d2565b60405180910390fd5b5b60405180604001604052808315158152602001828152508484815181106101b3576101b26106c2565b5b6020026020010181905250505080806101cb9061082b565b91505061008e565b50602081516040028260405103030160408160405103036001835111156102535760005b8351811015610251578060200260208501018160200260400183018261021f57855160200281525b6000831115610244576020808303510151602083510151038060208303510180835250505b50506001810190506101f7565b505b60005b8351811015610281578060200260208501018051516040602083510151035250600181019050610256565b5060005b83518110156102ae57806020026020850101604060208083510151035250600181019050610285565b506001835114156102cb5760208301604082018451602002815250505b60208152825160208201528181f35b6040518060400160405280600015158152602001606081525090565b6000604051905090565b600080fd5b600080fd5b60008115159050919050565b61031f8161030a565b811461032a57600080fd5b50565b60008151905061033c81610316565b92915050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61039082610347565b810181811067ffffffffffffffff821117156103af576103ae610358565b5b80604052505050565b60006103c26102f6565b90506103ce8282610387565b919050565b600067ffffffffffffffff8211156103ee576103ed610358565b5b602082029050602081019050919050565b600080fd5b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006104398261040e565b9050919050565b6104498161042e565b811461045457600080fd5b50565b60008151905061046681610440565b92915050565b600080fd5b600067ffffffffffffffff82111561048c5761048b610358565b5b61049582610347565b9050602081019050919050565b60005b838110156104c05780820151818401526020810190506104a5565b838111156104cf576000848401525b50505050565b60006104e86104e384610471565b6103b8565b9050828152602081018484840111156105045761050361046c565b5b61050f8482856104a2565b509392505050565b600082601f83011261052c5761052b610342565b5b815161053c8482602086016104d5565b91505092915050565b60006040828403121561055b5761055a610404565b5b61056560406103b8565b9050600061057584828501610457565b600083015250602082015167ffffffffffffffff81111561059957610598610409565b5b6105a584828501610517565b60208301525092915050565b60006105c46105bf846103d3565b6103b8565b905080838252602082019050602084028301858111156105e7576105e66103ff565b5b835b8181101561062e57805167ffffffffffffffff81111561060c5761060b610342565b5b8086016106198982610545565b855260208501945050506020810190506105e9565b5050509392505050565b600082601f83011261064d5761064c610342565b5b815161065d8482602086016105b1565b91505092915050565b6000806040838503121561067d5761067c610300565b5b600061068b8582860161032d565b925050602083015167ffffffffffffffff8111156106ac576106ab610305565b5b6106b885828601610638565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600081519050919050565b600081905092915050565b6000610712826106f1565b61071c81856106fc565b935061072c8185602086016104a2565b80840191505092915050565b60006107448284610707565b915081905092915050565b600082825260208201905092915050565b7f4d756c746963616c6c32206167677265676174653a2063616c6c206661696c6560008201527f6400000000000000000000000000000000000000000000000000000000000000602082015250565b60006107bc60218361074f565b91506107c782610760565b604082019050919050565b600060208201905081810360008301526107eb816107af565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000819050919050565b600061083682610821565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610869576108686107f2565b5b60018201905091905056fe", f]),
                            s = yield e.call({
                                data: n
                            });
                        return new r.Interface(o.default).decodeFunctionResult("tryAggregate", s).returnData
                    }
                })
            }
            t.multicallSameContractManyFunctions = function(e, t) {
                return n.__awaiter(this, void 0, void 0, function*() {
                    let {
                        address: f,
                        contractInterface: n,
                        functionName: r,
                        functionParams: i
                    } = t, a = n.getFunction(r);
                    return d(e, i.map(e => ({
                        target: f,
                        callData: n.encodeFunctionData(a, e)
                    })))
                })
            }, t.multicallSameFunctionManyContracts = function(e, t) {
                return n.__awaiter(this, void 0, void 0, function*() {
                    let {
                        addresses: f,
                        contractInterface: n,
                        functionName: r,
                        functionParam: i
                    } = t, a = n.getFunction(r), o = n.encodeFunctionData(a, i);
                    return d(e, f.map(e => ({
                        target: e,
                        callData: o
                    })))
                })
            }, t.multicall = d
        },
        2764: (e, t, f) => {
            "use strict";
            var n, r = (n = f(84861)) && "object" == typeof n && "default" in n ? n.default : n,
                i = f(64451),
                a = f(72637),
                o = f(90825),
                s = f(22158),
                u = f(9677),
                d = f(1648),
                c = f(56868),
                l = f(34534);
            f(67261), f(67658);
            var p, y = f(5018);
            (p = t.PM || (t.PM = {})).UniswapTrade = "UniswapTrade", p.NFTTrade = "NFTTrade", p.UnwrapWETH = "UnwrapWETH", p.WrapSTETH = "WrapSTETH", p.UnwrapSTETH = "UnwrapSTETH";
            var b, h, m, v, T = function(e, f) {
                this.tradeType = t.PM.NFTTrade, f.length > 0 || r(!1), this.market = e, this.orders = f
            };

            function g() {
                return (g = Object.assign ? Object.assign.bind() : function(e) {
                    for (var t = 1; t < arguments.length; t++) {
                        var f = arguments[t];
                        for (var n in f) Object.prototype.hasOwnProperty.call(f, n) && (e[n] = f[n])
                    }
                    return e
                }).apply(this, arguments)
            }

            function w(e, t) {
                e.prototype = Object.create(t.prototype), e.prototype.constructor = e, (Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(e, t) {
                    return e.__proto__ = t, e
                })(e, t)
            }

            function A(e, t) {
                (null == t || t > e.length) && (t = e.length);
                for (var f = 0, n = Array(t); f < t; f++) n[f] = e[f];
                return n
            }

            function I(e, t) {
                var f = "undefined" != typeof Symbol && e[Symbol.iterator] || e["@@iterator"];
                if (f) return (f = f.call(e)).next.bind(f);
                if (Array.isArray(e) || (f = function(e, t) {
                        if (e) {
                            if ("string" == typeof e) return A(e, void 0);
                            var f = Object.prototype.toString.call(e).slice(8, -1);
                            return "Object" === f && e.constructor && (f = e.constructor.name), "Map" === f || "Set" === f ? Array.from(e) : "Arguments" === f || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(f) ? A(e, void 0) : void 0
                        }
                    }(e)) || t && e && "number" == typeof e.length) {
                    f && (e = f);
                    var n = 0;
                    return function() {
                        return n >= e.length ? {
                            done: !0
                        } : {
                            done: !1,
                            value: e[n++]
                        }
                    }
                }
                throw TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")
            }(b = t.IY || (t.IY = {})).Foundation = "foundation", b.LooksRareV2 = "looksrareV2", b.NFT20 = "nft20", b.NFTX = "nftx", b.Seaport = "seaport", b.Sudoswap = "Sudoswap", b.Cryptopunks = "cryptopunks", b.X2Y2 = "x2y2", b.Element = "element", (h = t.iv || (t.iv = {})).ERC721 = "ERC721", h.ERC1155 = "ERC1155", h.Cryptopunk = "Cryptopunk", (v = t.wI || (t.wI = {}))[v.V3_SWAP_EXACT_IN = 0] = "V3_SWAP_EXACT_IN", v[v.V3_SWAP_EXACT_OUT = 1] = "V3_SWAP_EXACT_OUT", v[v.PERMIT2_TRANSFER_FROM = 2] = "PERMIT2_TRANSFER_FROM", v[v.PERMIT2_PERMIT_BATCH = 3] = "PERMIT2_PERMIT_BATCH", v[v.SWEEP = 4] = "SWEEP", v[v.TRANSFER = 5] = "TRANSFER", v[v.PAY_PORTION = 6] = "PAY_PORTION", v[v.V2_SWAP_EXACT_IN = 8] = "V2_SWAP_EXACT_IN", v[v.V2_SWAP_EXACT_OUT = 9] = "V2_SWAP_EXACT_OUT", v[v.PERMIT2_PERMIT = 10] = "PERMIT2_PERMIT", v[v.WRAP_ETH = 11] = "WRAP_ETH", v[v.UNWRAP_WETH = 12] = "UNWRAP_WETH", v[v.PERMIT2_TRANSFER_FROM_BATCH = 13] = "PERMIT2_TRANSFER_FROM_BATCH", v[v.BALANCE_CHECK_ERC20 = 14] = "BALANCE_CHECK_ERC20", v[v.SEAPORT_V1_5 = 16] = "SEAPORT_V1_5", v[v.LOOKS_RARE_V2 = 17] = "LOOKS_RARE_V2", v[v.NFTX = 18] = "NFTX", v[v.CRYPTOPUNKS = 19] = "CRYPTOPUNKS", v[v.OWNER_CHECK_721 = 21] = "OWNER_CHECK_721", v[v.OWNER_CHECK_1155 = 22] = "OWNER_CHECK_1155", v[v.SWEEP_ERC721 = 23] = "SWEEP_ERC721", v[v.X2Y2_721 = 24] = "X2Y2_721", v[v.SUDOSWAP = 25] = "SUDOSWAP", v[v.NFT20 = 26] = "NFT20", v[v.X2Y2_1155 = 27] = "X2Y2_1155", v[v.FOUNDATION = 28] = "FOUNDATION", v[v.SWEEP_ERC1155 = 29] = "SWEEP_ERC1155", v[v.ELEMENT_MARKET = 30] = "ELEMENT_MARKET", v[v.SEAPORT_V1_4 = 32] = "SEAPORT_V1_4", v[v.EXECUTE_SUB_PLAN = 33] = "EXECUTE_SUB_PLAN", v[v.APPROVE_ERC20 = 34] = "APPROVE_ERC20", v[v.FEW_V2_SWAP_EXACT_IN = 35] = "FEW_V2_SWAP_EXACT_IN", v[v.FEW_V2_SWAP_EXACT_OUT = 36] = "FEW_V2_SWAP_EXACT_OUT", v[v.RING_V2_SWAP_EXACT_IN = 37] = "RING_V2_SWAP_EXACT_IN", v[v.RING_V2_SWAP_EXACT_OUT = 38] = "RING_V2_SWAP_EXACT_OUT";
            var E = new Set([t.wI.SEAPORT_V1_5, t.wI.SEAPORT_V1_4, t.wI.NFTX, t.wI.LOOKS_RARE_V2, t.wI.X2Y2_721, t.wI.X2Y2_1155, t.wI.FOUNDATION, t.wI.SUDOSWAP, t.wI.NFT20, t.wI.EXECUTE_SUB_PLAN, t.wI.CRYPTOPUNKS, t.wI.ELEMENT_MARKET]),
                _ = ((m = {})[t.wI.EXECUTE_SUB_PLAN] = ["bytes", "bytes[]"], m[t.wI.PERMIT2_PERMIT] = ["((address token,uint160 amount,uint48 expiration,uint48 nonce) details,address spender,uint256 sigDeadline)", "bytes"], m[t.wI.PERMIT2_PERMIT_BATCH] = ["((address token,uint160 amount,uint48 expiration,uint48 nonce)[] details,address spender,uint256 sigDeadline)", "bytes"], m[t.wI.PERMIT2_TRANSFER_FROM] = ["address", "address", "uint160"], m[t.wI.PERMIT2_TRANSFER_FROM_BATCH] = ["(address from,address to,uint160 amount,address token)[]"], m[t.wI.V3_SWAP_EXACT_IN] = ["address", "uint256", "uint256", "bytes", "bool"], m[t.wI.V3_SWAP_EXACT_OUT] = ["address", "uint256", "uint256", "bytes", "bool"], m[t.wI.V2_SWAP_EXACT_IN] = ["address", "uint256", "uint256", "address[]", "bool"], m[t.wI.V2_SWAP_EXACT_OUT] = ["address", "uint256", "uint256", "address[]", "bool"], m[t.wI.FEW_V2_SWAP_EXACT_IN] = ["address", "uint256", "uint256", "address[]", "bool", "bool"], m[t.wI.FEW_V2_SWAP_EXACT_OUT] = ["address", "uint256", "uint256", "address[]", "bool", "bool"], m[t.wI.RING_V2_SWAP_EXACT_IN] = ["address", "uint256", "uint256", "address[]", "bool", "bool"], m[t.wI.RING_V2_SWAP_EXACT_OUT] = ["address", "uint256", "uint256", "address[]", "bool", "bool"], m[t.wI.WRAP_ETH] = ["address", "uint256"], m[t.wI.UNWRAP_WETH] = ["address", "uint256"], m[t.wI.SWEEP] = ["address", "address", "uint256"], m[t.wI.SWEEP_ERC721] = ["address", "address", "uint256"], m[t.wI.SWEEP_ERC1155] = ["address", "address", "uint256", "uint256"], m[t.wI.TRANSFER] = ["address", "address", "uint256"], m[t.wI.PAY_PORTION] = ["address", "address", "uint256"], m[t.wI.BALANCE_CHECK_ERC20] = ["address", "address", "uint256"], m[t.wI.OWNER_CHECK_721] = ["address", "address", "uint256"], m[t.wI.OWNER_CHECK_1155] = ["address", "address", "uint256", "uint256"], m[t.wI.APPROVE_ERC20] = ["address", "uint256"], m[t.wI.SEAPORT_V1_5] = ["uint256", "bytes"], m[t.wI.SEAPORT_V1_4] = ["uint256", "bytes"], m[t.wI.NFTX] = ["uint256", "bytes"], m[t.wI.LOOKS_RARE_V2] = ["uint256", "bytes"], m[t.wI.X2Y2_721] = ["uint256", "bytes", "address", "address", "uint256"], m[t.wI.X2Y2_1155] = ["uint256", "bytes", "address", "address", "uint256", "uint256"], m[t.wI.FOUNDATION] = ["uint256", "bytes", "address", "address", "uint256"], m[t.wI.SUDOSWAP] = ["uint256", "bytes"], m[t.wI.NFT20] = ["uint256", "bytes"], m[t.wI.CRYPTOPUNKS] = ["uint256", "address", "uint256"], m[t.wI.ELEMENT_MARKET] = ["uint256", "bytes"], m),
                k = function() {
                    function e() {
                        this.commands = "0x", this.inputs = []
                    }
                    var f = e.prototype;
                    return f.addSubPlan = function(e) {
                        this.addCommand(t.wI.EXECUTE_SUB_PLAN, [e.commands, e.inputs], !0)
                    }, f.addCommand = function(e, t, f) {
                        void 0 === f && (f = !1);
                        var n = {
                            type: e,
                            encodedInput: i.defaultAbiCoder.encode(_[e], t)
                        };
                        if (this.inputs.push(n.encodedInput), f) {
                            if (!E.has(n.type)) throw Error("command type: " + n.type + " cannot be allowed to revert");
                            n.type = 128 | n.type
                        }
                        this.commands = this.commands.concat(n.type.toString(16).padStart(2, "0"))
                    }, e
                }();
            (function(e) {
                function f(f) {
                    return e.call(this, t.IY.Cryptopunks, f) || this
                }
                w(f, e);
                var n = f.prototype;
                return n.encode = function(e, f) {
                    for (var n, r = I(this.orders); !(n = r()).done;) {
                        var i = n.value;
                        e.addCommand(t.wI.CRYPTOPUNKS, [i.tokenId, i.recipient, i.value], f.allowRevert)
                    }
                }, n.getBuyItems = function() {
                    for (var e, n = [], r = I(this.orders); !(e = r()).done;) n.push({
                        tokenAddress: f.CRYPTOPUNK_ADDRESS,
                        tokenId: e.value.tokenId,
                        tokenType: t.iv.Cryptopunk
                    });
                    return n
                }, n.getTotalPrice = function() {
                    for (var e, t = a.BigNumber.from(0), f = I(this.orders); !(e = f()).done;) t = t.add(e.value.value);
                    return t
                }, f
            })(T).CRYPTOPUNK_ADDRESS = "0xb47e3cd837ddf8e4c57f05d70ab865de6e193bbb",
                function(e) {
                    function f(f) {
                        return e.call(this, t.IY.Foundation, f) || this
                    }
                    w(f, e);
                    var n = f.prototype;
                    return n.encode = function(e, n) {
                        for (var r, i = I(this.orders); !(r = i()).done;) {
                            var a = r.value,
                                o = f.INTERFACE.encodeFunctionData("buyV2", [a.tokenAddress, a.tokenId, a.price, a.referrer]);
                            e.addCommand(t.wI.FOUNDATION, [a.price, o, a.recipient, a.tokenAddress, a.tokenId], n.allowRevert)
                        }
                    }, n.getBuyItems = function() {
                        for (var e, f = [], n = I(this.orders); !(e = n()).done;) {
                            var r = e.value;
                            f.push({
                                tokenAddress: r.tokenAddress,
                                tokenId: r.tokenId,
                                tokenType: t.iv.ERC721
                            })
                        }
                        return f
                    }, n.getTotalPrice = function() {
                        for (var e, t = a.BigNumber.from(0), f = I(this.orders); !(e = f()).done;) t = t.add(e.value.price);
                        return t
                    }, f
                }(T).INTERFACE = new o.Interface([{
                    inputs: [{
                        internalType: "address payable",
                        name: "treasury",
                        type: "address"
                    }, {
                        internalType: "address",
                        name: "feth",
                        type: "address"
                    }, {
                        internalType: "address",
                        name: "royaltyRegistry",
                        type: "address"
                    }, {
                        internalType: "uint256",
                        name: "duration",
                        type: "uint256"
                    }],
                    stateMutability: "nonpayable",
                    type: "constructor"
                }, {
                    inputs: [],
                    name: "FoundationTreasuryNode_Address_Is_Not_A_Contract",
                    type: "error"
                }, {
                    inputs: [],
                    name: "FoundationTreasuryNode_Caller_Not_Admin",
                    type: "error"
                }, {
                    inputs: [{
                        internalType: "uint256",
                        name: "buyPrice",
                        type: "uint256"
                    }],
                    name: "NFTMarketBuyPrice_Cannot_Buy_At_Lower_Price",
                    type: "error"
                }, {
                    inputs: [],
                    name: "NFTMarketBuyPrice_Cannot_Buy_Unset_Price",
                    type: "error"
                }, {
                    inputs: [],
                    name: "NFTMarketBuyPrice_Cannot_Cancel_Unset_Price",
                    type: "error"
                }, {
                    inputs: [{
                        internalType: "address",
                        name: "owner",
                        type: "address"
                    }],
                    name: "NFTMarketBuyPrice_Only_Owner_Can_Cancel_Price",
                    type: "error"
                }, {
                    inputs: [{
                        internalType: "address",
                        name: "owner",
                        type: "address"
                    }],
                    name: "NFTMarketBuyPrice_Only_Owner_Can_Set_Price",
                    type: "error"
                }, {
                    inputs: [],
                    name: "NFTMarketBuyPrice_Price_Already_Set",
                    type: "error"
                }, {
                    inputs: [],
                    name: "NFTMarketBuyPrice_Price_Too_High",
                    type: "error"
                }, {
                    inputs: [{
                        internalType: "address",
                        name: "seller",
                        type: "address"
                    }],
                    name: "NFTMarketBuyPrice_Seller_Mismatch",
                    type: "error"
                }, {
                    inputs: [],
                    name: "NFTMarketCore_FETH_Address_Is_Not_A_Contract",
                    type: "error"
                }, {
                    inputs: [],
                    name: "NFTMarketCore_Only_FETH_Can_Transfer_ETH",
                    type: "error"
                }, {
                    inputs: [],
                    name: "NFTMarketCore_Seller_Not_Found",
                    type: "error"
                }, {
                    inputs: [],
                    name: "NFTMarketFees_Address_Does_Not_Support_IRoyaltyRegistry",
                    type: "error"
                }, {
                    inputs: [],
                    name: "NFTMarketOffer_Cannot_Be_Made_While_In_Auction",
                    type: "error"
                }, {
                    inputs: [{
                        internalType: "uint256",
                        name: "currentOfferAmount",
                        type: "uint256"
                    }],
                    name: "NFTMarketOffer_Offer_Below_Min_Amount",
                    type: "error"
                }, {
                    inputs: [{
                        internalType: "uint256",
                        name: "expiry",
                        type: "uint256"
                    }],
                    name: "NFTMarketOffer_Offer_Expired",
                    type: "error"
                }, {
                    inputs: [{
                        internalType: "address",
                        name: "currentOfferFrom",
                        type: "address"
                    }],
                    name: "NFTMarketOffer_Offer_From_Does_Not_Match",
                    type: "error"
                }, {
                    inputs: [{
                        internalType: "uint256",
                        name: "minOfferAmount",
                        type: "uint256"
                    }],
                    name: "NFTMarketOffer_Offer_Must_Be_At_Least_Min_Amount",
                    type: "error"
                }, {
                    inputs: [],
                    name: "NFTMarketOffer_Provided_Contract_And_TokenId_Count_Must_Match",
                    type: "error"
                }, {
                    inputs: [],
                    name: "NFTMarketOffer_Reason_Required",
                    type: "error"
                }, {
                    inputs: [{
                        internalType: "uint256",
                        name: "auctionId",
                        type: "uint256"
                    }],
                    name: "NFTMarketReserveAuction_Already_Listed",
                    type: "error"
                }, {
                    inputs: [{
                        internalType: "uint256",
                        name: "minAmount",
                        type: "uint256"
                    }],
                    name: "NFTMarketReserveAuction_Bid_Must_Be_At_Least_Min_Amount",
                    type: "error"
                }, {
                    inputs: [],
                    name: "NFTMarketReserveAuction_Cannot_Admin_Cancel_Without_Reason",
                    type: "error"
                }, {
                    inputs: [{
                        internalType: "uint256",
                        name: "reservePrice",
                        type: "uint256"
                    }],
                    name: "NFTMarketReserveAuction_Cannot_Bid_Lower_Than_Reserve_Price",
                    type: "error"
                }, {
                    inputs: [{
                        internalType: "uint256",
                        name: "endTime",
                        type: "uint256"
                    }],
                    name: "NFTMarketReserveAuction_Cannot_Bid_On_Ended_Auction",
                    type: "error"
                }, {
                    inputs: [],
                    name: "NFTMarketReserveAuction_Cannot_Bid_On_Nonexistent_Auction",
                    type: "error"
                }, {
                    inputs: [],
                    name: "NFTMarketReserveAuction_Cannot_Cancel_Nonexistent_Auction",
                    type: "error"
                }, {
                    inputs: [],
                    name: "NFTMarketReserveAuction_Cannot_Finalize_Already_Settled_Auction",
                    type: "error"
                }, {
                    inputs: [{
                        internalType: "uint256",
                        name: "endTime",
                        type: "uint256"
                    }],
                    name: "NFTMarketReserveAuction_Cannot_Finalize_Auction_In_Progress",
                    type: "error"
                }, {
                    inputs: [],
                    name: "NFTMarketReserveAuction_Cannot_Rebid_Over_Outstanding_Bid",
                    type: "error"
                }, {
                    inputs: [],
                    name: "NFTMarketReserveAuction_Cannot_Update_Auction_In_Progress",
                    type: "error"
                }, {
                    inputs: [{
                        internalType: "uint256",
                        name: "maxDuration",
                        type: "uint256"
                    }],
                    name: "NFTMarketReserveAuction_Exceeds_Max_Duration",
                    type: "error"
                }, {
                    inputs: [{
                        internalType: "uint256",
                        name: "extensionDuration",
                        type: "uint256"
                    }],
                    name: "NFTMarketReserveAuction_Less_Than_Extension_Duration",
                    type: "error"
                }, {
                    inputs: [],
                    name: "NFTMarketReserveAuction_Must_Set_Non_Zero_Reserve_Price",
                    type: "error"
                }, {
                    inputs: [{
                        internalType: "address",
                        name: "seller",
                        type: "address"
                    }],
                    name: "NFTMarketReserveAuction_Not_Matching_Seller",
                    type: "error"
                }, {
                    inputs: [{
                        internalType: "address",
                        name: "owner",
                        type: "address"
                    }],
                    name: "NFTMarketReserveAuction_Only_Owner_Can_Update_Auction",
                    type: "error"
                }, {
                    inputs: [],
                    name: "NFTMarketReserveAuction_Price_Already_Set",
                    type: "error"
                }, {
                    inputs: [],
                    name: "NFTMarketReserveAuction_Too_Much_Value_Provided",
                    type: "error"
                }, {
                    anonymous: !1,
                    inputs: [{
                        indexed: !0,
                        internalType: "address",
                        name: "nftContract",
                        type: "address"
                    }, {
                        indexed: !0,
                        internalType: "uint256",
                        name: "tokenId",
                        type: "uint256"
                    }, {
                        indexed: !0,
                        internalType: "address",
                        name: "seller",
                        type: "address"
                    }, {
                        indexed: !1,
                        internalType: "address",
                        name: "buyer",
                        type: "address"
                    }, {
                        indexed: !1,
                        internalType: "uint256",
                        name: "protocolFee",
                        type: "uint256"
                    }, {
                        indexed: !1,
                        internalType: "uint256",
                        name: "creatorFee",
                        type: "uint256"
                    }, {
                        indexed: !1,
                        internalType: "uint256",
                        name: "sellerRev",
                        type: "uint256"
                    }],
                    name: "BuyPriceAccepted",
                    type: "event"
                }, {
                    anonymous: !1,
                    inputs: [{
                        indexed: !0,
                        internalType: "address",
                        name: "nftContract",
                        type: "address"
                    }, {
                        indexed: !0,
                        internalType: "uint256",
                        name: "tokenId",
                        type: "uint256"
                    }],
                    name: "BuyPriceCanceled",
                    type: "event"
                }, {
                    anonymous: !1,
                    inputs: [{
                        indexed: !0,
                        internalType: "address",
                        name: "nftContract",
                        type: "address"
                    }, {
                        indexed: !0,
                        internalType: "uint256",
                        name: "tokenId",
                        type: "uint256"
                    }],
                    name: "BuyPriceInvalidated",
                    type: "event"
                }, {
                    anonymous: !1,
                    inputs: [{
                        indexed: !0,
                        internalType: "address",
                        name: "nftContract",
                        type: "address"
                    }, {
                        indexed: !0,
                        internalType: "uint256",
                        name: "tokenId",
                        type: "uint256"
                    }, {
                        indexed: !0,
                        internalType: "address",
                        name: "seller",
                        type: "address"
                    }, {
                        indexed: !1,
                        internalType: "uint256",
                        name: "price",
                        type: "uint256"
                    }],
                    name: "BuyPriceSet",
                    type: "event"
                }, {
                    anonymous: !1,
                    inputs: [{
                        indexed: !0,
                        internalType: "address",
                        name: "nftContract",
                        type: "address"
                    }, {
                        indexed: !0,
                        internalType: "uint256",
                        name: "tokenId",
                        type: "uint256"
                    }, {
                        indexed: !1,
                        internalType: "address",
                        name: "buyReferrer",
                        type: "address"
                    }, {
                        indexed: !1,
                        internalType: "uint256",
                        name: "buyReferrerProtocolFee",
                        type: "uint256"
                    }, {
                        indexed: !1,
                        internalType: "uint256",
                        name: "buyReferrerSellerFee",
                        type: "uint256"
                    }],
                    name: "BuyReferralPaid",
                    type: "event"
                }, {
                    anonymous: !1,
                    inputs: [{
                        indexed: !1,
                        internalType: "uint8",
                        name: "version",
                        type: "uint8"
                    }],
                    name: "Initialized",
                    type: "event"
                }, {
                    anonymous: !1,
                    inputs: [{
                        indexed: !0,
                        internalType: "address",
                        name: "nftContract",
                        type: "address"
                    }, {
                        indexed: !0,
                        internalType: "uint256",
                        name: "tokenId",
                        type: "uint256"
                    }, {
                        indexed: !0,
                        internalType: "address",
                        name: "buyer",
                        type: "address"
                    }, {
                        indexed: !1,
                        internalType: "address",
                        name: "seller",
                        type: "address"
                    }, {
                        indexed: !1,
                        internalType: "uint256",
                        name: "protocolFee",
                        type: "uint256"
                    }, {
                        indexed: !1,
                        internalType: "uint256",
                        name: "creatorFee",
                        type: "uint256"
                    }, {
                        indexed: !1,
                        internalType: "uint256",
                        name: "sellerRev",
                        type: "uint256"
                    }],
                    name: "OfferAccepted",
                    type: "event"
                }, {
                    anonymous: !1,
                    inputs: [{
                        indexed: !0,
                        internalType: "address",
                        name: "nftContract",
                        type: "address"
                    }, {
                        indexed: !0,
                        internalType: "uint256",
                        name: "tokenId",
                        type: "uint256"
                    }, {
                        indexed: !1,
                        internalType: "string",
                        name: "reason",
                        type: "string"
                    }],
                    name: "OfferCanceledByAdmin",
                    type: "event"
                }, {
                    anonymous: !1,
                    inputs: [{
                        indexed: !0,
                        internalType: "address",
                        name: "nftContract",
                        type: "address"
                    }, {
                        indexed: !0,
                        internalType: "uint256",
                        name: "tokenId",
                        type: "uint256"
                    }],
                    name: "OfferInvalidated",
                    type: "event"
                }, {
                    anonymous: !1,
                    inputs: [{
                        indexed: !0,
                        internalType: "address",
                        name: "nftContract",
                        type: "address"
                    }, {
                        indexed: !0,
                        internalType: "uint256",
                        name: "tokenId",
                        type: "uint256"
                    }, {
                        indexed: !0,
                        internalType: "address",
                        name: "buyer",
                        type: "address"
                    }, {
                        indexed: !1,
                        internalType: "uint256",
                        name: "amount",
                        type: "uint256"
                    }, {
                        indexed: !1,
                        internalType: "uint256",
                        name: "expiration",
                        type: "uint256"
                    }],
                    name: "OfferMade",
                    type: "event"
                }, {
                    anonymous: !1,
                    inputs: [{
                        indexed: !0,
                        internalType: "uint256",
                        name: "auctionId",
                        type: "uint256"
                    }, {
                        indexed: !0,
                        internalType: "address",
                        name: "bidder",
                        type: "address"
                    }, {
                        indexed: !1,
                        internalType: "uint256",
                        name: "amount",
                        type: "uint256"
                    }, {
                        indexed: !1,
                        internalType: "uint256",
                        name: "endTime",
                        type: "uint256"
                    }],
                    name: "ReserveAuctionBidPlaced",
                    type: "event"
                }, {
                    anonymous: !1,
                    inputs: [{
                        indexed: !0,
                        internalType: "uint256",
                        name: "auctionId",
                        type: "uint256"
                    }],
                    name: "ReserveAuctionCanceled",
                    type: "event"
                }, {
                    anonymous: !1,
                    inputs: [{
                        indexed: !0,
                        internalType: "uint256",
                        name: "auctionId",
                        type: "uint256"
                    }, {
                        indexed: !1,
                        internalType: "string",
                        name: "reason",
                        type: "string"
                    }],
                    name: "ReserveAuctionCanceledByAdmin",
                    type: "event"
                }, {
                    anonymous: !1,
                    inputs: [{
                        indexed: !0,
                        internalType: "address",
                        name: "seller",
                        type: "address"
                    }, {
                        indexed: !0,
                        internalType: "address",
                        name: "nftContract",
                        type: "address"
                    }, {
                        indexed: !0,
                        internalType: "uint256",
                        name: "tokenId",
                        type: "uint256"
                    }, {
                        indexed: !1,
                        internalType: "uint256",
                        name: "duration",
                        type: "uint256"
                    }, {
                        indexed: !1,
                        internalType: "uint256",
                        name: "extensionDuration",
                        type: "uint256"
                    }, {
                        indexed: !1,
                        internalType: "uint256",
                        name: "reservePrice",
                        type: "uint256"
                    }, {
                        indexed: !1,
                        internalType: "uint256",
                        name: "auctionId",
                        type: "uint256"
                    }],
                    name: "ReserveAuctionCreated",
                    type: "event"
                }, {
                    anonymous: !1,
                    inputs: [{
                        indexed: !0,
                        internalType: "uint256",
                        name: "auctionId",
                        type: "uint256"
                    }, {
                        indexed: !0,
                        internalType: "address",
                        name: "seller",
                        type: "address"
                    }, {
                        indexed: !0,
                        internalType: "address",
                        name: "bidder",
                        type: "address"
                    }, {
                        indexed: !1,
                        internalType: "uint256",
                        name: "protocolFee",
                        type: "uint256"
                    }, {
                        indexed: !1,
                        internalType: "uint256",
                        name: "creatorFee",
                        type: "uint256"
                    }, {
                        indexed: !1,
                        internalType: "uint256",
                        name: "sellerRev",
                        type: "uint256"
                    }],
                    name: "ReserveAuctionFinalized",
                    type: "event"
                }, {
                    anonymous: !1,
                    inputs: [{
                        indexed: !0,
                        internalType: "uint256",
                        name: "auctionId",
                        type: "uint256"
                    }],
                    name: "ReserveAuctionInvalidated",
                    type: "event"
                }, {
                    anonymous: !1,
                    inputs: [{
                        indexed: !0,
                        internalType: "uint256",
                        name: "auctionId",
                        type: "uint256"
                    }, {
                        indexed: !1,
                        internalType: "uint256",
                        name: "reservePrice",
                        type: "uint256"
                    }],
                    name: "ReserveAuctionUpdated",
                    type: "event"
                }, {
                    anonymous: !1,
                    inputs: [{
                        indexed: !0,
                        internalType: "address",
                        name: "user",
                        type: "address"
                    }, {
                        indexed: !1,
                        internalType: "uint256",
                        name: "amount",
                        type: "uint256"
                    }],
                    name: "WithdrawalToFETH",
                    type: "event"
                }, {
                    inputs: [{
                        internalType: "address",
                        name: "nftContract",
                        type: "address"
                    }, {
                        internalType: "uint256",
                        name: "tokenId",
                        type: "uint256"
                    }, {
                        internalType: "address",
                        name: "offerFrom",
                        type: "address"
                    }, {
                        internalType: "uint256",
                        name: "minAmount",
                        type: "uint256"
                    }],
                    name: "acceptOffer",
                    outputs: [],
                    stateMutability: "nonpayable",
                    type: "function"
                }, {
                    inputs: [{
                        internalType: "address[]",
                        name: "nftContracts",
                        type: "address[]"
                    }, {
                        internalType: "uint256[]",
                        name: "tokenIds",
                        type: "uint256[]"
                    }, {
                        internalType: "string",
                        name: "reason",
                        type: "string"
                    }],
                    name: "adminCancelOffers",
                    outputs: [],
                    stateMutability: "nonpayable",
                    type: "function"
                }, {
                    inputs: [{
                        internalType: "uint256",
                        name: "auctionId",
                        type: "uint256"
                    }, {
                        internalType: "string",
                        name: "reason",
                        type: "string"
                    }],
                    name: "adminCancelReserveAuction",
                    outputs: [],
                    stateMutability: "nonpayable",
                    type: "function"
                }, {
                    inputs: [{
                        internalType: "address",
                        name: "nftContract",
                        type: "address"
                    }, {
                        internalType: "uint256",
                        name: "tokenId",
                        type: "uint256"
                    }, {
                        internalType: "uint256",
                        name: "maxPrice",
                        type: "uint256"
                    }],
                    name: "buy",
                    outputs: [],
                    stateMutability: "payable",
                    type: "function"
                }, {
                    inputs: [{
                        internalType: "address",
                        name: "nftContract",
                        type: "address"
                    }, {
                        internalType: "uint256",
                        name: "tokenId",
                        type: "uint256"
                    }, {
                        internalType: "uint256",
                        name: "maxPrice",
                        type: "uint256"
                    }, {
                        internalType: "address payable",
                        name: "referrer",
                        type: "address"
                    }],
                    name: "buyV2",
                    outputs: [],
                    stateMutability: "payable",
                    type: "function"
                }, {
                    inputs: [{
                        internalType: "address",
                        name: "nftContract",
                        type: "address"
                    }, {
                        internalType: "uint256",
                        name: "tokenId",
                        type: "uint256"
                    }],
                    name: "cancelBuyPrice",
                    outputs: [],
                    stateMutability: "nonpayable",
                    type: "function"
                }, {
                    inputs: [{
                        internalType: "uint256",
                        name: "auctionId",
                        type: "uint256"
                    }],
                    name: "cancelReserveAuction",
                    outputs: [],
                    stateMutability: "nonpayable",
                    type: "function"
                }, {
                    inputs: [{
                        internalType: "address",
                        name: "nftContract",
                        type: "address"
                    }, {
                        internalType: "uint256",
                        name: "tokenId",
                        type: "uint256"
                    }, {
                        internalType: "uint256",
                        name: "reservePrice",
                        type: "uint256"
                    }],
                    name: "createReserveAuction",
                    outputs: [],
                    stateMutability: "nonpayable",
                    type: "function"
                }, {
                    inputs: [{
                        internalType: "uint256",
                        name: "auctionId",
                        type: "uint256"
                    }],
                    name: "finalizeReserveAuction",
                    outputs: [],
                    stateMutability: "nonpayable",
                    type: "function"
                }, {
                    inputs: [{
                        internalType: "address",
                        name: "nftContract",
                        type: "address"
                    }, {
                        internalType: "uint256",
                        name: "tokenId",
                        type: "uint256"
                    }],
                    name: "getBuyPrice",
                    outputs: [{
                        internalType: "address",
                        name: "seller",
                        type: "address"
                    }, {
                        internalType: "uint256",
                        name: "price",
                        type: "uint256"
                    }],
                    stateMutability: "view",
                    type: "function"
                }, {
                    inputs: [{
                        internalType: "address",
                        name: "nftContract",
                        type: "address"
                    }, {
                        internalType: "uint256",
                        name: "tokenId",
                        type: "uint256"
                    }, {
                        internalType: "uint256",
                        name: "price",
                        type: "uint256"
                    }],
                    name: "getFeesAndRecipients",
                    outputs: [{
                        internalType: "uint256",
                        name: "protocolFee",
                        type: "uint256"
                    }, {
                        internalType: "uint256",
                        name: "creatorRev",
                        type: "uint256"
                    }, {
                        internalType: "address payable[]",
                        name: "creatorRecipients",
                        type: "address[]"
                    }, {
                        internalType: "uint256[]",
                        name: "creatorShares",
                        type: "uint256[]"
                    }, {
                        internalType: "uint256",
                        name: "sellerRev",
                        type: "uint256"
                    }, {
                        internalType: "address payable",
                        name: "owner",
                        type: "address"
                    }],
                    stateMutability: "view",
                    type: "function"
                }, {
                    inputs: [],
                    name: "getFethAddress",
                    outputs: [{
                        internalType: "address",
                        name: "fethAddress",
                        type: "address"
                    }],
                    stateMutability: "view",
                    type: "function"
                }, {
                    inputs: [],
                    name: "getFoundationTreasury",
                    outputs: [{
                        internalType: "address payable",
                        name: "treasuryAddress",
                        type: "address"
                    }],
                    stateMutability: "view",
                    type: "function"
                }, {
                    inputs: [{
                        internalType: "address",
                        name: "nftContract",
                        type: "address"
                    }, {
                        internalType: "uint256",
                        name: "tokenId",
                        type: "uint256"
                    }],
                    name: "getImmutableRoyalties",
                    outputs: [{
                        internalType: "address payable[]",
                        name: "recipients",
                        type: "address[]"
                    }, {
                        internalType: "uint256[]",
                        name: "splitPerRecipientInBasisPoints",
                        type: "uint256[]"
                    }],
                    stateMutability: "view",
                    type: "function"
                }, {
                    inputs: [{
                        internalType: "uint256",
                        name: "auctionId",
                        type: "uint256"
                    }],
                    name: "getMinBidAmount",
                    outputs: [{
                        internalType: "uint256",
                        name: "minimum",
                        type: "uint256"
                    }],
                    stateMutability: "view",
                    type: "function"
                }, {
                    inputs: [{
                        internalType: "address",
                        name: "nftContract",
                        type: "address"
                    }, {
                        internalType: "uint256",
                        name: "tokenId",
                        type: "uint256"
                    }],
                    name: "getMinOfferAmount",
                    outputs: [{
                        internalType: "uint256",
                        name: "minimum",
                        type: "uint256"
                    }],
                    stateMutability: "view",
                    type: "function"
                }, {
                    inputs: [{
                        internalType: "address",
                        name: "nftContract",
                        type: "address"
                    }, {
                        internalType: "uint256",
                        name: "tokenId",
                        type: "uint256"
                    }, {
                        internalType: "address payable",
                        name: "creator",
                        type: "address"
                    }],
                    name: "getMutableRoyalties",
                    outputs: [{
                        internalType: "address payable[]",
                        name: "recipients",
                        type: "address[]"
                    }, {
                        internalType: "uint256[]",
                        name: "splitPerRecipientInBasisPoints",
                        type: "uint256[]"
                    }],
                    stateMutability: "view",
                    type: "function"
                }, {
                    inputs: [{
                        internalType: "address",
                        name: "nftContract",
                        type: "address"
                    }, {
                        internalType: "uint256",
                        name: "tokenId",
                        type: "uint256"
                    }],
                    name: "getOffer",
                    outputs: [{
                        internalType: "address",
                        name: "buyer",
                        type: "address"
                    }, {
                        internalType: "uint256",
                        name: "expiration",
                        type: "uint256"
                    }, {
                        internalType: "uint256",
                        name: "amount",
                        type: "uint256"
                    }],
                    stateMutability: "view",
                    type: "function"
                }, {
                    inputs: [{
                        internalType: "address",
                        name: "nftContract",
                        type: "address"
                    }, {
                        internalType: "uint256",
                        name: "tokenId",
                        type: "uint256"
                    }],
                    name: "getOfferReferrer",
                    outputs: [{
                        internalType: "address payable",
                        name: "referrer",
                        type: "address"
                    }],
                    stateMutability: "view",
                    type: "function"
                }, {
                    inputs: [{
                        internalType: "uint256",
                        name: "auctionId",
                        type: "uint256"
                    }],
                    name: "getReserveAuction",
                    outputs: [{
                        components: [{
                            internalType: "address",
                            name: "nftContract",
                            type: "address"
                        }, {
                            internalType: "uint256",
                            name: "tokenId",
                            type: "uint256"
                        }, {
                            internalType: "address payable",
                            name: "seller",
                            type: "address"
                        }, {
                            internalType: "uint256",
                            name: "duration",
                            type: "uint256"
                        }, {
                            internalType: "uint256",
                            name: "extensionDuration",
                            type: "uint256"
                        }, {
                            internalType: "uint256",
                            name: "endTime",
                            type: "uint256"
                        }, {
                            internalType: "address payable",
                            name: "bidder",
                            type: "address"
                        }, {
                            internalType: "uint256",
                            name: "amount",
                            type: "uint256"
                        }],
                        internalType: "struct NFTMarketReserveAuction.ReserveAuction",
                        name: "auction",
                        type: "tuple"
                    }],
                    stateMutability: "view",
                    type: "function"
                }, {
                    inputs: [{
                        internalType: "uint256",
                        name: "auctionId",
                        type: "uint256"
                    }],
                    name: "getReserveAuctionBidReferrer",
                    outputs: [{
                        internalType: "address payable",
                        name: "referrer",
                        type: "address"
                    }],
                    stateMutability: "view",
                    type: "function"
                }, {
                    inputs: [{
                        internalType: "address",
                        name: "nftContract",
                        type: "address"
                    }, {
                        internalType: "uint256",
                        name: "tokenId",
                        type: "uint256"
                    }],
                    name: "getReserveAuctionIdFor",
                    outputs: [{
                        internalType: "uint256",
                        name: "auctionId",
                        type: "uint256"
                    }],
                    stateMutability: "view",
                    type: "function"
                }, {
                    inputs: [],
                    name: "getRoyaltyRegistry",
                    outputs: [{
                        internalType: "address",
                        name: "registry",
                        type: "address"
                    }],
                    stateMutability: "view",
                    type: "function"
                }, {
                    inputs: [{
                        internalType: "address",
                        name: "nftContract",
                        type: "address"
                    }, {
                        internalType: "uint256",
                        name: "tokenId",
                        type: "uint256"
                    }],
                    name: "getTokenCreator",
                    outputs: [{
                        internalType: "address payable",
                        name: "creator",
                        type: "address"
                    }],
                    stateMutability: "view",
                    type: "function"
                }, {
                    inputs: [],
                    name: "initialize",
                    outputs: [],
                    stateMutability: "nonpayable",
                    type: "function"
                }, {
                    inputs: [{
                        internalType: "address",
                        name: "nftContract",
                        type: "address"
                    }, {
                        internalType: "uint256",
                        name: "tokenId",
                        type: "uint256"
                    }, {
                        internalType: "uint256",
                        name: "amount",
                        type: "uint256"
                    }],
                    name: "makeOffer",
                    outputs: [{
                        internalType: "uint256",
                        name: "expiration",
                        type: "uint256"
                    }],
                    stateMutability: "payable",
                    type: "function"
                }, {
                    inputs: [{
                        internalType: "address",
                        name: "nftContract",
                        type: "address"
                    }, {
                        internalType: "uint256",
                        name: "tokenId",
                        type: "uint256"
                    }, {
                        internalType: "uint256",
                        name: "amount",
                        type: "uint256"
                    }, {
                        internalType: "address payable",
                        name: "referrer",
                        type: "address"
                    }],
                    name: "makeOfferV2",
                    outputs: [{
                        internalType: "uint256",
                        name: "expiration",
                        type: "uint256"
                    }],
                    stateMutability: "payable",
                    type: "function"
                }, {
                    inputs: [{
                        internalType: "uint256",
                        name: "auctionId",
                        type: "uint256"
                    }],
                    name: "placeBid",
                    outputs: [],
                    stateMutability: "payable",
                    type: "function"
                }, {
                    inputs: [{
                        internalType: "uint256",
                        name: "auctionId",
                        type: "uint256"
                    }, {
                        internalType: "uint256",
                        name: "amount",
                        type: "uint256"
                    }, {
                        internalType: "address payable",
                        name: "referrer",
                        type: "address"
                    }],
                    name: "placeBidV2",
                    outputs: [],
                    stateMutability: "payable",
                    type: "function"
                }, {
                    inputs: [{
                        internalType: "address",
                        name: "nftContract",
                        type: "address"
                    }, {
                        internalType: "uint256",
                        name: "tokenId",
                        type: "uint256"
                    }, {
                        internalType: "uint256",
                        name: "price",
                        type: "uint256"
                    }],
                    name: "setBuyPrice",
                    outputs: [],
                    stateMutability: "nonpayable",
                    type: "function"
                }, {
                    inputs: [{
                        internalType: "uint256",
                        name: "auctionId",
                        type: "uint256"
                    }, {
                        internalType: "uint256",
                        name: "reservePrice",
                        type: "uint256"
                    }],
                    name: "updateReserveAuction",
                    outputs: [],
                    stateMutability: "nonpayable",
                    type: "function"
                }, {
                    stateMutability: "payable",
                    type: "receive"
                }]);
            var C, S, O = "0x0000000000000000000000000000000000000000",
                P = ((C = {})[1] = {
                    router: "0x3F6328669a86bef431Dc6F9201A5B90F7975a023",
                    weth: "0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2",
                    steth: "0xae7ab96520de3a18e5e111b5eaab095312d7fe84",
                    wsteth: "0x7f39c581f595b53c5cb19bd0b3f8da6c935e2ca0",
                    creationBlock: 17143817
                }, C[5] = {
                    router: "0xEc6b9a7FE7C7c751E6490648e05C5010DDfe0469",
                    weth: "0xb4fbf271143f4fbf7b91a5ded31805e42b2208d6",
                    steth: "0x1643E812aE58766192Cf7D2Cf9567dF2C37e9B7F",
                    wsteth: "0x6320cD32aA674d2898A68ec82e869385Fc5f7E2f",
                    creationBlock: 8940568
                }, C[11155111] = {
                    router: "0xd688620FE08a6304572748FA1f5d8C3Ec4431980",
                    weth: "0xfFf9976782d46CC05630D1f6eBAb18b2324d6B14",
                    steth: O,
                    wsteth: O,
                    creationBlock: 3518216
                }, C[137] = {
                    router: "0x643770E279d5D0733F21d6DC03A8efbABf3255B4",
                    weth: "0x0d500B1d8E8eF31E21C99d1Db9A6444d3ADf1270",
                    steth: O,
                    wsteth: O,
                    creationBlock: 46866777
                }, C[80001] = {
                    router: "0x3fC91A3afd70395Cd496C647d5a6CC9D4B2b7FAD",
                    weth: "0x9c3C9283D3e44854697Cd22D3Faa240Cfb032889",
                    steth: O,
                    wsteth: O,
                    creationBlock: 35176052
                }, C[10] = {
                    router: "0xeC8B0F7Ffe3ae75d7FfAb09429e3675bb63503e4",
                    weth: "0x4200000000000000000000000000000000000006",
                    steth: O,
                    wsteth: O,
                    creationBlock: 108825869
                }, C[420] = {
                    router: "0x3fC91A3afd70395Cd496C647d5a6CC9D4B2b7FAD",
                    weth: "0x4200000000000000000000000000000000000006",
                    steth: O,
                    wsteth: O,
                    creationBlock: 8887728
                }, C[42161] = {
                    router: "0xeC8B0F7Ffe3ae75d7FfAb09429e3675bb63503e4",
                    weth: "0x82aF49447D8a07e3bd95BD0d56f35241523fBab1",
                    steth: O,
                    wsteth: O,
                    creationBlock: 125861718
                }, C[421613] = {
                    router: "0x3fC91A3afd70395Cd496C647d5a6CC9D4B2b7FAD",
                    weth: "0xe39Ab88f8A4777030A534146A9Ca3B52bd5D43A3",
                    steth: O,
                    wsteth: O,
                    creationBlock: 18815277
                }, C[42220] = {
                    router: "0x88a3ED7F21A3fCF6adb86b6F878C5B7a02D20e9b",
                    weth: O,
                    steth: O,
                    wsteth: O,
                    creationBlock: 21116361
                }, C[44787] = {
                    router: "0x3fC91A3afd70395Cd496C647d5a6CC9D4B2b7FAD",
                    weth: O,
                    steth: O,
                    wsteth: O,
                    creationBlock: 17566658
                }, C[56] = {
                    router: "0xeC8B0F7Ffe3ae75d7FfAb09429e3675bb63503e4",
                    weth: "0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c",
                    steth: O,
                    wsteth: O,
                    creationBlock: 31254967
                }, C[43114] = {
                    router: "0x82635AF6146972cD6601161c4472ffe97237D292",
                    weth: "0xB31f66AA3C1e785363F0875A1B74E27b85FD66c7",
                    steth: O,
                    wsteth: O,
                    creationBlock: 34491144
                }, C[84531] = {
                    router: "0xd0872d928672ae2ff74bdb2f5130ac12229cafaf",
                    weth: "0x4200000000000000000000000000000000000006",
                    steth: O,
                    wsteth: O,
                    creationBlock: 6915289
                }, C[8453] = {
                    router: "0xeC8B0F7Ffe3ae75d7FfAb09429e3675bb63503e4",
                    weth: "0x4200000000000000000000000000000000000006",
                    steth: O,
                    wsteth: O,
                    creationBlock: 3229053
                }, C[168587773] = {
                    router: "0xa441f1E76C0c8D7b4b7157Af01E18FA5c946a9eb",
                    weth: "0x4200000000000000000000000000000000000023",
                    steth: O,
                    wsteth: O,
                    creationBlock: 3273124
                }, C[81457] = {
                    router: "0xce69eCA56e1ACE442Ebd591918223aCfEd60a940",
                    weth: "0x4300000000000000000000000000000000000004",
                    steth: O,
                    wsteth: O,
                    creationBlock: 165686
                }, C),
                M = function(e) {
                    if (!(e in P)) throw Error("Universal Router not deployed on chain " + e);
                    if (P[e].weth == O) throw Error("Chain " + e + " does not have WETH");
                    return P[e].weth
                },
                x = ((S = {})[168587773] = "0x787A81AF759621345c4D201667e893136CB41A2f", S[11155111] = "0x7e5F805e082364bCA9a4DAeD56E1c55998C9aB90", S[81457] = "0x313C2bD7cEEA9b68E81f36FFf053A570C85C6A8B", S),
                R = a.BigNumber.from(2).pow(255),
                F = "0x0000000000000000000000000000000000000000",
                D = "0x0000000000000000000000000000000000000000",
                N = "0x0000000000000000000000000000000000000001",
                B = "0x0000000000000000000000000000000000000002",
                L = function(e) {
                    function f(f) {
                        return e.call(this, t.IY.LooksRareV2, f) || this
                    }
                    w(f, e);
                    var n = f.prototype;
                    return n.encode = function(e, n) {
                        var r, i = this.refactorAPIData(this.orders),
                            a = i.takerBids,
                            o = i.makerOrders,
                            s = i.makerSignatures,
                            u = i.totalValue,
                            d = i.merkleTrees;
                        r = 1 == this.orders.length ? f.INTERFACE.encodeFunctionData("executeTakerBid", [a[0], o[0], s[0], d[0], D]) : f.INTERFACE.encodeFunctionData("executeMultipleTakerBids", [a, o, s, d, D, !1]), e.addCommand(t.wI.LOOKS_RARE_V2, [u, r], n.allowRevert)
                    }, n.getBuyItems = function() {
                        for (var e, n = [], r = I(this.orders); !(e = r()).done;)
                            for (var i, a = e.value, o = a.apiOrder.collection, s = a.apiOrder.collectionType == f.ERC721_ORDER ? t.iv.ERC721 : t.iv.ERC1155, u = I(a.apiOrder.itemIds); !(i = u()).done;) n.push({
                                tokenAddress: o,
                                tokenId: i.value,
                                tokenType: s
                            });
                        return n
                    }, n.getTotalPrice = function() {
                        for (var e, t = a.BigNumber.from(0), f = I(this.orders); !(e = f()).done;) t = t.add(e.value.apiOrder.price);
                        return t
                    }, n.refactorAPIData = function(e) {
                        var t = [],
                            f = [],
                            n = [],
                            r = a.BigNumber.from(0),
                            i = [];
                        return e.forEach(function(e) {
                            var o, s;
                            f.push(g({}, e.apiOrder)), n.push(e.apiOrder.signature), t.push({
                                recipient: e.taker,
                                additionalParameters: "0x"
                            }), r = r.add(a.BigNumber.from(e.apiOrder.price)), i.push({
                                root: null != (o = e.apiOrder.merkleRoot) ? o : "0x0000000000000000000000000000000000000000000000000000000000000000",
                                proof: null != (s = e.apiOrder.merkleProof) ? s : []
                            })
                        }), {
                            takerBids: t,
                            makerOrders: f,
                            makerSignatures: n,
                            totalValue: r,
                            merkleTrees: i
                        }
                    }, f
                }(T);

            function q(e, f) {
                var n = f.signature,
                    r = a.ethers.utils.arrayify(f.signature).length;
                65 !== r && 64 !== r || (n = a.ethers.utils.joinSignature(a.ethers.utils.splitSignature(f.signature))), e.addCommand(t.wI.PERMIT2_PERMIT, [f, n])
            }

            function U(e, f) {
                f.approval && f.permit2Permit && f.approval.token !== f.permit2Permit.details.token && r(!1), f.approval && f.permit2TransferFrom && f.approval.token !== f.permit2TransferFrom.token && r(!1), f.permit2TransferFrom && f.permit2Permit && f.permit2TransferFrom.token !== f.permit2Permit.details.token && r(!1), f.approval && e.addCommand(t.wI.APPROVE_ERC20, [f.approval.token, function(e) {
                    switch (e.toLowerCase()) {
                        case "0x00000000000000adc04c56bf30ac9d3c0aaf14dc":
                        case "0x00000000000001ad428e4906ae43d8f9852d0dd6":
                            return 0;
                        case "0x2b2e8cda09bba9660dca5cb6233787738ad68329":
                            return 1;
                        default:
                            throw Error("unsupported protocol address")
                    }
                }(f.approval.protocol)]), f.permit2Permit && q(e, f.permit2Permit), f.permit2TransferFrom && e.addCommand(t.wI.PERMIT2_TRANSFER_FROM, [f.permit2TransferFrom.token, f.permit2TransferFrom.recipient ? f.permit2TransferFrom.recipient : B, f.permit2TransferFrom.amount])
            }
            L.INTERFACE = new o.Interface([{
                    inputs: [{
                        internalType: "address",
                        name: "_owner",
                        type: "address"
                    }, {
                        internalType: "address",
                        name: "_protocolFeeRecipient",
                        type: "address"
                    }, {
                        internalType: "address",
                        name: "_transferManager",
                        type: "address"
                    }, {
                        internalType: "address",
                        name: "_weth",
                        type: "address"
                    }],
                    stateMutability: "nonpayable",
                    type: "constructor"
                }, {
                    inputs: [],
                    name: "CallerInvalid",
                    type: "error"
                }, {
                    inputs: [],
                    name: "ChainIdInvalid",
                    type: "error"
                }, {
                    inputs: [],
                    name: "CreatorFeeBpTooHigh",
                    type: "error"
                }, {
                    inputs: [],
                    name: "CurrencyInvalid",
                    type: "error"
                }, {
                    inputs: [],
                    name: "ERC20TransferFromFail",
                    type: "error"
                }, {
                    inputs: [],
                    name: "LengthsInvalid",
                    type: "error"
                }, {
                    inputs: [],
                    name: "MerkleProofInvalid",
                    type: "error"
                }, {
                    inputs: [{
                        internalType: "uint256",
                        name: "length",
                        type: "uint256"
                    }],
                    name: "MerkleProofTooLarge",
                    type: "error"
                }, {
                    inputs: [],
                    name: "NewGasLimitETHTransferTooLow",
                    type: "error"
                }, {
                    inputs: [],
                    name: "NewProtocolFeeRecipientCannotBeNullAddress",
                    type: "error"
                }, {
                    inputs: [],
                    name: "NoOngoingTransferInProgress",
                    type: "error"
                }, {
                    inputs: [],
                    name: "NoSelectorForStrategy",
                    type: "error"
                }, {
                    inputs: [],
                    name: "NoncesInvalid",
                    type: "error"
                }, {
                    inputs: [],
                    name: "NotAContract",
                    type: "error"
                }, {
                    inputs: [],
                    name: "NotAffiliateController",
                    type: "error"
                }, {
                    inputs: [],
                    name: "NotOwner",
                    type: "error"
                }, {
                    inputs: [],
                    name: "NotV2Strategy",
                    type: "error"
                }, {
                    inputs: [],
                    name: "NullSignerAddress",
                    type: "error"
                }, {
                    inputs: [],
                    name: "OutsideOfTimeRange",
                    type: "error"
                }, {
                    inputs: [],
                    name: "PercentageTooHigh",
                    type: "error"
                }, {
                    inputs: [],
                    name: "QuoteTypeInvalid",
                    type: "error"
                }, {
                    inputs: [],
                    name: "ReentrancyFail",
                    type: "error"
                }, {
                    inputs: [],
                    name: "RenouncementNotInProgress",
                    type: "error"
                }, {
                    inputs: [],
                    name: "SameDomainSeparator",
                    type: "error"
                }, {
                    inputs: [],
                    name: "SignatureEOAInvalid",
                    type: "error"
                }, {
                    inputs: [],
                    name: "SignatureERC1271Invalid",
                    type: "error"
                }, {
                    inputs: [{
                        internalType: "uint256",
                        name: "length",
                        type: "uint256"
                    }],
                    name: "SignatureLengthInvalid",
                    type: "error"
                }, {
                    inputs: [],
                    name: "SignatureParameterSInvalid",
                    type: "error"
                }, {
                    inputs: [{
                        internalType: "uint8",
                        name: "v",
                        type: "uint8"
                    }],
                    name: "SignatureParameterVInvalid",
                    type: "error"
                }, {
                    inputs: [],
                    name: "StrategyHasNoSelector",
                    type: "error"
                }, {
                    inputs: [{
                        internalType: "uint256",
                        name: "strategyId",
                        type: "uint256"
                    }],
                    name: "StrategyNotAvailable",
                    type: "error"
                }, {
                    inputs: [],
                    name: "StrategyNotUsed",
                    type: "error"
                }, {
                    inputs: [],
                    name: "StrategyProtocolFeeTooHigh",
                    type: "error"
                }, {
                    inputs: [],
                    name: "TransferAlreadyInProgress",
                    type: "error"
                }, {
                    inputs: [],
                    name: "TransferNotInProgress",
                    type: "error"
                }, {
                    inputs: [],
                    name: "WrongPotentialOwner",
                    type: "error"
                }, {
                    anonymous: !1,
                    inputs: [{
                        indexed: !1,
                        internalType: "address",
                        name: "affiliate",
                        type: "address"
                    }, {
                        indexed: !1,
                        internalType: "address",
                        name: "currency",
                        type: "address"
                    }, {
                        indexed: !1,
                        internalType: "uint256",
                        name: "affiliateFee",
                        type: "uint256"
                    }],
                    name: "AffiliatePayment",
                    type: "event"
                }, {
                    anonymous: !1,
                    inputs: [],
                    name: "CancelOwnershipTransfer",
                    type: "event"
                }, {
                    anonymous: !1,
                    inputs: [{
                        indexed: !1,
                        internalType: "address",
                        name: "currency",
                        type: "address"
                    }, {
                        indexed: !1,
                        internalType: "bool",
                        name: "isAllowed",
                        type: "bool"
                    }],
                    name: "CurrencyStatusUpdated",
                    type: "event"
                }, {
                    anonymous: !1,
                    inputs: [],
                    name: "InitiateOwnershipRenouncement",
                    type: "event"
                }, {
                    anonymous: !1,
                    inputs: [{
                        indexed: !1,
                        internalType: "address",
                        name: "previousOwner",
                        type: "address"
                    }, {
                        indexed: !1,
                        internalType: "address",
                        name: "potentialOwner",
                        type: "address"
                    }],
                    name: "InitiateOwnershipTransfer",
                    type: "event"
                }, {
                    anonymous: !1,
                    inputs: [{
                        indexed: !1,
                        internalType: "address",
                        name: "affiliateController",
                        type: "address"
                    }],
                    name: "NewAffiliateController",
                    type: "event"
                }, {
                    anonymous: !1,
                    inputs: [{
                        indexed: !1,
                        internalType: "bool",
                        name: "isActive",
                        type: "bool"
                    }],
                    name: "NewAffiliateProgramStatus",
                    type: "event"
                }, {
                    anonymous: !1,
                    inputs: [{
                        indexed: !1,
                        internalType: "address",
                        name: "affiliate",
                        type: "address"
                    }, {
                        indexed: !1,
                        internalType: "uint256",
                        name: "rate",
                        type: "uint256"
                    }],
                    name: "NewAffiliateRate",
                    type: "event"
                }, {
                    anonymous: !1,
                    inputs: [{
                        indexed: !1,
                        internalType: "address",
                        name: "user",
                        type: "address"
                    }, {
                        indexed: !1,
                        internalType: "uint256",
                        name: "bidNonce",
                        type: "uint256"
                    }, {
                        indexed: !1,
                        internalType: "uint256",
                        name: "askNonce",
                        type: "uint256"
                    }],
                    name: "NewBidAskNonces",
                    type: "event"
                }, {
                    anonymous: !1,
                    inputs: [{
                        indexed: !1,
                        internalType: "address",
                        name: "creatorFeeManager",
                        type: "address"
                    }],
                    name: "NewCreatorFeeManager",
                    type: "event"
                }, {
                    anonymous: !1,
                    inputs: [],
                    name: "NewDomainSeparator",
                    type: "event"
                }, {
                    anonymous: !1,
                    inputs: [{
                        indexed: !1,
                        internalType: "uint256",
                        name: "gasLimitETHTransfer",
                        type: "uint256"
                    }],
                    name: "NewGasLimitETHTransfer",
                    type: "event"
                }, {
                    anonymous: !1,
                    inputs: [{
                        indexed: !1,
                        internalType: "uint256",
                        name: "maxCreatorFeeBp",
                        type: "uint256"
                    }],
                    name: "NewMaxCreatorFeeBp",
                    type: "event"
                }, {
                    anonymous: !1,
                    inputs: [{
                        indexed: !1,
                        internalType: "address",
                        name: "newOwner",
                        type: "address"
                    }],
                    name: "NewOwner",
                    type: "event"
                }, {
                    anonymous: !1,
                    inputs: [{
                        indexed: !1,
                        internalType: "address",
                        name: "protocolFeeRecipient",
                        type: "address"
                    }],
                    name: "NewProtocolFeeRecipient",
                    type: "event"
                }, {
                    anonymous: !1,
                    inputs: [{
                        indexed: !1,
                        internalType: "uint256",
                        name: "strategyId",
                        type: "uint256"
                    }, {
                        indexed: !1,
                        internalType: "uint16",
                        name: "standardProtocolFeeBp",
                        type: "uint16"
                    }, {
                        indexed: !1,
                        internalType: "uint16",
                        name: "minTotalFeeBp",
                        type: "uint16"
                    }, {
                        indexed: !1,
                        internalType: "uint16",
                        name: "maxProtocolFeeBp",
                        type: "uint16"
                    }, {
                        indexed: !1,
                        internalType: "bytes4",
                        name: "selector",
                        type: "bytes4"
                    }, {
                        indexed: !1,
                        internalType: "bool",
                        name: "isMakerBid",
                        type: "bool"
                    }, {
                        indexed: !1,
                        internalType: "address",
                        name: "implementation",
                        type: "address"
                    }],
                    name: "NewStrategy",
                    type: "event"
                }, {
                    anonymous: !1,
                    inputs: [{
                        indexed: !1,
                        internalType: "address",
                        name: "user",
                        type: "address"
                    }, {
                        indexed: !1,
                        internalType: "uint256[]",
                        name: "orderNonces",
                        type: "uint256[]"
                    }],
                    name: "OrderNoncesCancelled",
                    type: "event"
                }, {
                    anonymous: !1,
                    inputs: [{
                        indexed: !1,
                        internalType: "uint256",
                        name: "strategyId",
                        type: "uint256"
                    }, {
                        indexed: !1,
                        internalType: "bool",
                        name: "isActive",
                        type: "bool"
                    }, {
                        indexed: !1,
                        internalType: "uint16",
                        name: "standardProtocolFeeBp",
                        type: "uint16"
                    }, {
                        indexed: !1,
                        internalType: "uint16",
                        name: "minTotalFeeBp",
                        type: "uint16"
                    }],
                    name: "StrategyUpdated",
                    type: "event"
                }, {
                    anonymous: !1,
                    inputs: [{
                        indexed: !1,
                        internalType: "address",
                        name: "user",
                        type: "address"
                    }, {
                        indexed: !1,
                        internalType: "uint256[]",
                        name: "subsetNonces",
                        type: "uint256[]"
                    }],
                    name: "SubsetNoncesCancelled",
                    type: "event"
                }, {
                    anonymous: !1,
                    inputs: [{
                        components: [{
                            internalType: "bytes32",
                            name: "orderHash",
                            type: "bytes32"
                        }, {
                            internalType: "uint256",
                            name: "orderNonce",
                            type: "uint256"
                        }, {
                            internalType: "bool",
                            name: "isNonceInvalidated",
                            type: "bool"
                        }],
                        indexed: !1,
                        internalType: "struct ILooksRareProtocol.NonceInvalidationParameters",
                        name: "nonceInvalidationParameters",
                        type: "tuple"
                    }, {
                        indexed: !1,
                        internalType: "address",
                        name: "askUser",
                        type: "address"
                    }, {
                        indexed: !1,
                        internalType: "address",
                        name: "bidUser",
                        type: "address"
                    }, {
                        indexed: !1,
                        internalType: "uint256",
                        name: "strategyId",
                        type: "uint256"
                    }, {
                        indexed: !1,
                        internalType: "address",
                        name: "currency",
                        type: "address"
                    }, {
                        indexed: !1,
                        internalType: "address",
                        name: "collection",
                        type: "address"
                    }, {
                        indexed: !1,
                        internalType: "uint256[]",
                        name: "itemIds",
                        type: "uint256[]"
                    }, {
                        indexed: !1,
                        internalType: "uint256[]",
                        name: "amounts",
                        type: "uint256[]"
                    }, {
                        indexed: !1,
                        internalType: "address[2]",
                        name: "feeRecipients",
                        type: "address[2]"
                    }, {
                        indexed: !1,
                        internalType: "uint256[3]",
                        name: "feeAmounts",
                        type: "uint256[3]"
                    }],
                    name: "TakerAsk",
                    type: "event"
                }, {
                    anonymous: !1,
                    inputs: [{
                        components: [{
                            internalType: "bytes32",
                            name: "orderHash",
                            type: "bytes32"
                        }, {
                            internalType: "uint256",
                            name: "orderNonce",
                            type: "uint256"
                        }, {
                            internalType: "bool",
                            name: "isNonceInvalidated",
                            type: "bool"
                        }],
                        indexed: !1,
                        internalType: "struct ILooksRareProtocol.NonceInvalidationParameters",
                        name: "nonceInvalidationParameters",
                        type: "tuple"
                    }, {
                        indexed: !1,
                        internalType: "address",
                        name: "bidUser",
                        type: "address"
                    }, {
                        indexed: !1,
                        internalType: "address",
                        name: "bidRecipient",
                        type: "address"
                    }, {
                        indexed: !1,
                        internalType: "uint256",
                        name: "strategyId",
                        type: "uint256"
                    }, {
                        indexed: !1,
                        internalType: "address",
                        name: "currency",
                        type: "address"
                    }, {
                        indexed: !1,
                        internalType: "address",
                        name: "collection",
                        type: "address"
                    }, {
                        indexed: !1,
                        internalType: "uint256[]",
                        name: "itemIds",
                        type: "uint256[]"
                    }, {
                        indexed: !1,
                        internalType: "uint256[]",
                        name: "amounts",
                        type: "uint256[]"
                    }, {
                        indexed: !1,
                        internalType: "address[2]",
                        name: "feeRecipients",
                        type: "address[2]"
                    }, {
                        indexed: !1,
                        internalType: "uint256[3]",
                        name: "feeAmounts",
                        type: "uint256[3]"
                    }],
                    name: "TakerBid",
                    type: "event"
                }, {
                    inputs: [],
                    name: "MAGIC_VALUE_ORDER_NONCE_EXECUTED",
                    outputs: [{
                        internalType: "bytes32",
                        name: "",
                        type: "bytes32"
                    }],
                    stateMutability: "view",
                    type: "function"
                }, {
                    inputs: [],
                    name: "WETH",
                    outputs: [{
                        internalType: "address",
                        name: "",
                        type: "address"
                    }],
                    stateMutability: "view",
                    type: "function"
                }, {
                    inputs: [{
                        internalType: "uint16",
                        name: "standardProtocolFeeBp",
                        type: "uint16"
                    }, {
                        internalType: "uint16",
                        name: "minTotalFeeBp",
                        type: "uint16"
                    }, {
                        internalType: "uint16",
                        name: "maxProtocolFeeBp",
                        type: "uint16"
                    }, {
                        internalType: "bytes4",
                        name: "selector",
                        type: "bytes4"
                    }, {
                        internalType: "bool",
                        name: "isMakerBid",
                        type: "bool"
                    }, {
                        internalType: "address",
                        name: "implementation",
                        type: "address"
                    }],
                    name: "addStrategy",
                    outputs: [],
                    stateMutability: "nonpayable",
                    type: "function"
                }, {
                    inputs: [],
                    name: "affiliateController",
                    outputs: [{
                        internalType: "address",
                        name: "",
                        type: "address"
                    }],
                    stateMutability: "view",
                    type: "function"
                }, {
                    inputs: [{
                        internalType: "address",
                        name: "",
                        type: "address"
                    }],
                    name: "affiliateRates",
                    outputs: [{
                        internalType: "uint256",
                        name: "",
                        type: "uint256"
                    }],
                    stateMutability: "view",
                    type: "function"
                }, {
                    inputs: [{
                        internalType: "uint256[]",
                        name: "orderNonces",
                        type: "uint256[]"
                    }],
                    name: "cancelOrderNonces",
                    outputs: [],
                    stateMutability: "nonpayable",
                    type: "function"
                }, {
                    inputs: [],
                    name: "cancelOwnershipTransfer",
                    outputs: [],
                    stateMutability: "nonpayable",
                    type: "function"
                }, {
                    inputs: [{
                        internalType: "uint256[]",
                        name: "subsetNonces",
                        type: "uint256[]"
                    }],
                    name: "cancelSubsetNonces",
                    outputs: [],
                    stateMutability: "nonpayable",
                    type: "function"
                }, {
                    inputs: [],
                    name: "chainId",
                    outputs: [{
                        internalType: "uint256",
                        name: "",
                        type: "uint256"
                    }],
                    stateMutability: "view",
                    type: "function"
                }, {
                    inputs: [],
                    name: "confirmOwnershipRenouncement",
                    outputs: [],
                    stateMutability: "nonpayable",
                    type: "function"
                }, {
                    inputs: [],
                    name: "confirmOwnershipTransfer",
                    outputs: [],
                    stateMutability: "nonpayable",
                    type: "function"
                }, {
                    inputs: [],
                    name: "creatorFeeManager",
                    outputs: [{
                        internalType: "contract ICreatorFeeManager",
                        name: "",
                        type: "address"
                    }],
                    stateMutability: "view",
                    type: "function"
                }, {
                    inputs: [],
                    name: "domainSeparator",
                    outputs: [{
                        internalType: "bytes32",
                        name: "",
                        type: "bytes32"
                    }],
                    stateMutability: "view",
                    type: "function"
                }, {
                    inputs: [{
                        components: [{
                            internalType: "address",
                            name: "recipient",
                            type: "address"
                        }, {
                            internalType: "bytes",
                            name: "additionalParameters",
                            type: "bytes"
                        }],
                        internalType: "struct OrderStructs.Taker[]",
                        name: "takerBids",
                        type: "tuple[]"
                    }, {
                        components: [{
                            internalType: "enum QuoteType",
                            name: "quoteType",
                            type: "uint8"
                        }, {
                            internalType: "uint256",
                            name: "globalNonce",
                            type: "uint256"
                        }, {
                            internalType: "uint256",
                            name: "subsetNonce",
                            type: "uint256"
                        }, {
                            internalType: "uint256",
                            name: "orderNonce",
                            type: "uint256"
                        }, {
                            internalType: "uint256",
                            name: "strategyId",
                            type: "uint256"
                        }, {
                            internalType: "enum CollectionType",
                            name: "collectionType",
                            type: "uint8"
                        }, {
                            internalType: "address",
                            name: "collection",
                            type: "address"
                        }, {
                            internalType: "address",
                            name: "currency",
                            type: "address"
                        }, {
                            internalType: "address",
                            name: "signer",
                            type: "address"
                        }, {
                            internalType: "uint256",
                            name: "startTime",
                            type: "uint256"
                        }, {
                            internalType: "uint256",
                            name: "endTime",
                            type: "uint256"
                        }, {
                            internalType: "uint256",
                            name: "price",
                            type: "uint256"
                        }, {
                            internalType: "uint256[]",
                            name: "itemIds",
                            type: "uint256[]"
                        }, {
                            internalType: "uint256[]",
                            name: "amounts",
                            type: "uint256[]"
                        }, {
                            internalType: "bytes",
                            name: "additionalParameters",
                            type: "bytes"
                        }],
                        internalType: "struct OrderStructs.Maker[]",
                        name: "makerAsks",
                        type: "tuple[]"
                    }, {
                        internalType: "bytes[]",
                        name: "makerSignatures",
                        type: "bytes[]"
                    }, {
                        components: [{
                            internalType: "bytes32",
                            name: "root",
                            type: "bytes32"
                        }, {
                            components: [{
                                internalType: "bytes32",
                                name: "value",
                                type: "bytes32"
                            }, {
                                internalType: "enum OrderStructs.MerkleTreeNodePosition",
                                name: "position",
                                type: "uint8"
                            }],
                            internalType: "struct OrderStructs.MerkleTreeNode[]",
                            name: "proof",
                            type: "tuple[]"
                        }],
                        internalType: "struct OrderStructs.MerkleTree[]",
                        name: "merkleTrees",
                        type: "tuple[]"
                    }, {
                        internalType: "address",
                        name: "affiliate",
                        type: "address"
                    }, {
                        internalType: "bool",
                        name: "isAtomic",
                        type: "bool"
                    }],
                    name: "executeMultipleTakerBids",
                    outputs: [],
                    stateMutability: "payable",
                    type: "function"
                }, {
                    inputs: [{
                        components: [{
                            internalType: "address",
                            name: "recipient",
                            type: "address"
                        }, {
                            internalType: "bytes",
                            name: "additionalParameters",
                            type: "bytes"
                        }],
                        internalType: "struct OrderStructs.Taker",
                        name: "takerAsk",
                        type: "tuple"
                    }, {
                        components: [{
                            internalType: "enum QuoteType",
                            name: "quoteType",
                            type: "uint8"
                        }, {
                            internalType: "uint256",
                            name: "globalNonce",
                            type: "uint256"
                        }, {
                            internalType: "uint256",
                            name: "subsetNonce",
                            type: "uint256"
                        }, {
                            internalType: "uint256",
                            name: "orderNonce",
                            type: "uint256"
                        }, {
                            internalType: "uint256",
                            name: "strategyId",
                            type: "uint256"
                        }, {
                            internalType: "enum CollectionType",
                            name: "collectionType",
                            type: "uint8"
                        }, {
                            internalType: "address",
                            name: "collection",
                            type: "address"
                        }, {
                            internalType: "address",
                            name: "currency",
                            type: "address"
                        }, {
                            internalType: "address",
                            name: "signer",
                            type: "address"
                        }, {
                            internalType: "uint256",
                            name: "startTime",
                            type: "uint256"
                        }, {
                            internalType: "uint256",
                            name: "endTime",
                            type: "uint256"
                        }, {
                            internalType: "uint256",
                            name: "price",
                            type: "uint256"
                        }, {
                            internalType: "uint256[]",
                            name: "itemIds",
                            type: "uint256[]"
                        }, {
                            internalType: "uint256[]",
                            name: "amounts",
                            type: "uint256[]"
                        }, {
                            internalType: "bytes",
                            name: "additionalParameters",
                            type: "bytes"
                        }],
                        internalType: "struct OrderStructs.Maker",
                        name: "makerBid",
                        type: "tuple"
                    }, {
                        internalType: "bytes",
                        name: "makerSignature",
                        type: "bytes"
                    }, {
                        components: [{
                            internalType: "bytes32",
                            name: "root",
                            type: "bytes32"
                        }, {
                            components: [{
                                internalType: "bytes32",
                                name: "value",
                                type: "bytes32"
                            }, {
                                internalType: "enum OrderStructs.MerkleTreeNodePosition",
                                name: "position",
                                type: "uint8"
                            }],
                            internalType: "struct OrderStructs.MerkleTreeNode[]",
                            name: "proof",
                            type: "tuple[]"
                        }],
                        internalType: "struct OrderStructs.MerkleTree",
                        name: "merkleTree",
                        type: "tuple"
                    }, {
                        internalType: "address",
                        name: "affiliate",
                        type: "address"
                    }],
                    name: "executeTakerAsk",
                    outputs: [],
                    stateMutability: "nonpayable",
                    type: "function"
                }, {
                    inputs: [{
                        components: [{
                            internalType: "address",
                            name: "recipient",
                            type: "address"
                        }, {
                            internalType: "bytes",
                            name: "additionalParameters",
                            type: "bytes"
                        }],
                        internalType: "struct OrderStructs.Taker",
                        name: "takerBid",
                        type: "tuple"
                    }, {
                        components: [{
                            internalType: "enum QuoteType",
                            name: "quoteType",
                            type: "uint8"
                        }, {
                            internalType: "uint256",
                            name: "globalNonce",
                            type: "uint256"
                        }, {
                            internalType: "uint256",
                            name: "subsetNonce",
                            type: "uint256"
                        }, {
                            internalType: "uint256",
                            name: "orderNonce",
                            type: "uint256"
                        }, {
                            internalType: "uint256",
                            name: "strategyId",
                            type: "uint256"
                        }, {
                            internalType: "enum CollectionType",
                            name: "collectionType",
                            type: "uint8"
                        }, {
                            internalType: "address",
                            name: "collection",
                            type: "address"
                        }, {
                            internalType: "address",
                            name: "currency",
                            type: "address"
                        }, {
                            internalType: "address",
                            name: "signer",
                            type: "address"
                        }, {
                            internalType: "uint256",
                            name: "startTime",
                            type: "uint256"
                        }, {
                            internalType: "uint256",
                            name: "endTime",
                            type: "uint256"
                        }, {
                            internalType: "uint256",
                            name: "price",
                            type: "uint256"
                        }, {
                            internalType: "uint256[]",
                            name: "itemIds",
                            type: "uint256[]"
                        }, {
                            internalType: "uint256[]",
                            name: "amounts",
                            type: "uint256[]"
                        }, {
                            internalType: "bytes",
                            name: "additionalParameters",
                            type: "bytes"
                        }],
                        internalType: "struct OrderStructs.Maker",
                        name: "makerAsk",
                        type: "tuple"
                    }, {
                        internalType: "bytes",
                        name: "makerSignature",
                        type: "bytes"
                    }, {
                        components: [{
                            internalType: "bytes32",
                            name: "root",
                            type: "bytes32"
                        }, {
                            components: [{
                                internalType: "bytes32",
                                name: "value",
                                type: "bytes32"
                            }, {
                                internalType: "enum OrderStructs.MerkleTreeNodePosition",
                                name: "position",
                                type: "uint8"
                            }],
                            internalType: "struct OrderStructs.MerkleTreeNode[]",
                            name: "proof",
                            type: "tuple[]"
                        }],
                        internalType: "struct OrderStructs.MerkleTree",
                        name: "merkleTree",
                        type: "tuple"
                    }, {
                        internalType: "address",
                        name: "affiliate",
                        type: "address"
                    }],
                    name: "executeTakerBid",
                    outputs: [],
                    stateMutability: "payable",
                    type: "function"
                }, {
                    inputs: [{
                        internalType: "bytes32",
                        name: "root",
                        type: "bytes32"
                    }, {
                        internalType: "uint256",
                        name: "proofLength",
                        type: "uint256"
                    }],
                    name: "hashBatchOrder",
                    outputs: [{
                        internalType: "bytes32",
                        name: "batchOrderHash",
                        type: "bytes32"
                    }],
                    stateMutability: "pure",
                    type: "function"
                }, {
                    inputs: [{
                        internalType: "bool",
                        name: "bid",
                        type: "bool"
                    }, {
                        internalType: "bool",
                        name: "ask",
                        type: "bool"
                    }],
                    name: "incrementBidAskNonces",
                    outputs: [],
                    stateMutability: "nonpayable",
                    type: "function"
                }, {
                    inputs: [],
                    name: "initiateOwnershipRenouncement",
                    outputs: [],
                    stateMutability: "nonpayable",
                    type: "function"
                }, {
                    inputs: [{
                        internalType: "address",
                        name: "newPotentialOwner",
                        type: "address"
                    }],
                    name: "initiateOwnershipTransfer",
                    outputs: [],
                    stateMutability: "nonpayable",
                    type: "function"
                }, {
                    inputs: [],
                    name: "isAffiliateProgramActive",
                    outputs: [{
                        internalType: "bool",
                        name: "",
                        type: "bool"
                    }],
                    stateMutability: "view",
                    type: "function"
                }, {
                    inputs: [{
                        internalType: "address",
                        name: "",
                        type: "address"
                    }],
                    name: "isCurrencyAllowed",
                    outputs: [{
                        internalType: "bool",
                        name: "",
                        type: "bool"
                    }],
                    stateMutability: "view",
                    type: "function"
                }, {
                    inputs: [],
                    name: "maxCreatorFeeBp",
                    outputs: [{
                        internalType: "uint16",
                        name: "",
                        type: "uint16"
                    }],
                    stateMutability: "view",
                    type: "function"
                }, {
                    inputs: [],
                    name: "owner",
                    outputs: [{
                        internalType: "address",
                        name: "",
                        type: "address"
                    }],
                    stateMutability: "view",
                    type: "function"
                }, {
                    inputs: [],
                    name: "ownershipStatus",
                    outputs: [{
                        internalType: "enum IOwnableTwoSteps.Status",
                        name: "",
                        type: "uint8"
                    }],
                    stateMutability: "view",
                    type: "function"
                }, {
                    inputs: [],
                    name: "potentialOwner",
                    outputs: [{
                        internalType: "address",
                        name: "",
                        type: "address"
                    }],
                    stateMutability: "view",
                    type: "function"
                }, {
                    inputs: [],
                    name: "protocolFeeRecipient",
                    outputs: [{
                        internalType: "address",
                        name: "",
                        type: "address"
                    }],
                    stateMutability: "view",
                    type: "function"
                }, {
                    inputs: [{
                        components: [{
                            internalType: "address",
                            name: "recipient",
                            type: "address"
                        }, {
                            internalType: "bytes",
                            name: "additionalParameters",
                            type: "bytes"
                        }],
                        internalType: "struct OrderStructs.Taker",
                        name: "takerBid",
                        type: "tuple"
                    }, {
                        components: [{
                            internalType: "enum QuoteType",
                            name: "quoteType",
                            type: "uint8"
                        }, {
                            internalType: "uint256",
                            name: "globalNonce",
                            type: "uint256"
                        }, {
                            internalType: "uint256",
                            name: "subsetNonce",
                            type: "uint256"
                        }, {
                            internalType: "uint256",
                            name: "orderNonce",
                            type: "uint256"
                        }, {
                            internalType: "uint256",
                            name: "strategyId",
                            type: "uint256"
                        }, {
                            internalType: "enum CollectionType",
                            name: "collectionType",
                            type: "uint8"
                        }, {
                            internalType: "address",
                            name: "collection",
                            type: "address"
                        }, {
                            internalType: "address",
                            name: "currency",
                            type: "address"
                        }, {
                            internalType: "address",
                            name: "signer",
                            type: "address"
                        }, {
                            internalType: "uint256",
                            name: "startTime",
                            type: "uint256"
                        }, {
                            internalType: "uint256",
                            name: "endTime",
                            type: "uint256"
                        }, {
                            internalType: "uint256",
                            name: "price",
                            type: "uint256"
                        }, {
                            internalType: "uint256[]",
                            name: "itemIds",
                            type: "uint256[]"
                        }, {
                            internalType: "uint256[]",
                            name: "amounts",
                            type: "uint256[]"
                        }, {
                            internalType: "bytes",
                            name: "additionalParameters",
                            type: "bytes"
                        }],
                        internalType: "struct OrderStructs.Maker",
                        name: "makerAsk",
                        type: "tuple"
                    }, {
                        internalType: "address",
                        name: "sender",
                        type: "address"
                    }, {
                        internalType: "bytes32",
                        name: "orderHash",
                        type: "bytes32"
                    }],
                    name: "restrictedExecuteTakerBid",
                    outputs: [{
                        internalType: "uint256",
                        name: "protocolFeeAmount",
                        type: "uint256"
                    }],
                    stateMutability: "nonpayable",
                    type: "function"
                }, {
                    inputs: [{
                        internalType: "uint256",
                        name: "",
                        type: "uint256"
                    }],
                    name: "strategyInfo",
                    outputs: [{
                        internalType: "bool",
                        name: "isActive",
                        type: "bool"
                    }, {
                        internalType: "uint16",
                        name: "standardProtocolFeeBp",
                        type: "uint16"
                    }, {
                        internalType: "uint16",
                        name: "minTotalFeeBp",
                        type: "uint16"
                    }, {
                        internalType: "uint16",
                        name: "maxProtocolFeeBp",
                        type: "uint16"
                    }, {
                        internalType: "bytes4",
                        name: "selector",
                        type: "bytes4"
                    }, {
                        internalType: "bool",
                        name: "isMakerBid",
                        type: "bool"
                    }, {
                        internalType: "address",
                        name: "implementation",
                        type: "address"
                    }],
                    stateMutability: "view",
                    type: "function"
                }, {
                    inputs: [],
                    name: "transferManager",
                    outputs: [{
                        internalType: "contract TransferManager",
                        name: "",
                        type: "address"
                    }],
                    stateMutability: "view",
                    type: "function"
                }, {
                    inputs: [{
                        internalType: "address",
                        name: "newAffiliateController",
                        type: "address"
                    }],
                    name: "updateAffiliateController",
                    outputs: [],
                    stateMutability: "nonpayable",
                    type: "function"
                }, {
                    inputs: [{
                        internalType: "bool",
                        name: "isActive",
                        type: "bool"
                    }],
                    name: "updateAffiliateProgramStatus",
                    outputs: [],
                    stateMutability: "nonpayable",
                    type: "function"
                }, {
                    inputs: [{
                        internalType: "address",
                        name: "affiliate",
                        type: "address"
                    }, {
                        internalType: "uint256",
                        name: "bp",
                        type: "uint256"
                    }],
                    name: "updateAffiliateRate",
                    outputs: [],
                    stateMutability: "nonpayable",
                    type: "function"
                }, {
                    inputs: [{
                        internalType: "address",
                        name: "newCreatorFeeManager",
                        type: "address"
                    }],
                    name: "updateCreatorFeeManager",
                    outputs: [],
                    stateMutability: "nonpayable",
                    type: "function"
                }, {
                    inputs: [{
                        internalType: "address",
                        name: "currency",
                        type: "address"
                    }, {
                        internalType: "bool",
                        name: "isAllowed",
                        type: "bool"
                    }],
                    name: "updateCurrencyStatus",
                    outputs: [],
                    stateMutability: "nonpayable",
                    type: "function"
                }, {
                    inputs: [],
                    name: "updateDomainSeparator",
                    outputs: [],
                    stateMutability: "nonpayable",
                    type: "function"
                }, {
                    inputs: [{
                        internalType: "uint256",
                        name: "newGasLimitETHTransfer",
                        type: "uint256"
                    }],
                    name: "updateETHGasLimitForTransfer",
                    outputs: [],
                    stateMutability: "nonpayable",
                    type: "function"
                }, {
                    inputs: [{
                        internalType: "uint16",
                        name: "newMaxCreatorFeeBp",
                        type: "uint16"
                    }],
                    name: "updateMaxCreatorFeeBp",
                    outputs: [],
                    stateMutability: "nonpayable",
                    type: "function"
                }, {
                    inputs: [{
                        internalType: "address",
                        name: "newProtocolFeeRecipient",
                        type: "address"
                    }],
                    name: "updateProtocolFeeRecipient",
                    outputs: [],
                    stateMutability: "nonpayable",
                    type: "function"
                }, {
                    inputs: [{
                        internalType: "uint256",
                        name: "strategyId",
                        type: "uint256"
                    }, {
                        internalType: "bool",
                        name: "isActive",
                        type: "bool"
                    }, {
                        internalType: "uint16",
                        name: "newStandardProtocolFee",
                        type: "uint16"
                    }, {
                        internalType: "uint16",
                        name: "newMinTotalFee",
                        type: "uint16"
                    }],
                    name: "updateStrategy",
                    outputs: [],
                    stateMutability: "nonpayable",
                    type: "function"
                }, {
                    inputs: [{
                        internalType: "address",
                        name: "",
                        type: "address"
                    }],
                    name: "userBidAskNonces",
                    outputs: [{
                        internalType: "uint256",
                        name: "bidNonce",
                        type: "uint256"
                    }, {
                        internalType: "uint256",
                        name: "askNonce",
                        type: "uint256"
                    }],
                    stateMutability: "view",
                    type: "function"
                }, {
                    inputs: [{
                        internalType: "address",
                        name: "",
                        type: "address"
                    }, {
                        internalType: "uint256",
                        name: "",
                        type: "uint256"
                    }],
                    name: "userOrderNonce",
                    outputs: [{
                        internalType: "bytes32",
                        name: "",
                        type: "bytes32"
                    }],
                    stateMutability: "view",
                    type: "function"
                }, {
                    inputs: [{
                        internalType: "address",
                        name: "",
                        type: "address"
                    }, {
                        internalType: "uint256",
                        name: "",
                        type: "uint256"
                    }],
                    name: "userSubsetNonce",
                    outputs: [{
                        internalType: "bool",
                        name: "",
                        type: "bool"
                    }],
                    stateMutability: "view",
                    type: "function"
                }]), L.ERC721_ORDER = 0,
                function(e) {
                    function f(f) {
                        return e.call(this, t.IY.NFT20, f) || this
                    }
                    w(f, e);
                    var n = f.prototype;
                    return n.encode = function(e, n) {
                        for (var r, i = I(this.orders); !(r = i()).done;) {
                            var a = r.value,
                                o = f.INTERFACE.encodeFunctionData("ethForNft", [a.tokenAddress, a.tokenIds, a.tokenAmounts, a.recipient, a.fee, a.isV3]);
                            e.addCommand(t.wI.NFT20, [a.value, o], n.allowRevert)
                        }
                    }, n.getBuyItems = function() {
                        for (var e, f = [], n = I(this.orders); !(e = n()).done;)
                            for (var r, i = e.value, a = I(i.tokenIds); !(r = a()).done;) f.push({
                                tokenAddress: i.tokenAddress,
                                tokenId: r.value,
                                tokenType: t.iv.ERC721
                            });
                        return f
                    }, n.getTotalPrice = function() {
                        for (var e, t = a.BigNumber.from(0), f = I(this.orders); !(e = f()).done;) t = t.add(e.value.value);
                        return t
                    }, f
                }(T).INTERFACE = new o.Interface([{
                    anonymous: !1,
                    inputs: [{
                        indexed: !0,
                        internalType: "address",
                        name: "previousOwner",
                        type: "address"
                    }, {
                        indexed: !0,
                        internalType: "address",
                        name: "newOwner",
                        type: "address"
                    }],
                    name: "OwnershipTransferred",
                    type: "event"
                }, {
                    inputs: [],
                    name: "ETH",
                    outputs: [{
                        internalType: "address",
                        name: "",
                        type: "address"
                    }],
                    stateMutability: "view",
                    type: "function"
                }, {
                    inputs: [],
                    name: "NFT20",
                    outputs: [{
                        internalType: "contract INFT20Factory",
                        name: "",
                        type: "address"
                    }],
                    stateMutability: "view",
                    type: "function"
                }, {
                    inputs: [],
                    name: "UNIV2",
                    outputs: [{
                        internalType: "address",
                        name: "",
                        type: "address"
                    }],
                    stateMutability: "view",
                    type: "function"
                }, {
                    inputs: [],
                    name: "UNIV3",
                    outputs: [{
                        internalType: "address",
                        name: "",
                        type: "address"
                    }],
                    stateMutability: "view",
                    type: "function"
                }, {
                    inputs: [],
                    name: "WETH",
                    outputs: [{
                        internalType: "address",
                        name: "",
                        type: "address"
                    }],
                    stateMutability: "view",
                    type: "function"
                }, {
                    inputs: [{
                        internalType: "address",
                        name: "_nft",
                        type: "address"
                    }, {
                        internalType: "uint256[]",
                        name: "_toIds",
                        type: "uint256[]"
                    }, {
                        internalType: "uint256[]",
                        name: "_toAmounts",
                        type: "uint256[]"
                    }, {
                        internalType: "address",
                        name: "_receipient",
                        type: "address"
                    }, {
                        internalType: "uint24",
                        name: "_fee",
                        type: "uint24"
                    }, {
                        internalType: "bool",
                        name: "isV3",
                        type: "bool"
                    }],
                    name: "ethForNft",
                    outputs: [],
                    stateMutability: "payable",
                    type: "function"
                }, {
                    inputs: [{
                        internalType: "address",
                        name: "_nft",
                        type: "address"
                    }, {
                        internalType: "uint256[]",
                        name: "_ids",
                        type: "uint256[]"
                    }, {
                        internalType: "uint256[]",
                        name: "_amounts",
                        type: "uint256[]"
                    }, {
                        internalType: "bool",
                        name: "isErc721",
                        type: "bool"
                    }, {
                        internalType: "uint24",
                        name: "_fee",
                        type: "uint24"
                    }, {
                        internalType: "bool",
                        name: "isV3",
                        type: "bool"
                    }],
                    name: "nftForEth",
                    outputs: [],
                    stateMutability: "nonpayable",
                    type: "function"
                }, {
                    inputs: [],
                    name: "owner",
                    outputs: [{
                        internalType: "address",
                        name: "",
                        type: "address"
                    }],
                    stateMutability: "view",
                    type: "function"
                }, {
                    inputs: [{
                        internalType: "address",
                        name: "tokenAddress",
                        type: "address"
                    }, {
                        internalType: "uint256",
                        name: "tokenAmount",
                        type: "uint256"
                    }, {
                        internalType: "address",
                        name: "sendTo",
                        type: "address"
                    }],
                    name: "recoverERC20",
                    outputs: [],
                    stateMutability: "nonpayable",
                    type: "function"
                }, {
                    inputs: [],
                    name: "renounceOwnership",
                    outputs: [],
                    stateMutability: "nonpayable",
                    type: "function"
                }, {
                    inputs: [{
                        internalType: "address",
                        name: "_registry",
                        type: "address"
                    }],
                    name: "setNFT20",
                    outputs: [],
                    stateMutability: "nonpayable",
                    type: "function"
                }, {
                    inputs: [{
                        internalType: "address",
                        name: "newOwner",
                        type: "address"
                    }],
                    name: "transferOwnership",
                    outputs: [],
                    stateMutability: "nonpayable",
                    type: "function"
                }, {
                    inputs: [],
                    name: "withdrawEth",
                    outputs: [],
                    stateMutability: "payable",
                    type: "function"
                }, {
                    stateMutability: "payable",
                    type: "receive"
                }]),
                function(e) {
                    function f(f) {
                        return e.call(this, t.IY.NFTX, f) || this
                    }
                    w(f, e);
                    var n = f.prototype;
                    return n.encode = function(e, n) {
                        for (var r, i = I(this.orders); !(r = i()).done;) {
                            var a = r.value,
                                o = f.INTERFACE.encodeFunctionData("buyAndRedeem", [a.vaultId, a.tokenIds.length, a.tokenIds, a.swapCalldata, a.recipient]);
                            e.addCommand(t.wI.NFTX, [a.value, o], n.allowRevert)
                        }
                    }, n.getBuyItems = function() {
                        for (var e, f = [], n = I(this.orders); !(e = n()).done;)
                            for (var r, i = e.value, a = I(i.tokenIds); !(r = a()).done;) f.push({
                                tokenAddress: i.tokenAddress,
                                tokenId: r.value,
                                tokenType: t.iv.ERC721
                            });
                        return f
                    }, n.getTotalPrice = function() {
                        for (var e, t = a.BigNumber.from(0), f = I(this.orders); !(e = f()).done;) t = t.add(e.value.value);
                        return t
                    }, f
                }(T).INTERFACE = new o.Interface([{
                    inputs: [{
                        internalType: "address",
                        name: "_nftxFactory",
                        type: "address"
                    }, {
                        internalType: "address",
                        name: "_WETH",
                        type: "address"
                    }, {
                        internalType: "address payable",
                        name: "_swapTarget",
                        type: "address"
                    }, {
                        internalType: "uint256",
                        name: "_dustThreshold",
                        type: "uint256"
                    }],
                    stateMutability: "nonpayable",
                    type: "constructor"
                }, {
                    anonymous: !1,
                    inputs: [{
                        indexed: !1,
                        internalType: "uint256",
                        name: "count",
                        type: "uint256"
                    }, {
                        indexed: !1,
                        internalType: "uint256",
                        name: "ethSpent",
                        type: "uint256"
                    }, {
                        indexed: !1,
                        internalType: "address",
                        name: "to",
                        type: "address"
                    }],
                    name: "Buy",
                    type: "event"
                }, {
                    anonymous: !1,
                    inputs: [{
                        indexed: !1,
                        internalType: "uint256",
                        name: "ethAmount",
                        type: "uint256"
                    }, {
                        indexed: !1,
                        internalType: "uint256",
                        name: "vTokenAmount",
                        type: "uint256"
                    }, {
                        indexed: !1,
                        internalType: "address",
                        name: "to",
                        type: "address"
                    }],
                    name: "DustReturned",
                    type: "event"
                }, {
                    anonymous: !1,
                    inputs: [{
                        indexed: !0,
                        internalType: "address",
                        name: "previousOwner",
                        type: "address"
                    }, {
                        indexed: !0,
                        internalType: "address",
                        name: "newOwner",
                        type: "address"
                    }],
                    name: "OwnershipTransferred",
                    type: "event"
                }, {
                    anonymous: !1,
                    inputs: [{
                        indexed: !1,
                        internalType: "uint256",
                        name: "count",
                        type: "uint256"
                    }, {
                        indexed: !1,
                        internalType: "uint256",
                        name: "ethReceived",
                        type: "uint256"
                    }, {
                        indexed: !1,
                        internalType: "address",
                        name: "to",
                        type: "address"
                    }],
                    name: "Sell",
                    type: "event"
                }, {
                    anonymous: !1,
                    inputs: [{
                        indexed: !1,
                        internalType: "uint256",
                        name: "count",
                        type: "uint256"
                    }, {
                        indexed: !1,
                        internalType: "uint256",
                        name: "ethSpent",
                        type: "uint256"
                    }, {
                        indexed: !1,
                        internalType: "address",
                        name: "to",
                        type: "address"
                    }],
                    name: "Swap",
                    type: "event"
                }, {
                    inputs: [],
                    name: "WETH",
                    outputs: [{
                        internalType: "contract IWETH",
                        name: "",
                        type: "address"
                    }],
                    stateMutability: "view",
                    type: "function"
                }, {
                    inputs: [{
                        internalType: "uint256",
                        name: "vaultId",
                        type: "uint256"
                    }, {
                        internalType: "uint256",
                        name: "amount",
                        type: "uint256"
                    }, {
                        internalType: "uint256[]",
                        name: "specificIds",
                        type: "uint256[]"
                    }, {
                        internalType: "bytes",
                        name: "swapCallData",
                        type: "bytes"
                    }, {
                        internalType: "address payable",
                        name: "to",
                        type: "address"
                    }],
                    name: "buyAndRedeem",
                    outputs: [],
                    stateMutability: "payable",
                    type: "function"
                }, {
                    inputs: [{
                        internalType: "uint256",
                        name: "vaultId",
                        type: "uint256"
                    }, {
                        internalType: "uint256[]",
                        name: "idsIn",
                        type: "uint256[]"
                    }, {
                        internalType: "uint256[]",
                        name: "amounts",
                        type: "uint256[]"
                    }, {
                        internalType: "uint256[]",
                        name: "specificIds",
                        type: "uint256[]"
                    }, {
                        internalType: "bytes",
                        name: "swapCallData",
                        type: "bytes"
                    }, {
                        internalType: "address payable",
                        name: "to",
                        type: "address"
                    }],
                    name: "buyAndSwap1155",
                    outputs: [],
                    stateMutability: "payable",
                    type: "function"
                }, {
                    inputs: [{
                        internalType: "uint256",
                        name: "vaultId",
                        type: "uint256"
                    }, {
                        internalType: "uint256[]",
                        name: "idsIn",
                        type: "uint256[]"
                    }, {
                        internalType: "uint256[]",
                        name: "specificIds",
                        type: "uint256[]"
                    }, {
                        internalType: "bytes",
                        name: "swapCallData",
                        type: "bytes"
                    }, {
                        internalType: "address payable",
                        name: "to",
                        type: "address"
                    }],
                    name: "buyAndSwap721",
                    outputs: [],
                    stateMutability: "payable",
                    type: "function"
                }, {
                    inputs: [],
                    name: "dustThreshold",
                    outputs: [{
                        internalType: "uint256",
                        name: "",
                        type: "uint256"
                    }],
                    stateMutability: "view",
                    type: "function"
                }, {
                    inputs: [],
                    name: "feeDistributor",
                    outputs: [{
                        internalType: "address",
                        name: "",
                        type: "address"
                    }],
                    stateMutability: "view",
                    type: "function"
                }, {
                    inputs: [{
                        internalType: "uint256",
                        name: "vaultId",
                        type: "uint256"
                    }, {
                        internalType: "uint256[]",
                        name: "ids",
                        type: "uint256[]"
                    }, {
                        internalType: "uint256[]",
                        name: "amounts",
                        type: "uint256[]"
                    }, {
                        internalType: "bytes",
                        name: "swapCallData",
                        type: "bytes"
                    }, {
                        internalType: "address payable",
                        name: "to",
                        type: "address"
                    }],
                    name: "mintAndSell1155",
                    outputs: [],
                    stateMutability: "nonpayable",
                    type: "function"
                }, {
                    inputs: [{
                        internalType: "uint256",
                        name: "vaultId",
                        type: "uint256"
                    }, {
                        internalType: "uint256[]",
                        name: "ids",
                        type: "uint256[]"
                    }, {
                        internalType: "bytes",
                        name: "swapCallData",
                        type: "bytes"
                    }, {
                        internalType: "address payable",
                        name: "to",
                        type: "address"
                    }],
                    name: "mintAndSell721",
                    outputs: [],
                    stateMutability: "nonpayable",
                    type: "function"
                }, {
                    inputs: [],
                    name: "nftxFactory",
                    outputs: [{
                        internalType: "contract INFTXVaultFactory",
                        name: "",
                        type: "address"
                    }],
                    stateMutability: "view",
                    type: "function"
                }, {
                    inputs: [{
                        internalType: "uint256",
                        name: "",
                        type: "uint256"
                    }],
                    name: "nftxVaultAddresses",
                    outputs: [{
                        internalType: "address",
                        name: "",
                        type: "address"
                    }],
                    stateMutability: "view",
                    type: "function"
                }, {
                    inputs: [{
                        internalType: "address",
                        name: "",
                        type: "address"
                    }, {
                        internalType: "address",
                        name: "",
                        type: "address"
                    }, {
                        internalType: "uint256[]",
                        name: "",
                        type: "uint256[]"
                    }, {
                        internalType: "uint256[]",
                        name: "",
                        type: "uint256[]"
                    }, {
                        internalType: "bytes",
                        name: "",
                        type: "bytes"
                    }],
                    name: "onERC1155BatchReceived",
                    outputs: [{
                        internalType: "bytes4",
                        name: "",
                        type: "bytes4"
                    }],
                    stateMutability: "nonpayable",
                    type: "function"
                }, {
                    inputs: [{
                        internalType: "address",
                        name: "",
                        type: "address"
                    }, {
                        internalType: "address",
                        name: "",
                        type: "address"
                    }, {
                        internalType: "uint256",
                        name: "",
                        type: "uint256"
                    }, {
                        internalType: "uint256",
                        name: "",
                        type: "uint256"
                    }, {
                        internalType: "bytes",
                        name: "",
                        type: "bytes"
                    }],
                    name: "onERC1155Received",
                    outputs: [{
                        internalType: "bytes4",
                        name: "",
                        type: "bytes4"
                    }],
                    stateMutability: "nonpayable",
                    type: "function"
                }, {
                    inputs: [{
                        internalType: "address",
                        name: "",
                        type: "address"
                    }, {
                        internalType: "address",
                        name: "",
                        type: "address"
                    }, {
                        internalType: "uint256",
                        name: "",
                        type: "uint256"
                    }, {
                        internalType: "bytes",
                        name: "",
                        type: "bytes"
                    }],
                    name: "onERC721Received",
                    outputs: [{
                        internalType: "bytes4",
                        name: "",
                        type: "bytes4"
                    }],
                    stateMutability: "nonpayable",
                    type: "function"
                }, {
                    inputs: [],
                    name: "owner",
                    outputs: [{
                        internalType: "address",
                        name: "",
                        type: "address"
                    }],
                    stateMutability: "view",
                    type: "function"
                }, {
                    inputs: [{
                        internalType: "bool",
                        name: "_paused",
                        type: "bool"
                    }],
                    name: "pause",
                    outputs: [],
                    stateMutability: "nonpayable",
                    type: "function"
                }, {
                    inputs: [],
                    name: "paused",
                    outputs: [{
                        internalType: "bool",
                        name: "",
                        type: "bool"
                    }],
                    stateMutability: "view",
                    type: "function"
                }, {
                    inputs: [],
                    name: "renounceOwnership",
                    outputs: [],
                    stateMutability: "nonpayable",
                    type: "function"
                }, {
                    inputs: [{
                        internalType: "address",
                        name: "token",
                        type: "address"
                    }],
                    name: "rescue",
                    outputs: [],
                    stateMutability: "nonpayable",
                    type: "function"
                }, {
                    inputs: [{
                        internalType: "uint256",
                        name: "_dustThreshold",
                        type: "uint256"
                    }],
                    name: "setDustThreshold",
                    outputs: [],
                    stateMutability: "nonpayable",
                    type: "function"
                }, {
                    inputs: [{
                        internalType: "bytes4",
                        name: "interfaceId",
                        type: "bytes4"
                    }],
                    name: "supportsInterface",
                    outputs: [{
                        internalType: "bool",
                        name: "",
                        type: "bool"
                    }],
                    stateMutability: "view",
                    type: "function"
                }, {
                    inputs: [{
                        internalType: "address",
                        name: "newOwner",
                        type: "address"
                    }],
                    name: "transferOwnership",
                    outputs: [],
                    stateMutability: "nonpayable",
                    type: "function"
                }, {
                    stateMutability: "payable",
                    type: "receive"
                }]);
            var V = function(e) {
                function f(f) {
                    return e.call(this, t.IY.Seaport, f) || this
                }
                w(f, e);
                var n = f.prototype;
                return n.encode = function(e, t) {
                    for (var n, r = I(this.orders); !(n = r()).done;) {
                        for (var i, a = n.value, o = [], s = a.items.map(function(e, t) {
                                return [{
                                    orderIndex: t,
                                    itemIndex: 0
                                }]
                            }), u = this.getConsiderationFulfillments(a.items), d = I(a.items); !(i = d()).done;) {
                            var c = this.getAdvancedOrderParams(i.value);
                            o.push(c.advancedOrder)
                        }
                        if (l = 1 == o.length ? f.INTERFACE.encodeFunctionData("fulfillAdvancedOrder", [o[0],
                                [], f.OPENSEA_CONDUIT_KEY, a.recipient
                            ]) : f.INTERFACE.encodeFunctionData("fulfillAvailableAdvancedOrders", [o, [], s, u, f.OPENSEA_CONDUIT_KEY, a.recipient, 100]), a.inputTokenProcessing)
                            for (var l, p, y = I(a.inputTokenProcessing); !(p = y()).done;) {
                                var b = p.value;
                                U(e, {
                                    approval: b.protocolApproval ? {
                                        token: b.token,
                                        protocol: a.protocolAddress
                                    } : void 0,
                                    permit2Permit: b.permit2Permit,
                                    permit2TransferFrom: b.permit2TransferFrom ? {
                                        token: b.token,
                                        amount: this.getTotalOrderPrice(a, b.token).toString()
                                    } : void 0
                                })
                            }
                        e.addCommand(this.commandMap(a.protocolAddress), [this.getTotalOrderPrice(a, F).toString(), l], t.allowRevert)
                    }
                }, n.getBuyItems = function() {
                    for (var e, f = [], n = I(this.orders); !(e = n()).done;)
                        for (var r, i = I(e.value.items); !(r = i()).done;)
                            for (var a, o = I(r.value.parameters.offer); !(a = o()).done;) {
                                var s = a.value;
                                f.push({
                                    tokenAddress: s.token,
                                    tokenId: s.identifierOrCriteria,
                                    tokenType: t.iv.ERC721
                                })
                            }
                    return f
                }, n.getInputTokens = function() {
                    for (var e, t = new Set, f = I(this.orders); !(e = f()).done;)
                        for (var n, r = I(e.value.items); !(n = r()).done;)
                            for (var i, a = I(n.value.parameters.consideration); !(i = a()).done;) {
                                var o = i.value.token.toLowerCase();
                                t.add(o)
                            }
                    return t
                }, n.getTotalOrderPrice = function(e, t) {
                    void 0 === t && (t = F);
                    for (var f, n = a.BigNumber.from(0), r = I(e.items); !(f = r()).done;) n = n.add(this.calculateValue(f.value.parameters.consideration, t));
                    return n
                }, n.getTotalPrice = function(e) {
                    void 0 === e && (e = F);
                    for (var t, f = a.BigNumber.from(0), n = I(this.orders); !(t = n()).done;)
                        for (var r, i = I(t.value.items); !(r = i()).done;) f = f.add(this.calculateValue(r.value.parameters.consideration, e));
                    return f
                }, n.commandMap = function(e) {
                    switch (e.toLowerCase()) {
                        case "0x00000000000000adc04c56bf30ac9d3c0aaf14dc":
                            return t.wI.SEAPORT_V1_5;
                        case "0x00000000000001ad428e4906ae43d8f9852d0dd6":
                            return t.wI.SEAPORT_V1_4;
                        default:
                            throw Error("unsupported Seaport address")
                    }
                }, n.getConsiderationFulfillments = function(e) {
                    var t = [],
                        f = [];
                    for (var n in e) {
                        var r = e[n];
                        for (var i in r.parameters.consideration)(function() {
                            var e = r.parameters.consideration[i]; - 1 === f.findIndex(function(t) {
                                return t === e.recipient
                            }) && f.push(e.recipient);
                            var a = f.findIndex(function(t) {
                                return t === e.recipient
                            });
                            t[a] ? t[a].push({
                                orderIndex: n,
                                itemIndex: i
                            }) : t.push([{
                                orderIndex: n,
                                itemIndex: i
                            }])
                        })()
                    }
                    return t
                }, n.getAdvancedOrderParams = function(e) {
                    return {
                        advancedOrder: {
                            parameters: e.parameters,
                            numerator: a.BigNumber.from("1"),
                            denominator: a.BigNumber.from("1"),
                            signature: e.signature,
                            extraData: "0x00"
                        }
                    }
                }, n.calculateValue = function(e, t) {
                    return e.reduce(function(e, f) {
                        return f.token.toLowerCase() == t.toLowerCase() ? e.add(f.startAmount) : e
                    }, a.BigNumber.from(0))
                }, f
            }(T);
            V.INTERFACE = new o.Interface([{
                inputs: [{
                    internalType: "address",
                    name: "conduitController",
                    type: "address"
                }],
                stateMutability: "nonpayable",
                type: "constructor"
            }, {
                inputs: [],
                name: "BadContractSignature",
                type: "error"
            }, {
                inputs: [],
                name: "BadFraction",
                type: "error"
            }, {
                inputs: [{
                    internalType: "address",
                    name: "token",
                    type: "address"
                }, {
                    internalType: "address",
                    name: "from",
                    type: "address"
                }, {
                    internalType: "address",
                    name: "to",
                    type: "address"
                }, {
                    internalType: "uint256",
                    name: "amount",
                    type: "uint256"
                }],
                name: "BadReturnValueFromERC20OnTransfer",
                type: "error"
            }, {
                inputs: [{
                    internalType: "uint8",
                    name: "v",
                    type: "uint8"
                }],
                name: "BadSignatureV",
                type: "error"
            }, {
                inputs: [],
                name: "ConsiderationCriteriaResolverOutOfRange",
                type: "error"
            }, {
                inputs: [{
                    internalType: "uint256",
                    name: "orderIndex",
                    type: "uint256"
                }, {
                    internalType: "uint256",
                    name: "considerationIndex",
                    type: "uint256"
                }, {
                    internalType: "uint256",
                    name: "shortfallAmount",
                    type: "uint256"
                }],
                name: "ConsiderationNotMet",
                type: "error"
            }, {
                inputs: [],
                name: "CriteriaNotEnabledForItem",
                type: "error"
            }, {
                inputs: [{
                    internalType: "address",
                    name: "token",
                    type: "address"
                }, {
                    internalType: "address",
                    name: "from",
                    type: "address"
                }, {
                    internalType: "address",
                    name: "to",
                    type: "address"
                }, {
                    internalType: "uint256[]",
                    name: "identifiers",
                    type: "uint256[]"
                }, {
                    internalType: "uint256[]",
                    name: "amounts",
                    type: "uint256[]"
                }],
                name: "ERC1155BatchTransferGenericFailure",
                type: "error"
            }, {
                inputs: [{
                    internalType: "address",
                    name: "account",
                    type: "address"
                }, {
                    internalType: "uint256",
                    name: "amount",
                    type: "uint256"
                }],
                name: "EtherTransferGenericFailure",
                type: "error"
            }, {
                inputs: [],
                name: "InexactFraction",
                type: "error"
            }, {
                inputs: [],
                name: "InsufficientEtherSupplied",
                type: "error"
            }, {
                inputs: [],
                name: "Invalid1155BatchTransferEncoding",
                type: "error"
            }, {
                inputs: [],
                name: "InvalidBasicOrderParameterEncoding",
                type: "error"
            }, {
                inputs: [{
                    internalType: "address",
                    name: "conduit",
                    type: "address"
                }],
                name: "InvalidCallToConduit",
                type: "error"
            }, {
                inputs: [],
                name: "InvalidCanceller",
                type: "error"
            }, {
                inputs: [{
                    internalType: "bytes32",
                    name: "conduitKey",
                    type: "bytes32"
                }, {
                    internalType: "address",
                    name: "conduit",
                    type: "address"
                }],
                name: "InvalidConduit",
                type: "error"
            }, {
                inputs: [],
                name: "InvalidERC721TransferAmount",
                type: "error"
            }, {
                inputs: [],
                name: "InvalidFulfillmentComponentData",
                type: "error"
            }, {
                inputs: [{
                    internalType: "uint256",
                    name: "value",
                    type: "uint256"
                }],
                name: "InvalidMsgValue",
                type: "error"
            }, {
                inputs: [],
                name: "InvalidNativeOfferItem",
                type: "error"
            }, {
                inputs: [],
                name: "InvalidProof",
                type: "error"
            }, {
                inputs: [{
                    internalType: "bytes32",
                    name: "orderHash",
                    type: "bytes32"
                }],
                name: "InvalidRestrictedOrder",
                type: "error"
            }, {
                inputs: [],
                name: "InvalidSignature",
                type: "error"
            }, {
                inputs: [],
                name: "InvalidSigner",
                type: "error"
            }, {
                inputs: [],
                name: "InvalidTime",
                type: "error"
            }, {
                inputs: [],
                name: "MismatchedFulfillmentOfferAndConsiderationComponents",
                type: "error"
            }, {
                inputs: [{
                    internalType: "enum Side",
                    name: "side",
                    type: "uint8"
                }],
                name: "MissingFulfillmentComponentOnAggregation",
                type: "error"
            }, {
                inputs: [],
                name: "MissingItemAmount",
                type: "error"
            }, {
                inputs: [],
                name: "MissingOriginalConsiderationItems",
                type: "error"
            }, {
                inputs: [{
                    internalType: "address",
                    name: "account",
                    type: "address"
                }],
                name: "NoContract",
                type: "error"
            }, {
                inputs: [],
                name: "NoReentrantCalls",
                type: "error"
            }, {
                inputs: [],
                name: "NoSpecifiedOrdersAvailable",
                type: "error"
            }, {
                inputs: [],
                name: "OfferAndConsiderationRequiredOnFulfillment",
                type: "error"
            }, {
                inputs: [],
                name: "OfferCriteriaResolverOutOfRange",
                type: "error"
            }, {
                inputs: [{
                    internalType: "bytes32",
                    name: "orderHash",
                    type: "bytes32"
                }],
                name: "OrderAlreadyFilled",
                type: "error"
            }, {
                inputs: [],
                name: "OrderCriteriaResolverOutOfRange",
                type: "error"
            }, {
                inputs: [{
                    internalType: "bytes32",
                    name: "orderHash",
                    type: "bytes32"
                }],
                name: "OrderIsCancelled",
                type: "error"
            }, {
                inputs: [{
                    internalType: "bytes32",
                    name: "orderHash",
                    type: "bytes32"
                }],
                name: "OrderPartiallyFilled",
                type: "error"
            }, {
                inputs: [],
                name: "PartialFillsNotEnabledForOrder",
                type: "error"
            }, {
                inputs: [{
                    internalType: "address",
                    name: "token",
                    type: "address"
                }, {
                    internalType: "address",
                    name: "from",
                    type: "address"
                }, {
                    internalType: "address",
                    name: "to",
                    type: "address"
                }, {
                    internalType: "uint256",
                    name: "identifier",
                    type: "uint256"
                }, {
                    internalType: "uint256",
                    name: "amount",
                    type: "uint256"
                }],
                name: "TokenTransferGenericFailure",
                type: "error"
            }, {
                inputs: [],
                name: "UnresolvedConsiderationCriteria",
                type: "error"
            }, {
                inputs: [],
                name: "UnresolvedOfferCriteria",
                type: "error"
            }, {
                inputs: [],
                name: "UnusedItemParameters",
                type: "error"
            }, {
                anonymous: !1,
                inputs: [{
                    indexed: !1,
                    internalType: "uint256",
                    name: "newCounter",
                    type: "uint256"
                }, {
                    indexed: !0,
                    internalType: "address",
                    name: "offerer",
                    type: "address"
                }],
                name: "CounterIncremented",
                type: "event"
            }, {
                anonymous: !1,
                inputs: [{
                    indexed: !1,
                    internalType: "bytes32",
                    name: "orderHash",
                    type: "bytes32"
                }, {
                    indexed: !0,
                    internalType: "address",
                    name: "offerer",
                    type: "address"
                }, {
                    indexed: !0,
                    internalType: "address",
                    name: "zone",
                    type: "address"
                }],
                name: "OrderCancelled",
                type: "event"
            }, {
                anonymous: !1,
                inputs: [{
                    indexed: !1,
                    internalType: "bytes32",
                    name: "orderHash",
                    type: "bytes32"
                }, {
                    indexed: !0,
                    internalType: "address",
                    name: "offerer",
                    type: "address"
                }, {
                    indexed: !0,
                    internalType: "address",
                    name: "zone",
                    type: "address"
                }, {
                    indexed: !1,
                    internalType: "address",
                    name: "recipient",
                    type: "address"
                }, {
                    components: [{
                        internalType: "enum ItemType",
                        name: "itemType",
                        type: "uint8"
                    }, {
                        internalType: "address",
                        name: "token",
                        type: "address"
                    }, {
                        internalType: "uint256",
                        name: "identifier",
                        type: "uint256"
                    }, {
                        internalType: "uint256",
                        name: "amount",
                        type: "uint256"
                    }],
                    indexed: !1,
                    internalType: "struct SpentItem[]",
                    name: "offer",
                    type: "tuple[]"
                }, {
                    components: [{
                        internalType: "enum ItemType",
                        name: "itemType",
                        type: "uint8"
                    }, {
                        internalType: "address",
                        name: "token",
                        type: "address"
                    }, {
                        internalType: "uint256",
                        name: "identifier",
                        type: "uint256"
                    }, {
                        internalType: "uint256",
                        name: "amount",
                        type: "uint256"
                    }, {
                        internalType: "address payable",
                        name: "recipient",
                        type: "address"
                    }],
                    indexed: !1,
                    internalType: "struct ReceivedItem[]",
                    name: "consideration",
                    type: "tuple[]"
                }],
                name: "OrderFulfilled",
                type: "event"
            }, {
                anonymous: !1,
                inputs: [{
                    indexed: !1,
                    internalType: "bytes32",
                    name: "orderHash",
                    type: "bytes32"
                }, {
                    indexed: !0,
                    internalType: "address",
                    name: "offerer",
                    type: "address"
                }, {
                    indexed: !0,
                    internalType: "address",
                    name: "zone",
                    type: "address"
                }],
                name: "OrderValidated",
                type: "event"
            }, {
                inputs: [{
                    components: [{
                        internalType: "address",
                        name: "offerer",
                        type: "address"
                    }, {
                        internalType: "address",
                        name: "zone",
                        type: "address"
                    }, {
                        components: [{
                            internalType: "enum ItemType",
                            name: "itemType",
                            type: "uint8"
                        }, {
                            internalType: "address",
                            name: "token",
                            type: "address"
                        }, {
                            internalType: "uint256",
                            name: "identifierOrCriteria",
                            type: "uint256"
                        }, {
                            internalType: "uint256",
                            name: "startAmount",
                            type: "uint256"
                        }, {
                            internalType: "uint256",
                            name: "endAmount",
                            type: "uint256"
                        }],
                        internalType: "struct OfferItem[]",
                        name: "offer",
                        type: "tuple[]"
                    }, {
                        components: [{
                            internalType: "enum ItemType",
                            name: "itemType",
                            type: "uint8"
                        }, {
                            internalType: "address",
                            name: "token",
                            type: "address"
                        }, {
                            internalType: "uint256",
                            name: "identifierOrCriteria",
                            type: "uint256"
                        }, {
                            internalType: "uint256",
                            name: "startAmount",
                            type: "uint256"
                        }, {
                            internalType: "uint256",
                            name: "endAmount",
                            type: "uint256"
                        }, {
                            internalType: "address payable",
                            name: "recipient",
                            type: "address"
                        }],
                        internalType: "struct ConsiderationItem[]",
                        name: "consideration",
                        type: "tuple[]"
                    }, {
                        internalType: "enum OrderType",
                        name: "orderType",
                        type: "uint8"
                    }, {
                        internalType: "uint256",
                        name: "startTime",
                        type: "uint256"
                    }, {
                        internalType: "uint256",
                        name: "endTime",
                        type: "uint256"
                    }, {
                        internalType: "bytes32",
                        name: "zoneHash",
                        type: "bytes32"
                    }, {
                        internalType: "uint256",
                        name: "salt",
                        type: "uint256"
                    }, {
                        internalType: "bytes32",
                        name: "conduitKey",
                        type: "bytes32"
                    }, {
                        internalType: "uint256",
                        name: "counter",
                        type: "uint256"
                    }],
                    internalType: "struct OrderComponents[]",
                    name: "orders",
                    type: "tuple[]"
                }],
                name: "cancel",
                outputs: [{
                    internalType: "bool",
                    name: "cancelled",
                    type: "bool"
                }],
                stateMutability: "nonpayable",
                type: "function"
            }, {
                inputs: [{
                    components: [{
                        components: [{
                            internalType: "address",
                            name: "offerer",
                            type: "address"
                        }, {
                            internalType: "address",
                            name: "zone",
                            type: "address"
                        }, {
                            components: [{
                                internalType: "enum ItemType",
                                name: "itemType",
                                type: "uint8"
                            }, {
                                internalType: "address",
                                name: "token",
                                type: "address"
                            }, {
                                internalType: "uint256",
                                name: "identifierOrCriteria",
                                type: "uint256"
                            }, {
                                internalType: "uint256",
                                name: "startAmount",
                                type: "uint256"
                            }, {
                                internalType: "uint256",
                                name: "endAmount",
                                type: "uint256"
                            }],
                            internalType: "struct OfferItem[]",
                            name: "offer",
                            type: "tuple[]"
                        }, {
                            components: [{
                                internalType: "enum ItemType",
                                name: "itemType",
                                type: "uint8"
                            }, {
                                internalType: "address",
                                name: "token",
                                type: "address"
                            }, {
                                internalType: "uint256",
                                name: "identifierOrCriteria",
                                type: "uint256"
                            }, {
                                internalType: "uint256",
                                name: "startAmount",
                                type: "uint256"
                            }, {
                                internalType: "uint256",
                                name: "endAmount",
                                type: "uint256"
                            }, {
                                internalType: "address payable",
                                name: "recipient",
                                type: "address"
                            }],
                            internalType: "struct ConsiderationItem[]",
                            name: "consideration",
                            type: "tuple[]"
                        }, {
                            internalType: "enum OrderType",
                            name: "orderType",
                            type: "uint8"
                        }, {
                            internalType: "uint256",
                            name: "startTime",
                            type: "uint256"
                        }, {
                            internalType: "uint256",
                            name: "endTime",
                            type: "uint256"
                        }, {
                            internalType: "bytes32",
                            name: "zoneHash",
                            type: "bytes32"
                        }, {
                            internalType: "uint256",
                            name: "salt",
                            type: "uint256"
                        }, {
                            internalType: "bytes32",
                            name: "conduitKey",
                            type: "bytes32"
                        }, {
                            internalType: "uint256",
                            name: "totalOriginalConsiderationItems",
                            type: "uint256"
                        }],
                        internalType: "struct OrderParameters",
                        name: "parameters",
                        type: "tuple"
                    }, {
                        internalType: "uint120",
                        name: "numerator",
                        type: "uint120"
                    }, {
                        internalType: "uint120",
                        name: "denominator",
                        type: "uint120"
                    }, {
                        internalType: "bytes",
                        name: "signature",
                        type: "bytes"
                    }, {
                        internalType: "bytes",
                        name: "extraData",
                        type: "bytes"
                    }],
                    internalType: "struct AdvancedOrder",
                    name: "advancedOrder",
                    type: "tuple"
                }, {
                    components: [{
                        internalType: "uint256",
                        name: "orderIndex",
                        type: "uint256"
                    }, {
                        internalType: "enum Side",
                        name: "side",
                        type: "uint8"
                    }, {
                        internalType: "uint256",
                        name: "index",
                        type: "uint256"
                    }, {
                        internalType: "uint256",
                        name: "identifier",
                        type: "uint256"
                    }, {
                        internalType: "bytes32[]",
                        name: "criteriaProof",
                        type: "bytes32[]"
                    }],
                    internalType: "struct CriteriaResolver[]",
                    name: "criteriaResolvers",
                    type: "tuple[]"
                }, {
                    internalType: "bytes32",
                    name: "fulfillerConduitKey",
                    type: "bytes32"
                }, {
                    internalType: "address",
                    name: "recipient",
                    type: "address"
                }],
                name: "fulfillAdvancedOrder",
                outputs: [{
                    internalType: "bool",
                    name: "fulfilled",
                    type: "bool"
                }],
                stateMutability: "payable",
                type: "function"
            }, {
                inputs: [{
                    components: [{
                        components: [{
                            internalType: "address",
                            name: "offerer",
                            type: "address"
                        }, {
                            internalType: "address",
                            name: "zone",
                            type: "address"
                        }, {
                            components: [{
                                internalType: "enum ItemType",
                                name: "itemType",
                                type: "uint8"
                            }, {
                                internalType: "address",
                                name: "token",
                                type: "address"
                            }, {
                                internalType: "uint256",
                                name: "identifierOrCriteria",
                                type: "uint256"
                            }, {
                                internalType: "uint256",
                                name: "startAmount",
                                type: "uint256"
                            }, {
                                internalType: "uint256",
                                name: "endAmount",
                                type: "uint256"
                            }],
                            internalType: "struct OfferItem[]",
                            name: "offer",
                            type: "tuple[]"
                        }, {
                            components: [{
                                internalType: "enum ItemType",
                                name: "itemType",
                                type: "uint8"
                            }, {
                                internalType: "address",
                                name: "token",
                                type: "address"
                            }, {
                                internalType: "uint256",
                                name: "identifierOrCriteria",
                                type: "uint256"
                            }, {
                                internalType: "uint256",
                                name: "startAmount",
                                type: "uint256"
                            }, {
                                internalType: "uint256",
                                name: "endAmount",
                                type: "uint256"
                            }, {
                                internalType: "address payable",
                                name: "recipient",
                                type: "address"
                            }],
                            internalType: "struct ConsiderationItem[]",
                            name: "consideration",
                            type: "tuple[]"
                        }, {
                            internalType: "enum OrderType",
                            name: "orderType",
                            type: "uint8"
                        }, {
                            internalType: "uint256",
                            name: "startTime",
                            type: "uint256"
                        }, {
                            internalType: "uint256",
                            name: "endTime",
                            type: "uint256"
                        }, {
                            internalType: "bytes32",
                            name: "zoneHash",
                            type: "bytes32"
                        }, {
                            internalType: "uint256",
                            name: "salt",
                            type: "uint256"
                        }, {
                            internalType: "bytes32",
                            name: "conduitKey",
                            type: "bytes32"
                        }, {
                            internalType: "uint256",
                            name: "totalOriginalConsiderationItems",
                            type: "uint256"
                        }],
                        internalType: "struct OrderParameters",
                        name: "parameters",
                        type: "tuple"
                    }, {
                        internalType: "uint120",
                        name: "numerator",
                        type: "uint120"
                    }, {
                        internalType: "uint120",
                        name: "denominator",
                        type: "uint120"
                    }, {
                        internalType: "bytes",
                        name: "signature",
                        type: "bytes"
                    }, {
                        internalType: "bytes",
                        name: "extraData",
                        type: "bytes"
                    }],
                    internalType: "struct AdvancedOrder[]",
                    name: "advancedOrders",
                    type: "tuple[]"
                }, {
                    components: [{
                        internalType: "uint256",
                        name: "orderIndex",
                        type: "uint256"
                    }, {
                        internalType: "enum Side",
                        name: "side",
                        type: "uint8"
                    }, {
                        internalType: "uint256",
                        name: "index",
                        type: "uint256"
                    }, {
                        internalType: "uint256",
                        name: "identifier",
                        type: "uint256"
                    }, {
                        internalType: "bytes32[]",
                        name: "criteriaProof",
                        type: "bytes32[]"
                    }],
                    internalType: "struct CriteriaResolver[]",
                    name: "criteriaResolvers",
                    type: "tuple[]"
                }, {
                    components: [{
                        internalType: "uint256",
                        name: "orderIndex",
                        type: "uint256"
                    }, {
                        internalType: "uint256",
                        name: "itemIndex",
                        type: "uint256"
                    }],
                    internalType: "struct FulfillmentComponent[][]",
                    name: "offerFulfillments",
                    type: "tuple[][]"
                }, {
                    components: [{
                        internalType: "uint256",
                        name: "orderIndex",
                        type: "uint256"
                    }, {
                        internalType: "uint256",
                        name: "itemIndex",
                        type: "uint256"
                    }],
                    internalType: "struct FulfillmentComponent[][]",
                    name: "considerationFulfillments",
                    type: "tuple[][]"
                }, {
                    internalType: "bytes32",
                    name: "fulfillerConduitKey",
                    type: "bytes32"
                }, {
                    internalType: "address",
                    name: "recipient",
                    type: "address"
                }, {
                    internalType: "uint256",
                    name: "maximumFulfilled",
                    type: "uint256"
                }],
                name: "fulfillAvailableAdvancedOrders",
                outputs: [{
                    internalType: "bool[]",
                    name: "availableOrders",
                    type: "bool[]"
                }, {
                    components: [{
                        components: [{
                            internalType: "enum ItemType",
                            name: "itemType",
                            type: "uint8"
                        }, {
                            internalType: "address",
                            name: "token",
                            type: "address"
                        }, {
                            internalType: "uint256",
                            name: "identifier",
                            type: "uint256"
                        }, {
                            internalType: "uint256",
                            name: "amount",
                            type: "uint256"
                        }, {
                            internalType: "address payable",
                            name: "recipient",
                            type: "address"
                        }],
                        internalType: "struct ReceivedItem",
                        name: "item",
                        type: "tuple"
                    }, {
                        internalType: "address",
                        name: "offerer",
                        type: "address"
                    }, {
                        internalType: "bytes32",
                        name: "conduitKey",
                        type: "bytes32"
                    }],
                    internalType: "struct Execution[]",
                    name: "executions",
                    type: "tuple[]"
                }],
                stateMutability: "payable",
                type: "function"
            }, {
                inputs: [{
                    components: [{
                        components: [{
                            internalType: "address",
                            name: "offerer",
                            type: "address"
                        }, {
                            internalType: "address",
                            name: "zone",
                            type: "address"
                        }, {
                            components: [{
                                internalType: "enum ItemType",
                                name: "itemType",
                                type: "uint8"
                            }, {
                                internalType: "address",
                                name: "token",
                                type: "address"
                            }, {
                                internalType: "uint256",
                                name: "identifierOrCriteria",
                                type: "uint256"
                            }, {
                                internalType: "uint256",
                                name: "startAmount",
                                type: "uint256"
                            }, {
                                internalType: "uint256",
                                name: "endAmount",
                                type: "uint256"
                            }],
                            internalType: "struct OfferItem[]",
                            name: "offer",
                            type: "tuple[]"
                        }, {
                            components: [{
                                internalType: "enum ItemType",
                                name: "itemType",
                                type: "uint8"
                            }, {
                                internalType: "address",
                                name: "token",
                                type: "address"
                            }, {
                                internalType: "uint256",
                                name: "identifierOrCriteria",
                                type: "uint256"
                            }, {
                                internalType: "uint256",
                                name: "startAmount",
                                type: "uint256"
                            }, {
                                internalType: "uint256",
                                name: "endAmount",
                                type: "uint256"
                            }, {
                                internalType: "address payable",
                                name: "recipient",
                                type: "address"
                            }],
                            internalType: "struct ConsiderationItem[]",
                            name: "consideration",
                            type: "tuple[]"
                        }, {
                            internalType: "enum OrderType",
                            name: "orderType",
                            type: "uint8"
                        }, {
                            internalType: "uint256",
                            name: "startTime",
                            type: "uint256"
                        }, {
                            internalType: "uint256",
                            name: "endTime",
                            type: "uint256"
                        }, {
                            internalType: "bytes32",
                            name: "zoneHash",
                            type: "bytes32"
                        }, {
                            internalType: "uint256",
                            name: "salt",
                            type: "uint256"
                        }, {
                            internalType: "bytes32",
                            name: "conduitKey",
                            type: "bytes32"
                        }, {
                            internalType: "uint256",
                            name: "totalOriginalConsiderationItems",
                            type: "uint256"
                        }],
                        internalType: "struct OrderParameters",
                        name: "parameters",
                        type: "tuple"
                    }, {
                        internalType: "bytes",
                        name: "signature",
                        type: "bytes"
                    }],
                    internalType: "struct Order[]",
                    name: "orders",
                    type: "tuple[]"
                }, {
                    components: [{
                        internalType: "uint256",
                        name: "orderIndex",
                        type: "uint256"
                    }, {
                        internalType: "uint256",
                        name: "itemIndex",
                        type: "uint256"
                    }],
                    internalType: "struct FulfillmentComponent[][]",
                    name: "offerFulfillments",
                    type: "tuple[][]"
                }, {
                    components: [{
                        internalType: "uint256",
                        name: "orderIndex",
                        type: "uint256"
                    }, {
                        internalType: "uint256",
                        name: "itemIndex",
                        type: "uint256"
                    }],
                    internalType: "struct FulfillmentComponent[][]",
                    name: "considerationFulfillments",
                    type: "tuple[][]"
                }, {
                    internalType: "bytes32",
                    name: "fulfillerConduitKey",
                    type: "bytes32"
                }, {
                    internalType: "uint256",
                    name: "maximumFulfilled",
                    type: "uint256"
                }],
                name: "fulfillAvailableOrders",
                outputs: [{
                    internalType: "bool[]",
                    name: "availableOrders",
                    type: "bool[]"
                }, {
                    components: [{
                        components: [{
                            internalType: "enum ItemType",
                            name: "itemType",
                            type: "uint8"
                        }, {
                            internalType: "address",
                            name: "token",
                            type: "address"
                        }, {
                            internalType: "uint256",
                            name: "identifier",
                            type: "uint256"
                        }, {
                            internalType: "uint256",
                            name: "amount",
                            type: "uint256"
                        }, {
                            internalType: "address payable",
                            name: "recipient",
                            type: "address"
                        }],
                        internalType: "struct ReceivedItem",
                        name: "item",
                        type: "tuple"
                    }, {
                        internalType: "address",
                        name: "offerer",
                        type: "address"
                    }, {
                        internalType: "bytes32",
                        name: "conduitKey",
                        type: "bytes32"
                    }],
                    internalType: "struct Execution[]",
                    name: "executions",
                    type: "tuple[]"
                }],
                stateMutability: "payable",
                type: "function"
            }, {
                inputs: [{
                    components: [{
                        internalType: "address",
                        name: "considerationToken",
                        type: "address"
                    }, {
                        internalType: "uint256",
                        name: "considerationIdentifier",
                        type: "uint256"
                    }, {
                        internalType: "uint256",
                        name: "considerationAmount",
                        type: "uint256"
                    }, {
                        internalType: "address payable",
                        name: "offerer",
                        type: "address"
                    }, {
                        internalType: "address",
                        name: "zone",
                        type: "address"
                    }, {
                        internalType: "address",
                        name: "offerToken",
                        type: "address"
                    }, {
                        internalType: "uint256",
                        name: "offerIdentifier",
                        type: "uint256"
                    }, {
                        internalType: "uint256",
                        name: "offerAmount",
                        type: "uint256"
                    }, {
                        internalType: "enum BasicOrderType",
                        name: "basicOrderType",
                        type: "uint8"
                    }, {
                        internalType: "uint256",
                        name: "startTime",
                        type: "uint256"
                    }, {
                        internalType: "uint256",
                        name: "endTime",
                        type: "uint256"
                    }, {
                        internalType: "bytes32",
                        name: "zoneHash",
                        type: "bytes32"
                    }, {
                        internalType: "uint256",
                        name: "salt",
                        type: "uint256"
                    }, {
                        internalType: "bytes32",
                        name: "offererConduitKey",
                        type: "bytes32"
                    }, {
                        internalType: "bytes32",
                        name: "fulfillerConduitKey",
                        type: "bytes32"
                    }, {
                        internalType: "uint256",
                        name: "totalOriginalAdditionalRecipients",
                        type: "uint256"
                    }, {
                        components: [{
                            internalType: "uint256",
                            name: "amount",
                            type: "uint256"
                        }, {
                            internalType: "address payable",
                            name: "recipient",
                            type: "address"
                        }],
                        internalType: "struct AdditionalRecipient[]",
                        name: "additionalRecipients",
                        type: "tuple[]"
                    }, {
                        internalType: "bytes",
                        name: "signature",
                        type: "bytes"
                    }],
                    internalType: "struct BasicOrderParameters",
                    name: "parameters",
                    type: "tuple"
                }],
                name: "fulfillBasicOrder",
                outputs: [{
                    internalType: "bool",
                    name: "fulfilled",
                    type: "bool"
                }],
                stateMutability: "payable",
                type: "function"
            }, {
                inputs: [{
                    components: [{
                        components: [{
                            internalType: "address",
                            name: "offerer",
                            type: "address"
                        }, {
                            internalType: "address",
                            name: "zone",
                            type: "address"
                        }, {
                            components: [{
                                internalType: "enum ItemType",
                                name: "itemType",
                                type: "uint8"
                            }, {
                                internalType: "address",
                                name: "token",
                                type: "address"
                            }, {
                                internalType: "uint256",
                                name: "identifierOrCriteria",
                                type: "uint256"
                            }, {
                                internalType: "uint256",
                                name: "startAmount",
                                type: "uint256"
                            }, {
                                internalType: "uint256",
                                name: "endAmount",
                                type: "uint256"
                            }],
                            internalType: "struct OfferItem[]",
                            name: "offer",
                            type: "tuple[]"
                        }, {
                            components: [{
                                internalType: "enum ItemType",
                                name: "itemType",
                                type: "uint8"
                            }, {
                                internalType: "address",
                                name: "token",
                                type: "address"
                            }, {
                                internalType: "uint256",
                                name: "identifierOrCriteria",
                                type: "uint256"
                            }, {
                                internalType: "uint256",
                                name: "startAmount",
                                type: "uint256"
                            }, {
                                internalType: "uint256",
                                name: "endAmount",
                                type: "uint256"
                            }, {
                                internalType: "address payable",
                                name: "recipient",
                                type: "address"
                            }],
                            internalType: "struct ConsiderationItem[]",
                            name: "consideration",
                            type: "tuple[]"
                        }, {
                            internalType: "enum OrderType",
                            name: "orderType",
                            type: "uint8"
                        }, {
                            internalType: "uint256",
                            name: "startTime",
                            type: "uint256"
                        }, {
                            internalType: "uint256",
                            name: "endTime",
                            type: "uint256"
                        }, {
                            internalType: "bytes32",
                            name: "zoneHash",
                            type: "bytes32"
                        }, {
                            internalType: "uint256",
                            name: "salt",
                            type: "uint256"
                        }, {
                            internalType: "bytes32",
                            name: "conduitKey",
                            type: "bytes32"
                        }, {
                            internalType: "uint256",
                            name: "totalOriginalConsiderationItems",
                            type: "uint256"
                        }],
                        internalType: "struct OrderParameters",
                        name: "parameters",
                        type: "tuple"
                    }, {
                        internalType: "bytes",
                        name: "signature",
                        type: "bytes"
                    }],
                    internalType: "struct Order",
                    name: "order",
                    type: "tuple"
                }, {
                    internalType: "bytes32",
                    name: "fulfillerConduitKey",
                    type: "bytes32"
                }],
                name: "fulfillOrder",
                outputs: [{
                    internalType: "bool",
                    name: "fulfilled",
                    type: "bool"
                }],
                stateMutability: "payable",
                type: "function"
            }, {
                inputs: [{
                    internalType: "address",
                    name: "offerer",
                    type: "address"
                }],
                name: "getCounter",
                outputs: [{
                    internalType: "uint256",
                    name: "counter",
                    type: "uint256"
                }],
                stateMutability: "view",
                type: "function"
            }, {
                inputs: [{
                    components: [{
                        internalType: "address",
                        name: "offerer",
                        type: "address"
                    }, {
                        internalType: "address",
                        name: "zone",
                        type: "address"
                    }, {
                        components: [{
                            internalType: "enum ItemType",
                            name: "itemType",
                            type: "uint8"
                        }, {
                            internalType: "address",
                            name: "token",
                            type: "address"
                        }, {
                            internalType: "uint256",
                            name: "identifierOrCriteria",
                            type: "uint256"
                        }, {
                            internalType: "uint256",
                            name: "startAmount",
                            type: "uint256"
                        }, {
                            internalType: "uint256",
                            name: "endAmount",
                            type: "uint256"
                        }],
                        internalType: "struct OfferItem[]",
                        name: "offer",
                        type: "tuple[]"
                    }, {
                        components: [{
                            internalType: "enum ItemType",
                            name: "itemType",
                            type: "uint8"
                        }, {
                            internalType: "address",
                            name: "token",
                            type: "address"
                        }, {
                            internalType: "uint256",
                            name: "identifierOrCriteria",
                            type: "uint256"
                        }, {
                            internalType: "uint256",
                            name: "startAmount",
                            type: "uint256"
                        }, {
                            internalType: "uint256",
                            name: "endAmount",
                            type: "uint256"
                        }, {
                            internalType: "address payable",
                            name: "recipient",
                            type: "address"
                        }],
                        internalType: "struct ConsiderationItem[]",
                        name: "consideration",
                        type: "tuple[]"
                    }, {
                        internalType: "enum OrderType",
                        name: "orderType",
                        type: "uint8"
                    }, {
                        internalType: "uint256",
                        name: "startTime",
                        type: "uint256"
                    }, {
                        internalType: "uint256",
                        name: "endTime",
                        type: "uint256"
                    }, {
                        internalType: "bytes32",
                        name: "zoneHash",
                        type: "bytes32"
                    }, {
                        internalType: "uint256",
                        name: "salt",
                        type: "uint256"
                    }, {
                        internalType: "bytes32",
                        name: "conduitKey",
                        type: "bytes32"
                    }, {
                        internalType: "uint256",
                        name: "counter",
                        type: "uint256"
                    }],
                    internalType: "struct OrderComponents",
                    name: "order",
                    type: "tuple"
                }],
                name: "getOrderHash",
                outputs: [{
                    internalType: "bytes32",
                    name: "orderHash",
                    type: "bytes32"
                }],
                stateMutability: "view",
                type: "function"
            }, {
                inputs: [{
                    internalType: "bytes32",
                    name: "orderHash",
                    type: "bytes32"
                }],
                name: "getOrderStatus",
                outputs: [{
                    internalType: "bool",
                    name: "isValidated",
                    type: "bool"
                }, {
                    internalType: "bool",
                    name: "isCancelled",
                    type: "bool"
                }, {
                    internalType: "uint256",
                    name: "totalFilled",
                    type: "uint256"
                }, {
                    internalType: "uint256",
                    name: "totalSize",
                    type: "uint256"
                }],
                stateMutability: "view",
                type: "function"
            }, {
                inputs: [],
                name: "incrementCounter",
                outputs: [{
                    internalType: "uint256",
                    name: "newCounter",
                    type: "uint256"
                }],
                stateMutability: "nonpayable",
                type: "function"
            }, {
                inputs: [],
                name: "information",
                outputs: [{
                    internalType: "string",
                    name: "version",
                    type: "string"
                }, {
                    internalType: "bytes32",
                    name: "domainSeparator",
                    type: "bytes32"
                }, {
                    internalType: "address",
                    name: "conduitController",
                    type: "address"
                }],
                stateMutability: "view",
                type: "function"
            }, {
                inputs: [{
                    components: [{
                        components: [{
                            internalType: "address",
                            name: "offerer",
                            type: "address"
                        }, {
                            internalType: "address",
                            name: "zone",
                            type: "address"
                        }, {
                            components: [{
                                internalType: "enum ItemType",
                                name: "itemType",
                                type: "uint8"
                            }, {
                                internalType: "address",
                                name: "token",
                                type: "address"
                            }, {
                                internalType: "uint256",
                                name: "identifierOrCriteria",
                                type: "uint256"
                            }, {
                                internalType: "uint256",
                                name: "startAmount",
                                type: "uint256"
                            }, {
                                internalType: "uint256",
                                name: "endAmount",
                                type: "uint256"
                            }],
                            internalType: "struct OfferItem[]",
                            name: "offer",
                            type: "tuple[]"
                        }, {
                            components: [{
                                internalType: "enum ItemType",
                                name: "itemType",
                                type: "uint8"
                            }, {
                                internalType: "address",
                                name: "token",
                                type: "address"
                            }, {
                                internalType: "uint256",
                                name: "identifierOrCriteria",
                                type: "uint256"
                            }, {
                                internalType: "uint256",
                                name: "startAmount",
                                type: "uint256"
                            }, {
                                internalType: "uint256",
                                name: "endAmount",
                                type: "uint256"
                            }, {
                                internalType: "address payable",
                                name: "recipient",
                                type: "address"
                            }],
                            internalType: "struct ConsiderationItem[]",
                            name: "consideration",
                            type: "tuple[]"
                        }, {
                            internalType: "enum OrderType",
                            name: "orderType",
                            type: "uint8"
                        }, {
                            internalType: "uint256",
                            name: "startTime",
                            type: "uint256"
                        }, {
                            internalType: "uint256",
                            name: "endTime",
                            type: "uint256"
                        }, {
                            internalType: "bytes32",
                            name: "zoneHash",
                            type: "bytes32"
                        }, {
                            internalType: "uint256",
                            name: "salt",
                            type: "uint256"
                        }, {
                            internalType: "bytes32",
                            name: "conduitKey",
                            type: "bytes32"
                        }, {
                            internalType: "uint256",
                            name: "totalOriginalConsiderationItems",
                            type: "uint256"
                        }],
                        internalType: "struct OrderParameters",
                        name: "parameters",
                        type: "tuple"
                    }, {
                        internalType: "uint120",
                        name: "numerator",
                        type: "uint120"
                    }, {
                        internalType: "uint120",
                        name: "denominator",
                        type: "uint120"
                    }, {
                        internalType: "bytes",
                        name: "signature",
                        type: "bytes"
                    }, {
                        internalType: "bytes",
                        name: "extraData",
                        type: "bytes"
                    }],
                    internalType: "struct AdvancedOrder[]",
                    name: "advancedOrders",
                    type: "tuple[]"
                }, {
                    components: [{
                        internalType: "uint256",
                        name: "orderIndex",
                        type: "uint256"
                    }, {
                        internalType: "enum Side",
                        name: "side",
                        type: "uint8"
                    }, {
                        internalType: "uint256",
                        name: "index",
                        type: "uint256"
                    }, {
                        internalType: "uint256",
                        name: "identifier",
                        type: "uint256"
                    }, {
                        internalType: "bytes32[]",
                        name: "criteriaProof",
                        type: "bytes32[]"
                    }],
                    internalType: "struct CriteriaResolver[]",
                    name: "criteriaResolvers",
                    type: "tuple[]"
                }, {
                    components: [{
                        components: [{
                            internalType: "uint256",
                            name: "orderIndex",
                            type: "uint256"
                        }, {
                            internalType: "uint256",
                            name: "itemIndex",
                            type: "uint256"
                        }],
                        internalType: "struct FulfillmentComponent[]",
                        name: "offerComponents",
                        type: "tuple[]"
                    }, {
                        components: [{
                            internalType: "uint256",
                            name: "orderIndex",
                            type: "uint256"
                        }, {
                            internalType: "uint256",
                            name: "itemIndex",
                            type: "uint256"
                        }],
                        internalType: "struct FulfillmentComponent[]",
                        name: "considerationComponents",
                        type: "tuple[]"
                    }],
                    internalType: "struct Fulfillment[]",
                    name: "fulfillments",
                    type: "tuple[]"
                }],
                name: "matchAdvancedOrders",
                outputs: [{
                    components: [{
                        components: [{
                            internalType: "enum ItemType",
                            name: "itemType",
                            type: "uint8"
                        }, {
                            internalType: "address",
                            name: "token",
                            type: "address"
                        }, {
                            internalType: "uint256",
                            name: "identifier",
                            type: "uint256"
                        }, {
                            internalType: "uint256",
                            name: "amount",
                            type: "uint256"
                        }, {
                            internalType: "address payable",
                            name: "recipient",
                            type: "address"
                        }],
                        internalType: "struct ReceivedItem",
                        name: "item",
                        type: "tuple"
                    }, {
                        internalType: "address",
                        name: "offerer",
                        type: "address"
                    }, {
                        internalType: "bytes32",
                        name: "conduitKey",
                        type: "bytes32"
                    }],
                    internalType: "struct Execution[]",
                    name: "executions",
                    type: "tuple[]"
                }],
                stateMutability: "payable",
                type: "function"
            }, {
                inputs: [{
                    components: [{
                        components: [{
                            internalType: "address",
                            name: "offerer",
                            type: "address"
                        }, {
                            internalType: "address",
                            name: "zone",
                            type: "address"
                        }, {
                            components: [{
                                internalType: "enum ItemType",
                                name: "itemType",
                                type: "uint8"
                            }, {
                                internalType: "address",
                                name: "token",
                                type: "address"
                            }, {
                                internalType: "uint256",
                                name: "identifierOrCriteria",
                                type: "uint256"
                            }, {
                                internalType: "uint256",
                                name: "startAmount",
                                type: "uint256"
                            }, {
                                internalType: "uint256",
                                name: "endAmount",
                                type: "uint256"
                            }],
                            internalType: "struct OfferItem[]",
                            name: "offer",
                            type: "tuple[]"
                        }, {
                            components: [{
                                internalType: "enum ItemType",
                                name: "itemType",
                                type: "uint8"
                            }, {
                                internalType: "address",
                                name: "token",
                                type: "address"
                            }, {
                                internalType: "uint256",
                                name: "identifierOrCriteria",
                                type: "uint256"
                            }, {
                                internalType: "uint256",
                                name: "startAmount",
                                type: "uint256"
                            }, {
                                internalType: "uint256",
                                name: "endAmount",
                                type: "uint256"
                            }, {
                                internalType: "address payable",
                                name: "recipient",
                                type: "address"
                            }],
                            internalType: "struct ConsiderationItem[]",
                            name: "consideration",
                            type: "tuple[]"
                        }, {
                            internalType: "enum OrderType",
                            name: "orderType",
                            type: "uint8"
                        }, {
                            internalType: "uint256",
                            name: "startTime",
                            type: "uint256"
                        }, {
                            internalType: "uint256",
                            name: "endTime",
                            type: "uint256"
                        }, {
                            internalType: "bytes32",
                            name: "zoneHash",
                            type: "bytes32"
                        }, {
                            internalType: "uint256",
                            name: "salt",
                            type: "uint256"
                        }, {
                            internalType: "bytes32",
                            name: "conduitKey",
                            type: "bytes32"
                        }, {
                            internalType: "uint256",
                            name: "totalOriginalConsiderationItems",
                            type: "uint256"
                        }],
                        internalType: "struct OrderParameters",
                        name: "parameters",
                        type: "tuple"
                    }, {
                        internalType: "bytes",
                        name: "signature",
                        type: "bytes"
                    }],
                    internalType: "struct Order[]",
                    name: "orders",
                    type: "tuple[]"
                }, {
                    components: [{
                        components: [{
                            internalType: "uint256",
                            name: "orderIndex",
                            type: "uint256"
                        }, {
                            internalType: "uint256",
                            name: "itemIndex",
                            type: "uint256"
                        }],
                        internalType: "struct FulfillmentComponent[]",
                        name: "offerComponents",
                        type: "tuple[]"
                    }, {
                        components: [{
                            internalType: "uint256",
                            name: "orderIndex",
                            type: "uint256"
                        }, {
                            internalType: "uint256",
                            name: "itemIndex",
                            type: "uint256"
                        }],
                        internalType: "struct FulfillmentComponent[]",
                        name: "considerationComponents",
                        type: "tuple[]"
                    }],
                    internalType: "struct Fulfillment[]",
                    name: "fulfillments",
                    type: "tuple[]"
                }],
                name: "matchOrders",
                outputs: [{
                    components: [{
                        components: [{
                            internalType: "enum ItemType",
                            name: "itemType",
                            type: "uint8"
                        }, {
                            internalType: "address",
                            name: "token",
                            type: "address"
                        }, {
                            internalType: "uint256",
                            name: "identifier",
                            type: "uint256"
                        }, {
                            internalType: "uint256",
                            name: "amount",
                            type: "uint256"
                        }, {
                            internalType: "address payable",
                            name: "recipient",
                            type: "address"
                        }],
                        internalType: "struct ReceivedItem",
                        name: "item",
                        type: "tuple"
                    }, {
                        internalType: "address",
                        name: "offerer",
                        type: "address"
                    }, {
                        internalType: "bytes32",
                        name: "conduitKey",
                        type: "bytes32"
                    }],
                    internalType: "struct Execution[]",
                    name: "executions",
                    type: "tuple[]"
                }],
                stateMutability: "payable",
                type: "function"
            }, {
                inputs: [],
                name: "name",
                outputs: [{
                    internalType: "string",
                    name: "contractName",
                    type: "string"
                }],
                stateMutability: "pure",
                type: "function"
            }, {
                inputs: [{
                    components: [{
                        components: [{
                            internalType: "address",
                            name: "offerer",
                            type: "address"
                        }, {
                            internalType: "address",
                            name: "zone",
                            type: "address"
                        }, {
                            components: [{
                                internalType: "enum ItemType",
                                name: "itemType",
                                type: "uint8"
                            }, {
                                internalType: "address",
                                name: "token",
                                type: "address"
                            }, {
                                internalType: "uint256",
                                name: "identifierOrCriteria",
                                type: "uint256"
                            }, {
                                internalType: "uint256",
                                name: "startAmount",
                                type: "uint256"
                            }, {
                                internalType: "uint256",
                                name: "endAmount",
                                type: "uint256"
                            }],
                            internalType: "struct OfferItem[]",
                            name: "offer",
                            type: "tuple[]"
                        }, {
                            components: [{
                                internalType: "enum ItemType",
                                name: "itemType",
                                type: "uint8"
                            }, {
                                internalType: "address",
                                name: "token",
                                type: "address"
                            }, {
                                internalType: "uint256",
                                name: "identifierOrCriteria",
                                type: "uint256"
                            }, {
                                internalType: "uint256",
                                name: "startAmount",
                                type: "uint256"
                            }, {
                                internalType: "uint256",
                                name: "endAmount",
                                type: "uint256"
                            }, {
                                internalType: "address payable",
                                name: "recipient",
                                type: "address"
                            }],
                            internalType: "struct ConsiderationItem[]",
                            name: "consideration",
                            type: "tuple[]"
                        }, {
                            internalType: "enum OrderType",
                            name: "orderType",
                            type: "uint8"
                        }, {
                            internalType: "uint256",
                            name: "startTime",
                            type: "uint256"
                        }, {
                            internalType: "uint256",
                            name: "endTime",
                            type: "uint256"
                        }, {
                            internalType: "bytes32",
                            name: "zoneHash",
                            type: "bytes32"
                        }, {
                            internalType: "uint256",
                            name: "salt",
                            type: "uint256"
                        }, {
                            internalType: "bytes32",
                            name: "conduitKey",
                            type: "bytes32"
                        }, {
                            internalType: "uint256",
                            name: "totalOriginalConsiderationItems",
                            type: "uint256"
                        }],
                        internalType: "struct OrderParameters",
                        name: "parameters",
                        type: "tuple"
                    }, {
                        internalType: "bytes",
                        name: "signature",
                        type: "bytes"
                    }],
                    internalType: "struct Order[]",
                    name: "orders",
                    type: "tuple[]"
                }],
                name: "validate",
                outputs: [{
                    internalType: "bool",
                    name: "validated",
                    type: "bool"
                }],
                stateMutability: "nonpayable",
                type: "function"
            }]), V.OPENSEA_CONDUIT_KEY = "0x0000007b02230091a7ed01230072f7006a004d60a8d4e71d599b8104250f0000";
            var G = new s.Percent(50, 100),
                j = function() {
                    function e(e, f) {
                        if (this.trade = e, this.options = f, this.tradeType = t.PM.UniswapTrade, f.fee && f.flatFee) throw Error("Only one fee option permitted")
                    }
                    return e.prototype.encode = function(e, f) {
                        var n, r = !this.options.payerIsRouter;
                        this.trade.inputAmount.currency.isNative && (e.addCommand(t.wI.WRAP_ETH, [B, this.trade.maximumAmountIn(this.options.slippageTolerance).quotient.toString()]), r = !1), this.options.recipient = null != (n = this.options.recipient) ? n : N;
                        for (var i, o, p = this.trade.outputAmount.currency.isNative, y = this.trade.inputAmount.currency.isNative, b = this.trade.tradeType === s.TradeType.EXACT_INPUT && this.trade.routes.length > 2 || p || !!(i = this.options).fee || !!i.flatFee, h = I(this.trade.swaps); !(o = h()).done;) {
                            var m = o.value;
                            switch (m.route.protocol) {
                                case c.Protocol.V2:
                                    $(e, m, this.trade.tradeType, this.options, r, b);
                                    break;
                                case c.Protocol.RING:
                                    H(e, m, this.trade.tradeType, this.options, r, b);
                                    break;
                                case c.Protocol.V3:
                                    W(e, m, this.trade.tradeType, this.options, r, b);
                                    break;
                                case c.Protocol.MIXED:
                                    (function(e, f, n, r, i, a) {
                                        var o = f.route,
                                            s = f.inputAmount,
                                            p = f.outputAmount,
                                            y = a ? B : r.recipient;
                                        if (1 === o.pools.length) {
                                            if (o.pools[0] instanceof d.Pool) return W(e, f, n, r, i, a);
                                            if (o.pools[0] instanceof u.Pair) return $(e, f, n, r, i, a);
                                            if (o.pools[0] instanceof l.Pair) return H(e, f, n, r, i, a);
                                            throw Error("Invalid route type")
                                        }
                                        for (var b, h = c.MixedRouteTrade.createUncheckedTrade({
                                                route: o,
                                                inputAmount: s,
                                                outputAmount: p,
                                                tradeType: n
                                            }), m = h.maximumAmountIn(r.slippageTolerance, s).quotient.toString(), v = h.minimumAmountOut(r.slippageTolerance, p).quotient.toString(), T = c.partitionMixedRouteByProtocol(o), g = function(e) {
                                                return e === T.length - 1
                                            }, w = u.getFewTokenFromOriginalToken(o.input.wrapped, o.pools[0].chainId), A = 0; A < T.length; A++) {
                                            var I = T[A];
                                            b = c.getOutputOfPools(I, w);
                                            var E = new c.MixedRouteSDK([].concat(I), I[0].token0.equals(w) ? I[0].token0 : I[0].token1, b),
                                                _ = new c.MixedRoute(E);
                                            (w = b, _.pools.every(function(e) {
                                                return e instanceof u.Pair
                                            })) ? (console.log(c.encodeMixedRouteToPath(_), "mixedRouteIsAllFew path"), e.addCommand(t.wI.FEW_V2_SWAP_EXACT_IN, [g(A) ? y : T[A + 1][0].liquidityToken.address, 0 == A ? h.inputAmount.currency.isNative ? R : m : 0, g(A) ? v : 0, _.path.map(function(e) {
                                                return e.address
                                            }), i && 0 === A, !!g(A)])) : e.addCommand(t.wI.RING_V2_SWAP_EXACT_IN, [g(A) ? y : T[A + 1][0].liquidityToken.address, 0 === A ? h.inputAmount.currency.isNative ? R : m : 0, g(A) ? v : 0, _.path.map(function(e) {
                                                return e.address
                                            }), i && 0 === A, !!g(A)])
                                        }
                                    })(e, m, this.trade.tradeType, this.options, r, b);
                                    break;
                                default:
                                    throw Error("UNSUPPORTED_TRADE_PROTOCOL")
                            }
                        }
                        var v = a.BigNumber.from(this.trade.minimumAmountOut(this.options.slippageTolerance).quotient.toString());
                        if (b) {
                            if (this.options.fee) {
                                var T = d.toHex(this.options.fee.fee.multiply(1e4).quotient);
                                e.addCommand(t.wI.PAY_PORTION, [this.trade.outputAmount.currency.wrapped.address, this.options.fee.recipient, T]), this.trade.tradeType === s.TradeType.EXACT_OUTPUT && (v = v.sub(v.mul(T).div(1e4)))
                            }
                            if (this.options.flatFee) {
                                var g = this.options.flatFee.amount;
                                if (v.lt(g)) throw Error("Flat fee amount greater than minimumAmountOut");
                                e.addCommand(t.wI.TRANSFER, [this.trade.outputAmount.currency.wrapped.address, this.options.flatFee.recipient, g]), this.trade.tradeType === s.TradeType.EXACT_OUTPUT && (v = v.sub(g))
                            }
                            p ? e.addCommand(t.wI.UNWRAP_WETH, [this.options.recipient, v]) : e.addCommand(t.wI.SWEEP, [this.trade.outputAmount.currency.wrapped.address, this.options.recipient, v])
                        }
                        y && (this.trade.tradeType === s.TradeType.EXACT_OUTPUT || this.trade.priceImpact.greaterThan(G)) && e.addCommand(t.wI.UNWRAP_WETH, [this.options.recipient, 0])
                    }, e
                }();

            function $(e, f, n, r, i, a) {
                var o = f.route,
                    d = new u.Trade(o, n == s.TradeType.EXACT_INPUT ? f.inputAmount : f.outputAmount, n);
                n == s.TradeType.EXACT_INPUT ? e.addCommand(t.wI.FEW_V2_SWAP_EXACT_IN, [a ? B : r.recipient, d.inputAmount.currency.isNative ? R : d.maximumAmountIn(r.slippageTolerance).quotient.toString(), d.minimumAmountOut(r.slippageTolerance).quotient.toString(), o.path.map(function(e) {
                    return e.address
                }), i, !0]) : n == s.TradeType.EXACT_OUTPUT && e.addCommand(t.wI.FEW_V2_SWAP_EXACT_OUT, [a ? B : r.recipient, d.minimumAmountOut(r.slippageTolerance).quotient.toString(), d.inputAmount.currency.isNative ? R : d.maximumAmountIn(r.slippageTolerance).quotient.toString(), o.path.map(function(e) {
                    return e.address
                }), i, !0])
            }

            function H(e, f, n, r, i, a) {
                var o = f.route,
                    u = new l.Trade(o, n == s.TradeType.EXACT_INPUT ? f.inputAmount : f.outputAmount, n);
                n == s.TradeType.EXACT_INPUT ? e.addCommand(t.wI.RING_V2_SWAP_EXACT_IN, [a ? B : r.recipient, u.inputAmount.currency.isNative ? R : u.maximumAmountIn(r.slippageTolerance).quotient.toString(), u.minimumAmountOut(r.slippageTolerance).quotient.toString(), o.path.map(function(e) {
                    return e.address
                }), i, !0]) : n == s.TradeType.EXACT_OUTPUT && e.addCommand(t.wI.RING_V2_SWAP_EXACT_OUT, [a ? B : r.recipient, u.minimumAmountOut(r.slippageTolerance).quotient.toString(), u.inputAmount.currency.isNative ? R : u.maximumAmountIn(r.slippageTolerance).quotient.toString(), o.path.map(function(e) {
                    return e.address
                }), i, !0])
            }

            function W(e, f, n, r, i, a) {
                var o = f.route,
                    u = d.Trade.createUncheckedTrade({
                        route: o,
                        inputAmount: f.inputAmount,
                        outputAmount: f.outputAmount,
                        tradeType: n
                    }),
                    c = d.encodeRouteToPath(o, u.tradeType === s.TradeType.EXACT_OUTPUT);
                n == s.TradeType.EXACT_INPUT ? e.addCommand(t.wI.V3_SWAP_EXACT_IN, [a ? B : r.recipient, u.maximumAmountIn(r.slippageTolerance).quotient.toString(), u.minimumAmountOut(r.slippageTolerance).quotient.toString(), c, i]) : n == s.TradeType.EXACT_OUTPUT && e.addCommand(t.wI.V3_SWAP_EXACT_OUT, [a ? B : r.recipient, u.minimumAmountOut(r.slippageTolerance).quotient.toString(), u.maximumAmountIn(r.slippageTolerance).quotient.toString(), c, i])
            }(function(e) {
                function f(f) {
                    return e.call(this, t.IY.Sudoswap, f) || this
                }
                w(f, e);
                var n = f.prototype;
                return n.encode = function(e, n) {
                    for (var r, i = I(this.orders); !(r = i()).done;) {
                        var o = r.value,
                            s = f.INTERFACE.encodeFunctionData("robustSwapETHForSpecificNFTs", [o.swaps.map(function(e) {
                                return {
                                    swapInfo: e.swapInfo,
                                    maxCost: e.maxCost
                                }
                            }), o.ethRecipient, o.nftRecipient, o.deadline]),
                            u = o.swaps.reduce(function(e, t) {
                                return e.add(t.maxCost)
                            }, a.BigNumber.from(0));
                        e.addCommand(t.wI.SUDOSWAP, [u, s], n.allowRevert)
                    }
                }, n.getBuyItems = function() {
                    for (var e, f = [], n = I(this.orders); !(e = n()).done;)
                        for (var r, i = I(e.value.swaps); !(r = i()).done;)
                            for (var a, o = r.value, s = I(o.swapInfo.nftIds); !(a = s()).done;) f.push({
                                tokenAddress: o.tokenAddress,
                                tokenId: a.value,
                                tokenType: t.iv.ERC721
                            });
                    return f
                }, n.getTotalPrice = function() {
                    for (var e, t = a.BigNumber.from(0), f = I(this.orders); !(e = f()).done;)
                        for (var n, r = I(e.value.swaps); !(n = r()).done;) t = t.add(n.value.maxCost);
                    return t
                }, f
            })(T).INTERFACE = new o.Interface([{
                    inputs: [{
                        internalType: "contract ILSSVMPairFactoryLike",
                        name: "_factory",
                        type: "address"
                    }],
                    stateMutability: "nonpayable",
                    type: "constructor"
                }, {
                    inputs: [],
                    name: "factory",
                    outputs: [{
                        internalType: "contract ILSSVMPairFactoryLike",
                        name: "",
                        type: "address"
                    }],
                    stateMutability: "view",
                    type: "function"
                }, {
                    inputs: [{
                        internalType: "contract ERC20",
                        name: "token",
                        type: "address"
                    }, {
                        internalType: "address",
                        name: "from",
                        type: "address"
                    }, {
                        internalType: "address",
                        name: "to",
                        type: "address"
                    }, {
                        internalType: "uint256",
                        name: "amount",
                        type: "uint256"
                    }, {
                        internalType: "enum ILSSVMPairFactoryLike.PairVariant",
                        name: "variant",
                        type: "uint8"
                    }],
                    name: "pairTransferERC20From",
                    outputs: [],
                    stateMutability: "nonpayable",
                    type: "function"
                }, {
                    inputs: [{
                        internalType: "contract IERC721",
                        name: "nft",
                        type: "address"
                    }, {
                        internalType: "address",
                        name: "from",
                        type: "address"
                    }, {
                        internalType: "address",
                        name: "to",
                        type: "address"
                    }, {
                        internalType: "uint256",
                        name: "id",
                        type: "uint256"
                    }, {
                        internalType: "enum ILSSVMPairFactoryLike.PairVariant",
                        name: "variant",
                        type: "uint8"
                    }],
                    name: "pairTransferNFTFrom",
                    outputs: [],
                    stateMutability: "nonpayable",
                    type: "function"
                }, {
                    inputs: [{
                        components: [{
                            components: [{
                                internalType: "contract LSSVMPair",
                                name: "pair",
                                type: "address"
                            }, {
                                internalType: "uint256",
                                name: "numItems",
                                type: "uint256"
                            }],
                            internalType: "struct LSSVMRouter.PairSwapAny",
                            name: "swapInfo",
                            type: "tuple"
                        }, {
                            internalType: "uint256",
                            name: "maxCost",
                            type: "uint256"
                        }],
                        internalType: "struct LSSVMRouter.RobustPairSwapAny[]",
                        name: "swapList",
                        type: "tuple[]"
                    }, {
                        internalType: "uint256",
                        name: "inputAmount",
                        type: "uint256"
                    }, {
                        internalType: "address",
                        name: "nftRecipient",
                        type: "address"
                    }, {
                        internalType: "uint256",
                        name: "deadline",
                        type: "uint256"
                    }],
                    name: "robustSwapERC20ForAnyNFTs",
                    outputs: [{
                        internalType: "uint256",
                        name: "remainingValue",
                        type: "uint256"
                    }],
                    stateMutability: "nonpayable",
                    type: "function"
                }, {
                    inputs: [{
                        components: [{
                            components: [{
                                internalType: "contract LSSVMPair",
                                name: "pair",
                                type: "address"
                            }, {
                                internalType: "uint256[]",
                                name: "nftIds",
                                type: "uint256[]"
                            }],
                            internalType: "struct LSSVMRouter.PairSwapSpecific",
                            name: "swapInfo",
                            type: "tuple"
                        }, {
                            internalType: "uint256",
                            name: "maxCost",
                            type: "uint256"
                        }],
                        internalType: "struct LSSVMRouter.RobustPairSwapSpecific[]",
                        name: "swapList",
                        type: "tuple[]"
                    }, {
                        internalType: "uint256",
                        name: "inputAmount",
                        type: "uint256"
                    }, {
                        internalType: "address",
                        name: "nftRecipient",
                        type: "address"
                    }, {
                        internalType: "uint256",
                        name: "deadline",
                        type: "uint256"
                    }],
                    name: "robustSwapERC20ForSpecificNFTs",
                    outputs: [{
                        internalType: "uint256",
                        name: "remainingValue",
                        type: "uint256"
                    }],
                    stateMutability: "payable",
                    type: "function"
                }, {
                    inputs: [{
                        components: [{
                            components: [{
                                components: [{
                                    internalType: "contract LSSVMPair",
                                    name: "pair",
                                    type: "address"
                                }, {
                                    internalType: "uint256[]",
                                    name: "nftIds",
                                    type: "uint256[]"
                                }],
                                internalType: "struct LSSVMRouter.PairSwapSpecific",
                                name: "swapInfo",
                                type: "tuple"
                            }, {
                                internalType: "uint256",
                                name: "maxCost",
                                type: "uint256"
                            }],
                            internalType: "struct LSSVMRouter.RobustPairSwapSpecific[]",
                            name: "tokenToNFTTrades",
                            type: "tuple[]"
                        }, {
                            components: [{
                                components: [{
                                    internalType: "contract LSSVMPair",
                                    name: "pair",
                                    type: "address"
                                }, {
                                    internalType: "uint256[]",
                                    name: "nftIds",
                                    type: "uint256[]"
                                }],
                                internalType: "struct LSSVMRouter.PairSwapSpecific",
                                name: "swapInfo",
                                type: "tuple"
                            }, {
                                internalType: "uint256",
                                name: "minOutput",
                                type: "uint256"
                            }],
                            internalType: "struct LSSVMRouter.RobustPairSwapSpecificForToken[]",
                            name: "nftToTokenTrades",
                            type: "tuple[]"
                        }, {
                            internalType: "uint256",
                            name: "inputAmount",
                            type: "uint256"
                        }, {
                            internalType: "address payable",
                            name: "tokenRecipient",
                            type: "address"
                        }, {
                            internalType: "address",
                            name: "nftRecipient",
                            type: "address"
                        }],
                        internalType: "struct LSSVMRouter.RobustPairNFTsFoTokenAndTokenforNFTsTrade",
                        name: "params",
                        type: "tuple"
                    }],
                    name: "robustSwapERC20ForSpecificNFTsAndNFTsToToken",
                    outputs: [{
                        internalType: "uint256",
                        name: "remainingValue",
                        type: "uint256"
                    }, {
                        internalType: "uint256",
                        name: "outputAmount",
                        type: "uint256"
                    }],
                    stateMutability: "payable",
                    type: "function"
                }, {
                    inputs: [{
                        components: [{
                            components: [{
                                internalType: "contract LSSVMPair",
                                name: "pair",
                                type: "address"
                            }, {
                                internalType: "uint256",
                                name: "numItems",
                                type: "uint256"
                            }],
                            internalType: "struct LSSVMRouter.PairSwapAny",
                            name: "swapInfo",
                            type: "tuple"
                        }, {
                            internalType: "uint256",
                            name: "maxCost",
                            type: "uint256"
                        }],
                        internalType: "struct LSSVMRouter.RobustPairSwapAny[]",
                        name: "swapList",
                        type: "tuple[]"
                    }, {
                        internalType: "address payable",
                        name: "ethRecipient",
                        type: "address"
                    }, {
                        internalType: "address",
                        name: "nftRecipient",
                        type: "address"
                    }, {
                        internalType: "uint256",
                        name: "deadline",
                        type: "uint256"
                    }],
                    name: "robustSwapETHForAnyNFTs",
                    outputs: [{
                        internalType: "uint256",
                        name: "remainingValue",
                        type: "uint256"
                    }],
                    stateMutability: "payable",
                    type: "function"
                }, {
                    inputs: [{
                        components: [{
                            components: [{
                                internalType: "contract LSSVMPair",
                                name: "pair",
                                type: "address"
                            }, {
                                internalType: "uint256[]",
                                name: "nftIds",
                                type: "uint256[]"
                            }],
                            internalType: "struct LSSVMRouter.PairSwapSpecific",
                            name: "swapInfo",
                            type: "tuple"
                        }, {
                            internalType: "uint256",
                            name: "maxCost",
                            type: "uint256"
                        }],
                        internalType: "struct LSSVMRouter.RobustPairSwapSpecific[]",
                        name: "swapList",
                        type: "tuple[]"
                    }, {
                        internalType: "address payable",
                        name: "ethRecipient",
                        type: "address"
                    }, {
                        internalType: "address",
                        name: "nftRecipient",
                        type: "address"
                    }, {
                        internalType: "uint256",
                        name: "deadline",
                        type: "uint256"
                    }],
                    name: "robustSwapETHForSpecificNFTs",
                    outputs: [{
                        internalType: "uint256",
                        name: "remainingValue",
                        type: "uint256"
                    }],
                    stateMutability: "payable",
                    type: "function"
                }, {
                    inputs: [{
                        components: [{
                            components: [{
                                components: [{
                                    internalType: "contract LSSVMPair",
                                    name: "pair",
                                    type: "address"
                                }, {
                                    internalType: "uint256[]",
                                    name: "nftIds",
                                    type: "uint256[]"
                                }],
                                internalType: "struct LSSVMRouter.PairSwapSpecific",
                                name: "swapInfo",
                                type: "tuple"
                            }, {
                                internalType: "uint256",
                                name: "maxCost",
                                type: "uint256"
                            }],
                            internalType: "struct LSSVMRouter.RobustPairSwapSpecific[]",
                            name: "tokenToNFTTrades",
                            type: "tuple[]"
                        }, {
                            components: [{
                                components: [{
                                    internalType: "contract LSSVMPair",
                                    name: "pair",
                                    type: "address"
                                }, {
                                    internalType: "uint256[]",
                                    name: "nftIds",
                                    type: "uint256[]"
                                }],
                                internalType: "struct LSSVMRouter.PairSwapSpecific",
                                name: "swapInfo",
                                type: "tuple"
                            }, {
                                internalType: "uint256",
                                name: "minOutput",
                                type: "uint256"
                            }],
                            internalType: "struct LSSVMRouter.RobustPairSwapSpecificForToken[]",
                            name: "nftToTokenTrades",
                            type: "tuple[]"
                        }, {
                            internalType: "uint256",
                            name: "inputAmount",
                            type: "uint256"
                        }, {
                            internalType: "address payable",
                            name: "tokenRecipient",
                            type: "address"
                        }, {
                            internalType: "address",
                            name: "nftRecipient",
                            type: "address"
                        }],
                        internalType: "struct LSSVMRouter.RobustPairNFTsFoTokenAndTokenforNFTsTrade",
                        name: "params",
                        type: "tuple"
                    }],
                    name: "robustSwapETHForSpecificNFTsAndNFTsToToken",
                    outputs: [{
                        internalType: "uint256",
                        name: "remainingValue",
                        type: "uint256"
                    }, {
                        internalType: "uint256",
                        name: "outputAmount",
                        type: "uint256"
                    }],
                    stateMutability: "payable",
                    type: "function"
                }, {
                    inputs: [{
                        components: [{
                            components: [{
                                internalType: "contract LSSVMPair",
                                name: "pair",
                                type: "address"
                            }, {
                                internalType: "uint256[]",
                                name: "nftIds",
                                type: "uint256[]"
                            }],
                            internalType: "struct LSSVMRouter.PairSwapSpecific",
                            name: "swapInfo",
                            type: "tuple"
                        }, {
                            internalType: "uint256",
                            name: "minOutput",
                            type: "uint256"
                        }],
                        internalType: "struct LSSVMRouter.RobustPairSwapSpecificForToken[]",
                        name: "swapList",
                        type: "tuple[]"
                    }, {
                        internalType: "address payable",
                        name: "tokenRecipient",
                        type: "address"
                    }, {
                        internalType: "uint256",
                        name: "deadline",
                        type: "uint256"
                    }],
                    name: "robustSwapNFTsForToken",
                    outputs: [{
                        internalType: "uint256",
                        name: "outputAmount",
                        type: "uint256"
                    }],
                    stateMutability: "nonpayable",
                    type: "function"
                }, {
                    inputs: [{
                        components: [{
                            internalType: "contract LSSVMPair",
                            name: "pair",
                            type: "address"
                        }, {
                            internalType: "uint256",
                            name: "numItems",
                            type: "uint256"
                        }],
                        internalType: "struct LSSVMRouter.PairSwapAny[]",
                        name: "swapList",
                        type: "tuple[]"
                    }, {
                        internalType: "uint256",
                        name: "inputAmount",
                        type: "uint256"
                    }, {
                        internalType: "address",
                        name: "nftRecipient",
                        type: "address"
                    }, {
                        internalType: "uint256",
                        name: "deadline",
                        type: "uint256"
                    }],
                    name: "swapERC20ForAnyNFTs",
                    outputs: [{
                        internalType: "uint256",
                        name: "remainingValue",
                        type: "uint256"
                    }],
                    stateMutability: "nonpayable",
                    type: "function"
                }, {
                    inputs: [{
                        components: [{
                            internalType: "contract LSSVMPair",
                            name: "pair",
                            type: "address"
                        }, {
                            internalType: "uint256[]",
                            name: "nftIds",
                            type: "uint256[]"
                        }],
                        internalType: "struct LSSVMRouter.PairSwapSpecific[]",
                        name: "swapList",
                        type: "tuple[]"
                    }, {
                        internalType: "uint256",
                        name: "inputAmount",
                        type: "uint256"
                    }, {
                        internalType: "address",
                        name: "nftRecipient",
                        type: "address"
                    }, {
                        internalType: "uint256",
                        name: "deadline",
                        type: "uint256"
                    }],
                    name: "swapERC20ForSpecificNFTs",
                    outputs: [{
                        internalType: "uint256",
                        name: "remainingValue",
                        type: "uint256"
                    }],
                    stateMutability: "nonpayable",
                    type: "function"
                }, {
                    inputs: [{
                        components: [{
                            internalType: "contract LSSVMPair",
                            name: "pair",
                            type: "address"
                        }, {
                            internalType: "uint256",
                            name: "numItems",
                            type: "uint256"
                        }],
                        internalType: "struct LSSVMRouter.PairSwapAny[]",
                        name: "swapList",
                        type: "tuple[]"
                    }, {
                        internalType: "address payable",
                        name: "ethRecipient",
                        type: "address"
                    }, {
                        internalType: "address",
                        name: "nftRecipient",
                        type: "address"
                    }, {
                        internalType: "uint256",
                        name: "deadline",
                        type: "uint256"
                    }],
                    name: "swapETHForAnyNFTs",
                    outputs: [{
                        internalType: "uint256",
                        name: "remainingValue",
                        type: "uint256"
                    }],
                    stateMutability: "payable",
                    type: "function"
                }, {
                    inputs: [{
                        components: [{
                            internalType: "contract LSSVMPair",
                            name: "pair",
                            type: "address"
                        }, {
                            internalType: "uint256[]",
                            name: "nftIds",
                            type: "uint256[]"
                        }],
                        internalType: "struct LSSVMRouter.PairSwapSpecific[]",
                        name: "swapList",
                        type: "tuple[]"
                    }, {
                        internalType: "address payable",
                        name: "ethRecipient",
                        type: "address"
                    }, {
                        internalType: "address",
                        name: "nftRecipient",
                        type: "address"
                    }, {
                        internalType: "uint256",
                        name: "deadline",
                        type: "uint256"
                    }],
                    name: "swapETHForSpecificNFTs",
                    outputs: [{
                        internalType: "uint256",
                        name: "remainingValue",
                        type: "uint256"
                    }],
                    stateMutability: "payable",
                    type: "function"
                }, {
                    inputs: [{
                        components: [{
                            components: [{
                                internalType: "contract LSSVMPair",
                                name: "pair",
                                type: "address"
                            }, {
                                internalType: "uint256[]",
                                name: "nftIds",
                                type: "uint256[]"
                            }],
                            internalType: "struct LSSVMRouter.PairSwapSpecific[]",
                            name: "nftToTokenTrades",
                            type: "tuple[]"
                        }, {
                            components: [{
                                internalType: "contract LSSVMPair",
                                name: "pair",
                                type: "address"
                            }, {
                                internalType: "uint256",
                                name: "numItems",
                                type: "uint256"
                            }],
                            internalType: "struct LSSVMRouter.PairSwapAny[]",
                            name: "tokenToNFTTrades",
                            type: "tuple[]"
                        }],
                        internalType: "struct LSSVMRouter.NFTsForAnyNFTsTrade",
                        name: "trade",
                        type: "tuple"
                    }, {
                        internalType: "uint256",
                        name: "inputAmount",
                        type: "uint256"
                    }, {
                        internalType: "uint256",
                        name: "minOutput",
                        type: "uint256"
                    }, {
                        internalType: "address",
                        name: "nftRecipient",
                        type: "address"
                    }, {
                        internalType: "uint256",
                        name: "deadline",
                        type: "uint256"
                    }],
                    name: "swapNFTsForAnyNFTsThroughERC20",
                    outputs: [{
                        internalType: "uint256",
                        name: "outputAmount",
                        type: "uint256"
                    }],
                    stateMutability: "nonpayable",
                    type: "function"
                }, {
                    inputs: [{
                        components: [{
                            components: [{
                                internalType: "contract LSSVMPair",
                                name: "pair",
                                type: "address"
                            }, {
                                internalType: "uint256[]",
                                name: "nftIds",
                                type: "uint256[]"
                            }],
                            internalType: "struct LSSVMRouter.PairSwapSpecific[]",
                            name: "nftToTokenTrades",
                            type: "tuple[]"
                        }, {
                            components: [{
                                internalType: "contract LSSVMPair",
                                name: "pair",
                                type: "address"
                            }, {
                                internalType: "uint256",
                                name: "numItems",
                                type: "uint256"
                            }],
                            internalType: "struct LSSVMRouter.PairSwapAny[]",
                            name: "tokenToNFTTrades",
                            type: "tuple[]"
                        }],
                        internalType: "struct LSSVMRouter.NFTsForAnyNFTsTrade",
                        name: "trade",
                        type: "tuple"
                    }, {
                        internalType: "uint256",
                        name: "minOutput",
                        type: "uint256"
                    }, {
                        internalType: "address payable",
                        name: "ethRecipient",
                        type: "address"
                    }, {
                        internalType: "address",
                        name: "nftRecipient",
                        type: "address"
                    }, {
                        internalType: "uint256",
                        name: "deadline",
                        type: "uint256"
                    }],
                    name: "swapNFTsForAnyNFTsThroughETH",
                    outputs: [{
                        internalType: "uint256",
                        name: "outputAmount",
                        type: "uint256"
                    }],
                    stateMutability: "payable",
                    type: "function"
                }, {
                    inputs: [{
                        components: [{
                            components: [{
                                internalType: "contract LSSVMPair",
                                name: "pair",
                                type: "address"
                            }, {
                                internalType: "uint256[]",
                                name: "nftIds",
                                type: "uint256[]"
                            }],
                            internalType: "struct LSSVMRouter.PairSwapSpecific[]",
                            name: "nftToTokenTrades",
                            type: "tuple[]"
                        }, {
                            components: [{
                                internalType: "contract LSSVMPair",
                                name: "pair",
                                type: "address"
                            }, {
                                internalType: "uint256[]",
                                name: "nftIds",
                                type: "uint256[]"
                            }],
                            internalType: "struct LSSVMRouter.PairSwapSpecific[]",
                            name: "tokenToNFTTrades",
                            type: "tuple[]"
                        }],
                        internalType: "struct LSSVMRouter.NFTsForSpecificNFTsTrade",
                        name: "trade",
                        type: "tuple"
                    }, {
                        internalType: "uint256",
                        name: "inputAmount",
                        type: "uint256"
                    }, {
                        internalType: "uint256",
                        name: "minOutput",
                        type: "uint256"
                    }, {
                        internalType: "address",
                        name: "nftRecipient",
                        type: "address"
                    }, {
                        internalType: "uint256",
                        name: "deadline",
                        type: "uint256"
                    }],
                    name: "swapNFTsForSpecificNFTsThroughERC20",
                    outputs: [{
                        internalType: "uint256",
                        name: "outputAmount",
                        type: "uint256"
                    }],
                    stateMutability: "nonpayable",
                    type: "function"
                }, {
                    inputs: [{
                        components: [{
                            components: [{
                                internalType: "contract LSSVMPair",
                                name: "pair",
                                type: "address"
                            }, {
                                internalType: "uint256[]",
                                name: "nftIds",
                                type: "uint256[]"
                            }],
                            internalType: "struct LSSVMRouter.PairSwapSpecific[]",
                            name: "nftToTokenTrades",
                            type: "tuple[]"
                        }, {
                            components: [{
                                internalType: "contract LSSVMPair",
                                name: "pair",
                                type: "address"
                            }, {
                                internalType: "uint256[]",
                                name: "nftIds",
                                type: "uint256[]"
                            }],
                            internalType: "struct LSSVMRouter.PairSwapSpecific[]",
                            name: "tokenToNFTTrades",
                            type: "tuple[]"
                        }],
                        internalType: "struct LSSVMRouter.NFTsForSpecificNFTsTrade",
                        name: "trade",
                        type: "tuple"
                    }, {
                        internalType: "uint256",
                        name: "minOutput",
                        type: "uint256"
                    }, {
                        internalType: "address payable",
                        name: "ethRecipient",
                        type: "address"
                    }, {
                        internalType: "address",
                        name: "nftRecipient",
                        type: "address"
                    }, {
                        internalType: "uint256",
                        name: "deadline",
                        type: "uint256"
                    }],
                    name: "swapNFTsForSpecificNFTsThroughETH",
                    outputs: [{
                        internalType: "uint256",
                        name: "outputAmount",
                        type: "uint256"
                    }],
                    stateMutability: "payable",
                    type: "function"
                }, {
                    inputs: [{
                        components: [{
                            internalType: "contract LSSVMPair",
                            name: "pair",
                            type: "address"
                        }, {
                            internalType: "uint256[]",
                            name: "nftIds",
                            type: "uint256[]"
                        }],
                        internalType: "struct LSSVMRouter.PairSwapSpecific[]",
                        name: "swapList",
                        type: "tuple[]"
                    }, {
                        internalType: "uint256",
                        name: "minOutput",
                        type: "uint256"
                    }, {
                        internalType: "address",
                        name: "tokenRecipient",
                        type: "address"
                    }, {
                        internalType: "uint256",
                        name: "deadline",
                        type: "uint256"
                    }],
                    name: "swapNFTsForToken",
                    outputs: [{
                        internalType: "uint256",
                        name: "outputAmount",
                        type: "uint256"
                    }],
                    stateMutability: "nonpayable",
                    type: "function"
                }, {
                    stateMutability: "payable",
                    type: "receive"
                }]),
                function(e) {
                    function f(f) {
                        return e.call(this, t.IY.X2Y2, f) || this
                    }
                    w(f, e);
                    var n = f.prototype;
                    return n.encode = function(e, n) {
                        for (var r, i = I(this.orders); !(r = i()).done;) {
                            var a = r.value,
                                o = f.INTERFACE.getSighash(f.INTERFACE.getFunction("run")) + a.signedInput.slice(2);
                            a.tokenType == t.iv.ERC721 ? e.addCommand(t.wI.X2Y2_721, [a.price, o, a.recipient, a.tokenAddress, a.tokenId], n.allowRevert) : a.tokenType == t.iv.ERC1155 && e.addCommand(t.wI.X2Y2_1155, [a.price, o, a.recipient, a.tokenAddress, a.tokenId, a.tokenAmount], n.allowRevert)
                        }
                    }, n.getBuyItems = function() {
                        for (var e, t = [], f = I(this.orders); !(e = f()).done;) {
                            var n = e.value;
                            t.push({
                                tokenAddress: n.tokenAddress,
                                tokenId: n.tokenId,
                                tokenType: n.tokenType
                            })
                        }
                        return t
                    }, n.getTotalPrice = function() {
                        for (var e, t = a.BigNumber.from(0), f = I(this.orders); !(e = f()).done;) t = t.add(e.value.price);
                        return t
                    }, f
                }(T).INTERFACE = new o.Interface([{
                    anonymous: !1,
                    inputs: [{
                        indexed: !0,
                        internalType: "bytes32",
                        name: "itemHash",
                        type: "bytes32"
                    }, {
                        indexed: !1,
                        internalType: "address",
                        name: "currency",
                        type: "address"
                    }, {
                        indexed: !1,
                        internalType: "address",
                        name: "to",
                        type: "address"
                    }, {
                        indexed: !1,
                        internalType: "uint256",
                        name: "amount",
                        type: "uint256"
                    }, {
                        indexed: !1,
                        internalType: "uint256",
                        name: "incentive",
                        type: "uint256"
                    }],
                    name: "EvAuctionRefund",
                    type: "event"
                }, {
                    anonymous: !1,
                    inputs: [{
                        indexed: !0,
                        internalType: "bytes32",
                        name: "itemHash",
                        type: "bytes32"
                    }],
                    name: "EvCancel",
                    type: "event"
                }, {
                    anonymous: !1,
                    inputs: [{
                        indexed: !1,
                        internalType: "address",
                        name: "delegate",
                        type: "address"
                    }, {
                        indexed: !1,
                        internalType: "bool",
                        name: "isRemoval",
                        type: "bool"
                    }],
                    name: "EvDelegate",
                    type: "event"
                }, {
                    anonymous: !1,
                    inputs: [{
                        indexed: !1,
                        internalType: "uint256",
                        name: "index",
                        type: "uint256"
                    }, {
                        indexed: !1,
                        internalType: "bytes",
                        name: "error",
                        type: "bytes"
                    }],
                    name: "EvFailure",
                    type: "event"
                }, {
                    anonymous: !1,
                    inputs: [{
                        indexed: !1,
                        internalType: "uint256",
                        name: "newValue",
                        type: "uint256"
                    }],
                    name: "EvFeeCapUpdate",
                    type: "event"
                }, {
                    anonymous: !1,
                    inputs: [{
                        indexed: !0,
                        internalType: "bytes32",
                        name: "itemHash",
                        type: "bytes32"
                    }, {
                        indexed: !1,
                        internalType: "address",
                        name: "maker",
                        type: "address"
                    }, {
                        indexed: !1,
                        internalType: "address",
                        name: "taker",
                        type: "address"
                    }, {
                        indexed: !1,
                        internalType: "uint256",
                        name: "orderSalt",
                        type: "uint256"
                    }, {
                        indexed: !1,
                        internalType: "uint256",
                        name: "settleSalt",
                        type: "uint256"
                    }, {
                        indexed: !1,
                        internalType: "uint256",
                        name: "intent",
                        type: "uint256"
                    }, {
                        indexed: !1,
                        internalType: "uint256",
                        name: "delegateType",
                        type: "uint256"
                    }, {
                        indexed: !1,
                        internalType: "uint256",
                        name: "deadline",
                        type: "uint256"
                    }, {
                        indexed: !1,
                        internalType: "contract IERC20Upgradeable",
                        name: "currency",
                        type: "address"
                    }, {
                        indexed: !1,
                        internalType: "bytes",
                        name: "dataMask",
                        type: "bytes"
                    }, {
                        components: [{
                            internalType: "uint256",
                            name: "price",
                            type: "uint256"
                        }, {
                            internalType: "bytes",
                            name: "data",
                            type: "bytes"
                        }],
                        indexed: !1,
                        internalType: "struct Market.OrderItem",
                        name: "item",
                        type: "tuple"
                    }, {
                        components: [{
                            internalType: "enum Market.Op",
                            name: "op",
                            type: "uint8"
                        }, {
                            internalType: "uint256",
                            name: "orderIdx",
                            type: "uint256"
                        }, {
                            internalType: "uint256",
                            name: "itemIdx",
                            type: "uint256"
                        }, {
                            internalType: "uint256",
                            name: "price",
                            type: "uint256"
                        }, {
                            internalType: "bytes32",
                            name: "itemHash",
                            type: "bytes32"
                        }, {
                            internalType: "contract IDelegate",
                            name: "executionDelegate",
                            type: "address"
                        }, {
                            internalType: "bytes",
                            name: "dataReplacement",
                            type: "bytes"
                        }, {
                            internalType: "uint256",
                            name: "bidIncentivePct",
                            type: "uint256"
                        }, {
                            internalType: "uint256",
                            name: "aucMinIncrementPct",
                            type: "uint256"
                        }, {
                            internalType: "uint256",
                            name: "aucIncDurationSecs",
                            type: "uint256"
                        }, {
                            components: [{
                                internalType: "uint256",
                                name: "percentage",
                                type: "uint256"
                            }, {
                                internalType: "address",
                                name: "to",
                                type: "address"
                            }],
                            internalType: "struct Market.Fee[]",
                            name: "fees",
                            type: "tuple[]"
                        }],
                        indexed: !1,
                        internalType: "struct Market.SettleDetail",
                        name: "detail",
                        type: "tuple"
                    }],
                    name: "EvInventory",
                    type: "event"
                }, {
                    anonymous: !1,
                    inputs: [{
                        indexed: !1,
                        internalType: "bytes32",
                        name: "itemHash",
                        type: "bytes32"
                    }, {
                        indexed: !1,
                        internalType: "address",
                        name: "currency",
                        type: "address"
                    }, {
                        indexed: !1,
                        internalType: "address",
                        name: "to",
                        type: "address"
                    }, {
                        indexed: !1,
                        internalType: "uint256",
                        name: "amount",
                        type: "uint256"
                    }],
                    name: "EvProfit",
                    type: "event"
                }, {
                    anonymous: !1,
                    inputs: [{
                        indexed: !1,
                        internalType: "address",
                        name: "signer",
                        type: "address"
                    }, {
                        indexed: !1,
                        internalType: "bool",
                        name: "isRemoval",
                        type: "bool"
                    }],
                    name: "EvSigner",
                    type: "event"
                }, {
                    anonymous: !1,
                    inputs: [{
                        indexed: !0,
                        internalType: "address",
                        name: "previousOwner",
                        type: "address"
                    }, {
                        indexed: !0,
                        internalType: "address",
                        name: "newOwner",
                        type: "address"
                    }],
                    name: "OwnershipTransferred",
                    type: "event"
                }, {
                    anonymous: !1,
                    inputs: [{
                        indexed: !1,
                        internalType: "address",
                        name: "account",
                        type: "address"
                    }],
                    name: "Paused",
                    type: "event"
                }, {
                    anonymous: !1,
                    inputs: [{
                        indexed: !1,
                        internalType: "address",
                        name: "account",
                        type: "address"
                    }],
                    name: "Unpaused",
                    type: "event"
                }, {
                    inputs: [],
                    name: "RATE_BASE",
                    outputs: [{
                        internalType: "uint256",
                        name: "",
                        type: "uint256"
                    }],
                    stateMutability: "view",
                    type: "function"
                }, {
                    inputs: [{
                        internalType: "bytes32[]",
                        name: "itemHashes",
                        type: "bytes32[]"
                    }, {
                        internalType: "uint256",
                        name: "deadline",
                        type: "uint256"
                    }, {
                        internalType: "uint8",
                        name: "v",
                        type: "uint8"
                    }, {
                        internalType: "bytes32",
                        name: "r",
                        type: "bytes32"
                    }, {
                        internalType: "bytes32",
                        name: "s",
                        type: "bytes32"
                    }],
                    name: "cancel",
                    outputs: [],
                    stateMutability: "nonpayable",
                    type: "function"
                }, {
                    inputs: [{
                        internalType: "address",
                        name: "",
                        type: "address"
                    }],
                    name: "delegates",
                    outputs: [{
                        internalType: "bool",
                        name: "",
                        type: "bool"
                    }],
                    stateMutability: "view",
                    type: "function"
                }, {
                    inputs: [],
                    name: "feeCapPct",
                    outputs: [{
                        internalType: "uint256",
                        name: "",
                        type: "uint256"
                    }],
                    stateMutability: "view",
                    type: "function"
                }, {
                    inputs: [{
                        internalType: "uint256",
                        name: "feeCapPct_",
                        type: "uint256"
                    }, {
                        internalType: "address",
                        name: "weth_",
                        type: "address"
                    }],
                    name: "initialize",
                    outputs: [],
                    stateMutability: "nonpayable",
                    type: "function"
                }, {
                    inputs: [{
                        internalType: "bytes32",
                        name: "",
                        type: "bytes32"
                    }],
                    name: "inventoryStatus",
                    outputs: [{
                        internalType: "enum Market.InvStatus",
                        name: "",
                        type: "uint8"
                    }],
                    stateMutability: "view",
                    type: "function"
                }, {
                    inputs: [{
                        internalType: "bytes32",
                        name: "",
                        type: "bytes32"
                    }],
                    name: "ongoingAuctions",
                    outputs: [{
                        internalType: "uint256",
                        name: "price",
                        type: "uint256"
                    }, {
                        internalType: "uint256",
                        name: "netPrice",
                        type: "uint256"
                    }, {
                        internalType: "uint256",
                        name: "endAt",
                        type: "uint256"
                    }, {
                        internalType: "address",
                        name: "bidder",
                        type: "address"
                    }],
                    stateMutability: "view",
                    type: "function"
                }, {
                    inputs: [],
                    name: "owner",
                    outputs: [{
                        internalType: "address",
                        name: "",
                        type: "address"
                    }],
                    stateMutability: "view",
                    type: "function"
                }, {
                    inputs: [],
                    name: "pause",
                    outputs: [],
                    stateMutability: "nonpayable",
                    type: "function"
                }, {
                    inputs: [],
                    name: "paused",
                    outputs: [{
                        internalType: "bool",
                        name: "",
                        type: "bool"
                    }],
                    stateMutability: "view",
                    type: "function"
                }, {
                    inputs: [],
                    name: "renounceOwnership",
                    outputs: [],
                    stateMutability: "nonpayable",
                    type: "function"
                }, {
                    inputs: [{
                        components: [{
                            components: [{
                                internalType: "uint256",
                                name: "salt",
                                type: "uint256"
                            }, {
                                internalType: "address",
                                name: "user",
                                type: "address"
                            }, {
                                internalType: "uint256",
                                name: "network",
                                type: "uint256"
                            }, {
                                internalType: "uint256",
                                name: "intent",
                                type: "uint256"
                            }, {
                                internalType: "uint256",
                                name: "delegateType",
                                type: "uint256"
                            }, {
                                internalType: "uint256",
                                name: "deadline",
                                type: "uint256"
                            }, {
                                internalType: "contract IERC20Upgradeable",
                                name: "currency",
                                type: "address"
                            }, {
                                internalType: "bytes",
                                name: "dataMask",
                                type: "bytes"
                            }, {
                                components: [{
                                    internalType: "uint256",
                                    name: "price",
                                    type: "uint256"
                                }, {
                                    internalType: "bytes",
                                    name: "data",
                                    type: "bytes"
                                }],
                                internalType: "struct Market.OrderItem[]",
                                name: "items",
                                type: "tuple[]"
                            }, {
                                internalType: "bytes32",
                                name: "r",
                                type: "bytes32"
                            }, {
                                internalType: "bytes32",
                                name: "s",
                                type: "bytes32"
                            }, {
                                internalType: "uint8",
                                name: "v",
                                type: "uint8"
                            }, {
                                internalType: "uint8",
                                name: "signVersion",
                                type: "uint8"
                            }],
                            internalType: "struct Market.Order[]",
                            name: "orders",
                            type: "tuple[]"
                        }, {
                            components: [{
                                internalType: "enum Market.Op",
                                name: "op",
                                type: "uint8"
                            }, {
                                internalType: "uint256",
                                name: "orderIdx",
                                type: "uint256"
                            }, {
                                internalType: "uint256",
                                name: "itemIdx",
                                type: "uint256"
                            }, {
                                internalType: "uint256",
                                name: "price",
                                type: "uint256"
                            }, {
                                internalType: "bytes32",
                                name: "itemHash",
                                type: "bytes32"
                            }, {
                                internalType: "contract IDelegate",
                                name: "executionDelegate",
                                type: "address"
                            }, {
                                internalType: "bytes",
                                name: "dataReplacement",
                                type: "bytes"
                            }, {
                                internalType: "uint256",
                                name: "bidIncentivePct",
                                type: "uint256"
                            }, {
                                internalType: "uint256",
                                name: "aucMinIncrementPct",
                                type: "uint256"
                            }, {
                                internalType: "uint256",
                                name: "aucIncDurationSecs",
                                type: "uint256"
                            }, {
                                components: [{
                                    internalType: "uint256",
                                    name: "percentage",
                                    type: "uint256"
                                }, {
                                    internalType: "address",
                                    name: "to",
                                    type: "address"
                                }],
                                internalType: "struct Market.Fee[]",
                                name: "fees",
                                type: "tuple[]"
                            }],
                            internalType: "struct Market.SettleDetail[]",
                            name: "details",
                            type: "tuple[]"
                        }, {
                            components: [{
                                internalType: "uint256",
                                name: "salt",
                                type: "uint256"
                            }, {
                                internalType: "uint256",
                                name: "deadline",
                                type: "uint256"
                            }, {
                                internalType: "uint256",
                                name: "amountToEth",
                                type: "uint256"
                            }, {
                                internalType: "uint256",
                                name: "amountToWeth",
                                type: "uint256"
                            }, {
                                internalType: "address",
                                name: "user",
                                type: "address"
                            }, {
                                internalType: "bool",
                                name: "canFail",
                                type: "bool"
                            }],
                            internalType: "struct Market.SettleShared",
                            name: "shared",
                            type: "tuple"
                        }, {
                            internalType: "bytes32",
                            name: "r",
                            type: "bytes32"
                        }, {
                            internalType: "bytes32",
                            name: "s",
                            type: "bytes32"
                        }, {
                            internalType: "uint8",
                            name: "v",
                            type: "uint8"
                        }],
                        internalType: "struct Market.RunInput",
                        name: "input",
                        type: "tuple"
                    }],
                    name: "run",
                    outputs: [],
                    stateMutability: "payable",
                    type: "function"
                }, {
                    inputs: [{
                        components: [{
                            internalType: "uint256",
                            name: "salt",
                            type: "uint256"
                        }, {
                            internalType: "address",
                            name: "user",
                            type: "address"
                        }, {
                            internalType: "uint256",
                            name: "network",
                            type: "uint256"
                        }, {
                            internalType: "uint256",
                            name: "intent",
                            type: "uint256"
                        }, {
                            internalType: "uint256",
                            name: "delegateType",
                            type: "uint256"
                        }, {
                            internalType: "uint256",
                            name: "deadline",
                            type: "uint256"
                        }, {
                            internalType: "contract IERC20Upgradeable",
                            name: "currency",
                            type: "address"
                        }, {
                            internalType: "bytes",
                            name: "dataMask",
                            type: "bytes"
                        }, {
                            components: [{
                                internalType: "uint256",
                                name: "price",
                                type: "uint256"
                            }, {
                                internalType: "bytes",
                                name: "data",
                                type: "bytes"
                            }],
                            internalType: "struct Market.OrderItem[]",
                            name: "items",
                            type: "tuple[]"
                        }, {
                            internalType: "bytes32",
                            name: "r",
                            type: "bytes32"
                        }, {
                            internalType: "bytes32",
                            name: "s",
                            type: "bytes32"
                        }, {
                            internalType: "uint8",
                            name: "v",
                            type: "uint8"
                        }, {
                            internalType: "uint8",
                            name: "signVersion",
                            type: "uint8"
                        }],
                        internalType: "struct Market.Order",
                        name: "order",
                        type: "tuple"
                    }, {
                        components: [{
                            internalType: "uint256",
                            name: "salt",
                            type: "uint256"
                        }, {
                            internalType: "uint256",
                            name: "deadline",
                            type: "uint256"
                        }, {
                            internalType: "uint256",
                            name: "amountToEth",
                            type: "uint256"
                        }, {
                            internalType: "uint256",
                            name: "amountToWeth",
                            type: "uint256"
                        }, {
                            internalType: "address",
                            name: "user",
                            type: "address"
                        }, {
                            internalType: "bool",
                            name: "canFail",
                            type: "bool"
                        }],
                        internalType: "struct Market.SettleShared",
                        name: "shared",
                        type: "tuple"
                    }, {
                        components: [{
                            internalType: "enum Market.Op",
                            name: "op",
                            type: "uint8"
                        }, {
                            internalType: "uint256",
                            name: "orderIdx",
                            type: "uint256"
                        }, {
                            internalType: "uint256",
                            name: "itemIdx",
                            type: "uint256"
                        }, {
                            internalType: "uint256",
                            name: "price",
                            type: "uint256"
                        }, {
                            internalType: "bytes32",
                            name: "itemHash",
                            type: "bytes32"
                        }, {
                            internalType: "contract IDelegate",
                            name: "executionDelegate",
                            type: "address"
                        }, {
                            internalType: "bytes",
                            name: "dataReplacement",
                            type: "bytes"
                        }, {
                            internalType: "uint256",
                            name: "bidIncentivePct",
                            type: "uint256"
                        }, {
                            internalType: "uint256",
                            name: "aucMinIncrementPct",
                            type: "uint256"
                        }, {
                            internalType: "uint256",
                            name: "aucIncDurationSecs",
                            type: "uint256"
                        }, {
                            components: [{
                                internalType: "uint256",
                                name: "percentage",
                                type: "uint256"
                            }, {
                                internalType: "address",
                                name: "to",
                                type: "address"
                            }],
                            internalType: "struct Market.Fee[]",
                            name: "fees",
                            type: "tuple[]"
                        }],
                        internalType: "struct Market.SettleDetail",
                        name: "detail",
                        type: "tuple"
                    }],
                    name: "run1",
                    outputs: [{
                        internalType: "uint256",
                        name: "",
                        type: "uint256"
                    }],
                    stateMutability: "nonpayable",
                    type: "function"
                }, {
                    inputs: [{
                        internalType: "address",
                        name: "",
                        type: "address"
                    }],
                    name: "signers",
                    outputs: [{
                        internalType: "bool",
                        name: "",
                        type: "bool"
                    }],
                    stateMutability: "view",
                    type: "function"
                }, {
                    inputs: [{
                        internalType: "address",
                        name: "newOwner",
                        type: "address"
                    }],
                    name: "transferOwnership",
                    outputs: [],
                    stateMutability: "nonpayable",
                    type: "function"
                }, {
                    inputs: [],
                    name: "unpause",
                    outputs: [],
                    stateMutability: "nonpayable",
                    type: "function"
                }, {
                    inputs: [{
                        internalType: "address[]",
                        name: "toAdd",
                        type: "address[]"
                    }, {
                        internalType: "address[]",
                        name: "toRemove",
                        type: "address[]"
                    }],
                    name: "updateDelegates",
                    outputs: [],
                    stateMutability: "nonpayable",
                    type: "function"
                }, {
                    inputs: [{
                        internalType: "uint256",
                        name: "val",
                        type: "uint256"
                    }],
                    name: "updateFeeCap",
                    outputs: [],
                    stateMutability: "nonpayable",
                    type: "function"
                }, {
                    inputs: [{
                        internalType: "address[]",
                        name: "toAdd",
                        type: "address[]"
                    }, {
                        internalType: "address[]",
                        name: "toRemove",
                        type: "address[]"
                    }],
                    name: "updateSigners",
                    outputs: [],
                    stateMutability: "nonpayable",
                    type: "function"
                }, {
                    inputs: [],
                    name: "weth",
                    outputs: [{
                        internalType: "contract IWETHUpgradable",
                        name: "",
                        type: "address"
                    }],
                    stateMutability: "view",
                    type: "function"
                }, {
                    stateMutability: "payable",
                    type: "receive"
                }]), (function(e, f, n) {
                    this.tradeType = t.PM.UnwrapWETH, this.wethAddress = M(f), this.amount = e, n && (n.details.token.toLowerCase() !== this.wethAddress.toLowerCase() && r(!1), n.details.amount >= e || r(!1), this.permit2Data = n)
                }).prototype.encode = function(e, f) {
                    U(e, {
                        permit2Permit: this.permit2Data,
                        permit2TransferFrom: {
                            token: this.wethAddress,
                            amount: this.amount.toString()
                        }
                    }), e.addCommand(t.wI.UNWRAP_WETH, [B, this.amount])
                };
            var Q = function() {
                function e() {}
                return e.swapCallParameters = function(f, n) {
                    void 0 === n && (n = {}), Array.isArray(f) || (f = [f]);
                    for (var i, a = f.filter(function(e) {
                            return Object.prototype.hasOwnProperty.call(e, "market")
                        }), o = 1 != a.length || 1 != a[0].orders.length, s = new k, u = y.BigNumber.from(0), d = y.BigNumber.from(0), c = new Set, l = I(f); !(i = l()).done;) {
                        var p = i.value;
                        if (p.tradeType == t.PM.NFTTrade) {
                            p.encode(s, {
                                allowRevert: o
                            });
                            var b = p.getTotalPrice();
                            p.market == t.IY.Seaport ? p.getInputTokens().forEach(function(e) {
                                c.add(e)
                            }) : c.add(F), u.lt(b) ? (d = d.add(b.sub(u)), u = y.BigNumber.from(0)) : u = u.sub(b)
                        } else if (p.tradeType == t.PM.UniswapTrade) {
                            var h = p.trade.inputAmount.currency.isNative,
                                m = p.trade.outputAmount.currency.isNative,
                                v = p.options;
                            h && v.inputTokenPermit && r(!1), v.inputTokenPermit && q(s, v.inputTokenPermit), h && (d = d.add(y.BigNumber.from(p.trade.maximumAmountIn(v.slippageTolerance).quotient.toString()))), m && v.recipient == B && (u = u.add(y.BigNumber.from(p.trade.minimumAmountOut(v.slippageTolerance).quotient.toString()))), p.encode(s, {
                                allowRevert: !1
                            })
                        } else if (p.tradeType == t.PM.UnwrapWETH) p.encode(s, {
                            allowRevert: !1
                        }), u = u.add(p.amount);
                        else {
                            if (p.tradeType != t.PM.WrapSTETH && p.tradeType != t.PM.UnwrapSTETH) throw "trade must be of instance: UniswapTrade, NFTTrade, UnwrapWETH, WrapSTETH";
                            p.encode(s, {
                                allowRevert: !1
                            })
                        }
                    }
                    return c.forEach(function(e) {
                        s.addCommand(t.wI.SWEEP, [e, N, 0])
                    }), e.encodePlan(s, d, n)
                }, e.swapNFTCallParameters = function(f, n) {
                    void 0 === n && (n = {});
                    for (var r, i = new k, a = y.BigNumber.from(0), o = 1 != f.length || 1 != f[0].orders.length, s = I(f); !(r = s()).done;) {
                        var u = r.value;
                        u.encode(i, {
                            allowRevert: o
                        }), a = a.add(u.getTotalPrice())
                    }
                    return i.addCommand(t.wI.SWEEP, [F, N, 0]), e.encodePlan(i, a, n)
                }, e.swapERC20CallParameters = function(t, f) {
                    var n = new k;
                    console.log(t, "trades");
                    var i = new j(t, f),
                        a = i.trade.inputAmount.currency;
                    a.isNative && f.inputTokenPermit && r(!1), f.inputTokenPermit && q(n, f.inputTokenPermit);
                    var o = y.BigNumber.from(a.isNative ? i.trade.maximumAmountIn(f.slippageTolerance).quotient.toString() : 0);
                    return console.log("before trade.encode"), i.encode(n, {
                        allowRevert: !1
                    }), console.log(n, "planner111"), e.encodePlan(n, o, {
                        deadline: f.deadlineOrPreviousBlockhash ? y.BigNumber.from(f.deadlineOrPreviousBlockhash) : void 0
                    })
                }, e.encodePlan = function(t, f, n) {
                    void 0 === n && (n = {});
                    var r = t.commands,
                        i = t.inputs;
                    return {
                        calldata: e.INTERFACE.encodeFunctionData(n.deadline ? "execute(bytes,bytes[],uint256)" : "execute(bytes,bytes[])", n.deadline ? [r, i, n.deadline] : [r, i]),
                        value: f.toHexString()
                    }
                }, e
            }();
            Q.INTERFACE = new o.Interface([{
                inputs: [{
                    components: [{
                        internalType: "address",
                        name: "permit2",
                        type: "address"
                    }, {
                        internalType: "address",
                        name: "weth9",
                        type: "address"
                    }, {
                        internalType: "address",
                        name: "steth",
                        type: "address"
                    }, {
                        internalType: "address",
                        name: "wsteth",
                        type: "address"
                    }, {
                        internalType: "address",
                        name: "fewFactory",
                        type: "address"
                    }, {
                        internalType: "address",
                        name: "seaportV1_5",
                        type: "address"
                    }, {
                        internalType: "address",
                        name: "seaportV1_4",
                        type: "address"
                    }, {
                        internalType: "address",
                        name: "openseaConduit",
                        type: "address"
                    }, {
                        internalType: "address",
                        name: "nftxZap",
                        type: "address"
                    }, {
                        internalType: "address",
                        name: "x2y2",
                        type: "address"
                    }, {
                        internalType: "address",
                        name: "foundation",
                        type: "address"
                    }, {
                        internalType: "address",
                        name: "sudoswap",
                        type: "address"
                    }, {
                        internalType: "address",
                        name: "elementMarket",
                        type: "address"
                    }, {
                        internalType: "address",
                        name: "nft20Zap",
                        type: "address"
                    }, {
                        internalType: "address",
                        name: "cryptopunks",
                        type: "address"
                    }, {
                        internalType: "address",
                        name: "looksRareV2",
                        type: "address"
                    }, {
                        internalType: "address",
                        name: "routerRewardsDistributor",
                        type: "address"
                    }, {
                        internalType: "address",
                        name: "looksRareRewardsDistributor",
                        type: "address"
                    }, {
                        internalType: "address",
                        name: "looksRareToken",
                        type: "address"
                    }, {
                        internalType: "address",
                        name: "v2Factory",
                        type: "address"
                    }, {
                        internalType: "address",
                        name: "v3Factory",
                        type: "address"
                    }, {
                        internalType: "bytes32",
                        name: "pairInitCodeHash",
                        type: "bytes32"
                    }, {
                        internalType: "bytes32",
                        name: "poolInitCodeHash",
                        type: "bytes32"
                    }],
                    internalType: "struct RouterParameters",
                    name: "params",
                    type: "tuple"
                }],
                stateMutability: "nonpayable",
                type: "constructor"
            }, {
                inputs: [],
                name: "BalanceTooLow",
                type: "error"
            }, {
                inputs: [],
                name: "BuyPunkFailed",
                type: "error"
            }, {
                inputs: [],
                name: "ContractLocked",
                type: "error"
            }, {
                inputs: [],
                name: "ETHNotAccepted",
                type: "error"
            }, {
                inputs: [{
                    internalType: "uint256",
                    name: "commandIndex",
                    type: "uint256"
                }, {
                    internalType: "bytes",
                    name: "message",
                    type: "bytes"
                }],
                name: "ExecutionFailed",
                type: "error"
            }, {
                inputs: [],
                name: "FewV1InvalidPath",
                type: "error"
            }, {
                inputs: [],
                name: "FewV1TooLittleReceived",
                type: "error"
            }, {
                inputs: [],
                name: "FewV1TooMuchRequested",
                type: "error"
            }, {
                inputs: [],
                name: "FromAddressIsNotOwner",
                type: "error"
            }, {
                inputs: [],
                name: "InsufficientETH",
                type: "error"
            }, {
                inputs: [],
                name: "InsufficientSTETH",
                type: "error"
            }, {
                inputs: [],
                name: "InsufficientToken",
                type: "error"
            }, {
                inputs: [],
                name: "InvalidBips",
                type: "error"
            }, {
                inputs: [{
                    internalType: "uint256",
                    name: "commandType",
                    type: "uint256"
                }],
                name: "InvalidCommandType",
                type: "error"
            }, {
                inputs: [],
                name: "InvalidOwnerERC1155",
                type: "error"
            }, {
                inputs: [],
                name: "InvalidOwnerERC721",
                type: "error"
            }, {
                inputs: [],
                name: "InvalidPath",
                type: "error"
            }, {
                inputs: [],
                name: "InvalidReserves",
                type: "error"
            }, {
                inputs: [],
                name: "InvalidSpender",
                type: "error"
            }, {
                inputs: [],
                name: "LengthMismatch",
                type: "error"
            }, {
                inputs: [],
                name: "SliceOutOfBounds",
                type: "error"
            }, {
                inputs: [],
                name: "TransactionDeadlinePassed",
                type: "error"
            }, {
                inputs: [],
                name: "UnableToClaim",
                type: "error"
            }, {
                inputs: [],
                name: "UnsafeCast",
                type: "error"
            }, {
                inputs: [],
                name: "V2InvalidPath",
                type: "error"
            }, {
                inputs: [],
                name: "V2TooLittleReceived",
                type: "error"
            }, {
                inputs: [],
                name: "V2TooMuchRequested",
                type: "error"
            }, {
                inputs: [],
                name: "V3InvalidAmountOut",
                type: "error"
            }, {
                inputs: [],
                name: "V3InvalidCaller",
                type: "error"
            }, {
                inputs: [],
                name: "V3InvalidSwap",
                type: "error"
            }, {
                inputs: [],
                name: "V3TooLittleReceived",
                type: "error"
            }, {
                inputs: [],
                name: "V3TooMuchRequested",
                type: "error"
            }, {
                anonymous: !1,
                inputs: [{
                    indexed: !1,
                    internalType: "uint256",
                    name: "amount",
                    type: "uint256"
                }],
                name: "RewardsSent",
                type: "event"
            }, {
                inputs: [{
                    internalType: "bytes",
                    name: "looksRareClaim",
                    type: "bytes"
                }],
                name: "collectRewards",
                outputs: [],
                stateMutability: "nonpayable",
                type: "function"
            }, {
                inputs: [{
                    internalType: "bytes",
                    name: "commands",
                    type: "bytes"
                }, {
                    internalType: "bytes[]",
                    name: "inputs",
                    type: "bytes[]"
                }],
                name: "execute",
                outputs: [],
                stateMutability: "payable",
                type: "function"
            }, {
                inputs: [{
                    internalType: "bytes",
                    name: "commands",
                    type: "bytes"
                }, {
                    internalType: "bytes[]",
                    name: "inputs",
                    type: "bytes[]"
                }, {
                    internalType: "uint256",
                    name: "deadline",
                    type: "uint256"
                }],
                name: "execute",
                outputs: [],
                stateMutability: "payable",
                type: "function"
            }, {
                inputs: [{
                    internalType: "address",
                    name: "",
                    type: "address"
                }, {
                    internalType: "address",
                    name: "",
                    type: "address"
                }, {
                    internalType: "uint256[]",
                    name: "",
                    type: "uint256[]"
                }, {
                    internalType: "uint256[]",
                    name: "",
                    type: "uint256[]"
                }, {
                    internalType: "bytes",
                    name: "",
                    type: "bytes"
                }],
                name: "onERC1155BatchReceived",
                outputs: [{
                    internalType: "bytes4",
                    name: "",
                    type: "bytes4"
                }],
                stateMutability: "pure",
                type: "function"
            }, {
                inputs: [{
                    internalType: "address",
                    name: "",
                    type: "address"
                }, {
                    internalType: "address",
                    name: "",
                    type: "address"
                }, {
                    internalType: "uint256",
                    name: "",
                    type: "uint256"
                }, {
                    internalType: "uint256",
                    name: "",
                    type: "uint256"
                }, {
                    internalType: "bytes",
                    name: "",
                    type: "bytes"
                }],
                name: "onERC1155Received",
                outputs: [{
                    internalType: "bytes4",
                    name: "",
                    type: "bytes4"
                }],
                stateMutability: "pure",
                type: "function"
            }, {
                inputs: [{
                    internalType: "address",
                    name: "",
                    type: "address"
                }, {
                    internalType: "address",
                    name: "",
                    type: "address"
                }, {
                    internalType: "uint256",
                    name: "",
                    type: "uint256"
                }, {
                    internalType: "bytes",
                    name: "",
                    type: "bytes"
                }],
                name: "onERC721Received",
                outputs: [{
                    internalType: "bytes4",
                    name: "",
                    type: "bytes4"
                }],
                stateMutability: "pure",
                type: "function"
            }, {
                inputs: [{
                    internalType: "bytes4",
                    name: "interfaceId",
                    type: "bytes4"
                }],
                name: "supportsInterface",
                outputs: [{
                    internalType: "bool",
                    name: "",
                    type: "bool"
                }],
                stateMutability: "pure",
                type: "function"
            }, {
                inputs: [{
                    internalType: "int256",
                    name: "amount0Delta",
                    type: "int256"
                }, {
                    internalType: "int256",
                    name: "amount1Delta",
                    type: "int256"
                }, {
                    internalType: "bytes",
                    name: "data",
                    type: "bytes"
                }],
                name: "uniswapV3SwapCallback",
                outputs: [],
                stateMutability: "nonpayable",
                type: "function"
            }, {
                stateMutability: "payable",
                type: "receive"
            }]), t.PERMIT2_ADDRESS = function(e) {
                return e in x ? x[e] : "0x000000000022D473030F116dDEE9F6B43aC78BA3"
            }, t.SwapRouter = Q, t.UNIVERSAL_ROUTER_ADDRESS = function(e) {
                if (!(e in P)) throw Error("Universal Router not deployed on chain " + e);
                return P[e].router
            }, t.WETH_ADDRESS = M
        },
        8269: (e, t, f) => {
            "use strict";
            e.exports = f(2764)
        },
        63439: function(e, t, f) {
            ! function(e, t) {
                "use strict";

                function n(e, t) {
                    if (!e) throw Error(t || "Assertion failed")
                }

                function r(e, t) {
                    e.super_ = t;
                    var f = function() {};
                    f.prototype = t.prototype, e.prototype = new f, e.prototype.constructor = e
                }

                function i(e, t, f) {
                    if (i.isBN(e)) return e;
                    this.negative = 0, this.words = null, this.length = 0, this.red = null, null !== e && (("le" === t || "be" === t) && (f = t, t = 10), this._init(e || 0, t || 10, f || "be"))
                }
                "object" == typeof e ? e.exports = i : t.BN = i, i.BN = i, i.wordSize = 26;
                try {
                    c = "undefined" != typeof window && void 0 !== window.Buffer ? window.Buffer : f(46601).Buffer
                } catch (e) {}

                function a(e, t) {
                    var f = e.charCodeAt(t);
                    return f >= 48 && f <= 57 ? f - 48 : f >= 65 && f <= 70 ? f - 55 : f >= 97 && f <= 102 ? f - 87 : void n(!1, "Invalid character in " + e)
                }

                function o(e, t, f) {
                    var n = a(e, f);
                    return f - 1 >= t && (n |= a(e, f - 1) << 4), n
                }

                function s(e, t, f, r) {
                    for (var i = 0, a = 0, o = Math.min(e.length, f), s = t; s < o; s++) {
                        var u = e.charCodeAt(s) - 48;
                        i *= r, a = u >= 49 ? u - 49 + 10 : u >= 17 ? u - 17 + 10 : u, n(u >= 0 && a < r, "Invalid character"), i += a
                    }
                    return i
                }

                function u(e, t) {
                    e.words = t.words, e.length = t.length, e.negative = t.negative, e.red = t.red
                }
                if (i.isBN = function(e) {
                        return e instanceof i || null !== e && "object" == typeof e && e.constructor.wordSize === i.wordSize && Array.isArray(e.words)
                    }, i.max = function(e, t) {
                        return e.cmp(t) > 0 ? e : t
                    }, i.min = function(e, t) {
                        return 0 > e.cmp(t) ? e : t
                    }, i.prototype._init = function(e, t, f) {
                        if ("number" == typeof e) return this._initNumber(e, t, f);
                        if ("object" == typeof e) return this._initArray(e, t, f);
                        "hex" === t && (t = 16), n(t === (0 | t) && t >= 2 && t <= 36);
                        var r = 0;
                        "-" === (e = e.toString().replace(/\s+/g, ""))[0] && (r++, this.negative = 1), r < e.length && (16 === t ? this._parseHex(e, r, f) : (this._parseBase(e, t, r), "le" === f && this._initArray(this.toArray(), t, f)))
                    }, i.prototype._initNumber = function(e, t, f) {
                        e < 0 && (this.negative = 1, e = -e), e < 67108864 ? (this.words = [67108863 & e], this.length = 1) : e < 4503599627370496 ? (this.words = [67108863 & e, e / 67108864 & 67108863], this.length = 2) : (n(e < 9007199254740992), this.words = [67108863 & e, e / 67108864 & 67108863, 1], this.length = 3), "le" === f && this._initArray(this.toArray(), t, f)
                    }, i.prototype._initArray = function(e, t, f) {
                        if (n("number" == typeof e.length), e.length <= 0) return this.words = [0], this.length = 1, this;
                        this.length = Math.ceil(e.length / 3), this.words = Array(this.length);
                        for (var r, i, a = 0; a < this.length; a++) this.words[a] = 0;
                        var o = 0;
                        if ("be" === f)
                            for (a = e.length - 1, r = 0; a >= 0; a -= 3) i = e[a] | e[a - 1] << 8 | e[a - 2] << 16, this.words[r] |= i << o & 67108863, this.words[r + 1] = i >>> 26 - o & 67108863, (o += 24) >= 26 && (o -= 26, r++);
                        else if ("le" === f)
                            for (a = 0, r = 0; a < e.length; a += 3) i = e[a] | e[a + 1] << 8 | e[a + 2] << 16, this.words[r] |= i << o & 67108863, this.words[r + 1] = i >>> 26 - o & 67108863, (o += 24) >= 26 && (o -= 26, r++);
                        return this._strip()
                    }, i.prototype._parseHex = function(e, t, f) {
                        this.length = Math.ceil((e.length - t) / 6), this.words = Array(this.length);
                        for (var n, r = 0; r < this.length; r++) this.words[r] = 0;
                        var i = 0,
                            a = 0;
                        if ("be" === f)
                            for (r = e.length - 1; r >= t; r -= 2) n = o(e, t, r) << i, this.words[a] |= 67108863 & n, i >= 18 ? (i -= 18, a += 1, this.words[a] |= n >>> 26) : i += 8;
                        else
                            for (r = (e.length - t) % 2 == 0 ? t + 1 : t; r < e.length; r += 2) n = o(e, t, r) << i, this.words[a] |= 67108863 & n, i >= 18 ? (i -= 18, a += 1, this.words[a] |= n >>> 26) : i += 8;
                        this._strip()
                    }, i.prototype._parseBase = function(e, t, f) {
                        this.words = [0], this.length = 1;
                        for (var n = 0, r = 1; r <= 67108863; r *= t) n++;
                        n--, r = r / t | 0;
                        for (var i = e.length - f, a = i % n, o = Math.min(i, i - a) + f, u = 0, d = f; d < o; d += n) u = s(e, d, d + n, t), this.imuln(r), this.words[0] + u < 67108864 ? this.words[0] += u : this._iaddn(u);
                        if (0 !== a) {
                            var c = 1;
                            for (u = s(e, d, e.length, t), d = 0; d < a; d++) c *= t;
                            this.imuln(c), this.words[0] + u < 67108864 ? this.words[0] += u : this._iaddn(u)
                        }
                        this._strip()
                    }, i.prototype.copy = function(e) {
                        e.words = Array(this.length);
                        for (var t = 0; t < this.length; t++) e.words[t] = this.words[t];
                        e.length = this.length, e.negative = this.negative, e.red = this.red
                    }, i.prototype._move = function(e) {
                        u(e, this)
                    }, i.prototype.clone = function() {
                        var e = new i(null);
                        return this.copy(e), e
                    }, i.prototype._expand = function(e) {
                        for (; this.length < e;) this.words[this.length++] = 0;
                        return this
                    }, i.prototype._strip = function() {
                        for (; this.length > 1 && 0 === this.words[this.length - 1];) this.length--;
                        return this._normSign()
                    }, i.prototype._normSign = function() {
                        return 1 === this.length && 0 === this.words[0] && (this.negative = 0), this
                    }, "undefined" != typeof Symbol && "function" == typeof Symbol.for) try {
                    i.prototype[Symbol.for("nodejs.util.inspect.custom")] = d
                } catch (e) {
                    i.prototype.inspect = d
                } else i.prototype.inspect = d;

                function d() {
                    return (this.red ? "<BN-R: " : "<BN: ") + this.toString(16) + ">"
                }
                var c, l = ["", "0", "00", "000", "0000", "00000", "000000", "0000000", "00000000", "000000000", "0000000000", "00000000000", "000000000000", "0000000000000", "00000000000000", "000000000000000", "0000000000000000", "00000000000000000", "000000000000000000", "0000000000000000000", "00000000000000000000", "000000000000000000000", "0000000000000000000000", "00000000000000000000000", "000000000000000000000000", "0000000000000000000000000"],
                    p = [0, 0, 25, 16, 12, 11, 10, 9, 8, 8, 7, 7, 7, 7, 6, 6, 6, 6, 6, 6, 6, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5, 5],
                    y = [0, 0, 33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216, 43046721, 1e7, 19487171, 35831808, 62748517, 7529536, 11390625, 16777216, 24137569, 34012224, 47045881, 64e6, 4084101, 5153632, 6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149, 243e5, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176];

                function b(e, t, f) {
                    f.negative = t.negative ^ e.negative;
                    var n = e.length + t.length | 0;
                    f.length = n, n = n - 1 | 0;
                    var r = 0 | e.words[0],
                        i = 0 | t.words[0],
                        a = r * i,
                        o = 67108863 & a,
                        s = a / 67108864 | 0;
                    f.words[0] = o;
                    for (var u = 1; u < n; u++) {
                        for (var d = s >>> 26, c = 67108863 & s, l = Math.min(u, t.length - 1), p = Math.max(0, u - e.length + 1); p <= l; p++) {
                            var y = u - p | 0;
                            d += (a = (r = 0 | e.words[y]) * (i = 0 | t.words[p]) + c) / 67108864 | 0, c = 67108863 & a
                        }
                        f.words[u] = 0 | c, s = 0 | d
                    }
                    return 0 !== s ? f.words[u] = 0 | s : f.length--, f._strip()
                }
                i.prototype.toString = function(e, t) {
                    if (t = 0 | t || 1, 16 === (e = e || 10) || "hex" === e) {
                        f = "";
                        for (var f, r = 0, i = 0, a = 0; a < this.length; a++) {
                            var o = this.words[a],
                                s = ((o << r | i) & 16777215).toString(16);
                            i = o >>> 24 - r & 16777215, (r += 2) >= 26 && (r -= 26, a--), f = 0 !== i || a !== this.length - 1 ? l[6 - s.length] + s + f : s + f
                        }
                        for (0 !== i && (f = i.toString(16) + f); f.length % t != 0;) f = "0" + f;
                        return 0 !== this.negative && (f = "-" + f), f
                    }
                    if (e === (0 | e) && e >= 2 && e <= 36) {
                        var u = p[e],
                            d = y[e];
                        f = "";
                        var c = this.clone();
                        for (c.negative = 0; !c.isZero();) {
                            var b = c.modrn(d).toString(e);
                            f = (c = c.idivn(d)).isZero() ? b + f : l[u - b.length] + b + f
                        }
                        for (this.isZero() && (f = "0" + f); f.length % t != 0;) f = "0" + f;
                        return 0 !== this.negative && (f = "-" + f), f
                    }
                    n(!1, "Base should be between 2 and 36")
                }, i.prototype.toNumber = function() {
                    var e = this.words[0];
                    return 2 === this.length ? e += 67108864 * this.words[1] : 3 === this.length && 1 === this.words[2] ? e += 4503599627370496 + 67108864 * this.words[1] : this.length > 2 && n(!1, "Number can only safely store up to 53 bits"), 0 !== this.negative ? -e : e
                }, i.prototype.toJSON = function() {
                    return this.toString(16, 2)
                }, c && (i.prototype.toBuffer = function(e, t) {
                    return this.toArrayLike(c, e, t)
                }), i.prototype.toArray = function(e, t) {
                    return this.toArrayLike(Array, e, t)
                }, i.prototype.toArrayLike = function(e, t, f) {
                    this._strip();
                    var r = this.byteLength(),
                        i = f || Math.max(1, r);
                    n(r <= i, "byte array longer than desired length"), n(i > 0, "Requested array length <= 0");
                    var a = e.allocUnsafe ? e.allocUnsafe(i) : new e(i);
                    return this["_toArrayLike" + ("le" === t ? "LE" : "BE")](a, r), a
                }, i.prototype._toArrayLikeLE = function(e, t) {
                    for (var f = 0, n = 0, r = 0, i = 0; r < this.length; r++) {
                        var a = this.words[r] << i | n;
                        e[f++] = 255 & a, f < e.length && (e[f++] = a >> 8 & 255), f < e.length && (e[f++] = a >> 16 & 255), 6 === i ? (f < e.length && (e[f++] = a >> 24 & 255), n = 0, i = 0) : (n = a >>> 24, i += 2)
                    }
                    if (f < e.length)
                        for (e[f++] = n; f < e.length;) e[f++] = 0
                }, i.prototype._toArrayLikeBE = function(e, t) {
                    for (var f = e.length - 1, n = 0, r = 0, i = 0; r < this.length; r++) {
                        var a = this.words[r] << i | n;
                        e[f--] = 255 & a, f >= 0 && (e[f--] = a >> 8 & 255), f >= 0 && (e[f--] = a >> 16 & 255), 6 === i ? (f >= 0 && (e[f--] = a >> 24 & 255), n = 0, i = 0) : (n = a >>> 24, i += 2)
                    }
                    if (f >= 0)
                        for (e[f--] = n; f >= 0;) e[f--] = 0
                }, Math.clz32 ? i.prototype._countBits = function(e) {
                    return 32 - Math.clz32(e)
                } : i.prototype._countBits = function(e) {
                    var t = e,
                        f = 0;
                    return t >= 4096 && (f += 13, t >>>= 13), t >= 64 && (f += 7, t >>>= 7), t >= 8 && (f += 4, t >>>= 4), t >= 2 && (f += 2, t >>>= 2), f + t
                }, i.prototype._zeroBits = function(e) {
                    if (0 === e) return 26;
                    var t = e,
                        f = 0;
                    return (8191 & t) == 0 && (f += 13, t >>>= 13), (127 & t) == 0 && (f += 7, t >>>= 7), (15 & t) == 0 && (f += 4, t >>>= 4), (3 & t) == 0 && (f += 2, t >>>= 2), (1 & t) == 0 && f++, f
                }, i.prototype.bitLength = function() {
                    var e = this.words[this.length - 1],
                        t = this._countBits(e);
                    return (this.length - 1) * 26 + t
                }, i.prototype.zeroBits = function() {
                    if (this.isZero()) return 0;
                    for (var e = 0, t = 0; t < this.length; t++) {
                        var f = this._zeroBits(this.words[t]);
                        if (e += f, 26 !== f) break
                    }
                    return e
                }, i.prototype.byteLength = function() {
                    return Math.ceil(this.bitLength() / 8)
                }, i.prototype.toTwos = function(e) {
                    return 0 !== this.negative ? this.abs().inotn(e).iaddn(1) : this.clone()
                }, i.prototype.fromTwos = function(e) {
                    return this.testn(e - 1) ? this.notn(e).iaddn(1).ineg() : this.clone()
                }, i.prototype.isNeg = function() {
                    return 0 !== this.negative
                }, i.prototype.neg = function() {
                    return this.clone().ineg()
                }, i.prototype.ineg = function() {
                    return this.isZero() || (this.negative ^= 1), this
                }, i.prototype.iuor = function(e) {
                    for (; this.length < e.length;) this.words[this.length++] = 0;
                    for (var t = 0; t < e.length; t++) this.words[t] = this.words[t] | e.words[t];
                    return this._strip()
                }, i.prototype.ior = function(e) {
                    return n((this.negative | e.negative) == 0), this.iuor(e)
                }, i.prototype.or = function(e) {
                    return this.length > e.length ? this.clone().ior(e) : e.clone().ior(this)
                }, i.prototype.uor = function(e) {
                    return this.length > e.length ? this.clone().iuor(e) : e.clone().iuor(this)
                }, i.prototype.iuand = function(e) {
                    var t;
                    t = this.length > e.length ? e : this;
                    for (var f = 0; f < t.length; f++) this.words[f] = this.words[f] & e.words[f];
                    return this.length = t.length, this._strip()
                }, i.prototype.iand = function(e) {
                    return n((this.negative | e.negative) == 0), this.iuand(e)
                }, i.prototype.and = function(e) {
                    return this.length > e.length ? this.clone().iand(e) : e.clone().iand(this)
                }, i.prototype.uand = function(e) {
                    return this.length > e.length ? this.clone().iuand(e) : e.clone().iuand(this)
                }, i.prototype.iuxor = function(e) {
                    this.length > e.length ? (t = this, f = e) : (t = e, f = this);
                    for (var t, f, n = 0; n < f.length; n++) this.words[n] = t.words[n] ^ f.words[n];
                    if (this !== t)
                        for (; n < t.length; n++) this.words[n] = t.words[n];
                    return this.length = t.length, this._strip()
                }, i.prototype.ixor = function(e) {
                    return n((this.negative | e.negative) == 0), this.iuxor(e)
                }, i.prototype.xor = function(e) {
                    return this.length > e.length ? this.clone().ixor(e) : e.clone().ixor(this)
                }, i.prototype.uxor = function(e) {
                    return this.length > e.length ? this.clone().iuxor(e) : e.clone().iuxor(this)
                }, i.prototype.inotn = function(e) {
                    n("number" == typeof e && e >= 0);
                    var t = 0 | Math.ceil(e / 26),
                        f = e % 26;
                    this._expand(t), f > 0 && t--;
                    for (var r = 0; r < t; r++) this.words[r] = 67108863 & ~this.words[r];
                    return f > 0 && (this.words[r] = ~this.words[r] & 67108863 >> 26 - f), this._strip()
                }, i.prototype.notn = function(e) {
                    return this.clone().inotn(e)
                }, i.prototype.setn = function(e, t) {
                    n("number" == typeof e && e >= 0);
                    var f = e / 26 | 0,
                        r = e % 26;
                    return this._expand(f + 1), t ? this.words[f] = this.words[f] | 1 << r : this.words[f] = this.words[f] & ~(1 << r), this._strip()
                }, i.prototype.iadd = function(e) {
                    if (0 !== this.negative && 0 === e.negative) return this.negative = 0, t = this.isub(e), this.negative ^= 1, this._normSign();
                    if (0 === this.negative && 0 !== e.negative) return e.negative = 0, t = this.isub(e), e.negative = 1, t._normSign();
                    this.length > e.length ? (f = this, n = e) : (f = e, n = this);
                    for (var t, f, n, r = 0, i = 0; i < n.length; i++) t = (0 | f.words[i]) + (0 | n.words[i]) + r, this.words[i] = 67108863 & t, r = t >>> 26;
                    for (; 0 !== r && i < f.length; i++) t = (0 | f.words[i]) + r, this.words[i] = 67108863 & t, r = t >>> 26;
                    if (this.length = f.length, 0 !== r) this.words[this.length] = r, this.length++;
                    else if (f !== this)
                        for (; i < f.length; i++) this.words[i] = f.words[i];
                    return this
                }, i.prototype.add = function(e) {
                    var t;
                    return 0 !== e.negative && 0 === this.negative ? (e.negative = 0, t = this.sub(e), e.negative ^= 1, t) : 0 === e.negative && 0 !== this.negative ? (this.negative = 0, t = e.sub(this), this.negative = 1, t) : this.length > e.length ? this.clone().iadd(e) : e.clone().iadd(this)
                }, i.prototype.isub = function(e) {
                    if (0 !== e.negative) {
                        e.negative = 0;
                        var t, f, n = this.iadd(e);
                        return e.negative = 1, n._normSign()
                    }
                    if (0 !== this.negative) return this.negative = 0, this.iadd(e), this.negative = 1, this._normSign();
                    var r = this.cmp(e);
                    if (0 === r) return this.negative = 0, this.length = 1, this.words[0] = 0, this;
                    r > 0 ? (t = this, f = e) : (t = e, f = this);
                    for (var i = 0, a = 0; a < f.length; a++) i = (n = (0 | t.words[a]) - (0 | f.words[a]) + i) >> 26, this.words[a] = 67108863 & n;
                    for (; 0 !== i && a < t.length; a++) i = (n = (0 | t.words[a]) + i) >> 26, this.words[a] = 67108863 & n;
                    if (0 === i && a < t.length && t !== this)
                        for (; a < t.length; a++) this.words[a] = t.words[a];
                    return this.length = Math.max(this.length, a), t !== this && (this.negative = 1), this._strip()
                }, i.prototype.sub = function(e) {
                    return this.clone().isub(e)
                };
                var h = function(e, t, f) {
                    var n, r, i, a = e.words,
                        o = t.words,
                        s = f.words,
                        u = 0,
                        d = 0 | a[0],
                        c = 8191 & d,
                        l = d >>> 13,
                        p = 0 | a[1],
                        y = 8191 & p,
                        b = p >>> 13,
                        h = 0 | a[2],
                        m = 8191 & h,
                        v = h >>> 13,
                        T = 0 | a[3],
                        g = 8191 & T,
                        w = T >>> 13,
                        A = 0 | a[4],
                        I = 8191 & A,
                        E = A >>> 13,
                        _ = 0 | a[5],
                        k = 8191 & _,
                        C = _ >>> 13,
                        S = 0 | a[6],
                        O = 8191 & S,
                        P = S >>> 13,
                        M = 0 | a[7],
                        x = 8191 & M,
                        R = M >>> 13,
                        F = 0 | a[8],
                        D = 8191 & F,
                        N = F >>> 13,
                        B = 0 | a[9],
                        L = 8191 & B,
                        q = B >>> 13,
                        U = 0 | o[0],
                        V = 8191 & U,
                        G = U >>> 13,
                        j = 0 | o[1],
                        $ = 8191 & j,
                        H = j >>> 13,
                        W = 0 | o[2],
                        Q = 8191 & W,
                        X = W >>> 13,
                        z = 0 | o[3],
                        K = 8191 & z,
                        Y = z >>> 13,
                        J = 0 | o[4],
                        Z = 8191 & J,
                        ee = J >>> 13,
                        et = 0 | o[5],
                        ef = 8191 & et,
                        en = et >>> 13,
                        er = 0 | o[6],
                        ei = 8191 & er,
                        ea = er >>> 13,
                        eo = 0 | o[7],
                        es = 8191 & eo,
                        eu = eo >>> 13,
                        ed = 0 | o[8],
                        ec = 8191 & ed,
                        el = ed >>> 13,
                        ep = 0 | o[9],
                        ey = 8191 & ep,
                        eb = ep >>> 13;
                    f.negative = e.negative ^ t.negative, f.length = 19;
                    var eh = (u + (n = Math.imul(c, V)) | 0) + ((8191 & (r = (r = Math.imul(c, G)) + Math.imul(l, V) | 0)) << 13) | 0;
                    u = ((i = Math.imul(l, G)) + (r >>> 13) | 0) + (eh >>> 26) | 0, eh &= 67108863, n = Math.imul(y, V), r = (r = Math.imul(y, G)) + Math.imul(b, V) | 0, i = Math.imul(b, G);
                    var em = (u + (n = n + Math.imul(c, $) | 0) | 0) + ((8191 & (r = (r = r + Math.imul(c, H) | 0) + Math.imul(l, $) | 0)) << 13) | 0;
                    u = ((i = i + Math.imul(l, H) | 0) + (r >>> 13) | 0) + (em >>> 26) | 0, em &= 67108863, n = Math.imul(m, V), r = (r = Math.imul(m, G)) + Math.imul(v, V) | 0, i = Math.imul(v, G), n = n + Math.imul(y, $) | 0, r = (r = r + Math.imul(y, H) | 0) + Math.imul(b, $) | 0, i = i + Math.imul(b, H) | 0;
                    var ev = (u + (n = n + Math.imul(c, Q) | 0) | 0) + ((8191 & (r = (r = r + Math.imul(c, X) | 0) + Math.imul(l, Q) | 0)) << 13) | 0;
                    u = ((i = i + Math.imul(l, X) | 0) + (r >>> 13) | 0) + (ev >>> 26) | 0, ev &= 67108863, n = Math.imul(g, V), r = (r = Math.imul(g, G)) + Math.imul(w, V) | 0, i = Math.imul(w, G), n = n + Math.imul(m, $) | 0, r = (r = r + Math.imul(m, H) | 0) + Math.imul(v, $) | 0, i = i + Math.imul(v, H) | 0, n = n + Math.imul(y, Q) | 0, r = (r = r + Math.imul(y, X) | 0) + Math.imul(b, Q) | 0, i = i + Math.imul(b, X) | 0;
                    var eT = (u + (n = n + Math.imul(c, K) | 0) | 0) + ((8191 & (r = (r = r + Math.imul(c, Y) | 0) + Math.imul(l, K) | 0)) << 13) | 0;
                    u = ((i = i + Math.imul(l, Y) | 0) + (r >>> 13) | 0) + (eT >>> 26) | 0, eT &= 67108863, n = Math.imul(I, V), r = (r = Math.imul(I, G)) + Math.imul(E, V) | 0, i = Math.imul(E, G), n = n + Math.imul(g, $) | 0, r = (r = r + Math.imul(g, H) | 0) + Math.imul(w, $) | 0, i = i + Math.imul(w, H) | 0, n = n + Math.imul(m, Q) | 0, r = (r = r + Math.imul(m, X) | 0) + Math.imul(v, Q) | 0, i = i + Math.imul(v, X) | 0, n = n + Math.imul(y, K) | 0, r = (r = r + Math.imul(y, Y) | 0) + Math.imul(b, K) | 0, i = i + Math.imul(b, Y) | 0;
                    var eg = (u + (n = n + Math.imul(c, Z) | 0) | 0) + ((8191 & (r = (r = r + Math.imul(c, ee) | 0) + Math.imul(l, Z) | 0)) << 13) | 0;
                    u = ((i = i + Math.imul(l, ee) | 0) + (r >>> 13) | 0) + (eg >>> 26) | 0, eg &= 67108863, n = Math.imul(k, V), r = (r = Math.imul(k, G)) + Math.imul(C, V) | 0, i = Math.imul(C, G), n = n + Math.imul(I, $) | 0, r = (r = r + Math.imul(I, H) | 0) + Math.imul(E, $) | 0, i = i + Math.imul(E, H) | 0, n = n + Math.imul(g, Q) | 0, r = (r = r + Math.imul(g, X) | 0) + Math.imul(w, Q) | 0, i = i + Math.imul(w, X) | 0, n = n + Math.imul(m, K) | 0, r = (r = r + Math.imul(m, Y) | 0) + Math.imul(v, K) | 0, i = i + Math.imul(v, Y) | 0, n = n + Math.imul(y, Z) | 0, r = (r = r + Math.imul(y, ee) | 0) + Math.imul(b, Z) | 0, i = i + Math.imul(b, ee) | 0;
                    var ew = (u + (n = n + Math.imul(c, ef) | 0) | 0) + ((8191 & (r = (r = r + Math.imul(c, en) | 0) + Math.imul(l, ef) | 0)) << 13) | 0;
                    u = ((i = i + Math.imul(l, en) | 0) + (r >>> 13) | 0) + (ew >>> 26) | 0, ew &= 67108863, n = Math.imul(O, V), r = (r = Math.imul(O, G)) + Math.imul(P, V) | 0, i = Math.imul(P, G), n = n + Math.imul(k, $) | 0, r = (r = r + Math.imul(k, H) | 0) + Math.imul(C, $) | 0, i = i + Math.imul(C, H) | 0, n = n + Math.imul(I, Q) | 0, r = (r = r + Math.imul(I, X) | 0) + Math.imul(E, Q) | 0, i = i + Math.imul(E, X) | 0, n = n + Math.imul(g, K) | 0, r = (r = r + Math.imul(g, Y) | 0) + Math.imul(w, K) | 0, i = i + Math.imul(w, Y) | 0, n = n + Math.imul(m, Z) | 0, r = (r = r + Math.imul(m, ee) | 0) + Math.imul(v, Z) | 0, i = i + Math.imul(v, ee) | 0, n = n + Math.imul(y, ef) | 0, r = (r = r + Math.imul(y, en) | 0) + Math.imul(b, ef) | 0, i = i + Math.imul(b, en) | 0;
                    var eA = (u + (n = n + Math.imul(c, ei) | 0) | 0) + ((8191 & (r = (r = r + Math.imul(c, ea) | 0) + Math.imul(l, ei) | 0)) << 13) | 0;
                    u = ((i = i + Math.imul(l, ea) | 0) + (r >>> 13) | 0) + (eA >>> 26) | 0, eA &= 67108863, n = Math.imul(x, V), r = (r = Math.imul(x, G)) + Math.imul(R, V) | 0, i = Math.imul(R, G), n = n + Math.imul(O, $) | 0, r = (r = r + Math.imul(O, H) | 0) + Math.imul(P, $) | 0, i = i + Math.imul(P, H) | 0, n = n + Math.imul(k, Q) | 0, r = (r = r + Math.imul(k, X) | 0) + Math.imul(C, Q) | 0, i = i + Math.imul(C, X) | 0, n = n + Math.imul(I, K) | 0, r = (r = r + Math.imul(I, Y) | 0) + Math.imul(E, K) | 0, i = i + Math.imul(E, Y) | 0, n = n + Math.imul(g, Z) | 0, r = (r = r + Math.imul(g, ee) | 0) + Math.imul(w, Z) | 0, i = i + Math.imul(w, ee) | 0, n = n + Math.imul(m, ef) | 0, r = (r = r + Math.imul(m, en) | 0) + Math.imul(v, ef) | 0, i = i + Math.imul(v, en) | 0, n = n + Math.imul(y, ei) | 0, r = (r = r + Math.imul(y, ea) | 0) + Math.imul(b, ei) | 0, i = i + Math.imul(b, ea) | 0;
                    var eI = (u + (n = n + Math.imul(c, es) | 0) | 0) + ((8191 & (r = (r = r + Math.imul(c, eu) | 0) + Math.imul(l, es) | 0)) << 13) | 0;
                    u = ((i = i + Math.imul(l, eu) | 0) + (r >>> 13) | 0) + (eI >>> 26) | 0, eI &= 67108863, n = Math.imul(D, V), r = (r = Math.imul(D, G)) + Math.imul(N, V) | 0, i = Math.imul(N, G), n = n + Math.imul(x, $) | 0, r = (r = r + Math.imul(x, H) | 0) + Math.imul(R, $) | 0, i = i + Math.imul(R, H) | 0, n = n + Math.imul(O, Q) | 0, r = (r = r + Math.imul(O, X) | 0) + Math.imul(P, Q) | 0, i = i + Math.imul(P, X) | 0, n = n + Math.imul(k, K) | 0, r = (r = r + Math.imul(k, Y) | 0) + Math.imul(C, K) | 0, i = i + Math.imul(C, Y) | 0, n = n + Math.imul(I, Z) | 0, r = (r = r + Math.imul(I, ee) | 0) + Math.imul(E, Z) | 0, i = i + Math.imul(E, ee) | 0, n = n + Math.imul(g, ef) | 0, r = (r = r + Math.imul(g, en) | 0) + Math.imul(w, ef) | 0, i = i + Math.imul(w, en) | 0, n = n + Math.imul(m, ei) | 0, r = (r = r + Math.imul(m, ea) | 0) + Math.imul(v, ei) | 0, i = i + Math.imul(v, ea) | 0, n = n + Math.imul(y, es) | 0, r = (r = r + Math.imul(y, eu) | 0) + Math.imul(b, es) | 0, i = i + Math.imul(b, eu) | 0;
                    var eE = (u + (n = n + Math.imul(c, ec) | 0) | 0) + ((8191 & (r = (r = r + Math.imul(c, el) | 0) + Math.imul(l, ec) | 0)) << 13) | 0;
                    u = ((i = i + Math.imul(l, el) | 0) + (r >>> 13) | 0) + (eE >>> 26) | 0, eE &= 67108863, n = Math.imul(L, V), r = (r = Math.imul(L, G)) + Math.imul(q, V) | 0, i = Math.imul(q, G), n = n + Math.imul(D, $) | 0, r = (r = r + Math.imul(D, H) | 0) + Math.imul(N, $) | 0, i = i + Math.imul(N, H) | 0, n = n + Math.imul(x, Q) | 0, r = (r = r + Math.imul(x, X) | 0) + Math.imul(R, Q) | 0, i = i + Math.imul(R, X) | 0, n = n + Math.imul(O, K) | 0, r = (r = r + Math.imul(O, Y) | 0) + Math.imul(P, K) | 0, i = i + Math.imul(P, Y) | 0, n = n + Math.imul(k, Z) | 0, r = (r = r + Math.imul(k, ee) | 0) + Math.imul(C, Z) | 0, i = i + Math.imul(C, ee) | 0, n = n + Math.imul(I, ef) | 0, r = (r = r + Math.imul(I, en) | 0) + Math.imul(E, ef) | 0, i = i + Math.imul(E, en) | 0, n = n + Math.imul(g, ei) | 0, r = (r = r + Math.imul(g, ea) | 0) + Math.imul(w, ei) | 0, i = i + Math.imul(w, ea) | 0, n = n + Math.imul(m, es) | 0, r = (r = r + Math.imul(m, eu) | 0) + Math.imul(v, es) | 0, i = i + Math.imul(v, eu) | 0, n = n + Math.imul(y, ec) | 0, r = (r = r + Math.imul(y, el) | 0) + Math.imul(b, ec) | 0, i = i + Math.imul(b, el) | 0;
                    var e_ = (u + (n = n + Math.imul(c, ey) | 0) | 0) + ((8191 & (r = (r = r + Math.imul(c, eb) | 0) + Math.imul(l, ey) | 0)) << 13) | 0;
                    u = ((i = i + Math.imul(l, eb) | 0) + (r >>> 13) | 0) + (e_ >>> 26) | 0, e_ &= 67108863, n = Math.imul(L, $), r = (r = Math.imul(L, H)) + Math.imul(q, $) | 0, i = Math.imul(q, H), n = n + Math.imul(D, Q) | 0, r = (r = r + Math.imul(D, X) | 0) + Math.imul(N, Q) | 0, i = i + Math.imul(N, X) | 0, n = n + Math.imul(x, K) | 0, r = (r = r + Math.imul(x, Y) | 0) + Math.imul(R, K) | 0, i = i + Math.imul(R, Y) | 0, n = n + Math.imul(O, Z) | 0, r = (r = r + Math.imul(O, ee) | 0) + Math.imul(P, Z) | 0, i = i + Math.imul(P, ee) | 0, n = n + Math.imul(k, ef) | 0, r = (r = r + Math.imul(k, en) | 0) + Math.imul(C, ef) | 0, i = i + Math.imul(C, en) | 0, n = n + Math.imul(I, ei) | 0, r = (r = r + Math.imul(I, ea) | 0) + Math.imul(E, ei) | 0, i = i + Math.imul(E, ea) | 0, n = n + Math.imul(g, es) | 0, r = (r = r + Math.imul(g, eu) | 0) + Math.imul(w, es) | 0, i = i + Math.imul(w, eu) | 0, n = n + Math.imul(m, ec) | 0, r = (r = r + Math.imul(m, el) | 0) + Math.imul(v, ec) | 0, i = i + Math.imul(v, el) | 0;
                    var ek = (u + (n = n + Math.imul(y, ey) | 0) | 0) + ((8191 & (r = (r = r + Math.imul(y, eb) | 0) + Math.imul(b, ey) | 0)) << 13) | 0;
                    u = ((i = i + Math.imul(b, eb) | 0) + (r >>> 13) | 0) + (ek >>> 26) | 0, ek &= 67108863, n = Math.imul(L, Q), r = (r = Math.imul(L, X)) + Math.imul(q, Q) | 0, i = Math.imul(q, X), n = n + Math.imul(D, K) | 0, r = (r = r + Math.imul(D, Y) | 0) + Math.imul(N, K) | 0, i = i + Math.imul(N, Y) | 0, n = n + Math.imul(x, Z) | 0, r = (r = r + Math.imul(x, ee) | 0) + Math.imul(R, Z) | 0, i = i + Math.imul(R, ee) | 0, n = n + Math.imul(O, ef) | 0, r = (r = r + Math.imul(O, en) | 0) + Math.imul(P, ef) | 0, i = i + Math.imul(P, en) | 0, n = n + Math.imul(k, ei) | 0, r = (r = r + Math.imul(k, ea) | 0) + Math.imul(C, ei) | 0, i = i + Math.imul(C, ea) | 0, n = n + Math.imul(I, es) | 0, r = (r = r + Math.imul(I, eu) | 0) + Math.imul(E, es) | 0, i = i + Math.imul(E, eu) | 0, n = n + Math.imul(g, ec) | 0, r = (r = r + Math.imul(g, el) | 0) + Math.imul(w, ec) | 0, i = i + Math.imul(w, el) | 0;
                    var eC = (u + (n = n + Math.imul(m, ey) | 0) | 0) + ((8191 & (r = (r = r + Math.imul(m, eb) | 0) + Math.imul(v, ey) | 0)) << 13) | 0;
                    u = ((i = i + Math.imul(v, eb) | 0) + (r >>> 13) | 0) + (eC >>> 26) | 0, eC &= 67108863, n = Math.imul(L, K), r = (r = Math.imul(L, Y)) + Math.imul(q, K) | 0, i = Math.imul(q, Y), n = n + Math.imul(D, Z) | 0, r = (r = r + Math.imul(D, ee) | 0) + Math.imul(N, Z) | 0, i = i + Math.imul(N, ee) | 0, n = n + Math.imul(x, ef) | 0, r = (r = r + Math.imul(x, en) | 0) + Math.imul(R, ef) | 0, i = i + Math.imul(R, en) | 0, n = n + Math.imul(O, ei) | 0, r = (r = r + Math.imul(O, ea) | 0) + Math.imul(P, ei) | 0, i = i + Math.imul(P, ea) | 0, n = n + Math.imul(k, es) | 0, r = (r = r + Math.imul(k, eu) | 0) + Math.imul(C, es) | 0, i = i + Math.imul(C, eu) | 0, n = n + Math.imul(I, ec) | 0, r = (r = r + Math.imul(I, el) | 0) + Math.imul(E, ec) | 0, i = i + Math.imul(E, el) | 0;
                    var eS = (u + (n = n + Math.imul(g, ey) | 0) | 0) + ((8191 & (r = (r = r + Math.imul(g, eb) | 0) + Math.imul(w, ey) | 0)) << 13) | 0;
                    u = ((i = i + Math.imul(w, eb) | 0) + (r >>> 13) | 0) + (eS >>> 26) | 0, eS &= 67108863, n = Math.imul(L, Z), r = (r = Math.imul(L, ee)) + Math.imul(q, Z) | 0, i = Math.imul(q, ee), n = n + Math.imul(D, ef) | 0, r = (r = r + Math.imul(D, en) | 0) + Math.imul(N, ef) | 0, i = i + Math.imul(N, en) | 0, n = n + Math.imul(x, ei) | 0, r = (r = r + Math.imul(x, ea) | 0) + Math.imul(R, ei) | 0, i = i + Math.imul(R, ea) | 0, n = n + Math.imul(O, es) | 0, r = (r = r + Math.imul(O, eu) | 0) + Math.imul(P, es) | 0, i = i + Math.imul(P, eu) | 0, n = n + Math.imul(k, ec) | 0, r = (r = r + Math.imul(k, el) | 0) + Math.imul(C, ec) | 0, i = i + Math.imul(C, el) | 0;
                    var eO = (u + (n = n + Math.imul(I, ey) | 0) | 0) + ((8191 & (r = (r = r + Math.imul(I, eb) | 0) + Math.imul(E, ey) | 0)) << 13) | 0;
                    u = ((i = i + Math.imul(E, eb) | 0) + (r >>> 13) | 0) + (eO >>> 26) | 0, eO &= 67108863, n = Math.imul(L, ef), r = (r = Math.imul(L, en)) + Math.imul(q, ef) | 0, i = Math.imul(q, en), n = n + Math.imul(D, ei) | 0, r = (r = r + Math.imul(D, ea) | 0) + Math.imul(N, ei) | 0, i = i + Math.imul(N, ea) | 0, n = n + Math.imul(x, es) | 0, r = (r = r + Math.imul(x, eu) | 0) + Math.imul(R, es) | 0, i = i + Math.imul(R, eu) | 0, n = n + Math.imul(O, ec) | 0, r = (r = r + Math.imul(O, el) | 0) + Math.imul(P, ec) | 0, i = i + Math.imul(P, el) | 0;
                    var eP = (u + (n = n + Math.imul(k, ey) | 0) | 0) + ((8191 & (r = (r = r + Math.imul(k, eb) | 0) + Math.imul(C, ey) | 0)) << 13) | 0;
                    u = ((i = i + Math.imul(C, eb) | 0) + (r >>> 13) | 0) + (eP >>> 26) | 0, eP &= 67108863, n = Math.imul(L, ei), r = (r = Math.imul(L, ea)) + Math.imul(q, ei) | 0, i = Math.imul(q, ea), n = n + Math.imul(D, es) | 0, r = (r = r + Math.imul(D, eu) | 0) + Math.imul(N, es) | 0, i = i + Math.imul(N, eu) | 0, n = n + Math.imul(x, ec) | 0, r = (r = r + Math.imul(x, el) | 0) + Math.imul(R, ec) | 0, i = i + Math.imul(R, el) | 0;
                    var eM = (u + (n = n + Math.imul(O, ey) | 0) | 0) + ((8191 & (r = (r = r + Math.imul(O, eb) | 0) + Math.imul(P, ey) | 0)) << 13) | 0;
                    u = ((i = i + Math.imul(P, eb) | 0) + (r >>> 13) | 0) + (eM >>> 26) | 0, eM &= 67108863, n = Math.imul(L, es), r = (r = Math.imul(L, eu)) + Math.imul(q, es) | 0, i = Math.imul(q, eu), n = n + Math.imul(D, ec) | 0, r = (r = r + Math.imul(D, el) | 0) + Math.imul(N, ec) | 0, i = i + Math.imul(N, el) | 0;
                    var ex = (u + (n = n + Math.imul(x, ey) | 0) | 0) + ((8191 & (r = (r = r + Math.imul(x, eb) | 0) + Math.imul(R, ey) | 0)) << 13) | 0;
                    u = ((i = i + Math.imul(R, eb) | 0) + (r >>> 13) | 0) + (ex >>> 26) | 0, ex &= 67108863, n = Math.imul(L, ec), r = (r = Math.imul(L, el)) + Math.imul(q, ec) | 0, i = Math.imul(q, el);
                    var eR = (u + (n = n + Math.imul(D, ey) | 0) | 0) + ((8191 & (r = (r = r + Math.imul(D, eb) | 0) + Math.imul(N, ey) | 0)) << 13) | 0;
                    u = ((i = i + Math.imul(N, eb) | 0) + (r >>> 13) | 0) + (eR >>> 26) | 0, eR &= 67108863;
                    var eF = (u + (n = Math.imul(L, ey)) | 0) + ((8191 & (r = (r = Math.imul(L, eb)) + Math.imul(q, ey) | 0)) << 13) | 0;
                    return u = ((i = Math.imul(q, eb)) + (r >>> 13) | 0) + (eF >>> 26) | 0, eF &= 67108863, s[0] = eh, s[1] = em, s[2] = ev, s[3] = eT, s[4] = eg, s[5] = ew, s[6] = eA, s[7] = eI, s[8] = eE, s[9] = e_, s[10] = ek, s[11] = eC, s[12] = eS, s[13] = eO, s[14] = eP, s[15] = eM, s[16] = ex, s[17] = eR, s[18] = eF, 0 !== u && (s[19] = u, f.length++), f
                };

                function m(e, t, f) {
                    f.negative = t.negative ^ e.negative, f.length = e.length + t.length;
                    for (var n = 0, r = 0, i = 0; i < f.length - 1; i++) {
                        var a = r;
                        r = 0;
                        for (var o = 67108863 & n, s = Math.min(i, t.length - 1), u = Math.max(0, i - e.length + 1); u <= s; u++) {
                            var d = i - u,
                                c = (0 | e.words[d]) * (0 | t.words[u]),
                                l = 67108863 & c;
                            a = a + (c / 67108864 | 0) | 0, o = 67108863 & (l = l + o | 0), r += (a = a + (l >>> 26) | 0) >>> 26, a &= 67108863
                        }
                        f.words[i] = o, n = a, a = r
                    }
                    return 0 !== n ? f.words[i] = n : f.length--, f._strip()
                }

                function v(e, t) {
                    this.x = e, this.y = t
                }
                Math.imul || (h = b), i.prototype.mulTo = function(e, t) {
                    var f, n = this.length + e.length;
                    return 10 === this.length && 10 === e.length ? h(this, e, t) : n < 63 ? b(this, e, t) : m(this, e, t)
                }, v.prototype.makeRBT = function(e) {
                    for (var t = Array(e), f = i.prototype._countBits(e) - 1, n = 0; n < e; n++) t[n] = this.revBin(n, f, e);
                    return t
                }, v.prototype.revBin = function(e, t, f) {
                    if (0 === e || e === f - 1) return e;
                    for (var n = 0, r = 0; r < t; r++) n |= (1 & e) << t - r - 1, e >>= 1;
                    return n
                }, v.prototype.permute = function(e, t, f, n, r, i) {
                    for (var a = 0; a < i; a++) n[a] = t[e[a]], r[a] = f[e[a]]
                }, v.prototype.transform = function(e, t, f, n, r, i) {
                    this.permute(i, e, t, f, n, r);
                    for (var a = 1; a < r; a <<= 1)
                        for (var o = a << 1, s = Math.cos(2 * Math.PI / o), u = Math.sin(2 * Math.PI / o), d = 0; d < r; d += o)
                            for (var c = s, l = u, p = 0; p < a; p++) {
                                var y = f[d + p],
                                    b = n[d + p],
                                    h = f[d + p + a],
                                    m = n[d + p + a],
                                    v = c * h - l * m;
                                m = c * m + l * h, h = v, f[d + p] = y + h, n[d + p] = b + m, f[d + p + a] = y - h, n[d + p + a] = b - m, p !== o && (v = s * c - u * l, l = s * l + u * c, c = v)
                            }
                }, v.prototype.guessLen13b = function(e, t) {
                    var f = 1 | Math.max(t, e),
                        n = 1 & f,
                        r = 0;
                    for (f = f / 2 | 0; f; f >>>= 1) r++;
                    return 1 << r + 1 + n
                }, v.prototype.conjugate = function(e, t, f) {
                    if (!(f <= 1))
                        for (var n = 0; n < f / 2; n++) {
                            var r = e[n];
                            e[n] = e[f - n - 1], e[f - n - 1] = r, r = t[n], t[n] = -t[f - n - 1], t[f - n - 1] = -r
                        }
                }, v.prototype.normalize13b = function(e, t) {
                    for (var f = 0, n = 0; n < t / 2; n++) {
                        var r = 8192 * Math.round(e[2 * n + 1] / t) + Math.round(e[2 * n] / t) + f;
                        e[n] = 67108863 & r, f = r < 67108864 ? 0 : r / 67108864 | 0
                    }
                    return e
                }, v.prototype.convert13b = function(e, t, f, r) {
                    for (var i = 0, a = 0; a < t; a++) i += 0 | e[a], f[2 * a] = 8191 & i, i >>>= 13, f[2 * a + 1] = 8191 & i, i >>>= 13;
                    for (a = 2 * t; a < r; ++a) f[a] = 0;
                    n(0 === i), n((-8192 & i) == 0)
                }, v.prototype.stub = function(e) {
                    for (var t = Array(e), f = 0; f < e; f++) t[f] = 0;
                    return t
                }, v.prototype.mulp = function(e, t, f) {
                    var n = 2 * this.guessLen13b(e.length, t.length),
                        r = this.makeRBT(n),
                        i = this.stub(n),
                        a = Array(n),
                        o = Array(n),
                        s = Array(n),
                        u = Array(n),
                        d = Array(n),
                        c = Array(n),
                        l = f.words;
                    l.length = n, this.convert13b(e.words, e.length, a, n), this.convert13b(t.words, t.length, u, n), this.transform(a, i, o, s, n, r), this.transform(u, i, d, c, n, r);
                    for (var p = 0; p < n; p++) {
                        var y = o[p] * d[p] - s[p] * c[p];
                        s[p] = o[p] * c[p] + s[p] * d[p], o[p] = y
                    }
                    return this.conjugate(o, s, n), this.transform(o, s, l, i, n, r), this.conjugate(l, i, n), this.normalize13b(l, n), f.negative = e.negative ^ t.negative, f.length = e.length + t.length, f._strip()
                }, i.prototype.mul = function(e) {
                    var t = new i(null);
                    return t.words = Array(this.length + e.length), this.mulTo(e, t)
                }, i.prototype.mulf = function(e) {
                    var t = new i(null);
                    return t.words = Array(this.length + e.length), m(this, e, t)
                }, i.prototype.imul = function(e) {
                    return this.clone().mulTo(e, this)
                }, i.prototype.imuln = function(e) {
                    var t = e < 0;
                    t && (e = -e), n("number" == typeof e), n(e < 67108864);
                    for (var f = 0, r = 0; r < this.length; r++) {
                        var i = (0 | this.words[r]) * e,
                            a = (67108863 & i) + (67108863 & f);
                        f >>= 26, f += (i / 67108864 | 0) + (a >>> 26), this.words[r] = 67108863 & a
                    }
                    return 0 !== f && (this.words[r] = f, this.length++), t ? this.ineg() : this
                }, i.prototype.muln = function(e) {
                    return this.clone().imuln(e)
                }, i.prototype.sqr = function() {
                    return this.mul(this)
                }, i.prototype.isqr = function() {
                    return this.imul(this.clone())
                }, i.prototype.pow = function(e) {
                    var t = function(e) {
                        for (var t = Array(e.bitLength()), f = 0; f < t.length; f++) {
                            var n = f / 26 | 0,
                                r = f % 26;
                            t[f] = e.words[n] >>> r & 1
                        }
                        return t
                    }(e);
                    if (0 === t.length) return new i(1);
                    for (var f = this, n = 0; n < t.length && 0 === t[n]; n++, f = f.sqr());
                    if (++n < t.length)
                        for (var r = f.sqr(); n < t.length; n++, r = r.sqr()) 0 !== t[n] && (f = f.mul(r));
                    return f
                }, i.prototype.iushln = function(e) {
                    n("number" == typeof e && e >= 0);
                    var t, f = e % 26,
                        r = (e - f) / 26,
                        i = 67108863 >>> 26 - f << 26 - f;
                    if (0 !== f) {
                        var a = 0;
                        for (t = 0; t < this.length; t++) {
                            var o = this.words[t] & i,
                                s = (0 | this.words[t]) - o << f;
                            this.words[t] = s | a, a = o >>> 26 - f
                        }
                        a && (this.words[t] = a, this.length++)
                    }
                    if (0 !== r) {
                        for (t = this.length - 1; t >= 0; t--) this.words[t + r] = this.words[t];
                        for (t = 0; t < r; t++) this.words[t] = 0;
                        this.length += r
                    }
                    return this._strip()
                }, i.prototype.ishln = function(e) {
                    return n(0 === this.negative), this.iushln(e)
                }, i.prototype.iushrn = function(e, t, f) {
                    n("number" == typeof e && e >= 0), r = t ? (t - t % 26) / 26 : 0;
                    var r, i = e % 26,
                        a = Math.min((e - i) / 26, this.length),
                        o = 67108863 ^ 67108863 >>> i << i;
                    if (r -= a, r = Math.max(0, r), f) {
                        for (var s = 0; s < a; s++) f.words[s] = this.words[s];
                        f.length = a
                    }
                    if (0 === a);
                    else if (this.length > a)
                        for (this.length -= a, s = 0; s < this.length; s++) this.words[s] = this.words[s + a];
                    else this.words[0] = 0, this.length = 1;
                    var u = 0;
                    for (s = this.length - 1; s >= 0 && (0 !== u || s >= r); s--) {
                        var d = 0 | this.words[s];
                        this.words[s] = u << 26 - i | d >>> i, u = d & o
                    }
                    return f && 0 !== u && (f.words[f.length++] = u), 0 === this.length && (this.words[0] = 0, this.length = 1), this._strip()
                }, i.prototype.ishrn = function(e, t, f) {
                    return n(0 === this.negative), this.iushrn(e, t, f)
                }, i.prototype.shln = function(e) {
                    return this.clone().ishln(e)
                }, i.prototype.ushln = function(e) {
                    return this.clone().iushln(e)
                }, i.prototype.shrn = function(e) {
                    return this.clone().ishrn(e)
                }, i.prototype.ushrn = function(e) {
                    return this.clone().iushrn(e)
                }, i.prototype.testn = function(e) {
                    n("number" == typeof e && e >= 0);
                    var t = e % 26,
                        f = (e - t) / 26;
                    return !(this.length <= f) && !!(this.words[f] & 1 << t)
                }, i.prototype.imaskn = function(e) {
                    n("number" == typeof e && e >= 0);
                    var t = e % 26,
                        f = (e - t) / 26;
                    return (n(0 === this.negative, "imaskn works only with positive numbers"), this.length <= f) ? this : (0 !== t && f++, this.length = Math.min(f, this.length), 0 !== t && (this.words[this.length - 1] &= 67108863 ^ 67108863 >>> t << t), this._strip())
                }, i.prototype.maskn = function(e) {
                    return this.clone().imaskn(e)
                }, i.prototype.iaddn = function(e) {
                    return (n("number" == typeof e), n(e < 67108864), e < 0) ? this.isubn(-e) : 0 !== this.negative ? (1 === this.length && (0 | this.words[0]) <= e ? (this.words[0] = e - (0 | this.words[0]), this.negative = 0) : (this.negative = 0, this.isubn(e), this.negative = 1), this) : this._iaddn(e)
                }, i.prototype._iaddn = function(e) {
                    this.words[0] += e;
                    for (var t = 0; t < this.length && this.words[t] >= 67108864; t++) this.words[t] -= 67108864, t === this.length - 1 ? this.words[t + 1] = 1 : this.words[t + 1]++;
                    return this.length = Math.max(this.length, t + 1), this
                }, i.prototype.isubn = function(e) {
                    if (n("number" == typeof e), n(e < 67108864), e < 0) return this.iaddn(-e);
                    if (0 !== this.negative) return this.negative = 0, this.iaddn(e), this.negative = 1, this;
                    if (this.words[0] -= e, 1 === this.length && this.words[0] < 0) this.words[0] = -this.words[0], this.negative = 1;
                    else
                        for (var t = 0; t < this.length && this.words[t] < 0; t++) this.words[t] += 67108864, this.words[t + 1] -= 1;
                    return this._strip()
                }, i.prototype.addn = function(e) {
                    return this.clone().iaddn(e)
                }, i.prototype.subn = function(e) {
                    return this.clone().isubn(e)
                }, i.prototype.iabs = function() {
                    return this.negative = 0, this
                }, i.prototype.abs = function() {
                    return this.clone().iabs()
                }, i.prototype._ishlnsubmul = function(e, t, f) {
                    var r, i, a = e.length + f;
                    this._expand(a);
                    var o = 0;
                    for (r = 0; r < e.length; r++) {
                        i = (0 | this.words[r + f]) + o;
                        var s = (0 | e.words[r]) * t;
                        i -= 67108863 & s, o = (i >> 26) - (s / 67108864 | 0), this.words[r + f] = 67108863 & i
                    }
                    for (; r < this.length - f; r++) o = (i = (0 | this.words[r + f]) + o) >> 26, this.words[r + f] = 67108863 & i;
                    if (0 === o) return this._strip();
                    for (n(-1 === o), o = 0, r = 0; r < this.length; r++) o = (i = -(0 | this.words[r]) + o) >> 26, this.words[r] = 67108863 & i;
                    return this.negative = 1, this._strip()
                }, i.prototype._wordDiv = function(e, t) {
                    var f, n = this.length - e.length,
                        r = this.clone(),
                        a = e,
                        o = 0 | a.words[a.length - 1];
                    0 != (n = 26 - this._countBits(o)) && (a = a.ushln(n), r.iushln(n), o = 0 | a.words[a.length - 1]);
                    var s = r.length - a.length;
                    if ("mod" !== t) {
                        (f = new i(null)).length = s + 1, f.words = Array(f.length);
                        for (var u = 0; u < f.length; u++) f.words[u] = 0
                    }
                    var d = r.clone()._ishlnsubmul(a, 1, s);
                    0 === d.negative && (r = d, f && (f.words[s] = 1));
                    for (var c = s - 1; c >= 0; c--) {
                        var l = (0 | r.words[a.length + c]) * 67108864 + (0 | r.words[a.length + c - 1]);
                        for (l = Math.min(l / o | 0, 67108863), r._ishlnsubmul(a, l, c); 0 !== r.negative;) l--, r.negative = 0, r._ishlnsubmul(a, 1, c), r.isZero() || (r.negative ^= 1);
                        f && (f.words[c] = l)
                    }
                    return f && f._strip(), r._strip(), "div" !== t && 0 !== n && r.iushrn(n), {
                        div: f || null,
                        mod: r
                    }
                }, i.prototype.divmod = function(e, t, f) {
                    var r, a, o;
                    return (n(!e.isZero()), this.isZero()) ? {
                        div: new i(0),
                        mod: new i(0)
                    } : 0 !== this.negative && 0 === e.negative ? (o = this.neg().divmod(e, t), "mod" !== t && (r = o.div.neg()), "div" !== t && (a = o.mod.neg(), f && 0 !== a.negative && a.iadd(e)), {
                        div: r,
                        mod: a
                    }) : 0 === this.negative && 0 !== e.negative ? (o = this.divmod(e.neg(), t), "mod" !== t && (r = o.div.neg()), {
                        div: r,
                        mod: o.mod
                    }) : (this.negative & e.negative) != 0 ? (o = this.neg().divmod(e.neg(), t), "div" !== t && (a = o.mod.neg(), f && 0 !== a.negative && a.isub(e)), {
                        div: o.div,
                        mod: a
                    }) : e.length > this.length || 0 > this.cmp(e) ? {
                        div: new i(0),
                        mod: this
                    } : 1 === e.length ? "div" === t ? {
                        div: this.divn(e.words[0]),
                        mod: null
                    } : "mod" === t ? {
                        div: null,
                        mod: new i(this.modrn(e.words[0]))
                    } : {
                        div: this.divn(e.words[0]),
                        mod: new i(this.modrn(e.words[0]))
                    } : this._wordDiv(e, t)
                }, i.prototype.div = function(e) {
                    return this.divmod(e, "div", !1).div
                }, i.prototype.mod = function(e) {
                    return this.divmod(e, "mod", !1).mod
                }, i.prototype.umod = function(e) {
                    return this.divmod(e, "mod", !0).mod
                }, i.prototype.divRound = function(e) {
                    var t = this.divmod(e);
                    if (t.mod.isZero()) return t.div;
                    var f = 0 !== t.div.negative ? t.mod.isub(e) : t.mod,
                        n = e.ushrn(1),
                        r = e.andln(1),
                        i = f.cmp(n);
                    return i < 0 || 1 === r && 0 === i ? t.div : 0 !== t.div.negative ? t.div.isubn(1) : t.div.iaddn(1)
                }, i.prototype.modrn = function(e) {
                    var t = e < 0;
                    t && (e = -e), n(e <= 67108863);
                    for (var f = 67108864 % e, r = 0, i = this.length - 1; i >= 0; i--) r = (f * r + (0 | this.words[i])) % e;
                    return t ? -r : r
                }, i.prototype.modn = function(e) {
                    return this.modrn(e)
                }, i.prototype.idivn = function(e) {
                    var t = e < 0;
                    t && (e = -e), n(e <= 67108863);
                    for (var f = 0, r = this.length - 1; r >= 0; r--) {
                        var i = (0 | this.words[r]) + 67108864 * f;
                        this.words[r] = i / e | 0, f = i % e
                    }
                    return this._strip(), t ? this.ineg() : this
                }, i.prototype.divn = function(e) {
                    return this.clone().idivn(e)
                }, i.prototype.egcd = function(e) {
                    n(0 === e.negative), n(!e.isZero());
                    var t = this,
                        f = e.clone();
                    t = 0 !== t.negative ? t.umod(e) : t.clone();
                    for (var r = new i(1), a = new i(0), o = new i(0), s = new i(1), u = 0; t.isEven() && f.isEven();) t.iushrn(1), f.iushrn(1), ++u;
                    for (var d = f.clone(), c = t.clone(); !t.isZero();) {
                        for (var l = 0, p = 1;
                            (t.words[0] & p) == 0 && l < 26; ++l, p <<= 1);
                        if (l > 0)
                            for (t.iushrn(l); l-- > 0;)(r.isOdd() || a.isOdd()) && (r.iadd(d), a.isub(c)), r.iushrn(1), a.iushrn(1);
                        for (var y = 0, b = 1;
                            (f.words[0] & b) == 0 && y < 26; ++y, b <<= 1);
                        if (y > 0)
                            for (f.iushrn(y); y-- > 0;)(o.isOdd() || s.isOdd()) && (o.iadd(d), s.isub(c)), o.iushrn(1), s.iushrn(1);
                        t.cmp(f) >= 0 ? (t.isub(f), r.isub(o), a.isub(s)) : (f.isub(t), o.isub(r), s.isub(a))
                    }
                    return {
                        a: o,
                        b: s,
                        gcd: f.iushln(u)
                    }
                }, i.prototype._invmp = function(e) {
                    n(0 === e.negative), n(!e.isZero());
                    var t, f = this,
                        r = e.clone();
                    f = 0 !== f.negative ? f.umod(e) : f.clone();
                    for (var a = new i(1), o = new i(0), s = r.clone(); f.cmpn(1) > 0 && r.cmpn(1) > 0;) {
                        for (var u = 0, d = 1;
                            (f.words[0] & d) == 0 && u < 26; ++u, d <<= 1);
                        if (u > 0)
                            for (f.iushrn(u); u-- > 0;) a.isOdd() && a.iadd(s), a.iushrn(1);
                        for (var c = 0, l = 1;
                            (r.words[0] & l) == 0 && c < 26; ++c, l <<= 1);
                        if (c > 0)
                            for (r.iushrn(c); c-- > 0;) o.isOdd() && o.iadd(s), o.iushrn(1);
                        f.cmp(r) >= 0 ? (f.isub(r), a.isub(o)) : (r.isub(f), o.isub(a))
                    }
                    return 0 > (t = 0 === f.cmpn(1) ? a : o).cmpn(0) && t.iadd(e), t
                }, i.prototype.gcd = function(e) {
                    if (this.isZero()) return e.abs();
                    if (e.isZero()) return this.abs();
                    var t = this.clone(),
                        f = e.clone();
                    t.negative = 0, f.negative = 0;
                    for (var n = 0; t.isEven() && f.isEven(); n++) t.iushrn(1), f.iushrn(1);
                    for (;;) {
                        for (; t.isEven();) t.iushrn(1);
                        for (; f.isEven();) f.iushrn(1);
                        var r = t.cmp(f);
                        if (r < 0) {
                            var i = t;
                            t = f, f = i
                        } else if (0 === r || 0 === f.cmpn(1)) break;
                        t.isub(f)
                    }
                    return f.iushln(n)
                }, i.prototype.invm = function(e) {
                    return this.egcd(e).a.umod(e)
                }, i.prototype.isEven = function() {
                    return (1 & this.words[0]) == 0
                }, i.prototype.isOdd = function() {
                    return (1 & this.words[0]) == 1
                }, i.prototype.andln = function(e) {
                    return this.words[0] & e
                }, i.prototype.bincn = function(e) {
                    n("number" == typeof e);
                    var t = e % 26,
                        f = (e - t) / 26,
                        r = 1 << t;
                    if (this.length <= f) return this._expand(f + 1), this.words[f] |= r, this;
                    for (var i = r, a = f; 0 !== i && a < this.length; a++) {
                        var o = 0 | this.words[a];
                        o += i, i = o >>> 26, o &= 67108863, this.words[a] = o
                    }
                    return 0 !== i && (this.words[a] = i, this.length++), this
                }, i.prototype.isZero = function() {
                    return 1 === this.length && 0 === this.words[0]
                }, i.prototype.cmpn = function(e) {
                    var t, f = e < 0;
                    if (0 !== this.negative && !f) return -1;
                    if (0 === this.negative && f) return 1;
                    if (this._strip(), this.length > 1) t = 1;
                    else {
                        f && (e = -e), n(e <= 67108863, "Number is too big");
                        var r = 0 | this.words[0];
                        t = r === e ? 0 : r < e ? -1 : 1
                    }
                    return 0 !== this.negative ? 0 | -t : t
                }, i.prototype.cmp = function(e) {
                    if (0 !== this.negative && 0 === e.negative) return -1;
                    if (0 === this.negative && 0 !== e.negative) return 1;
                    var t = this.ucmp(e);
                    return 0 !== this.negative ? 0 | -t : t
                }, i.prototype.ucmp = function(e) {
                    if (this.length > e.length) return 1;
                    if (this.length < e.length) return -1;
                    for (var t = 0, f = this.length - 1; f >= 0; f--) {
                        var n = 0 | this.words[f],
                            r = 0 | e.words[f];
                        if (n !== r) {
                            n < r ? t = -1 : n > r && (t = 1);
                            break
                        }
                    }
                    return t
                }, i.prototype.gtn = function(e) {
                    return 1 === this.cmpn(e)
                }, i.prototype.gt = function(e) {
                    return 1 === this.cmp(e)
                }, i.prototype.gten = function(e) {
                    return this.cmpn(e) >= 0
                }, i.prototype.gte = function(e) {
                    return this.cmp(e) >= 0
                }, i.prototype.ltn = function(e) {
                    return -1 === this.cmpn(e)
                }, i.prototype.lt = function(e) {
                    return -1 === this.cmp(e)
                }, i.prototype.lten = function(e) {
                    return 0 >= this.cmpn(e)
                }, i.prototype.lte = function(e) {
                    return 0 >= this.cmp(e)
                }, i.prototype.eqn = function(e) {
                    return 0 === this.cmpn(e)
                }, i.prototype.eq = function(e) {
                    return 0 === this.cmp(e)
                }, i.red = function(e) {
                    return new _(e)
                }, i.prototype.toRed = function(e) {
                    return n(!this.red, "Already a number in reduction context"), n(0 === this.negative, "red works only with positives"), e.convertTo(this)._forceRed(e)
                }, i.prototype.fromRed = function() {
                    return n(this.red, "fromRed works only with numbers in reduction context"), this.red.convertFrom(this)
                }, i.prototype._forceRed = function(e) {
                    return this.red = e, this
                }, i.prototype.forceRed = function(e) {
                    return n(!this.red, "Already a number in reduction context"), this._forceRed(e)
                }, i.prototype.redAdd = function(e) {
                    return n(this.red, "redAdd works only with red numbers"), this.red.add(this, e)
                }, i.prototype.redIAdd = function(e) {
                    return n(this.red, "redIAdd works only with red numbers"), this.red.iadd(this, e)
                }, i.prototype.redSub = function(e) {
                    return n(this.red, "redSub works only with red numbers"), this.red.sub(this, e)
                }, i.prototype.redISub = function(e) {
                    return n(this.red, "redISub works only with red numbers"), this.red.isub(this, e)
                }, i.prototype.redShl = function(e) {
                    return n(this.red, "redShl works only with red numbers"), this.red.shl(this, e)
                }, i.prototype.redMul = function(e) {
                    return n(this.red, "redMul works only with red numbers"), this.red._verify2(this, e), this.red.mul(this, e)
                }, i.prototype.redIMul = function(e) {
                    return n(this.red, "redMul works only with red numbers"), this.red._verify2(this, e), this.red.imul(this, e)
                }, i.prototype.redSqr = function() {
                    return n(this.red, "redSqr works only with red numbers"), this.red._verify1(this), this.red.sqr(this)
                }, i.prototype.redISqr = function() {
                    return n(this.red, "redISqr works only with red numbers"), this.red._verify1(this), this.red.isqr(this)
                }, i.prototype.redSqrt = function() {
                    return n(this.red, "redSqrt works only with red numbers"), this.red._verify1(this), this.red.sqrt(this)
                }, i.prototype.redInvm = function() {
                    return n(this.red, "redInvm works only with red numbers"), this.red._verify1(this), this.red.invm(this)
                }, i.prototype.redNeg = function() {
                    return n(this.red, "redNeg works only with red numbers"), this.red._verify1(this), this.red.neg(this)
                }, i.prototype.redPow = function(e) {
                    return n(this.red && !e.red, "redPow(normalNum)"), this.red._verify1(this), this.red.pow(this, e)
                };
                var T = {
                    k256: null,
                    p224: null,
                    p192: null,
                    p25519: null
                };

                function g(e, t) {
                    this.name = e, this.p = new i(t, 16), this.n = this.p.bitLength(), this.k = new i(1).iushln(this.n).isub(this.p), this.tmp = this._tmp()
                }

                function w() {
                    g.call(this, "k256", "ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f")
                }

                function A() {
                    g.call(this, "p224", "ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001")
                }

                function I() {
                    g.call(this, "p192", "ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff")
                }

                function E() {
                    g.call(this, "25519", "7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed")
                }

                function _(e) {
                    if ("string" == typeof e) {
                        var t = i._prime(e);
                        this.m = t.p, this.prime = t
                    } else n(e.gtn(1), "modulus must be greater than 1"), this.m = e, this.prime = null
                }

                function k(e) {
                    _.call(this, e), this.shift = this.m.bitLength(), this.shift % 26 != 0 && (this.shift += 26 - this.shift % 26), this.r = new i(1).iushln(this.shift), this.r2 = this.imod(this.r.sqr()), this.rinv = this.r._invmp(this.m), this.minv = this.rinv.mul(this.r).isubn(1).div(this.m), this.minv = this.minv.umod(this.r), this.minv = this.r.sub(this.minv)
                }
                g.prototype._tmp = function() {
                    var e = new i(null);
                    return e.words = Array(Math.ceil(this.n / 13)), e
                }, g.prototype.ireduce = function(e) {
                    var t, f = e;
                    do this.split(f, this.tmp), t = (f = (f = this.imulK(f)).iadd(this.tmp)).bitLength(); while (t > this.n) var n = t < this.n ? -1 : f.ucmp(this.p);
                    return 0 === n ? (f.words[0] = 0, f.length = 1) : n > 0 ? f.isub(this.p) : void 0 !== f.strip ? f.strip() : f._strip(), f
                }, g.prototype.split = function(e, t) {
                    e.iushrn(this.n, 0, t)
                }, g.prototype.imulK = function(e) {
                    return e.imul(this.k)
                }, r(w, g), w.prototype.split = function(e, t) {
                    for (var f = Math.min(e.length, 9), n = 0; n < f; n++) t.words[n] = e.words[n];
                    if (t.length = f, e.length <= 9) {
                        e.words[0] = 0, e.length = 1;
                        return
                    }
                    var r = e.words[9];
                    for (n = 10, t.words[t.length++] = 4194303 & r; n < e.length; n++) {
                        var i = 0 | e.words[n];
                        e.words[n - 10] = (4194303 & i) << 4 | r >>> 22, r = i
                    }
                    r >>>= 22, e.words[n - 10] = r, 0 === r && e.length > 10 ? e.length -= 10 : e.length -= 9
                }, w.prototype.imulK = function(e) {
                    e.words[e.length] = 0, e.words[e.length + 1] = 0, e.length += 2;
                    for (var t = 0, f = 0; f < e.length; f++) {
                        var n = 0 | e.words[f];
                        t += 977 * n, e.words[f] = 67108863 & t, t = 64 * n + (t / 67108864 | 0)
                    }
                    return 0 === e.words[e.length - 1] && (e.length--, 0 === e.words[e.length - 1] && e.length--), e
                }, r(A, g), r(I, g), r(E, g), E.prototype.imulK = function(e) {
                    for (var t = 0, f = 0; f < e.length; f++) {
                        var n = (0 | e.words[f]) * 19 + t,
                            r = 67108863 & n;
                        n >>>= 26, e.words[f] = r, t = n
                    }
                    return 0 !== t && (e.words[e.length++] = t), e
                }, i._prime = function(e) {
                    var t;
                    if (T[e]) return T[e];
                    if ("k256" === e) t = new w;
                    else if ("p224" === e) t = new A;
                    else if ("p192" === e) t = new I;
                    else if ("p25519" === e) t = new E;
                    else throw Error("Unknown prime " + e);
                    return T[e] = t, t
                }, _.prototype._verify1 = function(e) {
                    n(0 === e.negative, "red works only with positives"), n(e.red, "red works only with red numbers")
                }, _.prototype._verify2 = function(e, t) {
                    n((e.negative | t.negative) == 0, "red works only with positives"), n(e.red && e.red === t.red, "red works only with red numbers")
                }, _.prototype.imod = function(e) {
                    return this.prime ? this.prime.ireduce(e)._forceRed(this) : (u(e, e.umod(this.m)._forceRed(this)), e)
                }, _.prototype.neg = function(e) {
                    return e.isZero() ? e.clone() : this.m.sub(e)._forceRed(this)
                }, _.prototype.add = function(e, t) {
                    this._verify2(e, t);
                    var f = e.add(t);
                    return f.cmp(this.m) >= 0 && f.isub(this.m), f._forceRed(this)
                }, _.prototype.iadd = function(e, t) {
                    this._verify2(e, t);
                    var f = e.iadd(t);
                    return f.cmp(this.m) >= 0 && f.isub(this.m), f
                }, _.prototype.sub = function(e, t) {
                    this._verify2(e, t);
                    var f = e.sub(t);
                    return 0 > f.cmpn(0) && f.iadd(this.m), f._forceRed(this)
                }, _.prototype.isub = function(e, t) {
                    this._verify2(e, t);
                    var f = e.isub(t);
                    return 0 > f.cmpn(0) && f.iadd(this.m), f
                }, _.prototype.shl = function(e, t) {
                    return this._verify1(e), this.imod(e.ushln(t))
                }, _.prototype.imul = function(e, t) {
                    return this._verify2(e, t), this.imod(e.imul(t))
                }, _.prototype.mul = function(e, t) {
                    return this._verify2(e, t), this.imod(e.mul(t))
                }, _.prototype.isqr = function(e) {
                    return this.imul(e, e.clone())
                }, _.prototype.sqr = function(e) {
                    return this.mul(e, e)
                }, _.prototype.sqrt = function(e) {
                    if (e.isZero()) return e.clone();
                    var t = this.m.andln(3);
                    if (n(t % 2 == 1), 3 === t) {
                        var f = this.m.add(new i(1)).iushrn(2);
                        return this.pow(e, f)
                    }
                    for (var r = this.m.subn(1), a = 0; !r.isZero() && 0 === r.andln(1);) a++, r.iushrn(1);
                    n(!r.isZero());
                    var o = new i(1).toRed(this),
                        s = o.redNeg(),
                        u = this.m.subn(1).iushrn(1),
                        d = this.m.bitLength();
                    for (d = new i(2 * d * d).toRed(this); 0 !== this.pow(d, u).cmp(s);) d.redIAdd(s);
                    for (var c = this.pow(d, r), l = this.pow(e, r.addn(1).iushrn(1)), p = this.pow(e, r), y = a; 0 !== p.cmp(o);) {
                        for (var b = p, h = 0; 0 !== b.cmp(o); h++) b = b.redSqr();
                        n(h < y);
                        var m = this.pow(c, new i(1).iushln(y - h - 1));
                        l = l.redMul(m), c = m.redSqr(), p = p.redMul(c), y = h
                    }
                    return l
                }, _.prototype.invm = function(e) {
                    var t = e._invmp(this.m);
                    return 0 !== t.negative ? (t.negative = 0, this.imod(t).redNeg()) : this.imod(t)
                }, _.prototype.pow = function(e, t) {
                    if (t.isZero()) return new i(1).toRed(this);
                    if (0 === t.cmpn(1)) return e.clone();
                    var f = Array(16);
                    f[0] = new i(1).toRed(this), f[1] = e;
                    for (var n = 2; n < f.length; n++) f[n] = this.mul(f[n - 1], e);
                    var r = f[0],
                        a = 0,
                        o = 0,
                        s = t.bitLength() % 26;
                    for (0 === s && (s = 26), n = t.length - 1; n >= 0; n--) {
                        for (var u = t.words[n], d = s - 1; d >= 0; d--) {
                            var c = u >> d & 1;
                            if (r !== f[0] && (r = this.sqr(r)), 0 === c && 0 === a) {
                                o = 0;
                                continue
                            }
                            a <<= 1, a |= c, (4 == ++o || 0 === n && 0 === d) && (r = this.mul(r, f[a]), o = 0, a = 0)
                        }
                        s = 26
                    }
                    return r
                }, _.prototype.convertTo = function(e) {
                    var t = e.umod(this.m);
                    return t === e ? t.clone() : t
                }, _.prototype.convertFrom = function(e) {
                    var t = e.clone();
                    return t.red = null, t
                }, i.mont = function(e) {
                    return new k(e)
                }, r(k, _), k.prototype.convertTo = function(e) {
                    return this.imod(e.ushln(this.shift))
                }, k.prototype.convertFrom = function(e) {
                    var t = this.imod(e.mul(this.rinv));
                    return t.red = null, t
                }, k.prototype.imul = function(e, t) {
                    if (e.isZero() || t.isZero()) return e.words[0] = 0, e.length = 1, e;
                    var f = e.imul(t),
                        n = f.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),
                        r = f.isub(n).iushrn(this.shift),
                        i = r;
                    return r.cmp(this.m) >= 0 ? i = r.isub(this.m) : 0 > r.cmpn(0) && (i = r.iadd(this.m)), i._forceRed(this)
                }, k.prototype.mul = function(e, t) {
                    if (e.isZero() || t.isZero()) return new i(0)._forceRed(this);
                    var f = e.mul(t),
                        n = f.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m),
                        r = f.isub(n).iushrn(this.shift),
                        a = r;
                    return r.cmp(this.m) >= 0 ? a = r.isub(this.m) : 0 > r.cmpn(0) && (a = r.iadd(this.m)), a._forceRed(this)
                }, k.prototype.invm = function(e) {
                    return this.imod(e._invmp(this.m).mul(this.r2))._forceRed(this)
                }
            }(e = f.nmd(e), this)
        },
        78272: (e, t, f) => {
            "use strict";
            /*!
             * The buffer module from node.js, for the browser.
             *
             * @author Feross Aboukhadijeh <https://feross.org>
             * @license MIT
             */
            let n = f(68478),
                r = f(54450),
                i = "function" == typeof Symbol && "function" == typeof Symbol.for ? Symbol.for("nodejs.util.inspect.custom") : null;

            function a(e) {
                if (e > 2147483647) throw RangeError('The value "' + e + '" is invalid for option "size"');
                let t = new Uint8Array(e);
                return Object.setPrototypeOf(t, o.prototype), t
            }

            function o(e, t, f) {
                if ("number" == typeof e) {
                    if ("string" == typeof t) throw TypeError('The "string" argument must be of type string. Received type number');
                    return d(e)
                }
                return s(e, t, f)
            }

            function s(e, t, f) {
                if ("string" == typeof e) return function(e, t) {
                    if (("string" != typeof t || "" === t) && (t = "utf8"), !o.isEncoding(t)) throw TypeError("Unknown encoding: " + t);
                    let f = 0 | y(e, t),
                        n = a(f),
                        r = n.write(e, t);
                    return r !== f && (n = n.slice(0, r)), n
                }(e, t);
                if (ArrayBuffer.isView(e)) return function(e) {
                    if (B(e, Uint8Array)) {
                        let t = new Uint8Array(e);
                        return l(t.buffer, t.byteOffset, t.byteLength)
                    }
                    return c(e)
                }(e);
                if (null == e) throw TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " + typeof e);
                if (B(e, ArrayBuffer) || e && B(e.buffer, ArrayBuffer) || "undefined" != typeof SharedArrayBuffer && (B(e, SharedArrayBuffer) || e && B(e.buffer, SharedArrayBuffer))) return l(e, t, f);
                if ("number" == typeof e) throw TypeError('The "value" argument must not be of type number. Received type number');
                let n = e.valueOf && e.valueOf();
                if (null != n && n !== e) return o.from(n, t, f);
                let r = function(e) {
                    var t;
                    if (o.isBuffer(e)) {
                        let t = 0 | p(e.length),
                            f = a(t);
                        return 0 === f.length || e.copy(f, 0, 0, t), f
                    }
                    return void 0 !== e.length ? "number" != typeof e.length || (t = e.length) != t ? a(0) : c(e) : "Buffer" === e.type && Array.isArray(e.data) ? c(e.data) : void 0
                }(e);
                if (r) return r;
                if ("undefined" != typeof Symbol && null != Symbol.toPrimitive && "function" == typeof e[Symbol.toPrimitive]) return o.from(e[Symbol.toPrimitive]("string"), t, f);
                throw TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " + typeof e)
            }

            function u(e) {
                if ("number" != typeof e) throw TypeError('"size" argument must be of type number');
                if (e < 0) throw RangeError('The value "' + e + '" is invalid for option "size"')
            }

            function d(e) {
                return u(e), a(e < 0 ? 0 : 0 | p(e))
            }

            function c(e) {
                let t = e.length < 0 ? 0 : 0 | p(e.length),
                    f = a(t);
                for (let n = 0; n < t; n += 1) f[n] = 255 & e[n];
                return f
            }

            function l(e, t, f) {
                let n;
                if (t < 0 || e.byteLength < t) throw RangeError('"offset" is outside of buffer bounds');
                if (e.byteLength < t + (f || 0)) throw RangeError('"length" is outside of buffer bounds');
                return Object.setPrototypeOf(n = void 0 === t && void 0 === f ? new Uint8Array(e) : void 0 === f ? new Uint8Array(e, t) : new Uint8Array(e, t, f), o.prototype), n
            }

            function p(e) {
                if (e >= 2147483647) throw RangeError("Attempt to allocate Buffer larger than maximum size: 0x7fffffff bytes");
                return 0 | e
            }

            function y(e, t) {
                if (o.isBuffer(e)) return e.length;
                if (ArrayBuffer.isView(e) || B(e, ArrayBuffer)) return e.byteLength;
                if ("string" != typeof e) throw TypeError('The "string" argument must be one of type string, Buffer, or ArrayBuffer. Received type ' + typeof e);
                let f = e.length,
                    n = arguments.length > 2 && !0 === arguments[2];
                if (!n && 0 === f) return 0;
                let r = !1;
                for (;;) switch (t) {
                    case "ascii":
                    case "latin1":
                    case "binary":
                        return f;
                    case "utf8":
                    case "utf-8":
                        return F(e).length;
                    case "ucs2":
                    case "ucs-2":
                    case "utf16le":
                    case "utf-16le":
                        return 2 * f;
                    case "hex":
                        return f >>> 1;
                    case "base64":
                        return D(e).length;
                    default:
                        if (r) return n ? -1 : F(e).length;
                        t = ("" + t).toLowerCase(), r = !0
                }
            }

            function b(e, t, f) {
                let r = !1;
                if ((void 0 === t || t < 0) && (t = 0), t > this.length || ((void 0 === f || f > this.length) && (f = this.length), f <= 0 || (f >>>= 0) <= (t >>>= 0))) return "";
                for (e || (e = "utf8");;) switch (e) {
                    case "hex":
                        return function(e, t, f) {
                            let n = e.length;
                            (!t || t < 0) && (t = 0), (!f || f < 0 || f > n) && (f = n);
                            let r = "";
                            for (let n = t; n < f; ++n) r += L[e[n]];
                            return r
                        }(this, t, f);
                    case "utf8":
                    case "utf-8":
                        return T(this, t, f);
                    case "ascii":
                        return function(e, t, f) {
                            let n = "";
                            f = Math.min(e.length, f);
                            for (let r = t; r < f; ++r) n += String.fromCharCode(127 & e[r]);
                            return n
                        }(this, t, f);
                    case "latin1":
                    case "binary":
                        return function(e, t, f) {
                            let n = "";
                            f = Math.min(e.length, f);
                            for (let r = t; r < f; ++r) n += String.fromCharCode(e[r]);
                            return n
                        }(this, t, f);
                    case "base64":
                        var i, a;
                        return i = t, a = f, 0 === i && a === this.length ? n.fromByteArray(this) : n.fromByteArray(this.slice(i, a));
                    case "ucs2":
                    case "ucs-2":
                    case "utf16le":
                    case "utf-16le":
                        return function(e, t, f) {
                            let n = e.slice(t, f),
                                r = "";
                            for (let e = 0; e < n.length - 1; e += 2) r += String.fromCharCode(n[e] + 256 * n[e + 1]);
                            return r
                        }(this, t, f);
                    default:
                        if (r) throw TypeError("Unknown encoding: " + e);
                        e = (e + "").toLowerCase(), r = !0
                }
            }

            function h(e, t, f) {
                let n = e[t];
                e[t] = e[f], e[f] = n
            }

            function m(e, t, f, n, r) {
                var i;
                if (0 === e.length) return -1;
                if ("string" == typeof f ? (n = f, f = 0) : f > 2147483647 ? f = 2147483647 : f < -2147483648 && (f = -2147483648), (i = f = +f) != i && (f = r ? 0 : e.length - 1), f < 0 && (f = e.length + f), f >= e.length) {
                    if (r) return -1;
                    f = e.length - 1
                } else if (f < 0) {
                    if (!r) return -1;
                    f = 0
                }
                if ("string" == typeof t && (t = o.from(t, n)), o.isBuffer(t)) return 0 === t.length ? -1 : v(e, t, f, n, r);
                if ("number" == typeof t) return (t &= 255, "function" == typeof Uint8Array.prototype.indexOf) ? r ? Uint8Array.prototype.indexOf.call(e, t, f) : Uint8Array.prototype.lastIndexOf.call(e, t, f) : v(e, [t], f, n, r);
                throw TypeError("val must be string, number or Buffer")
            }

            function v(e, t, f, n, r) {
                let i, a = 1,
                    o = e.length,
                    s = t.length;
                if (void 0 !== n && ("ucs2" === (n = String(n).toLowerCase()) || "ucs-2" === n || "utf16le" === n || "utf-16le" === n)) {
                    if (e.length < 2 || t.length < 2) return -1;
                    a = 2, o /= 2, s /= 2, f /= 2
                }

                function u(e, t) {
                    return 1 === a ? e[t] : e.readUInt16BE(t * a)
                }
                if (r) {
                    let n = -1;
                    for (i = f; i < o; i++)
                        if (u(e, i) === u(t, -1 === n ? 0 : i - n)) {
                            if (-1 === n && (n = i), i - n + 1 === s) return n * a
                        } else -1 !== n && (i -= i - n), n = -1
                } else
                    for (f + s > o && (f = o - s), i = f; i >= 0; i--) {
                        let f = !0;
                        for (let n = 0; n < s; n++)
                            if (u(e, i + n) !== u(t, n)) {
                                f = !1;
                                break
                            }
                        if (f) return i
                    }
                return -1
            }

            function T(e, t, f) {
                f = Math.min(e.length, f);
                let n = [],
                    r = t;
                for (; r < f;) {
                    let t = e[r],
                        i = null,
                        a = t > 239 ? 4 : t > 223 ? 3 : t > 191 ? 2 : 1;
                    if (r + a <= f) {
                        let f, n, o, s;
                        switch (a) {
                            case 1:
                                t < 128 && (i = t);
                                break;
                            case 2:
                                (192 & (f = e[r + 1])) == 128 && (s = (31 & t) << 6 | 63 & f) > 127 && (i = s);
                                break;
                            case 3:
                                f = e[r + 1], n = e[r + 2], (192 & f) == 128 && (192 & n) == 128 && (s = (15 & t) << 12 | (63 & f) << 6 | 63 & n) > 2047 && (s < 55296 || s > 57343) && (i = s);
                                break;
                            case 4:
                                f = e[r + 1], n = e[r + 2], o = e[r + 3], (192 & f) == 128 && (192 & n) == 128 && (192 & o) == 128 && (s = (15 & t) << 18 | (63 & f) << 12 | (63 & n) << 6 | 63 & o) > 65535 && s < 1114112 && (i = s)
                        }
                    }
                    null === i ? (i = 65533, a = 1) : i > 65535 && (i -= 65536, n.push(i >>> 10 & 1023 | 55296), i = 56320 | 1023 & i), n.push(i), r += a
                }
                return function(e) {
                    let t = e.length;
                    if (t <= 4096) return String.fromCharCode.apply(String, e);
                    let f = "",
                        n = 0;
                    for (; n < t;) f += String.fromCharCode.apply(String, e.slice(n, n += 4096));
                    return f
                }(n)
            }

            function g(e, t, f) {
                if (e % 1 != 0 || e < 0) throw RangeError("offset is not uint");
                if (e + t > f) throw RangeError("Trying to access beyond buffer length")
            }

            function w(e, t, f, n, r, i) {
                if (!o.isBuffer(e)) throw TypeError('"buffer" argument must be a Buffer instance');
                if (t > r || t < i) throw RangeError('"value" argument is out of bounds');
                if (f + n > e.length) throw RangeError("Index out of range")
            }

            function A(e, t, f, n, r) {
                P(t, n, r, e, f, 7);
                let i = Number(t & BigInt(4294967295));
                e[f++] = i, i >>= 8, e[f++] = i, i >>= 8, e[f++] = i, i >>= 8, e[f++] = i;
                let a = Number(t >> BigInt(32) & BigInt(4294967295));
                return e[f++] = a, a >>= 8, e[f++] = a, a >>= 8, e[f++] = a, a >>= 8, e[f++] = a, f
            }

            function I(e, t, f, n, r) {
                P(t, n, r, e, f, 7);
                let i = Number(t & BigInt(4294967295));
                e[f + 7] = i, i >>= 8, e[f + 6] = i, i >>= 8, e[f + 5] = i, i >>= 8, e[f + 4] = i;
                let a = Number(t >> BigInt(32) & BigInt(4294967295));
                return e[f + 3] = a, a >>= 8, e[f + 2] = a, a >>= 8, e[f + 1] = a, a >>= 8, e[f] = a, f + 8
            }

            function E(e, t, f, n, r, i) {
                if (f + n > e.length || f < 0) throw RangeError("Index out of range")
            }

            function _(e, t, f, n, i) {
                return t = +t, f >>>= 0, i || E(e, t, f, 4, 34028234663852886e22, -34028234663852886e22), r.write(e, t, f, n, 23, 4), f + 4
            }

            function k(e, t, f, n, i) {
                return t = +t, f >>>= 0, i || E(e, t, f, 8, 17976931348623157e292, -17976931348623157e292), r.write(e, t, f, n, 52, 8), f + 8
            }
            t.Buffer = o, t.SlowBuffer = function(e) {
                return +e != e && (e = 0), o.alloc(+e)
            }, t.INSPECT_MAX_BYTES = 50, t.kMaxLength = 2147483647, o.TYPED_ARRAY_SUPPORT = function() {
                try {
                    let e = new Uint8Array(1),
                        t = {
                            foo: function() {
                                return 42
                            }
                        };
                    return Object.setPrototypeOf(t, Uint8Array.prototype), Object.setPrototypeOf(e, t), 42 === e.foo()
                } catch (e) {
                    return !1
                }
            }(), o.TYPED_ARRAY_SUPPORT || "undefined" == typeof console || "function" != typeof console.error || console.error("This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support."), Object.defineProperty(o.prototype, "parent", {
                enumerable: !0,
                get: function() {
                    if (o.isBuffer(this)) return this.buffer
                }
            }), Object.defineProperty(o.prototype, "offset", {
                enumerable: !0,
                get: function() {
                    if (o.isBuffer(this)) return this.byteOffset
                }
            }), o.poolSize = 8192, o.from = function(e, t, f) {
                return s(e, t, f)
            }, Object.setPrototypeOf(o.prototype, Uint8Array.prototype), Object.setPrototypeOf(o, Uint8Array), o.alloc = function(e, t, f) {
                return (u(e), e <= 0) ? a(e) : void 0 !== t ? "string" == typeof f ? a(e).fill(t, f) : a(e).fill(t) : a(e)
            }, o.allocUnsafe = function(e) {
                return d(e)
            }, o.allocUnsafeSlow = function(e) {
                return d(e)
            }, o.isBuffer = function(e) {
                return null != e && !0 === e._isBuffer && e !== o.prototype
            }, o.compare = function(e, t) {
                if (B(e, Uint8Array) && (e = o.from(e, e.offset, e.byteLength)), B(t, Uint8Array) && (t = o.from(t, t.offset, t.byteLength)), !o.isBuffer(e) || !o.isBuffer(t)) throw TypeError('The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array');
                if (e === t) return 0;
                let f = e.length,
                    n = t.length;
                for (let r = 0, i = Math.min(f, n); r < i; ++r)
                    if (e[r] !== t[r]) {
                        f = e[r], n = t[r];
                        break
                    }
                return f < n ? -1 : n < f ? 1 : 0
            }, o.isEncoding = function(e) {
                switch (String(e).toLowerCase()) {
                    case "hex":
                    case "utf8":
                    case "utf-8":
                    case "ascii":
                    case "latin1":
                    case "binary":
                    case "base64":
                    case "ucs2":
                    case "ucs-2":
                    case "utf16le":
                    case "utf-16le":
                        return !0;
                    default:
                        return !1
                }
            }, o.concat = function(e, t) {
                let f;
                if (!Array.isArray(e)) throw TypeError('"list" argument must be an Array of Buffers');
                if (0 === e.length) return o.alloc(0);
                if (void 0 === t)
                    for (f = 0, t = 0; f < e.length; ++f) t += e[f].length;
                let n = o.allocUnsafe(t),
                    r = 0;
                for (f = 0; f < e.length; ++f) {
                    let t = e[f];
                    if (B(t, Uint8Array)) r + t.length > n.length ? (o.isBuffer(t) || (t = o.from(t)), t.copy(n, r)) : Uint8Array.prototype.set.call(n, t, r);
                    else if (o.isBuffer(t)) t.copy(n, r);
                    else throw TypeError('"list" argument must be an Array of Buffers');
                    r += t.length
                }
                return n
            }, o.byteLength = y, o.prototype._isBuffer = !0, o.prototype.swap16 = function() {
                let e = this.length;
                if (e % 2 != 0) throw RangeError("Buffer size must be a multiple of 16-bits");
                for (let t = 0; t < e; t += 2) h(this, t, t + 1);
                return this
            }, o.prototype.swap32 = function() {
                let e = this.length;
                if (e % 4 != 0) throw RangeError("Buffer size must be a multiple of 32-bits");
                for (let t = 0; t < e; t += 4) h(this, t, t + 3), h(this, t + 1, t + 2);
                return this
            }, o.prototype.swap64 = function() {
                let e = this.length;
                if (e % 8 != 0) throw RangeError("Buffer size must be a multiple of 64-bits");
                for (let t = 0; t < e; t += 8) h(this, t, t + 7), h(this, t + 1, t + 6), h(this, t + 2, t + 5), h(this, t + 3, t + 4);
                return this
            }, o.prototype.toString = function() {
                let e = this.length;
                return 0 === e ? "" : 0 == arguments.length ? T(this, 0, e) : b.apply(this, arguments)
            }, o.prototype.toLocaleString = o.prototype.toString, o.prototype.equals = function(e) {
                if (!o.isBuffer(e)) throw TypeError("Argument must be a Buffer");
                return this === e || 0 === o.compare(this, e)
            }, o.prototype.inspect = function() {
                let e = "",
                    f = t.INSPECT_MAX_BYTES;
                return e = this.toString("hex", 0, f).replace(/(.{2})/g, "$1 ").trim(), this.length > f && (e += " ... "), "<Buffer " + e + ">"
            }, i && (o.prototype[i] = o.prototype.inspect), o.prototype.compare = function(e, t, f, n, r) {
                if (B(e, Uint8Array) && (e = o.from(e, e.offset, e.byteLength)), !o.isBuffer(e)) throw TypeError('The "target" argument must be one of type Buffer or Uint8Array. Received type ' + typeof e);
                if (void 0 === t && (t = 0), void 0 === f && (f = e ? e.length : 0), void 0 === n && (n = 0), void 0 === r && (r = this.length), t < 0 || f > e.length || n < 0 || r > this.length) throw RangeError("out of range index");
                if (n >= r && t >= f) return 0;
                if (n >= r) return -1;
                if (t >= f) return 1;
                if (t >>>= 0, f >>>= 0, n >>>= 0, r >>>= 0, this === e) return 0;
                let i = r - n,
                    a = f - t,
                    s = Math.min(i, a),
                    u = this.slice(n, r),
                    d = e.slice(t, f);
                for (let e = 0; e < s; ++e)
                    if (u[e] !== d[e]) {
                        i = u[e], a = d[e];
                        break
                    }
                return i < a ? -1 : a < i ? 1 : 0
            }, o.prototype.includes = function(e, t, f) {
                return -1 !== this.indexOf(e, t, f)
            }, o.prototype.indexOf = function(e, t, f) {
                return m(this, e, t, f, !0)
            }, o.prototype.lastIndexOf = function(e, t, f) {
                return m(this, e, t, f, !1)
            }, o.prototype.write = function(e, t, f, n) {
                var r, i, a, o, s, u, d, c;
                if (void 0 === t) n = "utf8", f = this.length, t = 0;
                else if (void 0 === f && "string" == typeof t) n = t, f = this.length, t = 0;
                else if (isFinite(t)) t >>>= 0, isFinite(f) ? (f >>>= 0, void 0 === n && (n = "utf8")) : (n = f, f = void 0);
                else throw Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");
                let l = this.length - t;
                if ((void 0 === f || f > l) && (f = l), e.length > 0 && (f < 0 || t < 0) || t > this.length) throw RangeError("Attempt to write outside buffer bounds");
                n || (n = "utf8");
                let p = !1;
                for (;;) switch (n) {
                    case "hex":
                        return function(e, t, f, n) {
                            let r;
                            f = Number(f) || 0;
                            let i = e.length - f;
                            n ? (n = Number(n)) > i && (n = i) : n = i;
                            let a = t.length;
                            for (n > a / 2 && (n = a / 2), r = 0; r < n; ++r) {
                                let n = parseInt(t.substr(2 * r, 2), 16);
                                if (n != n) break;
                                e[f + r] = n
                            }
                            return r
                        }(this, e, t, f);
                    case "utf8":
                    case "utf-8":
                        return r = t, i = f, N(F(e, this.length - r), this, r, i);
                    case "ascii":
                    case "latin1":
                    case "binary":
                        return a = t, o = f, N(function(e) {
                            let t = [];
                            for (let f = 0; f < e.length; ++f) t.push(255 & e.charCodeAt(f));
                            return t
                        }(e), this, a, o);
                    case "base64":
                        return s = t, u = f, N(D(e), this, s, u);
                    case "ucs2":
                    case "ucs-2":
                    case "utf16le":
                    case "utf-16le":
                        return d = t, c = f, N(function(e, t) {
                            let f, n;
                            let r = [];
                            for (let i = 0; i < e.length && !((t -= 2) < 0); ++i) n = (f = e.charCodeAt(i)) >> 8, r.push(f % 256), r.push(n);
                            return r
                        }(e, this.length - d), this, d, c);
                    default:
                        if (p) throw TypeError("Unknown encoding: " + n);
                        n = ("" + n).toLowerCase(), p = !0
                }
            }, o.prototype.toJSON = function() {
                return {
                    type: "Buffer",
                    data: Array.prototype.slice.call(this._arr || this, 0)
                }
            }, o.prototype.slice = function(e, t) {
                let f = this.length;
                e = ~~e, t = void 0 === t ? f : ~~t, e < 0 ? (e += f) < 0 && (e = 0) : e > f && (e = f), t < 0 ? (t += f) < 0 && (t = 0) : t > f && (t = f), t < e && (t = e);
                let n = this.subarray(e, t);
                return Object.setPrototypeOf(n, o.prototype), n
            }, o.prototype.readUintLE = o.prototype.readUIntLE = function(e, t, f) {
                e >>>= 0, t >>>= 0, f || g(e, t, this.length);
                let n = this[e],
                    r = 1,
                    i = 0;
                for (; ++i < t && (r *= 256);) n += this[e + i] * r;
                return n
            }, o.prototype.readUintBE = o.prototype.readUIntBE = function(e, t, f) {
                e >>>= 0, t >>>= 0, f || g(e, t, this.length);
                let n = this[e + --t],
                    r = 1;
                for (; t > 0 && (r *= 256);) n += this[e + --t] * r;
                return n
            }, o.prototype.readUint8 = o.prototype.readUInt8 = function(e, t) {
                return e >>>= 0, t || g(e, 1, this.length), this[e]
            }, o.prototype.readUint16LE = o.prototype.readUInt16LE = function(e, t) {
                return e >>>= 0, t || g(e, 2, this.length), this[e] | this[e + 1] << 8
            }, o.prototype.readUint16BE = o.prototype.readUInt16BE = function(e, t) {
                return e >>>= 0, t || g(e, 2, this.length), this[e] << 8 | this[e + 1]
            }, o.prototype.readUint32LE = o.prototype.readUInt32LE = function(e, t) {
                return e >>>= 0, t || g(e, 4, this.length), (this[e] | this[e + 1] << 8 | this[e + 2] << 16) + 16777216 * this[e + 3]
            }, o.prototype.readUint32BE = o.prototype.readUInt32BE = function(e, t) {
                return e >>>= 0, t || g(e, 4, this.length), 16777216 * this[e] + (this[e + 1] << 16 | this[e + 2] << 8 | this[e + 3])
            }, o.prototype.readBigUInt64LE = q(function(e) {
                M(e >>>= 0, "offset");
                let t = this[e],
                    f = this[e + 7];
                (void 0 === t || void 0 === f) && x(e, this.length - 8);
                let n = t + 256 * this[++e] + 65536 * this[++e] + 16777216 * this[++e],
                    r = this[++e] + 256 * this[++e] + 65536 * this[++e] + 16777216 * f;
                return BigInt(n) + (BigInt(r) << BigInt(32))
            }), o.prototype.readBigUInt64BE = q(function(e) {
                M(e >>>= 0, "offset");
                let t = this[e],
                    f = this[e + 7];
                (void 0 === t || void 0 === f) && x(e, this.length - 8);
                let n = 16777216 * t + 65536 * this[++e] + 256 * this[++e] + this[++e],
                    r = 16777216 * this[++e] + 65536 * this[++e] + 256 * this[++e] + f;
                return (BigInt(n) << BigInt(32)) + BigInt(r)
            }), o.prototype.readIntLE = function(e, t, f) {
                e >>>= 0, t >>>= 0, f || g(e, t, this.length);
                let n = this[e],
                    r = 1,
                    i = 0;
                for (; ++i < t && (r *= 256);) n += this[e + i] * r;
                return n >= (r *= 128) && (n -= Math.pow(2, 8 * t)), n
            }, o.prototype.readIntBE = function(e, t, f) {
                e >>>= 0, t >>>= 0, f || g(e, t, this.length);
                let n = t,
                    r = 1,
                    i = this[e + --n];
                for (; n > 0 && (r *= 256);) i += this[e + --n] * r;
                return i >= (r *= 128) && (i -= Math.pow(2, 8 * t)), i
            }, o.prototype.readInt8 = function(e, t) {
                return (e >>>= 0, t || g(e, 1, this.length), 128 & this[e]) ? -((255 - this[e] + 1) * 1) : this[e]
            }, o.prototype.readInt16LE = function(e, t) {
                e >>>= 0, t || g(e, 2, this.length);
                let f = this[e] | this[e + 1] << 8;
                return 32768 & f ? 4294901760 | f : f
            }, o.prototype.readInt16BE = function(e, t) {
                e >>>= 0, t || g(e, 2, this.length);
                let f = this[e + 1] | this[e] << 8;
                return 32768 & f ? 4294901760 | f : f
            }, o.prototype.readInt32LE = function(e, t) {
                return e >>>= 0, t || g(e, 4, this.length), this[e] | this[e + 1] << 8 | this[e + 2] << 16 | this[e + 3] << 24
            }, o.prototype.readInt32BE = function(e, t) {
                return e >>>= 0, t || g(e, 4, this.length), this[e] << 24 | this[e + 1] << 16 | this[e + 2] << 8 | this[e + 3]
            }, o.prototype.readBigInt64LE = q(function(e) {
                M(e >>>= 0, "offset");
                let t = this[e],
                    f = this[e + 7];
                return (void 0 === t || void 0 === f) && x(e, this.length - 8), (BigInt(this[e + 4] + 256 * this[e + 5] + 65536 * this[e + 6] + (f << 24)) << BigInt(32)) + BigInt(t + 256 * this[++e] + 65536 * this[++e] + 16777216 * this[++e])
            }), o.prototype.readBigInt64BE = q(function(e) {
                M(e >>>= 0, "offset");
                let t = this[e],
                    f = this[e + 7];
                return (void 0 === t || void 0 === f) && x(e, this.length - 8), (BigInt((t << 24) + 65536 * this[++e] + 256 * this[++e] + this[++e]) << BigInt(32)) + BigInt(16777216 * this[++e] + 65536 * this[++e] + 256 * this[++e] + f)
            }), o.prototype.readFloatLE = function(e, t) {
                return e >>>= 0, t || g(e, 4, this.length), r.read(this, e, !0, 23, 4)
            }, o.prototype.readFloatBE = function(e, t) {
                return e >>>= 0, t || g(e, 4, this.length), r.read(this, e, !1, 23, 4)
            }, o.prototype.readDoubleLE = function(e, t) {
                return e >>>= 0, t || g(e, 8, this.length), r.read(this, e, !0, 52, 8)
            }, o.prototype.readDoubleBE = function(e, t) {
                return e >>>= 0, t || g(e, 8, this.length), r.read(this, e, !1, 52, 8)
            }, o.prototype.writeUintLE = o.prototype.writeUIntLE = function(e, t, f, n) {
                if (e = +e, t >>>= 0, f >>>= 0, !n) {
                    let n = Math.pow(2, 8 * f) - 1;
                    w(this, e, t, f, n, 0)
                }
                let r = 1,
                    i = 0;
                for (this[t] = 255 & e; ++i < f && (r *= 256);) this[t + i] = e / r & 255;
                return t + f
            }, o.prototype.writeUintBE = o.prototype.writeUIntBE = function(e, t, f, n) {
                if (e = +e, t >>>= 0, f >>>= 0, !n) {
                    let n = Math.pow(2, 8 * f) - 1;
                    w(this, e, t, f, n, 0)
                }
                let r = f - 1,
                    i = 1;
                for (this[t + r] = 255 & e; --r >= 0 && (i *= 256);) this[t + r] = e / i & 255;
                return t + f
            }, o.prototype.writeUint8 = o.prototype.writeUInt8 = function(e, t, f) {
                return e = +e, t >>>= 0, f || w(this, e, t, 1, 255, 0), this[t] = 255 & e, t + 1
            }, o.prototype.writeUint16LE = o.prototype.writeUInt16LE = function(e, t, f) {
                return e = +e, t >>>= 0, f || w(this, e, t, 2, 65535, 0), this[t] = 255 & e, this[t + 1] = e >>> 8, t + 2
            }, o.prototype.writeUint16BE = o.prototype.writeUInt16BE = function(e, t, f) {
                return e = +e, t >>>= 0, f || w(this, e, t, 2, 65535, 0), this[t] = e >>> 8, this[t + 1] = 255 & e, t + 2
            }, o.prototype.writeUint32LE = o.prototype.writeUInt32LE = function(e, t, f) {
                return e = +e, t >>>= 0, f || w(this, e, t, 4, 4294967295, 0), this[t + 3] = e >>> 24, this[t + 2] = e >>> 16, this[t + 1] = e >>> 8, this[t] = 255 & e, t + 4
            }, o.prototype.writeUint32BE = o.prototype.writeUInt32BE = function(e, t, f) {
                return e = +e, t >>>= 0, f || w(this, e, t, 4, 4294967295, 0), this[t] = e >>> 24, this[t + 1] = e >>> 16, this[t + 2] = e >>> 8, this[t + 3] = 255 & e, t + 4
            }, o.prototype.writeBigUInt64LE = q(function(e, t = 0) {
                return A(this, e, t, BigInt(0), BigInt("0xffffffffffffffff"))
            }), o.prototype.writeBigUInt64BE = q(function(e, t = 0) {
                return I(this, e, t, BigInt(0), BigInt("0xffffffffffffffff"))
            }), o.prototype.writeIntLE = function(e, t, f, n) {
                if (e = +e, t >>>= 0, !n) {
                    let n = Math.pow(2, 8 * f - 1);
                    w(this, e, t, f, n - 1, -n)
                }
                let r = 0,
                    i = 1,
                    a = 0;
                for (this[t] = 255 & e; ++r < f && (i *= 256);) e < 0 && 0 === a && 0 !== this[t + r - 1] && (a = 1), this[t + r] = (e / i >> 0) - a & 255;
                return t + f
            }, o.prototype.writeIntBE = function(e, t, f, n) {
                if (e = +e, t >>>= 0, !n) {
                    let n = Math.pow(2, 8 * f - 1);
                    w(this, e, t, f, n - 1, -n)
                }
                let r = f - 1,
                    i = 1,
                    a = 0;
                for (this[t + r] = 255 & e; --r >= 0 && (i *= 256);) e < 0 && 0 === a && 0 !== this[t + r + 1] && (a = 1), this[t + r] = (e / i >> 0) - a & 255;
                return t + f
            }, o.prototype.writeInt8 = function(e, t, f) {
                return e = +e, t >>>= 0, f || w(this, e, t, 1, 127, -128), e < 0 && (e = 255 + e + 1), this[t] = 255 & e, t + 1
            }, o.prototype.writeInt16LE = function(e, t, f) {
                return e = +e, t >>>= 0, f || w(this, e, t, 2, 32767, -32768), this[t] = 255 & e, this[t + 1] = e >>> 8, t + 2
            }, o.prototype.writeInt16BE = function(e, t, f) {
                return e = +e, t >>>= 0, f || w(this, e, t, 2, 32767, -32768), this[t] = e >>> 8, this[t + 1] = 255 & e, t + 2
            }, o.prototype.writeInt32LE = function(e, t, f) {
                return e = +e, t >>>= 0, f || w(this, e, t, 4, 2147483647, -2147483648), this[t] = 255 & e, this[t + 1] = e >>> 8, this[t + 2] = e >>> 16, this[t + 3] = e >>> 24, t + 4
            }, o.prototype.writeInt32BE = function(e, t, f) {
                return e = +e, t >>>= 0, f || w(this, e, t, 4, 2147483647, -2147483648), e < 0 && (e = 4294967295 + e + 1), this[t] = e >>> 24, this[t + 1] = e >>> 16, this[t + 2] = e >>> 8, this[t + 3] = 255 & e, t + 4
            }, o.prototype.writeBigInt64LE = q(function(e, t = 0) {
                return A(this, e, t, -BigInt("0x8000000000000000"), BigInt("0x7fffffffffffffff"))
            }), o.prototype.writeBigInt64BE = q(function(e, t = 0) {
                return I(this, e, t, -BigInt("0x8000000000000000"), BigInt("0x7fffffffffffffff"))
            }), o.prototype.writeFloatLE = function(e, t, f) {
                return _(this, e, t, !0, f)
            }, o.prototype.writeFloatBE = function(e, t, f) {
                return _(this, e, t, !1, f)
            }, o.prototype.writeDoubleLE = function(e, t, f) {
                return k(this, e, t, !0, f)
            }, o.prototype.writeDoubleBE = function(e, t, f) {
                return k(this, e, t, !1, f)
            }, o.prototype.copy = function(e, t, f, n) {
                if (!o.isBuffer(e)) throw TypeError("argument should be a Buffer");
                if (f || (f = 0), n || 0 === n || (n = this.length), t >= e.length && (t = e.length), t || (t = 0), n > 0 && n < f && (n = f), n === f || 0 === e.length || 0 === this.length) return 0;
                if (t < 0) throw RangeError("targetStart out of bounds");
                if (f < 0 || f >= this.length) throw RangeError("Index out of range");
                if (n < 0) throw RangeError("sourceEnd out of bounds");
                n > this.length && (n = this.length), e.length - t < n - f && (n = e.length - t + f);
                let r = n - f;
                return this === e && "function" == typeof Uint8Array.prototype.copyWithin ? this.copyWithin(t, f, n) : Uint8Array.prototype.set.call(e, this.subarray(f, n), t), r
            }, o.prototype.fill = function(e, t, f, n) {
                let r;
                if ("string" == typeof e) {
                    if ("string" == typeof t ? (n = t, t = 0, f = this.length) : "string" == typeof f && (n = f, f = this.length), void 0 !== n && "string" != typeof n) throw TypeError("encoding must be a string");
                    if ("string" == typeof n && !o.isEncoding(n)) throw TypeError("Unknown encoding: " + n);
                    if (1 === e.length) {
                        let t = e.charCodeAt(0);
                        ("utf8" === n && t < 128 || "latin1" === n) && (e = t)
                    }
                } else "number" == typeof e ? e &= 255 : "boolean" == typeof e && (e = Number(e));
                if (t < 0 || this.length < t || this.length < f) throw RangeError("Out of range index");
                if (f <= t) return this;
                if (t >>>= 0, f = void 0 === f ? this.length : f >>> 0, e || (e = 0), "number" == typeof e)
                    for (r = t; r < f; ++r) this[r] = e;
                else {
                    let i = o.isBuffer(e) ? e : o.from(e, n),
                        a = i.length;
                    if (0 === a) throw TypeError('The value "' + e + '" is invalid for argument "value"');
                    for (r = 0; r < f - t; ++r) this[r + t] = i[r % a]
                }
                return this
            };
            let C = {};

            function S(e, t, f) {
                C[e] = class extends f {
                    get code() {
                        return e
                    }
                    set code(e) {
                        Object.defineProperty(this, "code", {
                            configurable: !0,
                            enumerable: !0,
                            value: e,
                            writable: !0
                        })
                    }
                    toString() {
                        return `${this.name} [${e}]: ${this.message}`
                    }
                    constructor() {
                        super(), Object.defineProperty(this, "message", {
                            value: t.apply(this, arguments),
                            writable: !0,
                            configurable: !0
                        }), this.name = `${this.name} [${e}]`, this.stack, delete this.name
                    }
                }
            }

            function O(e) {
                let t = "",
                    f = e.length,
                    n = "-" === e[0] ? 1 : 0;
                for (; f >= n + 4; f -= 3) t = `_${e.slice(f-3,f)}${t}`;
                return `${e.slice(0,f)}${t}`
            }

            function P(e, t, f, n, r, i) {
                if (e > f || e < t) {
                    let n;
                    let r = "bigint" == typeof t ? "n" : "";
                    throw n = i > 3 ? 0 === t || t === BigInt(0) ? `>= 0${r} and < 2${r} ** ${(i+1)*8}${r}` : `>= -(2${r} ** ${(i+1)*8-1}${r}) and < 2 ** ${(i+1)*8-1}${r}` : `>= ${t}${r} and <= ${f}${r}`, new C.ERR_OUT_OF_RANGE("value", n, e)
                }
                M(r, "offset"), (void 0 === n[r] || void 0 === n[r + i]) && x(r, n.length - (i + 1))
            }

            function M(e, t) {
                if ("number" != typeof e) throw new C.ERR_INVALID_ARG_TYPE(t, "number", e)
            }

            function x(e, t, f) {
                if (Math.floor(e) !== e) throw M(e, f), new C.ERR_OUT_OF_RANGE(f || "offset", "an integer", e);
                if (t < 0) throw new C.ERR_BUFFER_OUT_OF_BOUNDS;
                throw new C.ERR_OUT_OF_RANGE(f || "offset", `>= ${f?1:0} and <= ${t}`, e)
            }
            S("ERR_BUFFER_OUT_OF_BOUNDS", function(e) {
                return e ? `${e} is outside of buffer bounds` : "Attempt to access memory outside buffer bounds"
            }, RangeError), S("ERR_INVALID_ARG_TYPE", function(e, t) {
                return `The "${e}" argument must be of type number. Received type ${typeof t}`
            }, TypeError), S("ERR_OUT_OF_RANGE", function(e, t, f) {
                let n = `The value of "${e}" is out of range.`,
                    r = f;
                return Number.isInteger(f) && Math.abs(f) > 4294967296 ? r = O(String(f)) : "bigint" == typeof f && (r = String(f), (f > BigInt(2) ** BigInt(32) || f < -(BigInt(2) ** BigInt(32))) && (r = O(r)), r += "n"), n += ` It must be ${t}. Received ${r}`
            }, RangeError);
            let R = /[^+/0-9A-Za-z-_]/g;

            function F(e, t) {
                let f;
                t = t || 1 / 0;
                let n = e.length,
                    r = null,
                    i = [];
                for (let a = 0; a < n; ++a) {
                    if ((f = e.charCodeAt(a)) > 55295 && f < 57344) {
                        if (!r) {
                            if (f > 56319 || a + 1 === n) {
                                (t -= 3) > -1 && i.push(239, 191, 189);
                                continue
                            }
                            r = f;
                            continue
                        }
                        if (f < 56320) {
                            (t -= 3) > -1 && i.push(239, 191, 189), r = f;
                            continue
                        }
                        f = (r - 55296 << 10 | f - 56320) + 65536
                    } else r && (t -= 3) > -1 && i.push(239, 191, 189);
                    if (r = null, f < 128) {
                        if ((t -= 1) < 0) break;
                        i.push(f)
                    } else if (f < 2048) {
                        if ((t -= 2) < 0) break;
                        i.push(f >> 6 | 192, 63 & f | 128)
                    } else if (f < 65536) {
                        if ((t -= 3) < 0) break;
                        i.push(f >> 12 | 224, f >> 6 & 63 | 128, 63 & f | 128)
                    } else if (f < 1114112) {
                        if ((t -= 4) < 0) break;
                        i.push(f >> 18 | 240, f >> 12 & 63 | 128, f >> 6 & 63 | 128, 63 & f | 128)
                    } else throw Error("Invalid code point")
                }
                return i
            }

            function D(e) {
                return n.toByteArray(function(e) {
                    if ((e = (e = e.split("=")[0]).trim().replace(R, "")).length < 2) return "";
                    for (; e.length % 4 != 0;) e += "=";
                    return e
                }(e))
            }

            function N(e, t, f, n) {
                let r;
                for (r = 0; r < n && !(r + f >= t.length) && !(r >= e.length); ++r) t[r + f] = e[r];
                return r
            }

            function B(e, t) {
                return e instanceof t || null != e && null != e.constructor && null != e.constructor.name && e.constructor.name === t.name
            }
            let L = function() {
                let e = "0123456789abcdef",
                    t = Array(256);
                for (let f = 0; f < 16; ++f) {
                    let n = 16 * f;
                    for (let r = 0; r < 16; ++r) t[n + r] = e[f] + e[r]
                }
                return t
            }();

            function q(e) {
                return "undefined" == typeof BigInt ? U : e
            }

            function U() {
                throw Error("BigInt not supported")
            }
        },
        17587: (e, t, f) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.BaseError = void 0;
            let n = f(56746),
                r = class e extends Error {
                    constructor(t, f = {}) {
                        let r = f.cause instanceof e ? f.cause.details : f.cause ? .message ? f.cause.message : f.details,
                            i = f.cause instanceof e && f.cause.docsPath || f.docsPath;
                        super([t || "An error occurred.", "", ...f.metaMessages ? [...f.metaMessages, ""] : [], ...i ? [`Docs: https://abitype.dev${i}`] : [], ...r ? [`Details: ${r}`] : [], `Version: abitype@${n.version}`].join("\n")), Object.defineProperty(this, "details", {
                            enumerable: !0,
                            configurable: !0,
                            writable: !0,
                            value: void 0
                        }), Object.defineProperty(this, "docsPath", {
                            enumerable: !0,
                            configurable: !0,
                            writable: !0,
                            value: void 0
                        }), Object.defineProperty(this, "metaMessages", {
                            enumerable: !0,
                            configurable: !0,
                            writable: !0,
                            value: void 0
                        }), Object.defineProperty(this, "shortMessage", {
                            enumerable: !0,
                            configurable: !0,
                            writable: !0,
                            value: void 0
                        }), Object.defineProperty(this, "name", {
                            enumerable: !0,
                            configurable: !0,
                            writable: !0,
                            value: "AbiTypeError"
                        }), f.cause && (this.cause = f.cause), this.details = r, this.docsPath = i, this.metaMessages = f.metaMessages, this.shortMessage = t
                    }
                };
            t.BaseError = r
        },
        28533: (e, t, f) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.UnknownSolidityTypeError = t.UnknownTypeError = t.InvalidAbiItemError = void 0;
            let n = f(17587),
                r = class extends n.BaseError {
                    constructor({
                        signature: e
                    }) {
                        super("Failed to parse ABI item.", {
                            details: `parseAbiItem(${JSON.stringify(e,null,2)})`,
                            docsPath: "/api/human.html#parseabiitem-1"
                        }), Object.defineProperty(this, "name", {
                            enumerable: !0,
                            configurable: !0,
                            writable: !0,
                            value: "InvalidAbiItemError"
                        })
                    }
                };
            t.InvalidAbiItemError = r;
            let i = class extends n.BaseError {
                constructor({
                    type: e
                }) {
                    super("Unknown type.", {
                        metaMessages: [`Type "${e}" is not a valid ABI type. Perhaps you forgot to include a struct signature?`]
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "UnknownTypeError"
                    })
                }
            };
            t.UnknownTypeError = i;
            let a = class extends n.BaseError {
                constructor({
                    type: e
                }) {
                    super("Unknown type.", {
                        metaMessages: [`Type "${e}" is not a valid ABI type.`]
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "UnknownSolidityTypeError"
                    })
                }
            };
            t.UnknownSolidityTypeError = a
        },
        4034: (e, t, f) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.InvalidAbiTypeParameterError = t.InvalidFunctionModifierError = t.InvalidModifierError = t.SolidityProtectedKeywordError = t.InvalidParameterError = t.InvalidAbiParametersError = t.InvalidAbiParameterError = void 0;
            let n = f(17587),
                r = class extends n.BaseError {
                    constructor({
                        param: e
                    }) {
                        super("Failed to parse ABI parameter.", {
                            details: `parseAbiParameter(${JSON.stringify(e,null,2)})`,
                            docsPath: "/api/human.html#parseabiparameter-1"
                        }), Object.defineProperty(this, "name", {
                            enumerable: !0,
                            configurable: !0,
                            writable: !0,
                            value: "InvalidAbiParameterError"
                        })
                    }
                };
            t.InvalidAbiParameterError = r;
            let i = class extends n.BaseError {
                constructor({
                    params: e
                }) {
                    super("Failed to parse ABI parameters.", {
                        details: `parseAbiParameters(${JSON.stringify(e,null,2)})`,
                        docsPath: "/api/human.html#parseabiparameters-1"
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "InvalidAbiParametersError"
                    })
                }
            };
            t.InvalidAbiParametersError = i;
            let a = class extends n.BaseError {
                constructor({
                    param: e
                }) {
                    super("Invalid ABI parameter.", {
                        details: e
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "InvalidParameterError"
                    })
                }
            };
            t.InvalidParameterError = a;
            let o = class extends n.BaseError {
                constructor({
                    param: e,
                    name: t
                }) {
                    super("Invalid ABI parameter.", {
                        details: e,
                        metaMessages: [`"${t}" is a protected Solidity keyword. More info: https://docs.soliditylang.org/en/latest/cheatsheet.html`]
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "SolidityProtectedKeywordError"
                    })
                }
            };
            t.SolidityProtectedKeywordError = o;
            let s = class extends n.BaseError {
                constructor({
                    param: e,
                    type: t,
                    modifier: f
                }) {
                    super("Invalid ABI parameter.", {
                        details: e,
                        metaMessages: [`Modifier "${f}" not allowed${t?` in "${t}" type`:""}.`]
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "InvalidModifierError"
                    })
                }
            };
            t.InvalidModifierError = s;
            let u = class extends n.BaseError {
                constructor({
                    param: e,
                    type: t,
                    modifier: f
                }) {
                    super("Invalid ABI parameter.", {
                        details: e,
                        metaMessages: [`Modifier "${f}" not allowed${t?` in "${t}" type`:""}.`, `Data location can only be specified for array, struct, or mapping types, but "${f}" was given.`]
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "InvalidFunctionModifierError"
                    })
                }
            };
            t.InvalidFunctionModifierError = u;
            let d = class extends n.BaseError {
                constructor({
                    abiParameter: e
                }) {
                    super("Invalid ABI parameter.", {
                        details: JSON.stringify(e, null, 2),
                        metaMessages: ["ABI parameter type is invalid."]
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "InvalidAbiTypeParameterError"
                    })
                }
            };
            t.InvalidAbiTypeParameterError = d
        },
        87948: (e, t, f) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.InvalidStructSignatureError = t.UnknownSignatureError = t.InvalidSignatureError = void 0;
            let n = f(17587),
                r = class extends n.BaseError {
                    constructor({
                        signature: e,
                        type: t
                    }) {
                        super(`Invalid ${t} signature.`, {
                            details: e
                        }), Object.defineProperty(this, "name", {
                            enumerable: !0,
                            configurable: !0,
                            writable: !0,
                            value: "InvalidSignatureError"
                        })
                    }
                };
            t.InvalidSignatureError = r;
            let i = class extends n.BaseError {
                constructor({
                    signature: e
                }) {
                    super("Unknown signature.", {
                        details: e
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "UnknownSignatureError"
                    })
                }
            };
            t.UnknownSignatureError = i;
            let a = class extends n.BaseError {
                constructor({
                    signature: e
                }) {
                    super("Invalid struct signature.", {
                        details: e,
                        metaMessages: ["No properties exist."]
                    }), Object.defineProperty(this, "name", {
                        enumerable: !0,
                        configurable: !0,
                        writable: !0,
                        value: "InvalidStructSignatureError"
                    })
                }
            };
            t.InvalidStructSignatureError = a
        },
        15654: (e, t, f) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.InvalidParenthesisError = void 0;
            let n = f(17587),
                r = class extends n.BaseError {
                    constructor({
                        current: e,
                        depth: t
                    }) {
                        super("Unbalanced parentheses.", {
                            metaMessages: [`"${e.trim()}" has too many ${t>0?"opening":"closing"} parentheses.`],
                            details: `Depth "${t}"`
                        }), Object.defineProperty(this, "name", {
                            enumerable: !0,
                            configurable: !0,
                            writable: !0,
                            value: "InvalidParenthesisError"
                        })
                    }
                };
            t.InvalidParenthesisError = r
        },
        32969: (e, t, f) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.CircularReferenceError = void 0;
            let n = f(17587),
                r = class extends n.BaseError {
                    constructor({
                        type: e
                    }) {
                        super("Circular reference detected.", {
                            metaMessages: [`Struct "${e}" is a circular reference.`]
                        }), Object.defineProperty(this, "name", {
                            enumerable: !0,
                            configurable: !0,
                            writable: !0,
                            value: "CircularReferenceError"
                        })
                    }
                };
            t.CircularReferenceError = r
        },
        40539: (e, t, f) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.formatAbi = void 0;
            let n = f(49761);
            t.formatAbi = function(e) {
                let t = [],
                    f = e.length;
                for (let r = 0; r < f; r++) {
                    let f = e[r],
                        i = (0, n.formatAbiItem)(f);
                    t.push(i)
                }
                return t
            }
        },
        49761: (e, t, f) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.formatAbiItem = void 0;
            let n = f(43407);
            t.formatAbiItem = function(e) {
                return "function" === e.type ? `function ${e.name}(${(0,n.formatAbiParameters)(e.inputs)})${e.stateMutability&&"nonpayable"!==e.stateMutability?` ${e.stateMutability}`:""}${e.outputs.length?` returns (${(0,n.formatAbiParameters)(e.outputs)})`:""}` : "event" === e.type ? `event ${e.name}(${(0,n.formatAbiParameters)(e.inputs)})` : "error" === e.type ? `error ${e.name}(${(0,n.formatAbiParameters)(e.inputs)})` : "constructor" === e.type ? `constructor(${(0,n.formatAbiParameters)(e.inputs)})${"payable"===e.stateMutability?" payable":""}` : "fallback" === e.type ? "fallback()" : "receive() external payable"
            }
        },
        42479: (e, t, f) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.formatAbiParameter = void 0;
            let n = f(64252),
                r = RegExp("^tuple(?<array>(\\[(\\d*)\\])*)$");
            t.formatAbiParameter = function e(t) {
                let f = t.type;
                if (r.test(t.type) && "components" in t) {
                    f = "(";
                    let i = t.components.length;
                    for (let n = 0; n < i; n++) f += e(t.components[n]), n < i - 1 && (f += ", ");
                    let a = (0, n.execTyped)(r, t.type);
                    return f += `)${a?.array??""}`, e({ ...t,
                        type: f
                    })
                }
                return ("indexed" in t && t.indexed && (f = `${f} indexed`), t.name) ? `${f} ${t.name}` : f
            }
        },
        43407: (e, t, f) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.formatAbiParameters = void 0;
            let n = f(42479);
            t.formatAbiParameters = function(e) {
                let t = "",
                    f = e.length;
                for (let r = 0; r < f; r++) {
                    let i = e[r];
                    t += (0, n.formatAbiParameter)(i), r !== f - 1 && (t += ", ")
                }
                return t
            }
        },
        11097: (e, t, f) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.parseAbi = void 0;
            let n = f(29774),
                r = f(44650),
                i = f(25615);
            t.parseAbi = function(e) {
                let t = (0, r.parseStructs)(e),
                    f = [],
                    a = e.length;
                for (let r = 0; r < a; r++) {
                    let a = e[r];
                    (0, n.isStructSignature)(a) || f.push((0, i.parseSignature)(a, t))
                }
                return f
            }
        },
        53089: (e, t, f) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.parseAbiItem = void 0;
            let n = f(8017),
                r = f(29774),
                i = f(44650),
                a = f(25615);
            t.parseAbiItem = function(e) {
                let t;
                if ("string" == typeof e) t = (0, a.parseSignature)(e);
                else {
                    let f = (0, i.parseStructs)(e),
                        n = e.length;
                    for (let i = 0; i < n; i++) {
                        let n = e[i];
                        if (!(0, r.isStructSignature)(n)) {
                            t = (0, a.parseSignature)(n, f);
                            break
                        }
                    }
                }
                if (!t) throw new n.InvalidAbiItemError({
                    signature: e
                });
                return t
            }
        },
        10668: (e, t, f) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.parseAbiParameter = void 0;
            let n = f(8017),
                r = f(29774),
                i = f(44650),
                a = f(25615);
            t.parseAbiParameter = function(e) {
                let t;
                if ("string" == typeof e) t = (0, a.parseAbiParameter)(e, {
                    modifiers: r.modifiers
                });
                else {
                    let f = (0, i.parseStructs)(e),
                        n = e.length;
                    for (let i = 0; i < n; i++) {
                        let n = e[i];
                        if (!(0, r.isStructSignature)(n)) {
                            t = (0, a.parseAbiParameter)(n, {
                                modifiers: r.modifiers,
                                structs: f
                            });
                            break
                        }
                    }
                }
                if (!t) throw new n.InvalidAbiParameterError({
                    param: e
                });
                return t
            }
        },
        28771: (e, t, f) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.parseAbiParameters = void 0;
            let n = f(8017),
                r = f(29774),
                i = f(44650),
                a = f(25615),
                o = f(25615);
            t.parseAbiParameters = function(e) {
                let t = [];
                if ("string" == typeof e) {
                    let f = (0, a.splitParameters)(e),
                        n = f.length;
                    for (let e = 0; e < n; e++) t.push((0, o.parseAbiParameter)(f[e], {
                        modifiers: r.modifiers
                    }))
                } else {
                    let f = (0, i.parseStructs)(e),
                        n = e.length;
                    for (let i = 0; i < n; i++) {
                        let n = e[i];
                        if ((0, r.isStructSignature)(n)) continue;
                        let s = (0, a.splitParameters)(n),
                            u = s.length;
                        for (let e = 0; e < u; e++) t.push((0, o.parseAbiParameter)(s[e], {
                            modifiers: r.modifiers,
                            structs: f
                        }))
                    }
                }
                if (0 === t.length) throw new n.InvalidAbiParametersError({
                    params: e
                });
                return t
            }
        },
        26122: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.parameterCache = t.getParameterCacheKey = void 0, t.getParameterCacheKey = function(e, t) {
                return t ? `${t}:${e}` : e
            }, t.parameterCache = new Map([
                ["address", {
                    type: "address"
                }],
                ["bool", {
                    type: "bool"
                }],
                ["bytes", {
                    type: "bytes"
                }],
                ["bytes32", {
                    type: "bytes32"
                }],
                ["int", {
                    type: "int256"
                }],
                ["int256", {
                    type: "int256"
                }],
                ["string", {
                    type: "string"
                }],
                ["uint", {
                    type: "uint256"
                }],
                ["uint8", {
                    type: "uint8"
                }],
                ["uint16", {
                    type: "uint16"
                }],
                ["uint24", {
                    type: "uint24"
                }],
                ["uint32", {
                    type: "uint32"
                }],
                ["uint64", {
                    type: "uint64"
                }],
                ["uint96", {
                    type: "uint96"
                }],
                ["uint112", {
                    type: "uint112"
                }],
                ["uint160", {
                    type: "uint160"
                }],
                ["uint192", {
                    type: "uint192"
                }],
                ["uint256", {
                    type: "uint256"
                }],
                ["address owner", {
                    type: "address",
                    name: "owner"
                }],
                ["address to", {
                    type: "address",
                    name: "to"
                }],
                ["bool approved", {
                    type: "bool",
                    name: "approved"
                }],
                ["bytes _data", {
                    type: "bytes",
                    name: "_data"
                }],
                ["bytes data", {
                    type: "bytes",
                    name: "data"
                }],
                ["bytes signature", {
                    type: "bytes",
                    name: "signature"
                }],
                ["bytes32 hash", {
                    type: "bytes32",
                    name: "hash"
                }],
                ["bytes32 r", {
                    type: "bytes32",
                    name: "r"
                }],
                ["bytes32 root", {
                    type: "bytes32",
                    name: "root"
                }],
                ["bytes32 s", {
                    type: "bytes32",
                    name: "s"
                }],
                ["string name", {
                    type: "string",
                    name: "name"
                }],
                ["string symbol", {
                    type: "string",
                    name: "symbol"
                }],
                ["string tokenURI", {
                    type: "string",
                    name: "tokenURI"
                }],
                ["uint tokenId", {
                    type: "uint256",
                    name: "tokenId"
                }],
                ["uint8 v", {
                    type: "uint8",
                    name: "v"
                }],
                ["uint256 balance", {
                    type: "uint256",
                    name: "balance"
                }],
                ["uint256 tokenId", {
                    type: "uint256",
                    name: "tokenId"
                }],
                ["uint256 value", {
                    type: "uint256",
                    name: "value"
                }],
                ["event:address indexed from", {
                    type: "address",
                    name: "from",
                    indexed: !0
                }],
                ["event:address indexed to", {
                    type: "address",
                    name: "to",
                    indexed: !0
                }],
                ["event:uint indexed tokenId", {
                    type: "uint256",
                    name: "tokenId",
                    indexed: !0
                }],
                ["event:uint256 indexed tokenId", {
                    type: "uint256",
                    name: "tokenId",
                    indexed: !0
                }]
            ])
        },
        29774: (e, t, f) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.functionModifiers = t.eventModifiers = t.modifiers = t.isReceiveSignature = t.isFallbackSignature = t.execConstructorSignature = t.isConstructorSignature = t.execStructSignature = t.isStructSignature = t.execFunctionSignature = t.isFunctionSignature = t.execEventSignature = t.isEventSignature = t.execErrorSignature = t.isErrorSignature = void 0;
            let n = f(64252),
                r = RegExp("^error (?<name>[a-zA-Z$_][a-zA-Z0-9$_]*)\\((?<parameters>.*?)\\)$");
            t.isErrorSignature = function(e) {
                return r.test(e)
            }, t.execErrorSignature = function(e) {
                return (0, n.execTyped)(r, e)
            };
            let i = RegExp("^event (?<name>[a-zA-Z$_][a-zA-Z0-9$_]*)\\((?<parameters>.*?)\\)$");
            t.isEventSignature = function(e) {
                return i.test(e)
            }, t.execEventSignature = function(e) {
                return (0, n.execTyped)(i, e)
            };
            let a = RegExp("^function (?<name>[a-zA-Z$_][a-zA-Z0-9$_]*)\\((?<parameters>.*?)\\)(?: (?<scope>external|public{1}))?(?: (?<stateMutability>pure|view|nonpayable|payable{1}))?(?: returns\\s?\\((?<returns>.*?)\\))?$");
            t.isFunctionSignature = function(e) {
                return a.test(e)
            }, t.execFunctionSignature = function(e) {
                return (0, n.execTyped)(a, e)
            };
            let o = RegExp("^struct (?<name>[a-zA-Z$_][a-zA-Z0-9$_]*) \\{(?<properties>.*?)\\}$");
            t.isStructSignature = function(e) {
                return o.test(e)
            }, t.execStructSignature = function(e) {
                return (0, n.execTyped)(o, e)
            };
            let s = RegExp("^constructor\\((?<parameters>.*?)\\)(?:\\s(?<stateMutability>payable{1}))?$");
            t.isConstructorSignature = function(e) {
                return s.test(e)
            }, t.execConstructorSignature = function(e) {
                return (0, n.execTyped)(s, e)
            };
            let u = /^fallback\(\)$/;
            t.isFallbackSignature = function(e) {
                return u.test(e)
            };
            let d = /^receive\(\) external payable$/;
            t.isReceiveSignature = function(e) {
                return d.test(e)
            }, t.modifiers = new Set(["memory", "indexed", "storage", "calldata"]), t.eventModifiers = new Set(["indexed"]), t.functionModifiers = new Set(["calldata", "memory", "storage"])
        },
        44650: (e, t, f) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.parseStructs = void 0;
            let n = f(64252),
                r = f(28533),
                i = f(4034),
                a = f(87948),
                o = f(32969),
                s = f(29774),
                u = f(25615);
            t.parseStructs = function(e) {
                let t = {},
                    f = e.length;
                for (let n = 0; n < f; n++) {
                    let f = e[n];
                    if (!(0, s.isStructSignature)(f)) continue;
                    let r = (0, s.execStructSignature)(f);
                    if (!r) throw new a.InvalidSignatureError({
                        signature: f,
                        type: "struct"
                    });
                    let i = r.properties.split(";"),
                        o = [],
                        d = i.length;
                    for (let e = 0; e < d; e++) {
                        let t = i[e].trim();
                        if (!t) continue;
                        let f = (0, u.parseAbiParameter)(t, {
                            type: "struct"
                        });
                        o.push(f)
                    }
                    if (!o.length) throw new a.InvalidStructSignatureError({
                        signature: f
                    });
                    t[r.name] = o
                }
                let c = {},
                    l = Object.entries(t),
                    p = l.length;
                for (let e = 0; e < p; e++) {
                    let [f, a] = l[e];
                    c[f] = function e(t, f, a = new Set) {
                        let s = [],
                            c = t.length;
                        for (let l = 0; l < c; l++) {
                            let c = t[l];
                            if (n.isTupleRegex.test(c.type)) s.push(c);
                            else {
                                let t = (0, n.execTyped)(d, c.type);
                                if (!t ? .type) throw new i.InvalidAbiTypeParameterError({
                                    abiParameter: c
                                });
                                let {
                                    array: l,
                                    type: p
                                } = t;
                                if (p in f) {
                                    if (a.has(p)) throw new o.CircularReferenceError({
                                        type: p
                                    });
                                    s.push({ ...c,
                                        type: `tuple${l??""}`,
                                        components: e(f[p] ? ? [], f, new Set([...a, p]))
                                    })
                                } else if ((0, u.isSolidityType)(p)) s.push(c);
                                else throw new r.UnknownTypeError({
                                    type: p
                                })
                            }
                        }
                        return s
                    }(a, t)
                }
                return c
            };
            let d = RegExp("^(?<type>[a-zA-Z$_][a-zA-Z0-9$_]*)(?<array>(?:\\[\\d*?\\])+?)?$")
        },
        25615: (e, t, f) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.isValidDataLocation = t.isSolidityKeyword = t.isSolidityType = t.splitParameters = t.parseAbiParameter = t.parseSignature = void 0;
            let n = f(64252),
                r = f(28533),
                i = f(4034),
                a = f(87948),
                o = f(15654),
                s = f(26122),
                u = f(29774);
            t.parseSignature = function(e, t = {}) {
                if ((0, u.isFunctionSignature)(e)) {
                    let f = (0, u.execFunctionSignature)(e);
                    if (!f) throw new a.InvalidSignatureError({
                        signature: e,
                        type: "function"
                    });
                    let n = y(f.parameters),
                        r = [],
                        i = n.length;
                    for (let e = 0; e < i; e++) r.push(p(n[e], {
                        modifiers: u.functionModifiers,
                        structs: t,
                        type: "function"
                    }));
                    let o = [];
                    if (f.returns) {
                        let e = y(f.returns),
                            n = e.length;
                        for (let f = 0; f < n; f++) o.push(p(e[f], {
                            modifiers: u.functionModifiers,
                            structs: t,
                            type: "function"
                        }))
                    }
                    return {
                        name: f.name,
                        type: "function",
                        stateMutability: f.stateMutability ? ? "nonpayable",
                        inputs: r,
                        outputs: o
                    }
                }
                if ((0, u.isEventSignature)(e)) {
                    let f = (0, u.execEventSignature)(e);
                    if (!f) throw new a.InvalidSignatureError({
                        signature: e,
                        type: "event"
                    });
                    let n = y(f.parameters),
                        r = [],
                        i = n.length;
                    for (let e = 0; e < i; e++) r.push(p(n[e], {
                        modifiers: u.eventModifiers,
                        structs: t,
                        type: "event"
                    }));
                    return {
                        name: f.name,
                        type: "event",
                        inputs: r
                    }
                }
                if ((0, u.isErrorSignature)(e)) {
                    let f = (0, u.execErrorSignature)(e);
                    if (!f) throw new a.InvalidSignatureError({
                        signature: e,
                        type: "error"
                    });
                    let n = y(f.parameters),
                        r = [],
                        i = n.length;
                    for (let e = 0; e < i; e++) r.push(p(n[e], {
                        structs: t,
                        type: "error"
                    }));
                    return {
                        name: f.name,
                        type: "error",
                        inputs: r
                    }
                }
                if ((0, u.isConstructorSignature)(e)) {
                    let f = (0, u.execConstructorSignature)(e);
                    if (!f) throw new a.InvalidSignatureError({
                        signature: e,
                        type: "constructor"
                    });
                    let n = y(f.parameters),
                        r = [],
                        i = n.length;
                    for (let e = 0; e < i; e++) r.push(p(n[e], {
                        structs: t,
                        type: "constructor"
                    }));
                    return {
                        type: "constructor",
                        stateMutability: f.stateMutability ? ? "nonpayable",
                        inputs: r
                    }
                }
                if ((0, u.isFallbackSignature)(e)) return {
                    type: "fallback"
                };
                if ((0, u.isReceiveSignature)(e)) return {
                    type: "receive",
                    stateMutability: "payable"
                };
                throw new a.UnknownSignatureError({
                    signature: e
                })
            };
            let d = RegExp("^(?<type>[a-zA-Z$_][a-zA-Z0-9$_]*)(?<array>(?:\\[\\d*?\\])+?)?(?:\\s(?<modifier>calldata|indexed|memory|storage{1}))?(?:\\s(?<name>[a-zA-Z$_][a-zA-Z0-9$_]*))?$"),
                c = RegExp("^\\((?<type>.+?)\\)(?<array>(?:\\[\\d*?\\])+?)?(?:\\s(?<modifier>calldata|indexed|memory|storage{1}))?(?:\\s(?<name>[a-zA-Z$_][a-zA-Z0-9$_]*))?$"),
                l = /^u?int$/;

            function p(e, t) {
                let f;
                let a = (0, s.getParameterCacheKey)(e, t ? .type);
                if (s.parameterCache.has(a)) return s.parameterCache.get(a);
                let o = n.isTupleRegex.test(e),
                    h = (0, n.execTyped)(o ? c : d, e);
                if (!h) throw new i.InvalidParameterError({
                    param: e
                });
                if (h.name && m(h.name)) throw new i.SolidityProtectedKeywordError({
                    param: e,
                    name: h.name
                });
                let T = h.name ? {
                        name: h.name
                    } : {},
                    g = "indexed" === h.modifier ? {
                        indexed: !0
                    } : {},
                    w = t ? .structs ? ? {},
                    A = {};
                if (o) {
                    f = "tuple";
                    let e = y(h.type),
                        t = [],
                        n = e.length;
                    for (let f = 0; f < n; f++) t.push(p(e[f], {
                        structs: w
                    }));
                    A = {
                        components: t
                    }
                } else if (h.type in w) f = "tuple", A = {
                    components: w[h.type]
                };
                else if (l.test(h.type)) f = `${h.type}256`;
                else if (f = h.type, t ? .type !== "struct" && !b(f)) throw new r.UnknownSolidityTypeError({
                    type: f
                });
                if (h.modifier) {
                    if (!t ? .modifiers ? .has ? .(h.modifier)) throw new i.InvalidModifierError({
                        param: e,
                        type: t ? .type,
                        modifier: h.modifier
                    });
                    if (u.functionModifiers.has(h.modifier) && !v(f, !!h.array)) throw new i.InvalidFunctionModifierError({
                        param: e,
                        type: t ? .type,
                        modifier: h.modifier
                    })
                }
                let I = {
                    type: `${f}${h.array??""}`,
                    ...T,
                    ...g,
                    ...A
                };
                return s.parameterCache.set(a, I), I
            }

            function y(e, t = [], f = "", n = 0) {
                if ("" === e) {
                    if ("" === f) return t;
                    if (0 !== n) throw new o.InvalidParenthesisError({
                        current: f,
                        depth: n
                    });
                    return t.push(f.trim()), t
                }
                let r = e.length;
                for (let i = 0; i < r; i++) {
                    let r = e[i],
                        a = e.slice(i + 1);
                    switch (r) {
                        case ",":
                            return 0 === n ? y(a, [...t, f.trim()]) : y(a, t, `${f}${r}`, n);
                        case "(":
                            return y(a, t, `${f}${r}`, n + 1);
                        case ")":
                            return y(a, t, `${f}${r}`, n - 1);
                        default:
                            return y(a, t, `${f}${r}`, n)
                    }
                }
                return []
            }

            function b(e) {
                return "address" === e || "bool" === e || "function" === e || "string" === e || n.bytesRegex.test(e) || n.integerRegex.test(e)
            }
            t.parseAbiParameter = p, t.splitParameters = y, t.isSolidityType = b;
            let h = /^(?:after|alias|anonymous|apply|auto|byte|calldata|case|catch|constant|copyof|default|defined|error|event|external|false|final|function|immutable|implements|in|indexed|inline|internal|let|mapping|match|memory|mutable|null|of|override|partial|private|promise|public|pure|reference|relocatable|return|returns|sizeof|static|storage|struct|super|supports|switch|this|true|try|typedef|typeof|var|view|virtual)$/;

            function m(e) {
                return "address" === e || "bool" === e || "function" === e || "string" === e || "tuple" === e || n.bytesRegex.test(e) || n.integerRegex.test(e) || h.test(e)
            }

            function v(e, t) {
                return t || "bytes" === e || "string" === e || "tuple" === e
            }
            t.isSolidityKeyword = m, t.isValidDataLocation = v
        },
        8017: (e, t, f) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.CircularReferenceError = t.InvalidParenthesisError = t.UnknownSignatureError = t.InvalidSignatureError = t.InvalidStructSignatureError = t.InvalidAbiParameterError = t.InvalidAbiParametersError = t.InvalidParameterError = t.SolidityProtectedKeywordError = t.InvalidModifierError = t.InvalidFunctionModifierError = t.InvalidAbiTypeParameterError = t.UnknownSolidityTypeError = t.InvalidAbiItemError = t.UnknownTypeError = t.parseAbiParameters = t.parseAbiParameter = t.parseAbiItem = t.parseAbi = t.formatAbiParameters = t.formatAbiParameter = t.formatAbiItem = t.formatAbi = t.narrow = t.BaseError = void 0;
            var n = f(17587);
            Object.defineProperty(t, "BaseError", {
                enumerable: !0,
                get: function() {
                    return n.BaseError
                }
            });
            var r = f(613);
            Object.defineProperty(t, "narrow", {
                enumerable: !0,
                get: function() {
                    return r.narrow
                }
            });
            var i = f(40539);
            Object.defineProperty(t, "formatAbi", {
                enumerable: !0,
                get: function() {
                    return i.formatAbi
                }
            });
            var a = f(49761);
            Object.defineProperty(t, "formatAbiItem", {
                enumerable: !0,
                get: function() {
                    return a.formatAbiItem
                }
            });
            var o = f(42479);
            Object.defineProperty(t, "formatAbiParameter", {
                enumerable: !0,
                get: function() {
                    return o.formatAbiParameter
                }
            });
            var s = f(43407);
            Object.defineProperty(t, "formatAbiParameters", {
                enumerable: !0,
                get: function() {
                    return s.formatAbiParameters
                }
            });
            var u = f(11097);
            Object.defineProperty(t, "parseAbi", {
                enumerable: !0,
                get: function() {
                    return u.parseAbi
                }
            });
            var d = f(53089);
            Object.defineProperty(t, "parseAbiItem", {
                enumerable: !0,
                get: function() {
                    return d.parseAbiItem
                }
            });
            var c = f(10668);
            Object.defineProperty(t, "parseAbiParameter", {
                enumerable: !0,
                get: function() {
                    return c.parseAbiParameter
                }
            });
            var l = f(28771);
            Object.defineProperty(t, "parseAbiParameters", {
                enumerable: !0,
                get: function() {
                    return l.parseAbiParameters
                }
            });
            var p = f(28533);
            Object.defineProperty(t, "UnknownTypeError", {
                enumerable: !0,
                get: function() {
                    return p.UnknownTypeError
                }
            }), Object.defineProperty(t, "InvalidAbiItemError", {
                enumerable: !0,
                get: function() {
                    return p.InvalidAbiItemError
                }
            }), Object.defineProperty(t, "UnknownSolidityTypeError", {
                enumerable: !0,
                get: function() {
                    return p.UnknownSolidityTypeError
                }
            });
            var y = f(4034);
            Object.defineProperty(t, "InvalidAbiTypeParameterError", {
                enumerable: !0,
                get: function() {
                    return y.InvalidAbiTypeParameterError
                }
            }), Object.defineProperty(t, "InvalidFunctionModifierError", {
                enumerable: !0,
                get: function() {
                    return y.InvalidFunctionModifierError
                }
            }), Object.defineProperty(t, "InvalidModifierError", {
                enumerable: !0,
                get: function() {
                    return y.InvalidModifierError
                }
            }), Object.defineProperty(t, "SolidityProtectedKeywordError", {
                enumerable: !0,
                get: function() {
                    return y.SolidityProtectedKeywordError
                }
            }), Object.defineProperty(t, "InvalidParameterError", {
                enumerable: !0,
                get: function() {
                    return y.InvalidParameterError
                }
            }), Object.defineProperty(t, "InvalidAbiParametersError", {
                enumerable: !0,
                get: function() {
                    return y.InvalidAbiParametersError
                }
            }), Object.defineProperty(t, "InvalidAbiParameterError", {
                enumerable: !0,
                get: function() {
                    return y.InvalidAbiParameterError
                }
            });
            var b = f(87948);
            Object.defineProperty(t, "InvalidStructSignatureError", {
                enumerable: !0,
                get: function() {
                    return b.InvalidStructSignatureError
                }
            }), Object.defineProperty(t, "InvalidSignatureError", {
                enumerable: !0,
                get: function() {
                    return b.InvalidSignatureError
                }
            }), Object.defineProperty(t, "UnknownSignatureError", {
                enumerable: !0,
                get: function() {
                    return b.UnknownSignatureError
                }
            });
            var h = f(15654);
            Object.defineProperty(t, "InvalidParenthesisError", {
                enumerable: !0,
                get: function() {
                    return h.InvalidParenthesisError
                }
            });
            var m = f(32969);
            Object.defineProperty(t, "CircularReferenceError", {
                enumerable: !0,
                get: function() {
                    return m.CircularReferenceError
                }
            })
        },
        613: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.narrow = void 0, t.narrow = function(e) {
                return e
            }
        },
        64252: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.isTupleRegex = t.integerRegex = t.bytesRegex = t.execTyped = void 0, t.execTyped = function(e, t) {
                let f = e.exec(t);
                return f ? .groups
            }, t.bytesRegex = /^bytes([1-9]|1[0-9]|2[0-9]|3[0-2])?$/, t.integerRegex = /^u?int(8|16|24|32|40|48|56|64|72|80|88|96|104|112|120|128|136|144|152|160|168|176|184|192|200|208|216|224|232|240|248|256)?$/, t.isTupleRegex = /^\(.+?\).*?$/
        },
        56746: (e, t) => {
            "use strict";
            Object.defineProperty(t, "__esModule", {
                value: !0
            }), t.version = void 0, t.version = "0.9.8"
        },
        97326: (e, t, f) => {
            "use strict";

            function n(e) {
                if (void 0 === e) throw ReferenceError("this hasn't been initialised - super() hasn't been called");
                return e
            }
            f.d(t, {
                Z: () => n
            })
        },
        64572: (e, t, f) => {
            "use strict";

            function n(e) {
                return (n = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(e) {
                    return typeof e
                } : function(e) {
                    return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e
                })(e)
            }

            function r(e, t, f) {
                var r;
                return r = function(e, t) {
                    if ("object" != n(e) || !e) return e;
                    var f = e[Symbol.toPrimitive];
                    if (void 0 !== f) {
                        var r = f.call(e, t || "default");
                        if ("object" != n(r)) return r;
                        throw TypeError("@@toPrimitive must return a primitive value.")
                    }
                    return ("string" === t ? String : Number)(e)
                }(t, "string"), (t = "symbol" == n(r) ? r : String(r)) in e ? Object.defineProperty(e, t, {
                    value: f,
                    enumerable: !0,
                    configurable: !0,
                    writable: !0
                }) : e[t] = f, e
            }
            f.d(t, {
                Z: () => r
            })
        },
        87462: (e, t, f) => {
            "use strict";

            function n() {
                return (n = Object.assign ? Object.assign.bind() : function(e) {
                    for (var t = 1; t < arguments.length; t++) {
                        var f = arguments[t];
                        for (var n in f) Object.prototype.hasOwnProperty.call(f, n) && (e[n] = f[n])
                    }
                    return e
                }).apply(this, arguments)
            }
            f.d(t, {
                Z: () => n
            })
        },
        94578: (e, t, f) => {
            "use strict";
            f.d(t, {
                Z: () => r
            });
            var n = f(89611);

            function r(e, t) {
                e.prototype = Object.create(t.prototype), e.prototype.constructor = e, (0, n.Z)(e, t)
            }
        },
        1413: (e, t, f) => {
            "use strict";
            f.d(t, {
                Z: () => i
            });
            var n = f(64572);

            function r(e, t) {
                var f = Object.keys(e);
                if (Object.getOwnPropertySymbols) {
                    var n = Object.getOwnPropertySymbols(e);
                    t && (n = n.filter(function(t) {
                        return Object.getOwnPropertyDescriptor(e, t).enumerable
                    })), f.push.apply(f, n)
                }
                return f
            }

            function i(e) {
                for (var t = 1; t < arguments.length; t++) {
                    var f = null != arguments[t] ? arguments[t] : {};
                    t % 2 ? r(Object(f), !0).forEach(function(t) {
                        (0, n.Z)(e, t, f[t])
                    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(f)) : r(Object(f)).forEach(function(t) {
                        Object.defineProperty(e, t, Object.getOwnPropertyDescriptor(f, t))
                    })
                }
                return e
            }
        },
        63366: (e, t, f) => {
            "use strict";

            function n(e, t) {
                if (null == e) return {};
                var f, n, r = {},
                    i = Object.keys(e);
                for (n = 0; n < i.length; n++) f = i[n], t.indexOf(f) >= 0 || (r[f] = e[f]);
                return r
            }
            f.d(t, {
                Z: () => n
            })
        },
        89611: (e, t, f) => {
            "use strict";

            function n(e, t) {
                return (n = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(e, t) {
                    return e.__proto__ = t, e
                })(e, t)
            }
            f.d(t, {
                Z: () => n
            })
        },
        52146: (e, t, f) => {
            "use strict";

            function n(e) {
                return (n = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(e) {
                    return e.__proto__ || Object.getPrototypeOf(e)
                })(e)
            }
            f.d(t, {
                Z: () => a
            });
            var r = f(89611);

            function i() {
                try {
                    var e = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {}))
                } catch (e) {}
                return (i = function() {
                    return !!e
                })()
            }

            function a(e) {
                var t = "function" == typeof Map ? new Map : void 0;
                return (a = function(e) {
                    if (null === e || ! function(e) {
                            try {
                                return -1 !== Function.toString.call(e).indexOf("[native code]")
                            } catch (t) {
                                return "function" == typeof e
                            }
                        }(e)) return e;
                    if ("function" != typeof e) throw TypeError("Super expression must either be null or a function");
                    if (void 0 !== t) {
                        if (t.has(e)) return t.get(e);
                        t.set(e, f)
                    }

                    function f() {
                        return function(e, t, f) {
                            if (i()) return Reflect.construct.apply(null, arguments);
                            var n = [null];
                            n.push.apply(n, t);
                            var a = new(e.bind.apply(e, n));
                            return f && (0, r.Z)(a, f.prototype), a
                        }(e, arguments, n(this).constructor)
                    }
                    return f.prototype = Object.create(e.prototype, {
                        constructor: {
                            value: f,
                            enumerable: !1,
                            writable: !0,
                            configurable: !0
                        }
                    }), (0, r.Z)(f, e)
                })(e)
            }
        },
        7065: (e, t, f) => {
            "use strict";
            f.d(t, {
                h: () => em
            });
            var n = f(51113),
                r = f(22461),
                i = f(77075),
                a = f(21270),
                o = f(72273),
                s = function() {
                    function e() {
                        this.assumeImmutableResults = !1, this.getFragmentDoc = (0, i.re)(o.Yk)
                    }
                    return e.prototype.batch = function(e) {
                        var t, f = this,
                            n = "string" == typeof e.optimistic ? e.optimistic : !1 === e.optimistic ? null : void 0;
                        return this.performTransaction(function() {
                            return t = e.update(f)
                        }, n), t
                    }, e.prototype.recordOptimisticTransaction = function(e, t) {
                        this.performTransaction(e, t)
                    }, e.prototype.transformDocument = function(e) {
                        return e
                    }, e.prototype.transformForLink = function(e) {
                        return e
                    }, e.prototype.identify = function(e) {}, e.prototype.gc = function() {
                        return []
                    }, e.prototype.modify = function(e) {
                        return !1
                    }, e.prototype.readQuery = function(e, t) {
                        return void 0 === t && (t = !!e.optimistic), this.read((0, n.__assign)((0, n.__assign)({}, e), {
                            rootId: e.id || "ROOT_QUERY",
                            optimistic: t
                        }))
                    }, e.prototype.readFragment = function(e, t) {
                        return void 0 === t && (t = !!e.optimistic), this.read((0, n.__assign)((0, n.__assign)({}, e), {
                            query: this.getFragmentDoc(e.fragment, e.fragmentName),
                            rootId: e.id,
                            optimistic: t
                        }))
                    }, e.prototype.writeQuery = function(e) {
                        var t = e.id,
                            f = e.data,
                            r = (0, n.__rest)(e, ["id", "data"]);
                        return this.write(Object.assign(r, {
                            dataId: t || "ROOT_QUERY",
                            result: f
                        }))
                    }, e.prototype.writeFragment = function(e) {
                        var t = e.id,
                            f = e.data,
                            r = e.fragment,
                            i = e.fragmentName,
                            a = (0, n.__rest)(e, ["id", "data", "fragment", "fragmentName"]);
                        return this.write(Object.assign(a, {
                            query: this.getFragmentDoc(r, i),
                            dataId: t,
                            result: f
                        }))
                    }, e.prototype.updateQuery = function(e, t) {
                        return this.batch({
                            update: function(f) {
                                var r = f.readQuery(e),
                                    i = t(r);
                                return null == i ? r : (f.writeQuery((0, n.__assign)((0, n.__assign)({}, e), {
                                    data: i
                                })), i)
                            }
                        })
                    }, e.prototype.updateFragment = function(e, t) {
                        return this.batch({
                            update: function(f) {
                                var r = f.readFragment(e),
                                    i = t(r);
                                return null == i ? r : (f.writeFragment((0, n.__assign)((0, n.__assign)({}, e), {
                                    data: i
                                })), i)
                            }
                        })
                    }, e
                }(),
                u = function(e) {
                    function t(f, n, r, i) {
                        var a, o = e.call(this, f) || this;
                        if (o.message = f, o.path = n, o.query = r, o.variables = i, Array.isArray(o.path)) {
                            o.missing = o.message;
                            for (var s = o.path.length - 1; s >= 0; --s) o.missing = ((a = {})[o.path[s]] = o.missing, a)
                        } else o.missing = o.path;
                        return o.__proto__ = t.prototype, o
                    }
                    return (0, n.__extends)(t, e), t
                }(Error),
                d = f(40362),
                c = f(89428),
                l = f(11511),
                p = f(52953),
                y = f(76409),
                b = f(60829),
                h = f(57175),
                m = f(98759),
                v = f(75714),
                T = f(83985),
                g = f(57048),
                w = f(59993),
                A = f(16188),
                I = Object.prototype.hasOwnProperty;

            function E(e) {
                return null == e
            }

            function _(e, t) {
                var f = e.__typename,
                    n = e.id,
                    r = e._id;
                if ("string" == typeof f && (t && (t.keyObject = E(n) ? E(r) ? void 0 : {
                        _id: r
                    } : {
                        id: n
                    }), E(n) && !E(r) && (n = r), !E(n))) return "".concat(f, ":").concat("number" == typeof n || "string" == typeof n ? n : JSON.stringify(n))
            }
            var k = {
                dataIdFromObject: _,
                addTypename: !0,
                resultCaching: !0,
                canonizeResults: !1
            };

            function C(e) {
                var t = e.canonizeResults;
                return void 0 === t ? k.canonizeResults : t
            }
            var S = /^[_a-z][_0-9a-z]*/i;

            function O(e) {
                var t = e.match(S);
                return t ? t[0] : e
            }

            function P(e) {
                return (0, g.s)(e) && !(0, l.Yk)(e) && !(0, A.k)(e)
            }

            function M(e, t) {
                var f = (0, o.F)((0, h.kU)(e));
                return {
                    fragmentMap: f,
                    lookupFragment: function(e) {
                        var n = f[e];
                        return !n && t && (n = t.lookup(e)), n || null
                    }
                }
            }
            var x = Object.create(null),
                R = function() {
                    return x
                },
                F = Object.create(null),
                D = function() {
                    function e(e, t) {
                        var f = this;
                        this.policies = e, this.group = t, this.data = Object.create(null), this.rootIds = Object.create(null), this.refs = Object.create(null), this.getFieldValue = function(e, t) {
                            return (0, T.J)((0, l.Yk)(e) ? f.get(e.__ref, t) : e && e[t])
                        }, this.canRead = function(e) {
                            return (0, l.Yk)(e) ? f.has(e.__ref) : "object" == typeof e
                        }, this.toReference = function(e, t) {
                            if ("string" == typeof e) return (0, l.kQ)(e);
                            if ((0, l.Yk)(e)) return e;
                            var n = f.policies.identify(e)[0];
                            if (n) {
                                var r = (0, l.kQ)(n);
                                return t && f.merge(n, e), r
                            }
                        }
                    }
                    return e.prototype.toObject = function() {
                        return (0, n.__assign)({}, this.data)
                    }, e.prototype.has = function(e) {
                        return void 0 !== this.lookup(e, !0)
                    }, e.prototype.get = function(e, t) {
                        if (this.group.depend(e, t), I.call(this.data, e)) {
                            var f = this.data[e];
                            if (f && I.call(f, t)) return f[t]
                        }
                        return "__typename" === t && I.call(this.policies.rootTypenamesById, e) ? this.policies.rootTypenamesById[e] : this instanceof L ? this.parent.get(e, t) : void 0
                    }, e.prototype.lookup = function(e, t) {
                        return (t && this.group.depend(e, "__exists"), I.call(this.data, e)) ? this.data[e] : this instanceof L ? this.parent.lookup(e, t) : this.policies.rootTypenamesById[e] ? Object.create(null) : void 0
                    }, e.prototype.merge = function(e, t) {
                        var f, n = this;
                        (0, l.Yk)(e) && (e = e.__ref), (0, l.Yk)(t) && (t = t.__ref);
                        var i = "string" == typeof e ? this.lookup(f = e) : e,
                            a = "string" == typeof t ? this.lookup(f = t) : t;
                        if (a) {
                            (0, r.kG)("string" == typeof f, 1);
                            var o = new m.w0(U).merge(i, a);
                            if (this.data[f] = o, o !== i && (delete this.refs[f], this.group.caching)) {
                                var s = Object.create(null);
                                i || (s.__exists = 1), Object.keys(a).forEach(function(e) {
                                    if (!i || i[e] !== o[e]) {
                                        s[e] = 1;
                                        var t = O(e);
                                        t === e || n.policies.hasKeyArgs(o.__typename, t) || (s[t] = 1), void 0 !== o[e] || n instanceof L || delete o[e]
                                    }
                                }), s.__typename && !(i && i.__typename) && this.policies.rootTypenamesById[f] === o.__typename && delete s.__typename, Object.keys(s).forEach(function(e) {
                                    return n.group.dirty(f, e)
                                })
                            }
                        }
                    }, e.prototype.modify = function(e, t) {
                        var f = this,
                            i = this.lookup(e);
                        if (i) {
                            var a = Object.create(null),
                                o = !1,
                                s = !0,
                                u = {
                                    DELETE: x,
                                    INVALIDATE: F,
                                    isReference: l.Yk,
                                    toReference: this.toReference,
                                    canRead: this.canRead,
                                    readField: function(t, n) {
                                        return f.policies.readField("string" == typeof t ? {
                                            fieldName: t,
                                            from: n || (0, l.kQ)(e)
                                        } : t, {
                                            store: f
                                        })
                                    }
                                };
                            if (Object.keys(i).forEach(function(d) {
                                    var c = O(d),
                                        p = i[d];
                                    if (void 0 !== p) {
                                        var y = "function" == typeof t ? t : t[d] || t[c];
                                        if (y) {
                                            var b = y === R ? x : y((0, T.J)(p), (0, n.__assign)((0, n.__assign)({}, u), {
                                                fieldName: c,
                                                storeFieldName: d,
                                                storage: f.getStorage(e, d)
                                            }));
                                            if (b === F) f.group.dirty(e, d);
                                            else if (b === x && (b = void 0), b !== p && (a[d] = b, o = !0, p = b, !1 !== globalThis.__DEV__)) {
                                                var h = function(e) {
                                                    if (void 0 === f.lookup(e.__ref)) return !1 !== globalThis.__DEV__ && r.kG.warn(2, e), !0
                                                };
                                                if ((0, l.Yk)(b)) h(b);
                                                else if (Array.isArray(b))
                                                    for (var m = !1, v = void 0, g = 0, w = b; g < w.length; g++) {
                                                        var A = w[g];
                                                        if ((0, l.Yk)(A)) {
                                                            if (m = !0, h(A)) break
                                                        } else "object" == typeof A && A && f.policies.identify(A)[0] && (v = A);
                                                        if (m && void 0 !== v) {
                                                            !1 !== globalThis.__DEV__ && r.kG.warn(3, v);
                                                            break
                                                        }
                                                    }
                                            }
                                        }
                                        void 0 !== p && (s = !1)
                                    }
                                }), o) return this.merge(e, a), s && (this instanceof L ? this.data[e] = void 0 : delete this.data[e], this.group.dirty(e, "__exists")), !0
                        }
                        return !1
                    }, e.prototype.delete = function(e, t, f) {
                        var n, r = this.lookup(e);
                        if (r) {
                            var i = this.getFieldValue(r, "__typename"),
                                a = t && f ? this.policies.getStoreFieldName({
                                    typename: i,
                                    fieldName: t,
                                    args: f
                                }) : t;
                            return this.modify(e, a ? ((n = {})[a] = R, n) : R)
                        }
                        return !1
                    }, e.prototype.evict = function(e, t) {
                        var f = !1;
                        return e.id && (I.call(this.data, e.id) && (f = this.delete(e.id, e.fieldName, e.args)), this instanceof L && this !== t && (f = this.parent.evict(e, t) || f), (e.fieldName || f) && this.group.dirty(e.id, e.fieldName || "__exists")), f
                    }, e.prototype.clear = function() {
                        this.replace(null)
                    }, e.prototype.extract = function() {
                        var e = this,
                            t = this.toObject(),
                            f = [];
                        return this.getRootIdSet().forEach(function(t) {
                            I.call(e.policies.rootTypenamesById, t) || f.push(t)
                        }), f.length && (t.__META = {
                            extraRootIds: f.sort()
                        }), t
                    }, e.prototype.replace = function(e) {
                        var t = this;
                        if (Object.keys(this.data).forEach(function(f) {
                                e && I.call(e, f) || t.delete(f)
                            }), e) {
                            var f = e.__META,
                                r = (0, n.__rest)(e, ["__META"]);
                            Object.keys(r).forEach(function(e) {
                                t.merge(e, r[e])
                            }), f && f.extraRootIds.forEach(this.retain, this)
                        }
                    }, e.prototype.retain = function(e) {
                        return this.rootIds[e] = (this.rootIds[e] || 0) + 1
                    }, e.prototype.release = function(e) {
                        if (this.rootIds[e] > 0) {
                            var t = --this.rootIds[e];
                            return t || delete this.rootIds[e], t
                        }
                        return 0
                    }, e.prototype.getRootIdSet = function(e) {
                        return void 0 === e && (e = new Set), Object.keys(this.rootIds).forEach(e.add, e), this instanceof L ? this.parent.getRootIdSet(e) : Object.keys(this.policies.rootTypenamesById).forEach(e.add, e), e
                    }, e.prototype.gc = function() {
                        var e = this,
                            t = this.getRootIdSet(),
                            f = this.toObject();
                        t.forEach(function(n) {
                            I.call(f, n) && (Object.keys(e.findChildRefIds(n)).forEach(t.add, t), delete f[n])
                        });
                        var n = Object.keys(f);
                        if (n.length) {
                            for (var r = this; r instanceof L;) r = r.parent;
                            n.forEach(function(e) {
                                return r.delete(e)
                            })
                        }
                        return n
                    }, e.prototype.findChildRefIds = function(e) {
                        if (!I.call(this.refs, e)) {
                            var t = this.refs[e] = Object.create(null),
                                f = this.data[e];
                            if (!f) return t;
                            var n = new Set([f]);
                            n.forEach(function(e) {
                                (0, l.Yk)(e) && (t[e.__ref] = !0), (0, g.s)(e) && Object.keys(e).forEach(function(t) {
                                    var f = e[t];
                                    (0, g.s)(f) && n.add(f)
                                })
                            })
                        }
                        return this.refs[e]
                    }, e.prototype.makeCacheKey = function() {
                        return this.group.keyMaker.lookupArray(arguments)
                    }, e
                }(),
                N = function() {
                    function e(e, t) {
                        void 0 === t && (t = null), this.caching = e, this.parent = t, this.d = null, this.resetCaching()
                    }
                    return e.prototype.resetCaching = function() {
                        this.d = this.caching ? (0, i.dP)() : null, this.keyMaker = new w.B(y.mr)
                    }, e.prototype.depend = function(e, t) {
                        if (this.d) {
                            this.d(t + "#" + e);
                            var f = O(t);
                            f !== t && this.d(f + "#" + e), this.parent && this.parent.depend(e, t)
                        }
                    }, e.prototype.dirty = function(e, t) {
                        this.d && this.d.dirty(t + "#" + e, "__exists" === t ? "forget" : "setDirty")
                    }, e
                }();

            function B(e, t) {
                V(e) && e.group.depend(t, "__exists")
            }! function(e) {
                var t = function(e) {
                    function t(t) {
                        var f = t.policies,
                            n = t.resultCaching,
                            r = t.seed,
                            i = e.call(this, f, new N(void 0 === n || n)) || this;
                        return i.stump = new q(i), i.storageTrie = new w.B(y.mr), r && i.replace(r), i
                    }
                    return (0, n.__extends)(t, e), t.prototype.addLayer = function(e, t) {
                        return this.stump.addLayer(e, t)
                    }, t.prototype.removeLayer = function() {
                        return this
                    }, t.prototype.getStorage = function() {
                        return this.storageTrie.lookupArray(arguments)
                    }, t
                }(e);
                e.Root = t
            }(D || (D = {}));
            var L = function(e) {
                    function t(t, f, n, r) {
                        var i = e.call(this, f.policies, r) || this;
                        return i.id = t, i.parent = f, i.replay = n, i.group = r, n(i), i
                    }
                    return (0, n.__extends)(t, e), t.prototype.addLayer = function(e, f) {
                        return new t(e, this, f, this.group)
                    }, t.prototype.removeLayer = function(e) {
                        var t = this,
                            f = this.parent.removeLayer(e);
                        return e === this.id ? (this.group.caching && Object.keys(this.data).forEach(function(e) {
                            var n = t.data[e],
                                r = f.lookup(e);
                            r ? n ? n !== r && Object.keys(n).forEach(function(f) {
                                (0, a.D)(n[f], r[f]) || t.group.dirty(e, f)
                            }) : (t.group.dirty(e, "__exists"), Object.keys(r).forEach(function(f) {
                                t.group.dirty(e, f)
                            })) : t.delete(e)
                        }), f) : f === this.parent ? this : f.addLayer(this.id, this.replay)
                    }, t.prototype.toObject = function() {
                        return (0, n.__assign)((0, n.__assign)({}, this.parent.toObject()), this.data)
                    }, t.prototype.findChildRefIds = function(t) {
                        var f = this.parent.findChildRefIds(t);
                        return I.call(this.data, t) ? (0, n.__assign)((0, n.__assign)({}, f), e.prototype.findChildRefIds.call(this, t)) : f
                    }, t.prototype.getStorage = function() {
                        for (var e = this.parent; e.parent;) e = e.parent;
                        return e.getStorage.apply(e, arguments)
                    }, t
                }(D),
                q = function(e) {
                    function t(t) {
                        return e.call(this, "EntityStore.Stump", t, function() {}, new N(t.group.caching, t.group)) || this
                    }
                    return (0, n.__extends)(t, e), t.prototype.removeLayer = function() {
                        return this
                    }, t.prototype.merge = function(e, t) {
                        return this.parent.merge(e, t)
                    }, t
                }(L);

            function U(e, t, f) {
                var n = e[f],
                    r = t[f];
                return (0, a.D)(n, r) ? n : r
            }

            function V(e) {
                return !!(e instanceof D && e.group.caching)
            }
            var G = f(5675);

            function j(e) {
                return [e.selectionSet, e.objectOrReference, e.context, e.context.canonizeResults]
            }
            var $ = function() {
                    function e(e) {
                        var t = this;
                        this.knownResults = new(y.mr ? WeakMap : Map), this.config = (0, b.o)(e, {
                            addTypename: !1 !== e.addTypename,
                            canonizeResults: C(e)
                        }), this.canon = e.canon || new G.h, this.executeSelectionSet = (0, i.re)(function(e) {
                            var f, r = e.context.canonizeResults,
                                i = j(e);
                            i[3] = !r;
                            var a = (f = t.executeSelectionSet).peek.apply(f, i);
                            return a ? r ? (0, n.__assign)((0, n.__assign)({}, a), {
                                result: t.canon.admit(a.result)
                            }) : a : (B(e.context.store, e.enclosingRef.__ref), t.execSelectionSetImpl(e))
                        }, {
                            max: this.config.resultCacheMaxSize,
                            keyArgs: j,
                            makeCacheKey: function(e, t, f, n) {
                                if (V(f.store)) return f.store.makeCacheKey(e, (0, l.Yk)(t) ? t.__ref : t, f.varString, n)
                            }
                        }), this.executeSubSelectedArray = (0, i.re)(function(e) {
                            return B(e.context.store, e.enclosingRef.__ref), t.execSubSelectedArrayImpl(e)
                        }, {
                            max: this.config.resultCacheMaxSize,
                            makeCacheKey: function(e) {
                                var t = e.field,
                                    f = e.array,
                                    n = e.context;
                                if (V(n.store)) return n.store.makeCacheKey(t, f, n.varString)
                            }
                        })
                    }
                    return e.prototype.resetCanon = function() {
                        this.canon = new G.h
                    }, e.prototype.diffQueryAgainstStore = function(e) {
                        var t, f = e.store,
                            r = e.query,
                            i = e.rootId,
                            a = e.variables,
                            o = e.returnPartialData,
                            s = e.canonizeResults,
                            d = void 0 === s ? this.config.canonizeResults : s,
                            c = this.config.cache.policies;
                        a = (0, n.__assign)((0, n.__assign)({}, (0, h.O4)((0, h.iW)(r))), a);
                        var p = (0, l.kQ)(void 0 === i ? "ROOT_QUERY" : i),
                            y = this.executeSelectionSet({
                                selectionSet: (0, h.p$)(r).selectionSet,
                                objectOrReference: p,
                                enclosingRef: p,
                                context: (0, n.__assign)({
                                    store: f,
                                    query: r,
                                    policies: c,
                                    variables: a,
                                    varString: (0, G.B)(a),
                                    canonizeResults: d
                                }, M(r, this.config.fragments))
                            });
                        if (y.missing && (t = [new u(function(e) {
                                try {
                                    JSON.stringify(e, function(e, t) {
                                        if ("string" == typeof t) throw t;
                                        return t
                                    })
                                } catch (e) {
                                    return e
                                }
                            }(y.missing), y.missing, r, a)], !(void 0 === o || o))) throw t[0];
                        return {
                            result: y.result,
                            complete: !t,
                            missing: t
                        }
                    }, e.prototype.isFresh = function(e, t, f, n) {
                        if (V(n.store) && this.knownResults.get(e) === f) {
                            var r = this.executeSelectionSet.peek(f, t, n, this.canon.isKnown(e));
                            if (r && e === r.result) return !0
                        }
                        return !1
                    }, e.prototype.execSelectionSetImpl = function(e) {
                        var t, f = this,
                            n = e.selectionSet,
                            i = e.objectOrReference,
                            a = e.enclosingRef,
                            s = e.context;
                        if ((0, l.Yk)(i) && !s.policies.rootTypenamesById[i.__ref] && !s.store.has(i.__ref)) return {
                            result: this.canon.empty,
                            missing: "Dangling reference to missing ".concat(i.__ref, " object")
                        };
                        var u = s.variables,
                            d = s.policies,
                            y = s.store.getFieldValue(i, "__typename"),
                            b = [],
                            h = new m.w0;

                        function g(e, f) {
                            var n;
                            return e.missing && (t = h.merge(t, ((n = {})[f] = e.missing, n))), e.result
                        }
                        this.config.addTypename && "string" == typeof y && !d.rootIdsByTypename[y] && b.push({
                            __typename: y
                        });
                        var w = new Set(n.selections);
                        w.forEach(function(e) {
                            var n, m;
                            if ((0, v.LZ)(e, u)) {
                                if ((0, l.My)(e)) {
                                    var T = d.readField({
                                            fieldName: e.name.value,
                                            field: e,
                                            variables: s.variables,
                                            from: i
                                        }, s),
                                        I = (0, l.u2)(e);
                                    void 0 === T ? c.Gw.added(e) || (t = h.merge(t, ((n = {})[I] = "Can't find field '".concat(e.name.value, "' on ").concat((0, l.Yk)(i) ? i.__ref + " object" : "object " + JSON.stringify(i, null, 2)), n))) : (0, A.k)(T) ? T = g(f.executeSubSelectedArray({
                                        field: e,
                                        array: T,
                                        enclosingRef: a,
                                        context: s
                                    }), I) : e.selectionSet ? null != T && (T = g(f.executeSelectionSet({
                                        selectionSet: e.selectionSet,
                                        objectOrReference: T,
                                        enclosingRef: (0, l.Yk)(T) ? T : a,
                                        context: s
                                    }), I)) : s.canonizeResults && (T = f.canon.pass(T)), void 0 !== T && b.push(((m = {})[I] = T, m))
                                } else {
                                    var E = (0, o.hi)(e, s.lookupFragment);
                                    if (!E && e.kind === p.h.FRAGMENT_SPREAD) throw (0, r._K)(9, e.name.value);
                                    E && d.fragmentMatches(E, y) && E.selectionSet.selections.forEach(w.add, w)
                                }
                            }
                        });
                        var I = {
                                result: (0, m.bw)(b),
                                missing: t
                            },
                            E = s.canonizeResults ? this.canon.admit(I) : (0, T.J)(I);
                        return E.result && this.knownResults.set(E.result, n), E
                    }, e.prototype.execSubSelectedArrayImpl = function(e) {
                        var t, f = this,
                            n = e.field,
                            i = e.array,
                            a = e.enclosingRef,
                            o = e.context,
                            s = new m.w0;

                        function u(e, f) {
                            var n;
                            return e.missing && (t = s.merge(t, ((n = {})[f] = e.missing, n))), e.result
                        }
                        return n.selectionSet && (i = i.filter(o.store.canRead)), i = i.map(function(e, t) {
                            return null === e ? null : (0, A.k)(e) ? u(f.executeSubSelectedArray({
                                field: n,
                                array: e,
                                enclosingRef: a,
                                context: o
                            }), t) : n.selectionSet ? u(f.executeSelectionSet({
                                selectionSet: n.selectionSet,
                                objectOrReference: e,
                                enclosingRef: (0, l.Yk)(e) ? e : a,
                                context: o
                            }), t) : (!1 !== globalThis.__DEV__ && function(e, t, f) {
                                if (!t.selectionSet) {
                                    var n = new Set([f]);
                                    n.forEach(function(f) {
                                        (0, g.s)(f) && ((0, r.kG)(!(0, l.Yk)(f), 10, (0, l.Yk)(f) ? e.get(f.__ref, "__typename") : f && f.__typename, t.name.value), Object.values(f).forEach(n.add, n))
                                    })
                                }
                            }(o.store, n, e), e)
                        }), {
                            result: o.canonizeResults ? this.canon.admit(i) : i,
                            missing: t
                        }
                    }, e
                }(),
                H = f(21236),
                W = f(19888),
                Q = f(60209),
                X = Object.create(null);

            function z(e) {
                var t = JSON.stringify(e);
                return X[t] || (X[t] = Object.create(null))
            }

            function K(e) {
                var t = z(e);
                return t.keyFieldsFn || (t.keyFieldsFn = function(t, f) {
                    var n = function(e, t) {
                            return f.readField(t, e)
                        },
                        i = f.keyObject = J(e, function(e) {
                            var i = ee(f.storeObject, e, n);
                            return void 0 === i && t !== f.storeObject && I.call(t, e[0]) && (i = ee(t, e, Z)), (0, r.kG)(void 0 !== i, 4, e.join("."), t), i
                        });
                    return "".concat(f.typename, ":").concat(JSON.stringify(i))
                })
            }

            function Y(e) {
                var t = z(e);
                return t.keyArgsFn || (t.keyArgsFn = function(t, f) {
                    var n = f.field,
                        r = f.variables,
                        i = f.fieldName,
                        a = JSON.stringify(J(e, function(e) {
                            var f = e[0],
                                i = f.charAt(0);
                            if ("@" === i) {
                                if (n && (0, A.O)(n.directives)) {
                                    var a = f.slice(1),
                                        o = n.directives.find(function(e) {
                                            return e.name.value === a
                                        }),
                                        s = o && (0, l.NC)(o, r);
                                    return s && ee(s, e.slice(1))
                                }
                                return
                            }
                            if ("$" === i) {
                                var u = f.slice(1);
                                if (r && I.call(r, u)) {
                                    var d = e.slice(0);
                                    return d[0] = u, ee(r, d)
                                }
                                return
                            }
                            if (t) return ee(t, e)
                        }));
                    return (t || "{}" !== a) && (i += ":" + a), i
                })
            }

            function J(e, t) {
                var f = new m.w0;
                return (function e(t) {
                    var f = z(t);
                    if (!f.paths) {
                        var n = f.paths = [],
                            r = [];
                        t.forEach(function(f, i) {
                            (0, A.k)(f) ? (e(f).forEach(function(e) {
                                return n.push(r.concat(e))
                            }), r.length = 0) : (r.push(f), (0, A.k)(t[i + 1]) || (n.push(r.slice(0)), r.length = 0))
                        })
                    }
                    return f.paths
                })(e).reduce(function(e, n) {
                    var r, i = t(n);
                    if (void 0 !== i) {
                        for (var a = n.length - 1; a >= 0; --a)(r = {})[n[a]] = i, i = r;
                        e = f.merge(e, i)
                    }
                    return e
                }, Object.create(null))
            }

            function Z(e, t) {
                return e[t]
            }

            function ee(e, t, f) {
                return f = f || Z,
                    function e(t) {
                        return (0, g.s)(t) ? (0, A.k)(t) ? t.map(e) : J(Object.keys(t).sort(), function(e) {
                            return ee(t, e)
                        }) : t
                    }(t.reduce(function e(t, n) {
                        return (0, A.k)(t) ? t.map(function(t) {
                            return e(t, n)
                        }) : t && f(t, n)
                    }, e))
            }

            function et(e) {
                return void 0 !== e.args ? e.args : e.field ? (0, l.NC)(e.field, e.variables) : null
            }
            l.PT.setStringify(G.B);
            var ef = function() {},
                en = function(e, t) {
                    return t.fieldName
                },
                er = function(e, t, f) {
                    return (0, f.mergeObjects)(e, t)
                },
                ei = function(e, t) {
                    return t
                },
                ea = function() {
                    function e(e) {
                        this.config = e, this.typePolicies = Object.create(null), this.toBeAdded = Object.create(null), this.supertypeMap = new Map, this.fuzzySubtypes = new Map, this.rootIdsByTypename = Object.create(null), this.rootTypenamesById = Object.create(null), this.usingPossibleTypes = !1, this.config = (0, n.__assign)({
                            dataIdFromObject: _
                        }, e), this.cache = this.config.cache, this.setRootTypename("Query"), this.setRootTypename("Mutation"), this.setRootTypename("Subscription"), e.possibleTypes && this.addPossibleTypes(e.possibleTypes), e.typePolicies && this.addTypePolicies(e.typePolicies)
                    }
                    return e.prototype.identify = function(e, t) {
                        var f, r, i = this,
                            a = t && (t.typename || (null === (f = t.storeObject) || void 0 === f ? void 0 : f.__typename)) || e.__typename;
                        if (a === this.rootTypenamesById.ROOT_QUERY) return ["ROOT_QUERY"];
                        for (var o = t && t.storeObject || e, s = (0, n.__assign)((0, n.__assign)({}, t), {
                                typename: a,
                                storeObject: o,
                                readField: t && t.readField || function() {
                                    var e = es(arguments, o);
                                    return i.readField(e, {
                                        store: i.cache.data,
                                        variables: e.variables
                                    })
                                }
                            }), u = a && this.getTypePolicy(a), d = u && u.keyFn || this.config.dataIdFromObject; d;) {
                            var c = d((0, n.__assign)((0, n.__assign)({}, e), o), s);
                            if ((0, A.k)(c)) d = K(c);
                            else {
                                r = c;
                                break
                            }
                        }
                        return r = r ? String(r) : void 0, s.keyObject ? [r, s.keyObject] : [r]
                    }, e.prototype.addTypePolicies = function(e) {
                        var t = this;
                        Object.keys(e).forEach(function(f) {
                            var r = e[f],
                                i = r.queryType,
                                a = r.mutationType,
                                o = r.subscriptionType,
                                s = (0, n.__rest)(r, ["queryType", "mutationType", "subscriptionType"]);
                            i && t.setRootTypename("Query", f), a && t.setRootTypename("Mutation", f), o && t.setRootTypename("Subscription", f), I.call(t.toBeAdded, f) ? t.toBeAdded[f].push(s) : t.toBeAdded[f] = [s]
                        })
                    }, e.prototype.updateTypePolicy = function(e, t) {
                        var f = this,
                            n = this.getTypePolicy(e),
                            r = t.keyFields,
                            i = t.fields;

                        function a(e, t) {
                            e.merge = "function" == typeof t ? t : !0 === t ? er : !1 === t ? ei : e.merge
                        }
                        a(n, t.merge), n.keyFn = !1 === r ? ef : (0, A.k)(r) ? K(r) : "function" == typeof r ? r : n.keyFn, i && Object.keys(i).forEach(function(t) {
                            var n = f.getFieldPolicy(e, t, !0),
                                r = i[t];
                            if ("function" == typeof r) n.read = r;
                            else {
                                var o = r.keyArgs,
                                    s = r.read,
                                    u = r.merge;
                                n.keyFn = !1 === o ? en : (0, A.k)(o) ? Y(o) : "function" == typeof o ? o : n.keyFn, "function" == typeof s && (n.read = s), a(n, u)
                            }
                            n.read && n.merge && (n.keyFn = n.keyFn || en)
                        })
                    }, e.prototype.setRootTypename = function(e, t) {
                        void 0 === t && (t = e);
                        var f = "ROOT_" + e.toUpperCase(),
                            n = this.rootTypenamesById[f];
                        t !== n && ((0, r.kG)(!n || n === e, 5, e), n && delete this.rootIdsByTypename[n], this.rootIdsByTypename[t] = f, this.rootTypenamesById[f] = t)
                    }, e.prototype.addPossibleTypes = function(e) {
                        var t = this;
                        this.usingPossibleTypes = !0, Object.keys(e).forEach(function(f) {
                            t.getSupertypeSet(f, !0), e[f].forEach(function(e) {
                                t.getSupertypeSet(e, !0).add(f);
                                var n = e.match(S);
                                n && n[0] === e || t.fuzzySubtypes.set(e, new RegExp(e))
                            })
                        })
                    }, e.prototype.getTypePolicy = function(e) {
                        var t = this;
                        if (!I.call(this.typePolicies, e)) {
                            var f = this.typePolicies[e] = Object.create(null);
                            f.fields = Object.create(null);
                            var r = this.supertypeMap.get(e);
                            !r && this.fuzzySubtypes.size && (r = this.getSupertypeSet(e, !0), this.fuzzySubtypes.forEach(function(f, n) {
                                if (f.test(e)) {
                                    var i = t.supertypeMap.get(n);
                                    i && i.forEach(function(e) {
                                        return r.add(e)
                                    })
                                }
                            })), r && r.size && r.forEach(function(e) {
                                var r = t.getTypePolicy(e),
                                    i = r.fields;
                                Object.assign(f, (0, n.__rest)(r, ["fields"])), Object.assign(f.fields, i)
                            })
                        }
                        var i = this.toBeAdded[e];
                        return i && i.length && i.splice(0).forEach(function(f) {
                            t.updateTypePolicy(e, f)
                        }), this.typePolicies[e]
                    }, e.prototype.getFieldPolicy = function(e, t, f) {
                        if (e) {
                            var n = this.getTypePolicy(e).fields;
                            return n[t] || f && (n[t] = Object.create(null))
                        }
                    }, e.prototype.getSupertypeSet = function(e, t) {
                        var f = this.supertypeMap.get(e);
                        return !f && t && this.supertypeMap.set(e, f = new Set), f
                    }, e.prototype.fragmentMatches = function(e, t, f, n) {
                        var i = this;
                        if (!e.typeCondition) return !0;
                        if (!t) return !1;
                        var a = e.typeCondition.name.value;
                        if (t === a) return !0;
                        if (this.usingPossibleTypes && this.supertypeMap.has(a))
                            for (var o = this.getSupertypeSet(t, !0), s = [o], u = function(e) {
                                    var t = i.getSupertypeSet(e, !1);
                                    t && t.size && 0 > s.indexOf(t) && s.push(t)
                                }, d = !!(f && this.fuzzySubtypes.size), c = !1, p = 0; p < s.length; ++p) {
                                var y = s[p];
                                if (y.has(a)) return o.has(a) || (c && !1 !== globalThis.__DEV__ && r.kG.warn(6, t, a), o.add(a)), !0;
                                y.forEach(u), d && p === s.length - 1 && function e(t, f, n) {
                                    return !!(0, g.s)(f) && ((0, A.k)(f) ? f.every(function(f) {
                                        return e(t, f, n)
                                    }) : t.selections.every(function(t) {
                                        if ((0, l.My)(t) && (0, v.LZ)(t, n)) {
                                            var r = (0, l.u2)(t);
                                            return I.call(f, r) && (!t.selectionSet || e(t.selectionSet, f[r], n))
                                        }
                                        return !0
                                    }))
                                }(e.selectionSet, f, n) && (d = !1, c = !0, this.fuzzySubtypes.forEach(function(e, f) {
                                    var n = t.match(e);
                                    n && n[0] === t && u(f)
                                }))
                            }
                        return !1
                    }, e.prototype.hasKeyArgs = function(e, t) {
                        var f = this.getFieldPolicy(e, t, !1);
                        return !!(f && f.keyFn)
                    }, e.prototype.getStoreFieldName = function(e) {
                        var t, f = e.typename,
                            n = e.fieldName,
                            r = this.getFieldPolicy(f, n, !1),
                            i = r && r.keyFn;
                        if (i && f)
                            for (var a = {
                                    typename: f,
                                    fieldName: n,
                                    field: e.field || null,
                                    variables: e.variables
                                }, o = et(e); i;) {
                                var s = i(o, a);
                                if ((0, A.k)(s)) i = Y(s);
                                else {
                                    t = s || n;
                                    break
                                }
                            }
                        return (void 0 === t && (t = e.field ? (0, l.vf)(e.field, e.variables) : (0, l.PT)(n, et(e))), !1 === t) ? n : n === O(t) ? t : n + ":" + t
                    }, e.prototype.readField = function(e, t) {
                        var f = e.from;
                        if (f && (e.field || e.fieldName)) {
                            if (void 0 === e.typename) {
                                var n = t.store.getFieldValue(f, "__typename");
                                n && (e.typename = n)
                            }
                            var r = this.getStoreFieldName(e),
                                i = O(r),
                                a = t.store.getFieldValue(f, r),
                                o = this.getFieldPolicy(e.typename, i, !1),
                                s = o && o.read;
                            if (s) {
                                var u = eo(this, f, e, t, t.store.getStorage((0, l.Yk)(f) ? f.__ref : f, r));
                                return Q.ab.withValue(this.cache, s, [a, u])
                            }
                            return a
                        }
                    }, e.prototype.getReadFunction = function(e, t) {
                        var f = this.getFieldPolicy(e, t, !1);
                        return f && f.read
                    }, e.prototype.getMergeFunction = function(e, t, f) {
                        var n = this.getFieldPolicy(e, t, !1),
                            r = n && n.merge;
                        return !r && f && (r = (n = this.getTypePolicy(f)) && n.merge), r
                    }, e.prototype.runMergeFunction = function(e, t, f, n, r) {
                        var i = f.field,
                            a = f.typename,
                            o = f.merge;
                        return o === er ? eu(n.store)(e, t) : o === ei ? t : (n.overwrite && (e = void 0), o(e, t, eo(this, void 0, {
                            typename: a,
                            fieldName: i.name.value,
                            field: i,
                            variables: n.variables
                        }, n, r || Object.create(null))))
                    }, e
                }();

            function eo(e, t, f, n, r) {
                var i = e.getStoreFieldName(f),
                    a = O(i),
                    o = f.variables || n.variables,
                    s = n.store,
                    u = s.toReference,
                    d = s.canRead;
                return {
                    args: et(f),
                    field: f.field || null,
                    fieldName: a,
                    storeFieldName: i,
                    variables: o,
                    isReference: l.Yk,
                    toReference: u,
                    storage: r,
                    cache: e.cache,
                    canRead: d,
                    readField: function() {
                        return e.readField(es(arguments, t, o), n)
                    },
                    mergeObjects: eu(n.store)
                }
            }

            function es(e, t, f) {
                var i, a = e[0],
                    o = e[1],
                    s = e.length;
                return "string" == typeof a ? i = {
                    fieldName: a,
                    from: s > 1 ? o : t
                } : (i = (0, n.__assign)({}, a), I.call(i, "from") || (i.from = t)), !1 !== globalThis.__DEV__ && void 0 === i.from && !1 !== globalThis.__DEV__ && r.kG.warn(7, (0, W.v)(Array.from(e))), void 0 === i.variables && (i.variables = f), i
            }

            function eu(e) {
                return function(t, f) {
                    if ((0, A.k)(t) || (0, A.k)(f)) throw (0, r._K)(8);
                    if ((0, g.s)(t) && (0, g.s)(f)) {
                        var i = e.getFieldValue(t, "__typename"),
                            a = e.getFieldValue(f, "__typename");
                        if (i && a && i !== a) return f;
                        if ((0, l.Yk)(t) && P(f)) return e.merge(t.__ref, f), t;
                        if (P(t) && (0, l.Yk)(f)) return e.merge(t, f.__ref), f;
                        if (P(t) && P(f)) return (0, n.__assign)((0, n.__assign)({}, t), f)
                    }
                    return f
                }
            }

            function ed(e, t, f) {
                var r = "".concat(t).concat(f),
                    i = e.flavors.get(r);
                return i || e.flavors.set(r, i = e.clientOnly === t && e.deferred === f ? e : (0, n.__assign)((0, n.__assign)({}, e), {
                    clientOnly: t,
                    deferred: f
                })), i
            }
            var ec = function() {
                    function e(e, t, f) {
                        this.cache = e, this.reader = t, this.fragments = f
                    }
                    return e.prototype.writeToStore = function(e, t) {
                        var f = this,
                            i = t.query,
                            o = t.result,
                            s = t.dataId,
                            u = t.variables,
                            d = t.overwrite,
                            c = (0, h.$H)(i),
                            p = new m.w0;
                        u = (0, n.__assign)((0, n.__assign)({}, (0, h.O4)(c)), u);
                        var y = (0, n.__assign)((0, n.__assign)({
                                store: e,
                                written: Object.create(null),
                                merge: function(e, t) {
                                    return p.merge(e, t)
                                },
                                variables: u,
                                varString: (0, G.B)(u)
                            }, M(i, this.fragments)), {
                                overwrite: !!d,
                                incomingById: new Map,
                                clientOnly: !1,
                                deferred: !1,
                                flavors: new Map
                            }),
                            b = this.processSelectionSet({
                                result: o || Object.create(null),
                                dataId: s,
                                selectionSet: c.selectionSet,
                                mergeTree: {
                                    map: new Map
                                },
                                context: y
                            });
                        if (!(0, l.Yk)(b)) throw (0, r._K)(11, o);
                        return y.incomingById.forEach(function(t, n) {
                            var i = t.storeObject,
                                o = t.mergeTree,
                                s = t.fieldNodeSet,
                                u = (0, l.kQ)(n);
                            if (o && o.map.size) {
                                var d = f.applyMerges(o, u, i, y);
                                if ((0, l.Yk)(d)) return;
                                i = d
                            }
                            if (!1 !== globalThis.__DEV__ && !y.overwrite) {
                                var c = Object.create(null);
                                s.forEach(function(e) {
                                    e.selectionSet && (c[e.name.value] = !0)
                                });
                                var p = function(e) {
                                    var t = o && o.map.get(e);
                                    return !!(t && t.info && t.info.merge)
                                };
                                Object.keys(i).forEach(function(e) {
                                    !0 !== c[O(e)] || p(e) || function(e, t, f, n) {
                                        var i = function(e) {
                                                var t = n.getFieldValue(e, f);
                                                return "object" == typeof t && t
                                            },
                                            o = i(e);
                                        if (o) {
                                            var s = i(t);
                                            if (!(!s || (0, l.Yk)(o) || (0, a.D)(o, s) || Object.keys(o).every(function(e) {
                                                    return void 0 !== n.getFieldValue(s, e)
                                                }))) {
                                                var u = n.getFieldValue(e, "__typename") || n.getFieldValue(t, "__typename"),
                                                    d = O(f),
                                                    c = "".concat(u, ".").concat(d);
                                                if (!eh.has(c)) {
                                                    eh.add(c);
                                                    var p = [];
                                                    (0, A.k)(o) || (0, A.k)(s) || [o, s].forEach(function(e) {
                                                        var t = n.getFieldValue(e, "__typename");
                                                        "string" != typeof t || p.includes(t) || p.push(t)
                                                    }), !1 !== globalThis.__DEV__ && r.kG.warn(14, d, u, p.length ? "either ensure all objects of type " + p.join(" and ") + " have an ID or a custom merge function, or " : "", c, o, s)
                                                }
                                            }
                                        }
                                    }(u, i, e, y.store)
                                })
                            }
                            e.merge(n, i)
                        }), e.retain(b.__ref), b
                    }, e.prototype.processSelectionSet = function(e) {
                        var t = this,
                            f = e.dataId,
                            i = e.result,
                            a = e.selectionSet,
                            o = e.context,
                            s = e.mergeTree,
                            u = this.cache.policies,
                            d = Object.create(null),
                            p = f && u.rootTypenamesById[f] || (0, l.qw)(i, a, o.fragmentMap) || f && o.store.get(f, "__typename");
                        "string" == typeof p && (d.__typename = p);
                        var y = function() {
                                var e = es(arguments, d, o.variables);
                                if ((0, l.Yk)(e.from)) {
                                    var t = o.incomingById.get(e.from.__ref);
                                    if (t) {
                                        var f = u.readField((0, n.__assign)((0, n.__assign)({}, e), {
                                            from: t.storeObject
                                        }), o);
                                        if (void 0 !== f) return f
                                    }
                                }
                                return u.readField(e, o)
                            },
                            b = new Set;
                        this.flattenFields(a, i, o, p).forEach(function(e, f) {
                            var n, a = i[(0, l.u2)(f)];
                            if (b.add(f), void 0 !== a) {
                                var o = u.getStoreFieldName({
                                        typename: p,
                                        fieldName: f.name.value,
                                        field: f,
                                        variables: e.variables
                                    }),
                                    h = ep(s, o),
                                    m = t.processFieldValue(a, f, f.selectionSet ? ed(e, !1, !1) : e, h),
                                    v = void 0;
                                f.selectionSet && ((0, l.Yk)(m) || P(m)) && (v = y("__typename", m));
                                var T = u.getMergeFunction(p, f.name.value, v);
                                T ? h.info = {
                                    field: f,
                                    typename: p,
                                    merge: T
                                } : eb(s, o), d = e.merge(d, ((n = {})[o] = m, n))
                            } else !1 === globalThis.__DEV__ || e.clientOnly || e.deferred || c.Gw.added(f) || u.getReadFunction(p, f.name.value) || !1 === globalThis.__DEV__ || r.kG.error(12, (0, l.u2)(f), i)
                        });
                        try {
                            var h = u.identify(i, {
                                    typename: p,
                                    selectionSet: a,
                                    fragmentMap: o.fragmentMap,
                                    storeObject: d,
                                    readField: y
                                }),
                                m = h[0],
                                v = h[1];
                            f = f || m, v && (d = o.merge(d, v))
                        } catch (e) {
                            if (!f) throw e
                        }
                        if ("string" == typeof f) {
                            var T = (0, l.kQ)(f),
                                g = o.written[f] || (o.written[f] = []);
                            if (g.indexOf(a) >= 0 || (g.push(a), this.reader && this.reader.isFresh(i, T, a, o))) return T;
                            var w = o.incomingById.get(f);
                            return w ? (w.storeObject = o.merge(w.storeObject, d), w.mergeTree = function e(t, f) {
                                if (t === f || !f || ey(f)) return t;
                                if (!t || ey(t)) return f;
                                var r = t.info && f.info ? (0, n.__assign)((0, n.__assign)({}, t.info), f.info) : t.info || f.info,
                                    i = t.map.size && f.map.size,
                                    a = {
                                        info: r,
                                        map: i ? new Map : t.map.size ? t.map : f.map
                                    };
                                if (i) {
                                    var o = new Set(f.map.keys());
                                    t.map.forEach(function(t, n) {
                                        a.map.set(n, e(t, f.map.get(n))), o.delete(n)
                                    }), o.forEach(function(n) {
                                        a.map.set(n, e(f.map.get(n), t.map.get(n)))
                                    })
                                }
                                return a
                            }(w.mergeTree, s), b.forEach(function(e) {
                                return w.fieldNodeSet.add(e)
                            })) : o.incomingById.set(f, {
                                storeObject: d,
                                mergeTree: ey(s) ? void 0 : s,
                                fieldNodeSet: b
                            }), T
                        }
                        return d
                    }, e.prototype.processFieldValue = function(e, t, f, n) {
                        var r = this;
                        return t.selectionSet && null !== e ? (0, A.k)(e) ? e.map(function(e, i) {
                            var a = r.processFieldValue(e, t, f, ep(n, i));
                            return eb(n, i), a
                        }) : this.processSelectionSet({
                            result: e,
                            selectionSet: t.selectionSet,
                            context: f,
                            mergeTree: n
                        }) : !1 !== globalThis.__DEV__ ? (0, H.X)(e) : e
                    }, e.prototype.flattenFields = function(e, t, f, n) {
                        void 0 === n && (n = (0, l.qw)(t, e, f.fragmentMap));
                        var i = new Map,
                            a = this.cache.policies,
                            s = new w.B(!1);
                        return function e(u, d) {
                            var c = s.lookup(u, d.clientOnly, d.deferred);
                            c.visited || (c.visited = !0, u.selections.forEach(function(s) {
                                if ((0, v.LZ)(s, f.variables)) {
                                    var u = d.clientOnly,
                                        c = d.deferred;
                                    if (!(u && c) && (0, A.O)(s.directives) && s.directives.forEach(function(e) {
                                            var t = e.name.value;
                                            if ("client" === t && (u = !0), "defer" === t) {
                                                var n = (0, l.NC)(e, f.variables);
                                                n && !1 === n.if || (c = !0)
                                            }
                                        }), (0, l.My)(s)) {
                                        var y = i.get(s);
                                        y && (u = u && y.clientOnly, c = c && y.deferred), i.set(s, ed(f, u, c))
                                    } else {
                                        var b = (0, o.hi)(s, f.lookupFragment);
                                        if (!b && s.kind === p.h.FRAGMENT_SPREAD) throw (0, r._K)(13, s.name.value);
                                        b && a.fragmentMatches(b, n, t, f.variables) && e(b.selectionSet, ed(f, u, c))
                                    }
                                }
                            }))
                        }(e, f), i
                    }, e.prototype.applyMerges = function(e, t, f, i, a) {
                        var o = this;
                        if (e.map.size && !(0, l.Yk)(f)) {
                            var s, u, d = !(0, A.k)(f) && ((0, l.Yk)(t) || P(t)) ? t : void 0,
                                c = f;
                            d && !a && (a = [(0, l.Yk)(d) ? d.__ref : d]);
                            var p = function(e, t) {
                                return (0, A.k)(e) ? "number" == typeof t ? e[t] : void 0 : i.store.getFieldValue(e, String(t))
                            };
                            e.map.forEach(function(e, t) {
                                var f = p(d, t),
                                    n = p(c, t);
                                if (void 0 !== n) {
                                    a && a.push(t);
                                    var s = o.applyMerges(e, f, n, i, a);
                                    s !== n && (u = u || new Map).set(t, s), a && (0, r.kG)(a.pop() === t)
                                }
                            }), u && (f = (0, A.k)(c) ? c.slice(0) : (0, n.__assign)({}, c), u.forEach(function(e, t) {
                                f[t] = e
                            }))
                        }
                        return e.info ? this.cache.policies.runMergeFunction(t, f, e.info, i, a && (s = i.store).getStorage.apply(s, a)) : f
                    }, e
                }(),
                el = [];

            function ep(e, t) {
                var f = e.map;
                return f.has(t) || f.set(t, el.pop() || {
                    map: new Map
                }), f.get(t)
            }

            function ey(e) {
                return !e || !(e.info || e.map.size)
            }

            function eb(e, t) {
                var f = e.map,
                    n = f.get(t);
                n && ey(n) && (el.push(n), f.delete(t))
            }
            var eh = new Set,
                em = function(e) {
                    function t(t) {
                        void 0 === t && (t = {});
                        var f, n = e.call(this) || this;
                        return n.watches = new Set, n.addTypenameTransform = new d.A(c.Gw), n.assumeImmutableResults = !0, n.makeVar = Q.QS, n.txCount = 0, n.config = (f = t, (0, b.o)(k, f)), n.addTypename = !!n.config.addTypename, n.policies = new ea({
                            cache: n,
                            dataIdFromObject: n.config.dataIdFromObject,
                            possibleTypes: n.config.possibleTypes,
                            typePolicies: n.config.typePolicies
                        }), n.init(), n
                    }
                    return (0, n.__extends)(t, e), t.prototype.init = function() {
                        var e = this.data = new D.Root({
                            policies: this.policies,
                            resultCaching: this.config.resultCaching
                        });
                        this.optimisticData = e.stump, this.resetResultCache()
                    }, t.prototype.resetResultCache = function(e) {
                        var t = this,
                            f = this.storeReader,
                            n = this.config.fragments;
                        this.storeWriter = new ec(this, this.storeReader = new $({
                            cache: this,
                            addTypename: this.addTypename,
                            resultCacheMaxSize: this.config.resultCacheMaxSize,
                            canonizeResults: C(this.config),
                            canon: e ? void 0 : f && f.canon,
                            fragments: n
                        }), n), this.maybeBroadcastWatch = (0, i.re)(function(e, f) {
                            return t.broadcastWatch(e, f)
                        }, {
                            max: this.config.resultCacheMaxSize,
                            makeCacheKey: function(e) {
                                var f = e.optimistic ? t.optimisticData : t.data;
                                if (V(f)) {
                                    var n = e.optimistic,
                                        r = e.id,
                                        i = e.variables;
                                    return f.makeCacheKey(e.query, e.callback, (0, G.B)({
                                        optimistic: n,
                                        id: r,
                                        variables: i
                                    }))
                                }
                            }
                        }), new Set([this.data.group, this.optimisticData.group]).forEach(function(e) {
                            return e.resetCaching()
                        })
                    }, t.prototype.restore = function(e) {
                        return this.init(), e && this.data.replace(e), this
                    }, t.prototype.extract = function(e) {
                        return void 0 === e && (e = !1), (e ? this.optimisticData : this.data).extract()
                    }, t.prototype.read = function(e) {
                        var t = e.returnPartialData;
                        try {
                            return this.storeReader.diffQueryAgainstStore((0, n.__assign)((0, n.__assign)({}, e), {
                                store: e.optimistic ? this.optimisticData : this.data,
                                config: this.config,
                                returnPartialData: void 0 !== t && t
                            })).result || null
                        } catch (e) {
                            if (e instanceof u) return null;
                            throw e
                        }
                    }, t.prototype.write = function(e) {
                        try {
                            return ++this.txCount, this.storeWriter.writeToStore(this.data, e)
                        } finally {
                            --this.txCount || !1 === e.broadcast || this.broadcastWatches()
                        }
                    }, t.prototype.modify = function(e) {
                        if (I.call(e, "id") && !e.id) return !1;
                        var t = e.optimistic ? this.optimisticData : this.data;
                        try {
                            return ++this.txCount, t.modify(e.id || "ROOT_QUERY", e.fields)
                        } finally {
                            --this.txCount || !1 === e.broadcast || this.broadcastWatches()
                        }
                    }, t.prototype.diff = function(e) {
                        return this.storeReader.diffQueryAgainstStore((0, n.__assign)((0, n.__assign)({}, e), {
                            store: e.optimistic ? this.optimisticData : this.data,
                            rootId: e.id || "ROOT_QUERY",
                            config: this.config
                        }))
                    }, t.prototype.watch = function(e) {
                        var t = this;
                        return this.watches.size || (0, Q._v)(this), this.watches.add(e), e.immediate && this.maybeBroadcastWatch(e),
                            function() {
                                t.watches.delete(e) && !t.watches.size && (0, Q.li)(t), t.maybeBroadcastWatch.forget(e)
                            }
                    }, t.prototype.gc = function(e) {
                        G.B.reset();
                        var t = this.optimisticData.gc();
                        return e && !this.txCount && (e.resetResultCache ? this.resetResultCache(e.resetResultIdentities) : e.resetResultIdentities && this.storeReader.resetCanon()), t
                    }, t.prototype.retain = function(e, t) {
                        return (t ? this.optimisticData : this.data).retain(e)
                    }, t.prototype.release = function(e, t) {
                        return (t ? this.optimisticData : this.data).release(e)
                    }, t.prototype.identify = function(e) {
                        if ((0, l.Yk)(e)) return e.__ref;
                        try {
                            return this.policies.identify(e)[0]
                        } catch (e) {
                            !1 !== globalThis.__DEV__ && r.kG.warn(e)
                        }
                    }, t.prototype.evict = function(e) {
                        if (!e.id) {
                            if (I.call(e, "id")) return !1;
                            e = (0, n.__assign)((0, n.__assign)({}, e), {
                                id: "ROOT_QUERY"
                            })
                        }
                        try {
                            return ++this.txCount, this.optimisticData.evict(e, this.data)
                        } finally {
                            --this.txCount || !1 === e.broadcast || this.broadcastWatches()
                        }
                    }, t.prototype.reset = function(e) {
                        var t = this;
                        return this.init(), G.B.reset(), e && e.discardWatches ? (this.watches.forEach(function(e) {
                            return t.maybeBroadcastWatch.forget(e)
                        }), this.watches.clear(), (0, Q.li)(this)) : this.broadcastWatches(), Promise.resolve()
                    }, t.prototype.removeOptimistic = function(e) {
                        var t = this.optimisticData.removeLayer(e);
                        t !== this.optimisticData && (this.optimisticData = t, this.broadcastWatches())
                    }, t.prototype.batch = function(e) {
                        var t, f = this,
                            r = e.update,
                            i = e.optimistic,
                            a = void 0 === i || i,
                            o = e.removeOptimistic,
                            s = e.onWatchUpdated,
                            u = function(e) {
                                var n = f.data,
                                    i = f.optimisticData;
                                ++f.txCount, e && (f.data = f.optimisticData = e);
                                try {
                                    return t = r(f)
                                } finally {
                                    --f.txCount, f.data = n, f.optimisticData = i
                                }
                            },
                            d = new Set;
                        return s && !this.txCount && this.broadcastWatches((0, n.__assign)((0, n.__assign)({}, e), {
                            onWatchUpdated: function(e) {
                                return d.add(e), !1
                            }
                        })), "string" == typeof a ? this.optimisticData = this.optimisticData.addLayer(a, u) : !1 === a ? u(this.data) : u(), "string" == typeof o && (this.optimisticData = this.optimisticData.removeLayer(o)), s && d.size ? (this.broadcastWatches((0, n.__assign)((0, n.__assign)({}, e), {
                            onWatchUpdated: function(e, t) {
                                var f = s.call(this, e, t);
                                return !1 !== f && d.delete(e), f
                            }
                        })), d.size && d.forEach(function(e) {
                            return f.maybeBroadcastWatch.dirty(e)
                        })) : this.broadcastWatches(e), t
                    }, t.prototype.performTransaction = function(e, t) {
                        return this.batch({
                            update: e,
                            optimistic: t || null !== t
                        })
                    }, t.prototype.transformDocument = function(e) {
                        return this.addTypenameToDocument(this.addFragmentsToDocument(e))
                    }, t.prototype.broadcastWatches = function(e) {
                        var t = this;
                        this.txCount || this.watches.forEach(function(f) {
                            return t.maybeBroadcastWatch(f, e)
                        })
                    }, t.prototype.addFragmentsToDocument = function(e) {
                        var t = this.config.fragments;
                        return t ? t.transform(e) : e
                    }, t.prototype.addTypenameToDocument = function(e) {
                        return this.addTypename ? this.addTypenameTransform.transformDocument(e) : e
                    }, t.prototype.broadcastWatch = function(e, t) {
                        var f = e.lastDiff,
                            n = this.diff(e);
                        (!t || (e.optimistic && "string" == typeof t.optimistic && (n.fromOptimisticTransaction = !0), !t.onWatchUpdated || !1 !== t.onWatchUpdated.call(this, e, n, f))) && (f && (0, a.D)(f.result, n.result) || e.callback(e.lastDiff = n, f))
                    }, t
                }(s)
        },
        5675: (e, t, f) => {
            "use strict";
            f.d(t, {
                B: () => c,
                h: () => d
            });
            var n, r, i = f(51113),
                a = f(59993),
                o = f(57048),
                s = f(76409),
                u = f(16188),
                d = function() {
                    function e() {
                        this.known = new(s.sy ? WeakSet : Set), this.pool = new a.B(s.mr), this.passes = new WeakMap, this.keysByJSON = new Map, this.empty = this.admit({})
                    }
                    return e.prototype.isKnown = function(e) {
                        return (0, o.s)(e) && this.known.has(e)
                    }, e.prototype.pass = function(e) {
                        if ((0, o.s)(e)) {
                            var t = (0, o.s)(e) ? (0, u.k)(e) ? e.slice(0) : (0, i.__assign)({
                                __proto__: Object.getPrototypeOf(e)
                            }, e) : e;
                            return this.passes.set(t, e), t
                        }
                        return e
                    }, e.prototype.admit = function(e) {
                        var t = this;
                        if ((0, o.s)(e)) {
                            var f = this.passes.get(e);
                            if (f) return f;
                            switch (Object.getPrototypeOf(e)) {
                                case Array.prototype:
                                    if (this.known.has(e)) break;
                                    var n = e.map(this.admit, this),
                                        r = this.pool.lookupArray(n);
                                    return r.array || (this.known.add(r.array = n), !1 !== globalThis.__DEV__ && Object.freeze(n)), r.array;
                                case null:
                                case Object.prototype:
                                    if (this.known.has(e)) break;
                                    var i = Object.getPrototypeOf(e),
                                        a = [i],
                                        s = this.sortedKeys(e);
                                    a.push(s.json);
                                    var u = a.length;
                                    s.sorted.forEach(function(f) {
                                        a.push(t.admit(e[f]))
                                    });
                                    var r = this.pool.lookupArray(a);
                                    if (!r.object) {
                                        var d = r.object = Object.create(i);
                                        this.known.add(d), s.sorted.forEach(function(e, t) {
                                            d[e] = a[u + t]
                                        }), !1 !== globalThis.__DEV__ && Object.freeze(d)
                                    }
                                    return r.object
                            }
                        }
                        return e
                    }, e.prototype.sortedKeys = function(e) {
                        var t = Object.keys(e),
                            f = this.pool.lookupArray(t);
                        if (!f.keys) {
                            t.sort();
                            var n = JSON.stringify(t);
                            (f.keys = this.keysByJSON.get(n)) || this.keysByJSON.set(n, f.keys = {
                                sorted: t,
                                json: n
                            })
                        }
                        return f.keys
                    }, e
                }(),
                c = Object.assign(function(e) {
                    if ((0, o.s)(e)) {
                        void 0 === n && l();
                        var t = n.admit(e),
                            f = r.get(t);
                        return void 0 === f && r.set(t, f = JSON.stringify(t)), f
                    }
                    return JSON.stringify(e)
                }, {
                    reset: l
                });

            function l() {
                n = new d, r = new(s.mr ? WeakMap : Map)
            }
        },
        60209: (e, t, f) => {
            "use strict";
            f.d(t, {
                QS: () => u,
                _v: () => s,
                ab: () => r,
                li: () => o
            });
            var n = f(77075),
                r = new n.g7,
                i = new WeakMap;

            function a(e) {
                var t = i.get(e);
                return t || i.set(e, t = {
                    vars: new Set,
                    dep: (0, n.dP)()
                }), t
            }

            function o(e) {
                a(e).vars.forEach(function(t) {
                    return t.forgetCache(e)
                })
            }

            function s(e) {
                a(e).vars.forEach(function(t) {
                    return t.attachCache(e)
                })
            }

            function u(e) {
                var t = new Set,
                    f = new Set,
                    n = function(o) {
                        if (arguments.length > 0) {
                            if (e !== o) {
                                e = o, t.forEach(function(e) {
                                    a(e).dep.dirty(n), e.broadcastWatches && e.broadcastWatches()
                                });
                                var s = Array.from(f);
                                f.clear(), s.forEach(function(t) {
                                    return t(e)
                                })
                            }
                        } else {
                            var u = r.getValue();
                            u && (i(u), a(u).dep(n))
                        }
                        return e
                    };
                n.onNextChange = function(e) {
                    return f.add(e),
                        function() {
                            f.delete(e)
                        }
                };
                var i = n.attachCache = function(e) {
                    return t.add(e), a(e).vars.add(n), n
                };
                return n.forgetCache = function(e) {
                    return t.delete(e)
                }, n
            }
        },
        50157: (e, t, f) => {
            "use strict";
            f.d(t, {
                f: () => ew
            });
            var n = f(51113),
                r = f(22461),
                i = f(98260),
                a = f(57175);

            function o(e, t) {
                return t ? t(e) : i.y.of()
            }

            function s(e) {
                return "function" == typeof e ? new d(e) : e
            }

            function u(e) {
                return e.request.length <= 1
            }
            var d = function() {
                    function e(e) {
                        e && (this.request = e)
                    }
                    return e.empty = function() {
                        return new e(function() {
                            return i.y.of()
                        })
                    }, e.from = function(t) {
                        return 0 === t.length ? e.empty() : t.map(s).reduce(function(e, t) {
                            return e.concat(t)
                        })
                    }, e.split = function(t, f, n) {
                        var r = s(f),
                            a = s(n || new e(o));
                        return new e(u(r) && u(a) ? function(e) {
                            return t(e) ? r.request(e) || i.y.of() : a.request(e) || i.y.of()
                        } : function(e, f) {
                            return t(e) ? r.request(e, f) || i.y.of() : a.request(e, f) || i.y.of()
                        })
                    }, e.execute = function(e, t) {
                        var f, o, s, u;
                        return e.request((s = t.context, (o = {
                            variables: (f = function(e) {
                                for (var t = ["query", "operationName", "variables", "extensions", "context"], f = 0, n = Object.keys(e); f < n.length; f++) {
                                    var i = n[f];
                                    if (0 > t.indexOf(i)) throw (0, r._K)(43, i)
                                }
                                return e
                            }(t)).variables || {},
                            extensions: f.extensions || {},
                            operationName: f.operationName,
                            query: f.query
                        }).operationName || (o.operationName = "string" != typeof o.query ? (0, a.rY)(o.query) || void 0 : ""), u = (0, n.__assign)({}, s), Object.defineProperty(o, "setContext", {
                            enumerable: !1,
                            value: function(e) {
                                u = "function" == typeof e ? (0, n.__assign)((0, n.__assign)({}, u), e(u)) : (0, n.__assign)((0, n.__assign)({}, u), e)
                            }
                        }), Object.defineProperty(o, "getContext", {
                            enumerable: !1,
                            value: function() {
                                return (0, n.__assign)({}, u)
                            }
                        }), o)) || i.y.of()
                    }, e.concat = function(t, f) {
                        var n = s(t);
                        if (u(n)) return !1 !== globalThis.__DEV__ && r.kG.warn(35, n), n;
                        var a = s(f);
                        return new e(u(a) ? function(e) {
                            return n.request(e, function(e) {
                                return a.request(e) || i.y.of()
                            }) || i.y.of()
                        } : function(e, t) {
                            return n.request(e, function(e) {
                                return a.request(e, t) || i.y.of()
                            }) || i.y.of()
                        })
                    }, e.prototype.split = function(t, f, n) {
                        return this.concat(e.split(t, f, n || new e(o)))
                    }, e.prototype.concat = function(t) {
                        return e.concat(this, t)
                    }, e.prototype.request = function(e, t) {
                        throw (0, r._K)(36)
                    }, e.prototype.onError = function(e, t) {
                        if (t && t.error) return t.error(e), !1;
                        throw e
                    }, e.prototype.setOnError = function(e) {
                        return this.onError = e, this
                    }, e
                }(),
                c = d.execute,
                l = f(52051),
                p = f(75714),
                y = function(e, t) {
                    var f;
                    try {
                        f = JSON.stringify(e)
                    } catch (e) {
                        var n = (0, r._K)(39, t, e.message);
                        throw n.parseError = e, n
                    }
                    return f
                },
                b = f(76409);

            function h(e) {
                var t = {
                    next: function() {
                        return e.read()
                    }
                };
                return b.DN && (t[Symbol.asyncIterator] = function() {
                    return this
                }), t
            }
            var m = function(e, t, f) {
                    var n = Error(f);
                    throw n.name = "ServerError", n.response = e, n.statusCode = e.status, n.result = t, n
                },
                v = f(71106),
                T = f(57048),
                g = f(16188),
                w = f(98759);

            function A(e) {
                return "incremental" in e
            }

            function I(e, t) {
                var f = e,
                    n = new w.w0;
                return A(t) && (0, g.O)(t.incremental) && t.incremental.forEach(function(e) {
                    for (var t = e.data, r = e.path, i = r.length - 1; i >= 0; --i) {
                        var a = r[i],
                            o = isNaN(+a) ? {} : [];
                        o[a] = t, t = o
                    }
                    f = n.merge(f, t)
                }), f
            }
            var E = Object.prototype.hasOwnProperty;

            function _(e, t) {
                e.status >= 300 && m(e, function() {
                    try {
                        return JSON.parse(t)
                    } catch (e) {
                        return t
                    }
                }(), "Response not successful: Received status code ".concat(e.status));
                try {
                    return JSON.parse(t)
                } catch (f) {
                    throw f.name = "ServerParseError", f.response = e, f.statusCode = e.status, f.bodyText = t, f
                }
            }
            var k = function(e) {
                    if (!e && "undefined" == typeof fetch) throw (0, r._K)(37)
                },
                C = f(74954),
                S = b.mr ? new WeakMap : void 0,
                O = function(e) {
                    var t;
                    return (t = null == S ? void 0 : S.get(e)) || (t = (0, C.print)(e), null == S || S.set(e, t)), t
                },
                P = {
                    http: {
                        includeQuery: !0,
                        includeExtensions: !1,
                        preserveHeaderCase: !1
                    },
                    headers: {
                        accept: "*/*",
                        "content-type": "application/json"
                    },
                    options: {
                        method: "POST"
                    }
                },
                M = function(e, t) {
                    return t(e)
                };

            function x(e) {
                return new i.y(function(t) {
                    t.error(e)
                })
            }
            var R = f(33640),
                F = f(89428),
                D = (0, r.wY)(function() {
                    return fetch
                }),
                N = function(e) {
                    void 0 === e && (e = {});
                    var t = e.uri,
                        f = void 0 === t ? "/graphql" : t,
                        o = e.fetch,
                        s = e.print,
                        u = void 0 === s ? M : s,
                        c = e.includeExtensions,
                        l = e.preserveHeaderCase,
                        g = e.useGETForQueries,
                        w = e.includeUnusedVariables,
                        A = void 0 !== w && w,
                        I = (0, n.__rest)(e, ["uri", "fetch", "print", "includeExtensions", "preserveHeaderCase", "useGETForQueries", "includeUnusedVariables"]);
                    !1 !== globalThis.__DEV__ && k(o || D);
                    var C = {
                        http: {
                            includeExtensions: c,
                            preserveHeaderCase: l
                        },
                        options: I.fetchOptions,
                        credentials: I.credentials,
                        headers: I.headers
                    };
                    return new d(function(e) {
                        var t, s, d, c, l, w, I, k, S = (t = e, s = f, t.getContext().uri || ("function" == typeof s ? s(t) : s || "/graphql")),
                            M = e.getContext(),
                            N = {};
                        if (M.clientAwareness) {
                            var B = M.clientAwareness,
                                L = B.name,
                                q = B.version;
                            L && (N["apollographql-client-name"] = L), q && (N["apollographql-client-version"] = q)
                        }
                        var U = (0, n.__assign)((0, n.__assign)({}, N), M.headers),
                            V = {
                                http: M.http,
                                options: M.fetchOptions,
                                credentials: M.credentials,
                                headers: U
                            };
                        if ((0, p.FS)(["client"], e.query)) {
                            var G = (0, F.ob)(e.query);
                            if (!G) return x(Error("HttpLink: Trying to send a client-only query to the server. To send to the server, ensure a non-client field is added to the query or set the `transformOptions.removeClientFields` option to `true`."));
                            e.query = G
                        }
                        var j = function(e, t) {
                                for (var f = [], r = 2; r < arguments.length; r++) f[r - 2] = arguments[r];
                                var i = {},
                                    a = {};
                                f.forEach(function(e) {
                                    i = (0, n.__assign)((0, n.__assign)((0, n.__assign)({}, i), e.options), {
                                        headers: (0, n.__assign)((0, n.__assign)({}, i.headers), e.headers)
                                    }), e.credentials && (i.credentials = e.credentials), a = (0, n.__assign)((0, n.__assign)({}, a), e.http)
                                }), i.headers && (i.headers = function(e, t) {
                                    if (!t) {
                                        var f = Object.create(null);
                                        return Object.keys(Object(e)).forEach(function(t) {
                                            f[t.toLowerCase()] = e[t]
                                        }), f
                                    }
                                    var n = Object.create(null);
                                    Object.keys(Object(e)).forEach(function(t) {
                                        n[t.toLowerCase()] = {
                                            originalName: t,
                                            value: e[t]
                                        }
                                    });
                                    var r = Object.create(null);
                                    return Object.keys(n).forEach(function(e) {
                                        r[n[e].originalName] = n[e].value
                                    }), r
                                }(i.headers, a.preserveHeaderCase));
                                var o = e.operationName,
                                    s = e.extensions,
                                    u = e.variables,
                                    d = e.query,
                                    c = {
                                        operationName: o,
                                        variables: u
                                    };
                                return a.includeExtensions && (c.extensions = s), a.includeQuery && (c.query = t(d, O)), {
                                    options: i,
                                    body: c
                                }
                            }(e, u, P, C, V),
                            $ = j.options,
                            H = j.body;
                        H.variables && !A && (H.variables = (d = H.variables, c = e.query, l = (0, n.__assign)({}, d), w = new Set(Object.keys(d)), (0, R.Vn)(c, {
                            Variable: function(e, t, f) {
                                f && "VariableDefinition" !== f.kind && w.delete(e.name.value)
                            }
                        }), w.forEach(function(e) {
                            delete l[e]
                        }), l)), $.signal || "undefined" == typeof AbortController || (k = new AbortController, $.signal = k.signal);
                        var W = "OperationDefinition" === (I = (0, a.p$)(e.query)).kind && "subscription" === I.operation,
                            Q = (0, p.FS)(["defer"], e.query);
                        if (g && !e.query.definitions.some(function(e) {
                                return "OperationDefinition" === e.kind && "mutation" === e.operation
                            }) && ($.method = "GET"), Q || W) {
                            $.headers = $.headers || {};
                            var X = "multipart/mixed;";
                            W && Q && !1 !== globalThis.__DEV__ && r.kG.warn(38), W ? X += "boundary=graphql;subscriptionSpec=1.0,application/json" : Q && (X += "deferSpec=20220824,application/json"), $.headers.accept = X
                        }
                        if ("GET" === $.method) {
                            var z = function(e, t) {
                                    var f = [],
                                        n = function(e, t) {
                                            f.push("".concat(e, "=").concat(encodeURIComponent(t)))
                                        };
                                    if ("query" in t && n("query", t.query), t.operationName && n("operationName", t.operationName), t.variables) {
                                        var r = void 0;
                                        try {
                                            r = y(t.variables, "Variables map")
                                        } catch (e) {
                                            return {
                                                parseError: e
                                            }
                                        }
                                        n("variables", r)
                                    }
                                    if (t.extensions) {
                                        var i = void 0;
                                        try {
                                            i = y(t.extensions, "Extensions map")
                                        } catch (e) {
                                            return {
                                                parseError: e
                                            }
                                        }
                                        n("extensions", i)
                                    }
                                    var a = "",
                                        o = e,
                                        s = e.indexOf("#"); - 1 !== s && (a = e.substr(s), o = e.substr(0, s));
                                    var u = -1 === o.indexOf("?") ? "?" : "&";
                                    return {
                                        newURI: o + u + f.join("&") + a
                                    }
                                }(S, H),
                                K = z.newURI,
                                Y = z.parseError;
                            if (Y) return x(Y);
                            S = K
                        } else try {
                            $.body = y(H, "Payload")
                        } catch (e) {
                            return x(e)
                        }
                        return new i.y(function(t) {
                            var f = o || (0, r.wY)(function() {
                                    return fetch
                                }) || D,
                                i = t.next.bind(t);
                            return f(S, $).then(function(t) {
                                    e.setContext({
                                        response: t
                                    });
                                    var f, r = null === (f = t.headers) || void 0 === f ? void 0 : f.get("content-type");
                                    return null !== r && /^multipart\/mixed/i.test(r) ? function(e, t) {
                                        var f;
                                        return (0, n.__awaiter)(this, void 0, void 0, function() {
                                            var r, i, a, o, s, u, d, c, l, p, y, m, g, w, A, I, E, k, C, S, O, P;
                                            return (0, n.__generator)(this, function(M) {
                                                switch (M.label) {
                                                    case 0:
                                                        if (void 0 === TextDecoder) throw Error("TextDecoder must be defined in the environment: please import a polyfill.");
                                                        r = new TextDecoder("utf-8"), i = null === (f = e.headers) || void 0 === f ? void 0 : f.get("content-type"), a = "boundary=", o = (null == i ? void 0 : i.includes(a)) ? null == i ? void 0 : i.substring((null == i ? void 0 : i.indexOf(a)) + a.length).replace(/['"]/g, "").replace(/\;(.*)/gm, "").trim() : "-", s = "\r\n--".concat(o), u = "", d = function(e) {
                                                            var t, f, n, r, i, a, o = e;
                                                            if (e.body && (o = e.body), t = o, b.DN && t[Symbol.asyncIterator]) return n = o[Symbol.asyncIterator](), (f = {
                                                                next: function() {
                                                                    return n.next()
                                                                }
                                                            })[Symbol.asyncIterator] = function() {
                                                                return this
                                                            }, f;
                                                            if (o.getReader) return h(o.getReader());
                                                            if (o.stream) return h(o.stream().getReader());
                                                            if (o.arrayBuffer) return r = o.arrayBuffer(), i = !1, a = {
                                                                next: function() {
                                                                    return i ? Promise.resolve({
                                                                        value: void 0,
                                                                        done: !0
                                                                    }) : (i = !0, new Promise(function(e, t) {
                                                                        r.then(function(t) {
                                                                            e({
                                                                                value: t,
                                                                                done: !1
                                                                            })
                                                                        }).catch(t)
                                                                    }))
                                                                }
                                                            }, b.DN && (a[Symbol.asyncIterator] = function() {
                                                                return this
                                                            }), a;
                                                            if (o.pipe) return function(e) {
                                                                var t = null,
                                                                    f = null,
                                                                    n = !1,
                                                                    r = [],
                                                                    i = [];

                                                                function a(e) {
                                                                    if (!f) {
                                                                        if (i.length) {
                                                                            var t = i.shift();
                                                                            if (Array.isArray(t) && t[0]) return t[0]({
                                                                                value: e,
                                                                                done: !1
                                                                            })
                                                                        }
                                                                        r.push(e)
                                                                    }
                                                                }

                                                                function o(e) {
                                                                    f = e, i.slice().forEach(function(t) {
                                                                        t[1](e)
                                                                    }), t && t()
                                                                }

                                                                function s() {
                                                                    n = !0, i.slice().forEach(function(e) {
                                                                        e[0]({
                                                                            value: void 0,
                                                                            done: !0
                                                                        })
                                                                    }), t && t()
                                                                }
                                                                t = function() {
                                                                    t = null, e.removeListener("data", a), e.removeListener("error", o), e.removeListener("end", s), e.removeListener("finish", s), e.removeListener("close", s)
                                                                }, e.on("data", a), e.on("error", o), e.on("end", s), e.on("finish", s), e.on("close", s);
                                                                var u = {
                                                                    next: function() {
                                                                        return new Promise(function(e, t) {
                                                                            return f ? t(f) : r.length ? e({
                                                                                value: r.shift(),
                                                                                done: !1
                                                                            }) : n ? e({
                                                                                value: void 0,
                                                                                done: !0
                                                                            }) : void i.push([e, t])
                                                                        })
                                                                    }
                                                                };
                                                                return b.DN && (u[Symbol.asyncIterator] = function() {
                                                                    return this
                                                                }), u
                                                            }(o);
                                                            throw Error("Unknown body type for responseIterator. Please pass a streamable response.")
                                                        }(e), c = !0, M.label = 1;
                                                    case 1:
                                                        if (!c) return [3, 3];
                                                        return [4, d.next()];
                                                    case 2:
                                                        for (p = (l = M.sent()).value, y = l.done, m = "string" == typeof p ? p : r.decode(p), g = u.length - s.length + 1, c = !y, u += m, w = u.indexOf(s, g); w > -1;) {
                                                            if (A = void 0, A = (O = [u.slice(0, w), u.slice(w + s.length)])[0], u = O[1], I = A.indexOf("\r\n\r\n"), (E = function(e) {
                                                                    var t = {};
                                                                    return e.split("\n").forEach(function(e) {
                                                                        var f = e.indexOf(":");
                                                                        if (f > -1) {
                                                                            var n = e.slice(0, f).trim().toLowerCase(),
                                                                                r = e.slice(f + 1).trim();
                                                                            t[n] = r
                                                                        }
                                                                    }), t
                                                                }(A.slice(0, I))["content-type"]) && -1 === E.toLowerCase().indexOf("application/json")) throw Error("Unsupported patch content type: application/json is required.");
                                                            if (k = A.slice(I)) {
                                                                if (Object.keys(C = _(e, k)).length > 1 || "data" in C || "incremental" in C || "errors" in C || "payload" in C)(0, T.s)(C) && "payload" in C ? (S = {}, "payload" in C && (S = (0, n.__assign)({}, C.payload)), "errors" in C && (S = (0, n.__assign)((0, n.__assign)({}, S), {
                                                                    extensions: (0, n.__assign)((0, n.__assign)({}, "extensions" in S ? S.extensions : null), ((P = {})[v.YG] = C.errors, P))
                                                                })), t(S)) : t(C);
                                                                else if (1 === Object.keys(C).length && "hasNext" in C && !C.hasNext) return [2]
                                                            }
                                                            w = u.indexOf(s)
                                                        }
                                                        return [3, 1];
                                                    case 3:
                                                        return [2]
                                                }
                                            })
                                        })
                                    }(t, i) : t.text().then(function(e) {
                                        return _(t, e)
                                    }).then(function(f) {
                                        return Array.isArray(f) || E.call(f, "data") || E.call(f, "errors") || m(t, f, "Server response was missing for query '".concat(Array.isArray(e) ? e.map(function(e) {
                                            return e.operationName
                                        }) : e.operationName, "'.")), f
                                    }).then(i)
                                }).then(function() {
                                    k = void 0, t.complete()
                                }).catch(function(e) {
                                    k = void 0, e.result && e.result.errors && e.result.data && t.next(e.result), t.error(e)
                                }),
                                function() {
                                    k && k.abort()
                                }
                        })
                    })
                },
                B = function(e) {
                    function t(t) {
                        void 0 === t && (t = {});
                        var f = e.call(this, N(t).request) || this;
                        return f.options = t, f
                    }
                    return (0, n.__extends)(t, e), t
                }(d),
                L = f(21270),
                q = f(5675),
                U = f(40362);

            function V(e, t, f) {
                return new i.y(function(n) {
                    var r = {
                        then: function(e) {
                            return new Promise(function(t) {
                                return t(e())
                            })
                        }
                    };

                    function i(e, t) {
                        return function(f) {
                            if (e) {
                                var i = function() {
                                    return n.closed ? 0 : e(f)
                                };
                                r = r.then(i, i).then(function(e) {
                                    return n.next(e)
                                }, function(e) {
                                    return n.error(e)
                                })
                            } else n[t](f)
                        }
                    }
                    var a = {
                            next: i(t, "next"),
                            error: i(f, "error"),
                            complete: function() {
                                r.then(function() {
                                    return n.complete()
                                })
                            }
                        },
                        o = e.subscribe(a);
                    return function() {
                        return o.unsubscribe()
                    }
                })
            }

            function G(e) {
                var t = j(e);
                return (0, g.O)(t)
            }

            function j(e) {
                var t = (0, g.O)(e.errors) ? e.errors.slice(0) : [];
                return A(e) && (0, g.O)(e.incremental) && e.incremental.forEach(function(e) {
                    e.errors && t.push.apply(t, e.errors)
                }), t
            }
            var $ = f(11511),
                H = f(57121);

            function W(e, t, f) {
                var n = [];
                e.forEach(function(e) {
                    return e[t] && n.push(e)
                }), n.forEach(function(e) {
                    return e[t](f)
                })
            }

            function Q(e) {
                function t(t) {
                    Object.defineProperty(e, t, {
                        value: i.y
                    })
                }
                return b.aS && Symbol.species && t(Symbol.species), t("@@species"), e
            }

            function X(e) {
                return e && "function" == typeof e.then
            }
            var z = function(e) {
                function t(t) {
                    var f = e.call(this, function(e) {
                        return f.addObserver(e),
                            function() {
                                return f.removeObserver(e)
                            }
                    }) || this;
                    return f.observers = new Set, f.promise = new Promise(function(e, t) {
                        f.resolve = e, f.reject = t
                    }), f.handlers = {
                        next: function(e) {
                            null !== f.sub && (f.latest = ["next", e], f.notify("next", e), W(f.observers, "next", e))
                        },
                        error: function(e) {
                            var t = f.sub;
                            null !== t && (t && setTimeout(function() {
                                return t.unsubscribe()
                            }), f.sub = null, f.latest = ["error", e], f.reject(e), f.notify("error", e), W(f.observers, "error", e))
                        },
                        complete: function() {
                            var e = f.sub,
                                t = f.sources;
                            if (null !== e) {
                                var n = (void 0 === t ? [] : t).shift();
                                n ? X(n) ? n.then(function(e) {
                                    return f.sub = e.subscribe(f.handlers)
                                }) : f.sub = n.subscribe(f.handlers) : (e && setTimeout(function() {
                                    return e.unsubscribe()
                                }), f.sub = null, f.latest && "next" === f.latest[0] ? f.resolve(f.latest[1]) : f.resolve(), f.notify("complete"), W(f.observers, "complete"))
                            }
                        }
                    }, f.nextResultListeners = new Set, f.cancel = function(e) {
                        f.reject(e), f.sources = [], f.handlers.complete()
                    }, f.promise.catch(function(e) {}), "function" == typeof t && (t = [new i.y(t)]), X(t) ? t.then(function(e) {
                        return f.start(e)
                    }, f.handlers.error) : f.start(t), f
                }
                return (0, n.__extends)(t, e), t.prototype.start = function(e) {
                    void 0 === this.sub && (this.sources = Array.from(e), this.handlers.complete())
                }, t.prototype.deliverLastMessage = function(e) {
                    if (this.latest) {
                        var t = this.latest[0],
                            f = e[t];
                        f && f.call(e, this.latest[1]), null === this.sub && "next" === t && e.complete && e.complete()
                    }
                }, t.prototype.addObserver = function(e) {
                    this.observers.has(e) || (this.deliverLastMessage(e), this.observers.add(e))
                }, t.prototype.removeObserver = function(e) {
                    this.observers.delete(e) && this.observers.size < 1 && this.handlers.complete()
                }, t.prototype.notify = function(e, t) {
                    var f = this.nextResultListeners;
                    f.size && (this.nextResultListeners = new Set, f.forEach(function(f) {
                        return f(e, t)
                    }))
                }, t.prototype.beforeNext = function(e) {
                    var t = !1;
                    this.nextResultListeners.add(function(f, n) {
                        t || (t = !0, e(f, n))
                    })
                }, t
            }(i.y);
            Q(z);
            var K = f(14759),
                Y = f(60829),
                J = f(21236),
                Z = f(72273);

            function ee(e) {
                return !!e.directives && e.directives.some(et)
            }

            function et(e) {
                return "nonreactive" === e.name.value
            }
            var ef = Object.assign,
                en = Object.hasOwnProperty,
                er = function(e) {
                    function t(t) {
                        var f = t.queryManager,
                            r = t.queryInfo,
                            i = t.options,
                            o = e.call(this, function(e) {
                                try {
                                    var t = e._subscription._observer;
                                    t && !t.error && (t.error = ea)
                                } catch (e) {}
                                var f = !o.observers.size;
                                o.observers.add(e);
                                var n = o.last;
                                return n && n.error ? e.error && e.error(n.error) : n && n.result && e.next && e.next(n.result), f && o.reobserve().catch(function() {}),
                                    function() {
                                        o.observers.delete(e) && !o.observers.size && o.tearDownQuery()
                                    }
                            }) || this;
                        o.observers = new Set, o.subscriptions = new Set, o.queryInfo = r, o.queryManager = f, o.waitForOwnResult = es(i.fetchPolicy), o.isTornDown = !1;
                        var s = f.defaultOptions.watchQuery,
                            u = (void 0 === s ? {} : s).fetchPolicy,
                            d = void 0 === u ? "cache-first" : u,
                            c = i.fetchPolicy,
                            l = void 0 === c ? d : c,
                            p = i.initialFetchPolicy,
                            y = void 0 === p ? "standby" === l ? d : l : p;
                        o.options = (0, n.__assign)((0, n.__assign)({}, i), {
                            initialFetchPolicy: y,
                            fetchPolicy: l
                        }), o.queryId = r.queryId || f.generateQueryId();
                        var b = (0, a.$H)(o.query);
                        return o.queryName = b && b.name && b.name.value, o
                    }
                    return (0, n.__extends)(t, e), Object.defineProperty(t.prototype, "query", {
                        get: function() {
                            return this.lastQuery || this.options.query
                        },
                        enumerable: !1,
                        configurable: !0
                    }), Object.defineProperty(t.prototype, "variables", {
                        get: function() {
                            return this.options.variables
                        },
                        enumerable: !1,
                        configurable: !0
                    }), t.prototype.result = function() {
                        var e = this;
                        return new Promise(function(t, f) {
                            var n = {
                                    next: function(f) {
                                        t(f), e.observers.delete(n), e.observers.size || e.queryManager.removeQuery(e.queryId), setTimeout(function() {
                                            r.unsubscribe()
                                        }, 0)
                                    },
                                    error: f
                                },
                                r = e.subscribe(n)
                        })
                    }, t.prototype.getCurrentResult = function(e) {
                        void 0 === e && (e = !0);
                        var t = this.getLastResult(!0),
                            f = this.queryInfo.networkStatus || t && t.networkStatus || K.Ie.ready,
                            r = (0, n.__assign)((0, n.__assign)({}, t), {
                                loading: (0, K.Oj)(f),
                                networkStatus: f
                            }),
                            i = this.options.fetchPolicy,
                            a = void 0 === i ? "cache-first" : i;
                        if (es(a) || this.queryManager.getDocumentInfo(this.query).hasForcedResolvers);
                        else if (this.waitForOwnResult) this.queryInfo.updateWatch();
                        else {
                            var o = this.queryInfo.getDiff();
                            (o.complete || this.options.returnPartialData) && (r.data = o.result), (0, L.D)(r.data, {}) && (r.data = void 0), o.complete ? (delete r.partial, o.complete && r.networkStatus === K.Ie.loading && ("cache-first" === a || "cache-only" === a) && (r.networkStatus = K.Ie.ready, r.loading = !1)) : r.partial = !0, !1 === globalThis.__DEV__ || o.complete || this.options.partialRefetch || r.loading || r.data || r.error || eo(o.missing)
                        }
                        return e && this.updateLastResult(r), r
                    }, t.prototype.isDifferentFromLastResult = function(e, t) {
                        var f, r, i, o, s, u, d;
                        return !this.last || (this.queryManager.getDocumentInfo(this.query).hasNonreactiveDirective ? (f = this.query, r = this.last.result, i = this.variables, o = r.data, s = (0, n.__rest)(r, ["data"]), u = e.data, d = (0, n.__rest)(e, ["data"]), !((0, L.Z)(s, d) && function e(t, f, n, r) {
                            if (f === n) return !0;
                            var i = new Set;
                            return t.selections.every(function(t) {
                                if (i.has(t) || (i.add(t), !(0, p.LZ)(t, r.variables) || ee(t))) return !0;
                                if ((0, $.My)(t)) {
                                    var a = (0, $.u2)(t),
                                        o = f && f[a],
                                        s = n && n[a],
                                        u = t.selectionSet;
                                    if (!u) return (0, L.Z)(o, s);
                                    var d = Array.isArray(o),
                                        c = Array.isArray(s);
                                    if (d !== c) return !1;
                                    if (d && c) {
                                        var l = o.length;
                                        if (s.length !== l) return !1;
                                        for (var y = 0; y < l; ++y)
                                            if (!e(u, o[y], s[y], r)) return !1;
                                        return !0
                                    }
                                    return e(u, o, s, r)
                                }
                                var b = (0, Z.hi)(t, r.fragmentMap);
                                if (b) return !!ee(b) || e(b.selectionSet, f, n, r)
                            })
                        }((0, a.p$)(f).selectionSet, o, u, {
                            fragmentMap: (0, Z.F)((0, a.kU)(f)),
                            variables: i
                        }))) : !(0, L.D)(this.last.result, e)) || t && !(0, L.D)(this.last.variables, t)
                    }, t.prototype.getLast = function(e, t) {
                        var f = this.last;
                        if (f && f[e] && (!t || (0, L.D)(f.variables, this.variables))) return f[e]
                    }, t.prototype.getLastResult = function(e) {
                        return this.getLast("result", e)
                    }, t.prototype.getLastError = function(e) {
                        return this.getLast("error", e)
                    }, t.prototype.resetLastResults = function() {
                        delete this.last, this.isTornDown = !1
                    }, t.prototype.resetQueryStoreErrors = function() {
                        this.queryManager.resetErrors(this.queryId)
                    }, t.prototype.refetch = function(e) {
                        var t, f = {
                                pollInterval: 0
                            },
                            i = this.options.fetchPolicy;
                        if ("cache-and-network" === i ? f.fetchPolicy = i : "no-cache" === i ? f.fetchPolicy = "no-cache" : f.fetchPolicy = "network-only", !1 !== globalThis.__DEV__ && e && en.call(e, "variables")) {
                            var o = (0, a.iW)(this.query),
                                s = o.variableDefinitions;
                            s && s.some(function(e) {
                                return "variables" === e.variable.name.value
                            }) || !1 === globalThis.__DEV__ || r.kG.warn(20, e, (null === (t = o.name) || void 0 === t ? void 0 : t.value) || o)
                        }
                        return e && !(0, L.D)(this.options.variables, e) && (f.variables = this.options.variables = (0, n.__assign)((0, n.__assign)({}, this.options.variables), e)), this.queryInfo.resetLastWrite(), this.reobserve(f, K.Ie.refetch)
                    }, t.prototype.fetchMore = function(e) {
                        var t = this,
                            f = (0, n.__assign)((0, n.__assign)({}, e.query ? e : (0, n.__assign)((0, n.__assign)((0, n.__assign)((0, n.__assign)({}, this.options), {
                                query: this.options.query
                            }), e), {
                                variables: (0, n.__assign)((0, n.__assign)({}, this.options.variables), e.variables)
                            })), {
                                fetchPolicy: "no-cache"
                            });
                        f.query = this.transformDocument(f.query);
                        var r = this.queryManager.generateQueryId();
                        this.lastQuery = e.query ? this.transformDocument(this.options.query) : f.query;
                        var i = this.queryInfo,
                            a = i.networkStatus;
                        i.networkStatus = K.Ie.fetchMore, f.notifyOnNetworkStatusChange && this.observe();
                        var o = new Set;
                        return this.queryManager.fetchQuery(r, f, K.Ie.fetchMore).then(function(n) {
                            return t.queryManager.removeQuery(r), i.networkStatus === K.Ie.fetchMore && (i.networkStatus = a), t.queryManager.cache.batch({
                                update: function(r) {
                                    var i = e.updateQuery;
                                    i ? r.updateQuery({
                                        query: t.query,
                                        variables: t.variables,
                                        returnPartialData: !0,
                                        optimistic: !1
                                    }, function(e) {
                                        return i(e, {
                                            fetchMoreResult: n.data,
                                            variables: f.variables
                                        })
                                    }) : r.writeQuery({
                                        query: f.query,
                                        variables: f.variables,
                                        data: n.data
                                    })
                                },
                                onWatchUpdated: function(e) {
                                    o.add(e.query)
                                }
                            }), n
                        }).finally(function() {
                            o.has(t.query) || ei(t)
                        })
                    }, t.prototype.subscribeToMore = function(e) {
                        var t = this,
                            f = this.queryManager.startGraphQLSubscription({
                                query: e.document,
                                variables: e.variables,
                                context: e.context
                            }).subscribe({
                                next: function(f) {
                                    var n = e.updateQuery;
                                    n && t.updateQuery(function(e, t) {
                                        return n(e, {
                                            subscriptionData: f,
                                            variables: t.variables
                                        })
                                    })
                                },
                                error: function(t) {
                                    if (e.onError) {
                                        e.onError(t);
                                        return
                                    }!1 !== globalThis.__DEV__ && r.kG.error(21, t)
                                }
                            });
                        return this.subscriptions.add(f),
                            function() {
                                t.subscriptions.delete(f) && f.unsubscribe()
                            }
                    }, t.prototype.setOptions = function(e) {
                        return this.reobserve(e)
                    }, t.prototype.silentSetOptions = function(e) {
                        var t = (0, Y.o)(this.options, e || {});
                        ef(this.options, t)
                    }, t.prototype.setVariables = function(e) {
                        return (0, L.D)(this.variables, e) ? this.observers.size ? this.result() : Promise.resolve() : (this.options.variables = e, this.observers.size) ? this.reobserve({
                            fetchPolicy: this.options.initialFetchPolicy,
                            variables: e
                        }, K.Ie.setVariables) : Promise.resolve()
                    }, t.prototype.updateQuery = function(e) {
                        var t = this.queryManager,
                            f = e(t.cache.diff({
                                query: this.options.query,
                                variables: this.variables,
                                returnPartialData: !0,
                                optimistic: !1
                            }).result, {
                                variables: this.variables
                            });
                        f && (t.cache.writeQuery({
                            query: this.options.query,
                            data: f,
                            variables: this.variables
                        }), t.broadcastQueries())
                    }, t.prototype.startPolling = function(e) {
                        this.options.pollInterval = e, this.updatePolling()
                    }, t.prototype.stopPolling = function() {
                        this.options.pollInterval = 0, this.updatePolling()
                    }, t.prototype.applyNextFetchPolicy = function(e, t) {
                        if (t.nextFetchPolicy) {
                            var f = t.fetchPolicy,
                                n = void 0 === f ? "cache-first" : f,
                                r = t.initialFetchPolicy,
                                i = void 0 === r ? n : r;
                            "standby" === n || ("function" == typeof t.nextFetchPolicy ? t.fetchPolicy = t.nextFetchPolicy(n, {
                                reason: e,
                                options: t,
                                observable: this,
                                initialFetchPolicy: i
                            }) : "variables-changed" === e ? t.fetchPolicy = i : t.fetchPolicy = t.nextFetchPolicy)
                        }
                        return t.fetchPolicy
                    }, t.prototype.fetch = function(e, t, f) {
                        return this.queryManager.setObservableQuery(this), this.queryManager.fetchConcastWithInfo(this.queryId, e, t, f)
                    }, t.prototype.updatePolling = function() {
                        var e = this;
                        if (!this.queryManager.ssrMode) {
                            var t = this.pollingInfo,
                                f = this.options.pollInterval;
                            if (!f) {
                                t && (clearTimeout(t.timeout), delete this.pollingInfo);
                                return
                            }
                            if (!t || t.interval !== f) {
                                (0, r.kG)(f, 22), (t || (this.pollingInfo = {})).interval = f;
                                var n = function() {
                                        e.pollingInfo && ((0, K.Oj)(e.queryInfo.networkStatus) ? i() : e.reobserve({
                                            fetchPolicy: "no-cache" === e.options.initialFetchPolicy ? "no-cache" : "network-only"
                                        }, K.Ie.poll).then(i, i))
                                    },
                                    i = function() {
                                        var t = e.pollingInfo;
                                        t && (clearTimeout(t.timeout), t.timeout = setTimeout(n, t.interval))
                                    };
                                i()
                            }
                        }
                    }, t.prototype.updateLastResult = function(e, t) {
                        void 0 === t && (t = this.variables);
                        var f = this.getLastError();
                        return f && this.last && !(0, L.D)(t, this.last.variables) && (f = void 0), this.last = (0, n.__assign)({
                            result: this.queryManager.assumeImmutableResults ? e : (0, J.X)(e),
                            variables: t
                        }, f ? {
                            error: f
                        } : null)
                    }, t.prototype.reobserveAsConcast = function(e, t) {
                        var f = this;
                        this.isTornDown = !1;
                        var r = t === K.Ie.refetch || t === K.Ie.fetchMore || t === K.Ie.poll,
                            i = this.options.variables,
                            a = this.options.fetchPolicy,
                            o = (0, Y.o)(this.options, e || {}),
                            s = r ? o : ef(this.options, o),
                            u = this.transformDocument(s.query);
                        this.lastQuery = u, !r && (this.updatePolling(), e && e.variables && !(0, L.D)(e.variables, i) && "standby" !== s.fetchPolicy && s.fetchPolicy === a && (this.applyNextFetchPolicy("variables-changed", s), void 0 === t && (t = K.Ie.setVariables))), this.waitForOwnResult && (this.waitForOwnResult = es(s.fetchPolicy));
                        var d = function() {
                                f.concast === p && (f.waitForOwnResult = !1)
                            },
                            c = s.variables && (0, n.__assign)({}, s.variables),
                            l = this.fetch(s, t, u),
                            p = l.concast,
                            y = l.fromLink,
                            b = {
                                next: function(e) {
                                    d(), f.reportResult(e, c)
                                },
                                error: function(e) {
                                    d(), f.reportError(e, c)
                                }
                            };
                        return r || !y && this.concast || (this.concast && this.observer && this.concast.removeObserver(this.observer), this.concast = p, this.observer = b), p.addObserver(b), p
                    }, t.prototype.reobserve = function(e, t) {
                        return this.reobserveAsConcast(e, t).promise
                    }, t.prototype.resubscribeAfterError = function() {
                        for (var e = [], t = 0; t < arguments.length; t++) e[t] = arguments[t];
                        var f = this.last;
                        this.resetLastResults();
                        var n = this.subscribe.apply(this, e);
                        return this.last = f, n
                    }, t.prototype.observe = function() {
                        this.reportResult(this.getCurrentResult(!1), this.variables)
                    }, t.prototype.reportResult = function(e, t) {
                        var f = this.getLastError(),
                            n = this.isDifferentFromLastResult(e, t);
                        (f || !e.partial || this.options.returnPartialData) && this.updateLastResult(e, t), (f || n) && W(this.observers, "next", e)
                    }, t.prototype.reportError = function(e, t) {
                        var f = (0, n.__assign)((0, n.__assign)({}, this.getLastResult()), {
                            error: e,
                            errors: e.graphQLErrors,
                            networkStatus: K.Ie.error,
                            loading: !1
                        });
                        this.updateLastResult(f, t), W(this.observers, "error", this.last.error = e)
                    }, t.prototype.hasObservers = function() {
                        return this.observers.size > 0
                    }, t.prototype.tearDownQuery = function() {
                        this.isTornDown || (this.concast && this.observer && (this.concast.removeObserver(this.observer), delete this.concast, delete this.observer), this.stopPolling(), this.subscriptions.forEach(function(e) {
                            return e.unsubscribe()
                        }), this.subscriptions.clear(), this.queryManager.stopQuery(this.queryId), this.observers.clear(), this.isTornDown = !0)
                    }, t.prototype.transformDocument = function(e) {
                        return this.queryManager.transform(e)
                    }, t
                }(i.y);

            function ei(e) {
                var t = e.options,
                    f = t.fetchPolicy,
                    n = t.nextFetchPolicy;
                return "cache-and-network" === f || "network-only" === f ? e.reobserve({
                    fetchPolicy: "cache-first",
                    nextFetchPolicy: function(e, t) {
                        return (this.nextFetchPolicy = n, "function" == typeof this.nextFetchPolicy) ? this.nextFetchPolicy(e, t) : f
                    }
                }) : e.reobserve()
            }

            function ea(e) {
                !1 !== globalThis.__DEV__ && r.kG.error(23, e.message, e.stack)
            }

            function eo(e) {
                !1 !== globalThis.__DEV__ && e && !1 !== globalThis.__DEV__ && r.kG.debug(24, e)
            }

            function es(e) {
                return "network-only" === e || "no-cache" === e || "standby" === e
            }
            Q(er);
            var eu = f(83745),
                ed = f(60209),
                ec = function() {
                    function e(e) {
                        var t = e.cache,
                            f = e.client,
                            n = e.resolvers,
                            r = e.fragmentMatcher;
                        this.selectionsToResolveCache = new WeakMap, this.cache = t, f && (this.client = f), n && this.addResolvers(n), r && this.setFragmentMatcher(r)
                    }
                    return e.prototype.addResolvers = function(e) {
                        var t = this;
                        this.resolvers = this.resolvers || {}, Array.isArray(e) ? e.forEach(function(e) {
                            t.resolvers = (0, w.Ee)(t.resolvers, e)
                        }) : this.resolvers = (0, w.Ee)(this.resolvers, e)
                    }, e.prototype.setResolvers = function(e) {
                        this.resolvers = {}, this.addResolvers(e)
                    }, e.prototype.getResolvers = function() {
                        return this.resolvers || {}
                    }, e.prototype.runResolvers = function(e) {
                        var t = e.document,
                            f = e.remoteResult,
                            r = e.context,
                            i = e.variables,
                            a = e.onlyRunForcedResolvers,
                            o = void 0 !== a && a;
                        return (0, n.__awaiter)(this, void 0, void 0, function() {
                            return (0, n.__generator)(this, function(e) {
                                return t ? [2, this.resolveDocument(t, f.data, r, i, this.fragmentMatcher, o).then(function(e) {
                                    return (0, n.__assign)((0, n.__assign)({}, f), {
                                        data: e.result
                                    })
                                })] : [2, f]
                            })
                        })
                    }, e.prototype.setFragmentMatcher = function(e) {
                        this.fragmentMatcher = e
                    }, e.prototype.getFragmentMatcher = function() {
                        return this.fragmentMatcher
                    }, e.prototype.clientQuery = function(e) {
                        return (0, p.FS)(["client"], e) && this.resolvers ? e : null
                    }, e.prototype.serverQuery = function(e) {
                        return (0, F.ob)(e)
                    }, e.prototype.prepareContext = function(e) {
                        var t = this.cache;
                        return (0, n.__assign)((0, n.__assign)({}, e), {
                            cache: t,
                            getCacheKey: function(e) {
                                return t.identify(e)
                            }
                        })
                    }, e.prototype.addExportedVariables = function(e, t, f) {
                        return void 0 === t && (t = {}), void 0 === f && (f = {}), (0, n.__awaiter)(this, void 0, void 0, function() {
                            return (0, n.__generator)(this, function(r) {
                                return e ? [2, this.resolveDocument(e, this.buildRootValueFromCache(e, t) || {}, this.prepareContext(f), t).then(function(e) {
                                    return (0, n.__assign)((0, n.__assign)({}, t), e.exportedVariables)
                                })] : [2, (0, n.__assign)({}, t)]
                            })
                        })
                    }, e.prototype.shouldForceResolvers = function(e) {
                        var t = !1;
                        return (0, R.Vn)(e, {
                            Directive: {
                                enter: function(e) {
                                    if ("client" === e.name.value && e.arguments && (t = e.arguments.some(function(e) {
                                            return "always" === e.name.value && "BooleanValue" === e.value.kind && !0 === e.value.value
                                        }))) return R.$_
                                }
                            }
                        }), t
                    }, e.prototype.buildRootValueFromCache = function(e, t) {
                        return this.cache.diff({
                            query: (0, F.aL)(e),
                            variables: t,
                            returnPartialData: !0,
                            optimistic: !1
                        }).result
                    }, e.prototype.resolveDocument = function(e, t, f, r, i, o) {
                        return void 0 === f && (f = {}), void 0 === r && (r = {}), void 0 === i && (i = function() {
                            return !0
                        }), void 0 === o && (o = !1), (0, n.__awaiter)(this, void 0, void 0, function() {
                            var s, u, d, c, l, p, y, b, h, m;
                            return (0, n.__generator)(this, function(v) {
                                return s = (0, a.p$)(e), u = (0, a.kU)(e), d = (0, Z.F)(u), c = this.collectSelectionsToResolve(s, d), p = (l = s.operation) ? l.charAt(0).toUpperCase() + l.slice(1) : "Query", y = this, b = y.cache, h = y.client, m = {
                                    fragmentMap: d,
                                    context: (0, n.__assign)((0, n.__assign)({}, f), {
                                        cache: b,
                                        client: h
                                    }),
                                    variables: r,
                                    fragmentMatcher: i,
                                    defaultOperationType: p,
                                    exportedVariables: {},
                                    selectionsToResolve: c,
                                    onlyRunForcedResolvers: o
                                }, [2, this.resolveSelectionSet(s.selectionSet, !1, t, m).then(function(e) {
                                    return {
                                        result: e,
                                        exportedVariables: m.exportedVariables
                                    }
                                })]
                            })
                        })
                    }, e.prototype.resolveSelectionSet = function(e, t, f, i) {
                        return (0, n.__awaiter)(this, void 0, void 0, function() {
                            var a, o, s, u, d, c = this;
                            return (0, n.__generator)(this, function(l) {
                                return a = i.fragmentMap, o = i.context, s = i.variables, u = [f], d = function(e) {
                                    return (0, n.__awaiter)(c, void 0, void 0, function() {
                                        var d, c;
                                        return (0, n.__generator)(this, function(n) {
                                            return (t || i.selectionsToResolve.has(e)) && (0, p.LZ)(e, s) ? (0, $.My)(e) ? [2, this.resolveField(e, t, f, i).then(function(t) {
                                                var f;
                                                void 0 !== t && u.push(((f = {})[(0, $.u2)(e)] = t, f))
                                            })] : ((0, $.Ao)(e) ? d = e : (d = a[e.name.value], (0, r.kG)(d, 18, e.name.value)), d && d.typeCondition && (c = d.typeCondition.name.value, i.fragmentMatcher(f, c, o))) ? [2, this.resolveSelectionSet(d.selectionSet, t, f, i).then(function(e) {
                                                u.push(e)
                                            })] : [2] : [2]
                                        })
                                    })
                                }, [2, Promise.all(e.selections.map(d)).then(function() {
                                    return (0, w.bw)(u)
                                })]
                            })
                        })
                    }, e.prototype.resolveField = function(e, t, f, r) {
                        return (0, n.__awaiter)(this, void 0, void 0, function() {
                            var i, a, o, s, u, d, c, l, p, y = this;
                            return (0, n.__generator)(this, function(n) {
                                return f ? (i = r.variables, s = (a = e.name.value) !== (o = (0, $.u2)(e)), d = Promise.resolve(u = f[o] || f[a]), (!r.onlyRunForcedResolvers || this.shouldForceResolvers(e)) && (c = f.__typename || r.defaultOperationType, (l = this.resolvers && this.resolvers[c]) && (p = l[s ? a : o]) && (d = Promise.resolve(ed.ab.withValue(this.cache, p, [f, (0, $.NC)(e, i), r.context, {
                                    field: e,
                                    fragmentMap: r.fragmentMap
                                }])))), [2, d.then(function(f) {
                                    if (void 0 === f && (f = u), e.directives && e.directives.forEach(function(e) {
                                            "export" === e.name.value && e.arguments && e.arguments.forEach(function(e) {
                                                "as" === e.name.value && "StringValue" === e.value.kind && (r.exportedVariables[e.value.value] = f)
                                            })
                                        }), !e.selectionSet || null == f) return f;
                                    var n, i, a = null !== (i = null === (n = e.directives) || void 0 === n ? void 0 : n.some(function(e) {
                                        return "client" === e.name.value
                                    })) && void 0 !== i && i;
                                    return Array.isArray(f) ? y.resolveSubSelectedArray(e, t || a, f, r) : e.selectionSet ? y.resolveSelectionSet(e.selectionSet, t || a, f, r) : void 0
                                })]) : [2, null]
                            })
                        })
                    }, e.prototype.resolveSubSelectedArray = function(e, t, f, n) {
                        var r = this;
                        return Promise.all(f.map(function(f) {
                            return null === f ? null : Array.isArray(f) ? r.resolveSubSelectedArray(e, t, f, n) : e.selectionSet ? r.resolveSelectionSet(e.selectionSet, t, f, n) : void 0
                        }))
                    }, e.prototype.collectSelectionsToResolve = function(e, t) {
                        var f = function(e) {
                                return !Array.isArray(e)
                            },
                            n = this.selectionsToResolveCache;
                        return function e(i) {
                            if (!n.has(i)) {
                                var a = new Set;
                                n.set(i, a), (0, R.Vn)(i, {
                                    Directive: function(e, t, n, r, i) {
                                        "client" === e.name.value && i.forEach(function(e) {
                                            f(e) && (0, eu.pO)(e) && a.add(e)
                                        })
                                    },
                                    FragmentSpread: function(n, i, o, s, u) {
                                        var d = t[n.name.value];
                                        (0, r.kG)(d, 19, n.name.value);
                                        var c = e(d);
                                        c.size > 0 && (u.forEach(function(e) {
                                            f(e) && (0, eu.pO)(e) && a.add(e)
                                        }), a.add(n), c.forEach(function(e) {
                                            a.add(e)
                                        }))
                                    }
                                })
                            }
                            return n.get(i)
                        }(e)
                    }, e
                }(),
                el = new(b.mr ? WeakMap : Map);

            function ep(e, t) {
                var f = e[t];
                "function" == typeof f && (e[t] = function() {
                    return el.set(e, (el.get(e) + 1) % 1e15), f.apply(this, arguments)
                })
            }

            function ey(e) {
                e.notifyTimeout && (clearTimeout(e.notifyTimeout), e.notifyTimeout = void 0)
            }
            var eb = function() {
                function e(e, t) {
                    void 0 === t && (t = e.generateQueryId()), this.queryId = t, this.listeners = new Set, this.document = null, this.lastRequestId = 1, this.stopped = !1, this.dirty = !1, this.observableQuery = null;
                    var f = this.cache = e.cache;
                    el.has(f) || (el.set(f, 0), ep(f, "evict"), ep(f, "modify"), ep(f, "reset"))
                }
                return e.prototype.init = function(e) {
                    var t = e.networkStatus || K.Ie.loading;
                    return this.variables && this.networkStatus !== K.Ie.loading && !(0, L.D)(this.variables, e.variables) && (t = K.Ie.setVariables), (0, L.D)(e.variables, this.variables) || (this.lastDiff = void 0), Object.assign(this, {
                        document: e.document,
                        variables: e.variables,
                        networkError: null,
                        graphQLErrors: this.graphQLErrors || [],
                        networkStatus: t
                    }), e.observableQuery && this.setObservableQuery(e.observableQuery), e.lastRequestId && (this.lastRequestId = e.lastRequestId), this
                }, e.prototype.reset = function() {
                    ey(this), this.dirty = !1
                }, e.prototype.getDiff = function() {
                    var e = this.getDiffOptions();
                    if (this.lastDiff && (0, L.D)(e, this.lastDiff.options)) return this.lastDiff.diff;
                    this.updateWatch(this.variables);
                    var t = this.observableQuery;
                    if (t && "no-cache" === t.options.fetchPolicy) return {
                        complete: !1
                    };
                    var f = this.cache.diff(e);
                    return this.updateLastDiff(f, e), f
                }, e.prototype.updateLastDiff = function(e, t) {
                    this.lastDiff = e ? {
                        diff: e,
                        options: t || this.getDiffOptions()
                    } : void 0
                }, e.prototype.getDiffOptions = function(e) {
                    var t;
                    return void 0 === e && (e = this.variables), {
                        query: this.document,
                        variables: e,
                        returnPartialData: !0,
                        optimistic: !0,
                        canonizeResults: null === (t = this.observableQuery) || void 0 === t ? void 0 : t.options.canonizeResults
                    }
                }, e.prototype.setDiff = function(e) {
                    var t = this,
                        f = this.lastDiff && this.lastDiff.diff;
                    this.updateLastDiff(e), this.dirty || (0, L.D)(f && f.result, e && e.result) || (this.dirty = !0, this.notifyTimeout || (this.notifyTimeout = setTimeout(function() {
                        return t.notify()
                    }, 0)))
                }, e.prototype.setObservableQuery = function(e) {
                    var t = this;
                    e !== this.observableQuery && (this.oqListener && this.listeners.delete(this.oqListener), this.observableQuery = e, e ? (e.queryInfo = this, this.listeners.add(this.oqListener = function() {
                        t.getDiff().fromOptimisticTransaction ? e.observe() : ei(e)
                    })) : delete this.oqListener)
                }, e.prototype.notify = function() {
                    var e = this;
                    ey(this), this.shouldNotify() && this.listeners.forEach(function(t) {
                        return t(e)
                    }), this.dirty = !1
                }, e.prototype.shouldNotify = function() {
                    if (!this.dirty || !this.listeners.size) return !1;
                    if ((0, K.Oj)(this.networkStatus) && this.observableQuery) {
                        var e = this.observableQuery.options.fetchPolicy;
                        if ("cache-only" !== e && "cache-and-network" !== e) return !1
                    }
                    return !0
                }, e.prototype.stop = function() {
                    if (!this.stopped) {
                        this.stopped = !0, this.reset(), this.cancel(), this.cancel = e.prototype.cancel;
                        var t = this.observableQuery;
                        t && t.stopPolling()
                    }
                }, e.prototype.cancel = function() {}, e.prototype.updateWatch = function(e) {
                    var t = this;
                    void 0 === e && (e = this.variables);
                    var f = this.observableQuery;
                    if (!f || "no-cache" !== f.options.fetchPolicy) {
                        var r = (0, n.__assign)((0, n.__assign)({}, this.getDiffOptions(e)), {
                            watcher: this,
                            callback: function(e) {
                                return t.setDiff(e)
                            }
                        });
                        this.lastWatch && (0, L.D)(r, this.lastWatch) || (this.cancel(), this.cancel = this.cache.watch(this.lastWatch = r))
                    }
                }, e.prototype.resetLastWrite = function() {
                    this.lastWrite = void 0
                }, e.prototype.shouldWrite = function(e, t) {
                    var f = this.lastWrite;
                    return !(f && f.dmCount === el.get(this.cache) && (0, L.D)(t, f.variables) && (0, L.D)(e.data, f.result.data))
                }, e.prototype.markResult = function(e, t, f, n) {
                    var r = this,
                        i = new w.w0,
                        a = (0, g.O)(e.errors) ? e.errors.slice(0) : [];
                    if (this.reset(), "incremental" in e && (0, g.O)(e.incremental)) {
                        var o = I(this.getDiff().result, e);
                        e.data = o
                    } else if ("hasNext" in e && e.hasNext) {
                        var s = this.getDiff();
                        e.data = i.merge(s.result, e.data)
                    }
                    this.graphQLErrors = a, "no-cache" === f.fetchPolicy ? this.updateLastDiff({
                        result: e.data,
                        complete: !0
                    }, this.getDiffOptions(f.variables)) : 0 !== n && (eh(e, f.errorPolicy) ? this.cache.performTransaction(function(i) {
                        if (r.shouldWrite(e, f.variables)) i.writeQuery({
                            query: t,
                            data: e.data,
                            variables: f.variables,
                            overwrite: 1 === n
                        }), r.lastWrite = {
                            result: e,
                            variables: f.variables,
                            dmCount: el.get(r.cache)
                        };
                        else if (r.lastDiff && r.lastDiff.diff.complete) {
                            e.data = r.lastDiff.diff.result;
                            return
                        }
                        var a = r.getDiffOptions(f.variables),
                            o = i.diff(a);
                        !r.stopped && (0, L.D)(r.variables, f.variables) && r.updateWatch(f.variables), r.updateLastDiff(o, a), o.complete && (e.data = o.result)
                    }) : this.lastWrite = void 0)
                }, e.prototype.markReady = function() {
                    return this.networkError = null, this.networkStatus = K.Ie.ready
                }, e.prototype.markError = function(e) {
                    return this.networkStatus = K.Ie.error, this.lastWrite = void 0, this.reset(), e.graphQLErrors && (this.graphQLErrors = e.graphQLErrors), e.networkError && (this.networkError = e.networkError), e
                }, e
            }();

            function eh(e, t) {
                void 0 === t && (t = "none");
                var f = "ignore" === t || "all" === t,
                    n = !G(e);
                return !n && f && e.data && (n = !0), n
            }
            var em = Object.prototype.hasOwnProperty,
                ev = function() {
                    function e(e) {
                        var t = e.cache,
                            f = e.link,
                            n = e.defaultOptions,
                            r = e.documentTransform,
                            i = e.queryDeduplication,
                            a = e.onBroadcast,
                            o = e.ssrMode,
                            s = e.clientAwareness,
                            u = e.localState,
                            d = e.assumeImmutableResults,
                            c = void 0 === d ? !!t.assumeImmutableResults : d,
                            l = this;
                        this.clientAwareness = {}, this.queries = new Map, this.fetchCancelFns = new Map, this.transformCache = new(b.mr ? WeakMap : Map), this.queryIdCounter = 1, this.requestIdCounter = 1, this.mutationIdCounter = 1, this.inFlightLinkObservables = new Map;
                        var p = new U.A(function(e) {
                            return l.cache.transformDocument(e)
                        }, {
                            cache: !1
                        });
                        this.cache = t, this.link = f, this.defaultOptions = n || Object.create(null), this.queryDeduplication = void 0 !== i && i, this.clientAwareness = void 0 === s ? {} : s, this.localState = u || new ec({
                            cache: t
                        }), this.ssrMode = void 0 !== o && o, this.assumeImmutableResults = c, this.documentTransform = r ? p.concat(r).concat(p) : p, (this.onBroadcast = a) && (this.mutationStore = Object.create(null))
                    }
                    return e.prototype.stop = function() {
                        var e = this;
                        this.queries.forEach(function(t, f) {
                            e.stopQueryNoBroadcast(f)
                        }), this.cancelPendingFetches((0, r._K)(25))
                    }, e.prototype.cancelPendingFetches = function(e) {
                        this.fetchCancelFns.forEach(function(t) {
                            return t(e)
                        }), this.fetchCancelFns.clear()
                    }, e.prototype.mutate = function(e) {
                        var t, f, i = e.mutation,
                            a = e.variables,
                            o = e.optimisticResponse,
                            s = e.updateQueries,
                            u = e.refetchQueries,
                            d = void 0 === u ? [] : u,
                            c = e.awaitRefetchQueries,
                            l = void 0 !== c && c,
                            p = e.update,
                            y = e.onQueryUpdated,
                            b = e.fetchPolicy,
                            h = void 0 === b ? (null === (t = this.defaultOptions.mutate) || void 0 === t ? void 0 : t.fetchPolicy) || "network-only" : b,
                            m = e.errorPolicy,
                            T = void 0 === m ? (null === (f = this.defaultOptions.mutate) || void 0 === f ? void 0 : f.errorPolicy) || "none" : m,
                            g = e.keepRootFields,
                            w = e.context;
                        return (0, n.__awaiter)(this, void 0, void 0, function() {
                            var e, t, f, u;
                            return (0, n.__generator)(this, function(c) {
                                switch (c.label) {
                                    case 0:
                                        if ((0, r.kG)(i, 26), (0, r.kG)("network-only" === h || "no-cache" === h, 27), e = this.generateMutationId(), i = this.cache.transformForLink(this.transform(i)), t = this.getDocumentInfo(i).hasClientExports, a = this.getVariables(i, a), !t) return [3, 2];
                                        return [4, this.localState.addExportedVariables(i, a, w)];
                                    case 1:
                                        a = c.sent(), c.label = 2;
                                    case 2:
                                        return f = this.mutationStore && (this.mutationStore[e] = {
                                            mutation: i,
                                            variables: a,
                                            loading: !0,
                                            error: null
                                        }), o && this.markMutationOptimistic(o, {
                                            mutationId: e,
                                            document: i,
                                            variables: a,
                                            fetchPolicy: h,
                                            errorPolicy: T,
                                            context: w,
                                            updateQueries: s,
                                            update: p,
                                            keepRootFields: g
                                        }), this.broadcastQueries(), u = this, [2, new Promise(function(t, r) {
                                            return V(u.getObservableFromLink(i, (0, n.__assign)((0, n.__assign)({}, w), {
                                                optimisticResponse: o
                                            }), a, !1), function(t) {
                                                if (G(t) && "none" === T) throw new v.cA({
                                                    graphQLErrors: j(t)
                                                });
                                                f && (f.loading = !1, f.error = null);
                                                var r = (0, n.__assign)({}, t);
                                                return "function" == typeof d && (d = d(r)), "ignore" === T && G(r) && delete r.errors, u.markMutationResult({
                                                    mutationId: e,
                                                    result: r,
                                                    document: i,
                                                    variables: a,
                                                    fetchPolicy: h,
                                                    errorPolicy: T,
                                                    context: w,
                                                    update: p,
                                                    updateQueries: s,
                                                    awaitRefetchQueries: l,
                                                    refetchQueries: d,
                                                    removeOptimistic: o ? e : void 0,
                                                    onQueryUpdated: y,
                                                    keepRootFields: g
                                                })
                                            }).subscribe({
                                                next: function(e) {
                                                    u.broadcastQueries(), "hasNext" in e && !1 !== e.hasNext || t(e)
                                                },
                                                error: function(t) {
                                                    f && (f.loading = !1, f.error = t), o && u.cache.removeOptimistic(e), u.broadcastQueries(), r(t instanceof v.cA ? t : new v.cA({
                                                        networkError: t
                                                    }))
                                                }
                                            })
                                        })]
                                }
                            })
                        })
                    }, e.prototype.markMutationResult = function(e, t) {
                        var f = this;
                        void 0 === t && (t = this.cache);
                        var r = e.result,
                            i = [],
                            o = "no-cache" === e.fetchPolicy;
                        if (!o && eh(r, e.errorPolicy)) {
                            if (A(r) || i.push({
                                    result: r.data,
                                    dataId: "ROOT_MUTATION",
                                    query: e.document,
                                    variables: e.variables
                                }), A(r) && (0, g.O)(r.incremental)) {
                                var s = t.diff({
                                        id: "ROOT_MUTATION",
                                        query: this.getDocumentInfo(e.document).asQuery,
                                        variables: e.variables,
                                        optimistic: !1,
                                        returnPartialData: !0
                                    }),
                                    u = void 0;
                                s.result && (u = I(s.result, r)), void 0 !== u && (r.data = u, i.push({
                                    result: u,
                                    dataId: "ROOT_MUTATION",
                                    query: e.document,
                                    variables: e.variables
                                }))
                            }
                            var d = e.updateQueries;
                            d && this.queries.forEach(function(e, n) {
                                var o = e.observableQuery,
                                    s = o && o.queryName;
                                if (s && em.call(d, s)) {
                                    var u = d[s],
                                        c = f.queries.get(n),
                                        l = c.document,
                                        p = c.variables,
                                        y = t.diff({
                                            query: l,
                                            variables: p,
                                            returnPartialData: !0,
                                            optimistic: !1
                                        }),
                                        b = y.result;
                                    if (y.complete && b) {
                                        var h = u(b, {
                                            mutationResult: r,
                                            queryName: l && (0, a.rY)(l) || void 0,
                                            queryVariables: p
                                        });
                                        h && i.push({
                                            result: h,
                                            dataId: "ROOT_QUERY",
                                            query: l,
                                            variables: p
                                        })
                                    }
                                }
                            })
                        }
                        if (i.length > 0 || e.refetchQueries || e.update || e.onQueryUpdated || e.removeOptimistic) {
                            var c = [];
                            if (this.refetchQueries({
                                    updateCache: function(t) {
                                        o || i.forEach(function(e) {
                                            return t.write(e)
                                        });
                                        var a, s = e.update,
                                            u = !(A(a = r) || "hasNext" in a && "data" in a) || A(r) && !r.hasNext;
                                        if (s) {
                                            if (!o) {
                                                var d = t.diff({
                                                    id: "ROOT_MUTATION",
                                                    query: f.getDocumentInfo(e.document).asQuery,
                                                    variables: e.variables,
                                                    optimistic: !1,
                                                    returnPartialData: !0
                                                });
                                                d.complete && ("incremental" in (r = (0, n.__assign)((0, n.__assign)({}, r), {
                                                    data: d.result
                                                })) && delete r.incremental, "hasNext" in r && delete r.hasNext)
                                            }
                                            u && s(t, r, {
                                                context: e.context,
                                                variables: e.variables
                                            })
                                        }
                                        o || e.keepRootFields || !u || t.modify({
                                            id: "ROOT_MUTATION",
                                            fields: function(e, t) {
                                                var f = t.fieldName,
                                                    n = t.DELETE;
                                                return "__typename" === f ? e : n
                                            }
                                        })
                                    },
                                    include: e.refetchQueries,
                                    optimistic: !1,
                                    removeOptimistic: e.removeOptimistic,
                                    onQueryUpdated: e.onQueryUpdated || null
                                }).forEach(function(e) {
                                    return c.push(e)
                                }), e.awaitRefetchQueries || e.onQueryUpdated) return Promise.all(c).then(function() {
                                return r
                            })
                        }
                        return Promise.resolve(r)
                    }, e.prototype.markMutationOptimistic = function(e, t) {
                        var f = this,
                            i = "function" == typeof e ? e(t.variables) : e;
                        return this.cache.recordOptimisticTransaction(function(e) {
                            try {
                                f.markMutationResult((0, n.__assign)((0, n.__assign)({}, t), {
                                    result: {
                                        data: i
                                    }
                                }), e)
                            } catch (e) {
                                !1 !== globalThis.__DEV__ && r.kG.error(e)
                            }
                        }, t.mutationId)
                    }, e.prototype.fetchQuery = function(e, t, f) {
                        return this.fetchConcastWithInfo(e, t, f).concast.promise
                    }, e.prototype.getQueryStore = function() {
                        var e = Object.create(null);
                        return this.queries.forEach(function(t, f) {
                            e[f] = {
                                variables: t.variables,
                                networkStatus: t.networkStatus,
                                networkError: t.networkError,
                                graphQLErrors: t.graphQLErrors
                            }
                        }), e
                    }, e.prototype.resetErrors = function(e) {
                        var t = this.queries.get(e);
                        t && (t.networkError = void 0, t.graphQLErrors = [])
                    }, e.prototype.transform = function(e) {
                        return this.documentTransform.transformDocument(e)
                    }, e.prototype.getDocumentInfo = function(e) {
                        var t = this.transformCache;
                        if (!t.has(e)) {
                            var f = {
                                hasClientExports: (0, p.mj)(e),
                                hasForcedResolvers: this.localState.shouldForceResolvers(e),
                                hasNonreactiveDirective: (0, p.FS)(["nonreactive"], e),
                                clientQuery: this.localState.clientQuery(e),
                                serverQuery: (0, F.bi)([{
                                    name: "client",
                                    remove: !0
                                }, {
                                    name: "connection"
                                }, {
                                    name: "nonreactive"
                                }], e),
                                defaultVars: (0, a.O4)((0, a.$H)(e)),
                                asQuery: (0, n.__assign)((0, n.__assign)({}, e), {
                                    definitions: e.definitions.map(function(e) {
                                        return "OperationDefinition" === e.kind && "query" !== e.operation ? (0, n.__assign)((0, n.__assign)({}, e), {
                                            operation: "query"
                                        }) : e
                                    })
                                })
                            };
                            t.set(e, f)
                        }
                        return t.get(e)
                    }, e.prototype.getVariables = function(e, t) {
                        return (0, n.__assign)((0, n.__assign)({}, this.getDocumentInfo(e).defaultVars), t)
                    }, e.prototype.watchQuery = function(e) {
                        var t = this.transform(e.query);
                        void 0 === (e = (0, n.__assign)((0, n.__assign)({}, e), {
                            variables: this.getVariables(t, e.variables)
                        })).notifyOnNetworkStatusChange && (e.notifyOnNetworkStatusChange = !1);
                        var f = new eb(this),
                            r = new er({
                                queryManager: this,
                                queryInfo: f,
                                options: e
                            });
                        return r.lastQuery = t, this.queries.set(r.queryId, f), f.init({
                            document: t,
                            observableQuery: r,
                            variables: r.variables
                        }), r
                    }, e.prototype.query = function(e, t) {
                        var f = this;
                        return void 0 === t && (t = this.generateQueryId()), (0, r.kG)(e.query, 28), (0, r.kG)("Document" === e.query.kind, 29), (0, r.kG)(!e.returnPartialData, 30), (0, r.kG)(!e.pollInterval, 31), this.fetchQuery(t, (0, n.__assign)((0, n.__assign)({}, e), {
                            query: this.transform(e.query)
                        })).finally(function() {
                            return f.stopQuery(t)
                        })
                    }, e.prototype.generateQueryId = function() {
                        return String(this.queryIdCounter++)
                    }, e.prototype.generateRequestId = function() {
                        return this.requestIdCounter++
                    }, e.prototype.generateMutationId = function() {
                        return String(this.mutationIdCounter++)
                    }, e.prototype.stopQueryInStore = function(e) {
                        this.stopQueryInStoreNoBroadcast(e), this.broadcastQueries()
                    }, e.prototype.stopQueryInStoreNoBroadcast = function(e) {
                        var t = this.queries.get(e);
                        t && t.stop()
                    }, e.prototype.clearStore = function(e) {
                        return void 0 === e && (e = {
                            discardWatches: !0
                        }), this.cancelPendingFetches((0, r._K)(32)), this.queries.forEach(function(e) {
                            e.observableQuery ? e.networkStatus = K.Ie.loading : e.stop()
                        }), this.mutationStore && (this.mutationStore = Object.create(null)), this.cache.reset(e)
                    }, e.prototype.getObservableQueries = function(e) {
                        var t = this;
                        void 0 === e && (e = "active");
                        var f = new Map,
                            i = new Map,
                            a = new Set;
                        return Array.isArray(e) && e.forEach(function(e) {
                            "string" == typeof e ? i.set(e, !1) : (0, $.JW)(e) ? i.set(t.transform(e), !1) : (0, T.s)(e) && e.query && a.add(e)
                        }), this.queries.forEach(function(t, n) {
                            var r = t.observableQuery,
                                a = t.document;
                            if (r) {
                                if ("all" === e) {
                                    f.set(n, r);
                                    return
                                }
                                var o = r.queryName;
                                if ("standby" === r.options.fetchPolicy || "active" === e && !r.hasObservers()) return;
                                ("active" === e || o && i.has(o) || a && i.has(a)) && (f.set(n, r), o && i.set(o, !0), a && i.set(a, !0))
                            }
                        }), a.size && a.forEach(function(e) {
                            var i = (0, H.X)("legacyOneTimeQuery"),
                                a = t.getQuery(i).init({
                                    document: e.query,
                                    variables: e.variables
                                }),
                                o = new er({
                                    queryManager: t,
                                    queryInfo: a,
                                    options: (0, n.__assign)((0, n.__assign)({}, e), {
                                        fetchPolicy: "network-only"
                                    })
                                });
                            (0, r.kG)(o.queryId === i), a.setObservableQuery(o), f.set(i, o)
                        }), !1 !== globalThis.__DEV__ && i.size && i.forEach(function(e, t) {
                            e || !1 === globalThis.__DEV__ || r.kG.warn("string" == typeof t ? 33 : 34, t)
                        }), f
                    }, e.prototype.reFetchObservableQueries = function(e) {
                        var t = this;
                        void 0 === e && (e = !1);
                        var f = [];
                        return this.getObservableQueries(e ? "all" : "active").forEach(function(n, r) {
                            var i = n.options.fetchPolicy;
                            n.resetLastResults(), (e || "standby" !== i && "cache-only" !== i) && f.push(n.refetch()), t.getQuery(r).setDiff(null)
                        }), this.broadcastQueries(), Promise.all(f)
                    }, e.prototype.setObservableQuery = function(e) {
                        this.getQuery(e.queryId).setObservableQuery(e)
                    }, e.prototype.startGraphQLSubscription = function(e) {
                        var t = this,
                            f = e.query,
                            n = e.fetchPolicy,
                            r = e.errorPolicy,
                            a = void 0 === r ? "none" : r,
                            o = e.variables,
                            s = e.context,
                            u = void 0 === s ? {} : s;
                        f = this.transform(f), o = this.getVariables(f, o);
                        var d = function(e) {
                            return t.getObservableFromLink(f, u, e).map(function(r) {
                                "no-cache" !== n && (eh(r, a) && t.cache.write({
                                    query: f,
                                    result: r.data,
                                    dataId: "ROOT_SUBSCRIPTION",
                                    variables: e
                                }), t.broadcastQueries());
                                var i = G(r),
                                    o = (0, v.ls)(r);
                                if (i || o) {
                                    var s = {};
                                    if (i && (s.graphQLErrors = r.errors), o && (s.protocolErrors = r.extensions[v.YG]), "none" === a || o) throw new v.cA(s)
                                }
                                return "ignore" === a && delete r.errors, r
                            })
                        };
                        if (this.getDocumentInfo(f).hasClientExports) {
                            var c = this.localState.addExportedVariables(f, o, u).then(d);
                            return new i.y(function(e) {
                                var t = null;
                                return c.then(function(f) {
                                        return t = f.subscribe(e)
                                    }, e.error),
                                    function() {
                                        return t && t.unsubscribe()
                                    }
                            })
                        }
                        return d(o)
                    }, e.prototype.stopQuery = function(e) {
                        this.stopQueryNoBroadcast(e), this.broadcastQueries()
                    }, e.prototype.stopQueryNoBroadcast = function(e) {
                        this.stopQueryInStoreNoBroadcast(e), this.removeQuery(e)
                    }, e.prototype.removeQuery = function(e) {
                        this.fetchCancelFns.delete(e), this.queries.has(e) && (this.getQuery(e).stop(), this.queries.delete(e))
                    }, e.prototype.broadcastQueries = function() {
                        this.onBroadcast && this.onBroadcast(), this.queries.forEach(function(e) {
                            return e.notify()
                        })
                    }, e.prototype.getLocalState = function() {
                        return this.localState
                    }, e.prototype.getObservableFromLink = function(e, t, f, r) {
                        var o, s, u = this;
                        void 0 === r && (r = null !== (o = null == t ? void 0 : t.queryDeduplication) && void 0 !== o ? o : this.queryDeduplication);
                        var d = this.getDocumentInfo(e),
                            l = d.serverQuery,
                            p = d.clientQuery;
                        if (l) {
                            var y = this.inFlightLinkObservables,
                                b = this.link,
                                h = {
                                    query: l,
                                    variables: f,
                                    operationName: (0, a.rY)(l) || void 0,
                                    context: this.prepareContext((0, n.__assign)((0, n.__assign)({}, t), {
                                        forceFetch: !r
                                    }))
                                };
                            if (t = h.context, r) {
                                var m = O(l),
                                    v = y.get(m) || new Map;
                                y.set(m, v);
                                var T = (0, q.B)(f);
                                if (!(s = v.get(T))) {
                                    var g = new z([c(b, h)]);
                                    v.set(T, s = g), g.beforeNext(function() {
                                        v.delete(T) && v.size < 1 && y.delete(m)
                                    })
                                }
                            } else s = new z([c(b, h)])
                        } else s = new z([i.y.of({
                            data: {}
                        })]), t = this.prepareContext(t);
                        return p && (s = V(s, function(e) {
                            return u.localState.runResolvers({
                                document: p,
                                remoteResult: e,
                                context: t,
                                variables: f
                            })
                        })), s
                    }, e.prototype.getResultsFromLink = function(e, t, f) {
                        var n = e.lastRequestId = this.generateRequestId(),
                            r = this.cache.transformForLink(f.query);
                        return V(this.getObservableFromLink(r, f.context, f.variables), function(i) {
                            var a = j(i),
                                o = a.length > 0;
                            if (n >= e.lastRequestId) {
                                if (o && "none" === f.errorPolicy) throw e.markError(new v.cA({
                                    graphQLErrors: a
                                }));
                                e.markResult(i, r, f, t), e.markReady()
                            }
                            var s = {
                                data: i.data,
                                loading: !1,
                                networkStatus: K.Ie.ready
                            };
                            return o && "ignore" !== f.errorPolicy && (s.errors = a, s.networkStatus = K.Ie.error), s
                        }, function(t) {
                            var f = (0, v.MS)(t) ? t : new v.cA({
                                networkError: t
                            });
                            throw n >= e.lastRequestId && e.markError(f), f
                        })
                    }, e.prototype.fetchConcastWithInfo = function(e, t, f, n) {
                        var r, i, a = this;
                        void 0 === f && (f = K.Ie.loading), void 0 === n && (n = t.query);
                        var o = this.getVariables(n, t.variables),
                            s = this.getQuery(e),
                            u = this.defaultOptions.watchQuery,
                            d = t.fetchPolicy,
                            c = void 0 === d ? u && u.fetchPolicy || "cache-first" : d,
                            l = t.errorPolicy,
                            p = void 0 === l ? u && u.errorPolicy || "none" : l,
                            y = t.returnPartialData,
                            b = t.notifyOnNetworkStatusChange,
                            h = t.context,
                            m = Object.assign({}, t, {
                                query: n,
                                variables: o,
                                fetchPolicy: c,
                                errorPolicy: p,
                                returnPartialData: void 0 !== y && y,
                                notifyOnNetworkStatusChange: void 0 !== b && b,
                                context: void 0 === h ? {} : h
                            }),
                            v = function(e) {
                                m.variables = e;
                                var n = a.fetchQueryByPolicy(s, m, f);
                                return "standby" !== m.fetchPolicy && n.sources.length > 0 && s.observableQuery && s.observableQuery.applyNextFetchPolicy("after-fetch", t), n
                            },
                            T = function() {
                                return a.fetchCancelFns.delete(e)
                            };
                        if (this.fetchCancelFns.set(e, function(e) {
                                T(), setTimeout(function() {
                                    return r.cancel(e)
                                })
                            }), this.getDocumentInfo(m.query).hasClientExports) r = new z(this.localState.addExportedVariables(m.query, m.variables, m.context).then(v).then(function(e) {
                            return e.sources
                        })), i = !0;
                        else {
                            var g = v(m.variables);
                            i = g.fromLink, r = new z(g.sources)
                        }
                        return r.promise.then(T, T), {
                            concast: r,
                            fromLink: i
                        }
                    }, e.prototype.refetchQueries = function(e) {
                        var t = this,
                            f = e.updateCache,
                            n = e.include,
                            r = e.optimistic,
                            i = void 0 !== r && r,
                            a = e.removeOptimistic,
                            o = void 0 === a ? i ? (0, H.X)("refetchQueries") : void 0 : a,
                            s = e.onQueryUpdated,
                            u = new Map;
                        n && this.getObservableQueries(n).forEach(function(e, f) {
                            u.set(f, {
                                oq: e,
                                lastDiff: t.getQuery(f).getDiff()
                            })
                        });
                        var d = new Map;
                        return f && this.cache.batch({
                            update: f,
                            optimistic: i && o || !1,
                            removeOptimistic: o,
                            onWatchUpdated: function(e, t, f) {
                                var n = e.watcher instanceof eb && e.watcher.observableQuery;
                                if (n) {
                                    if (s) {
                                        u.delete(n.queryId);
                                        var r = s(n, t, f);
                                        return !0 === r && (r = n.refetch()), !1 !== r && d.set(n, r), r
                                    }
                                    null !== s && u.set(n.queryId, {
                                        oq: n,
                                        lastDiff: f,
                                        diff: t
                                    })
                                }
                            }
                        }), u.size && u.forEach(function(e, f) {
                            var n, r = e.oq,
                                i = e.lastDiff,
                                a = e.diff;
                            if (s) {
                                if (!a) {
                                    var o = r.queryInfo;
                                    o.reset(), a = o.getDiff()
                                }
                                n = s(r, a, i)
                            }
                            s && !0 !== n || (n = r.refetch()), !1 !== n && d.set(r, n), f.indexOf("legacyOneTimeQuery") >= 0 && t.stopQueryNoBroadcast(f)
                        }), o && this.cache.removeOptimistic(o), d
                    }, e.prototype.fetchQueryByPolicy = function(e, t, f) {
                        var r = this,
                            a = t.query,
                            o = t.variables,
                            s = t.fetchPolicy,
                            u = t.refetchWritePolicy,
                            d = t.errorPolicy,
                            c = t.returnPartialData,
                            l = t.context,
                            p = t.notifyOnNetworkStatusChange,
                            y = e.networkStatus;
                        e.init({
                            document: a,
                            variables: o,
                            networkStatus: f
                        });
                        var b = function() {
                                return e.getDiff()
                            },
                            h = function(t, f) {
                                void 0 === f && (f = e.networkStatus || K.Ie.loading);
                                var s = t.result;
                                !1 === globalThis.__DEV__ || c || (0, L.D)(s, {}) || eo(t.missing);
                                var u = function(e) {
                                    return i.y.of((0, n.__assign)({
                                        data: e,
                                        loading: (0, K.Oj)(f),
                                        networkStatus: f
                                    }, t.complete ? null : {
                                        partial: !0
                                    }))
                                };
                                return s && r.getDocumentInfo(a).hasForcedResolvers ? r.localState.runResolvers({
                                    document: a,
                                    remoteResult: {
                                        data: s
                                    },
                                    context: l,
                                    variables: o,
                                    onlyRunForcedResolvers: !0
                                }).then(function(e) {
                                    return u(e.data || void 0)
                                }) : "none" === d && f === K.Ie.refetch && Array.isArray(t.missing) ? u(void 0) : u(s)
                            },
                            m = "no-cache" === s ? 0 : f === K.Ie.refetch && "merge" !== u ? 1 : 2,
                            v = function() {
                                return r.getResultsFromLink(e, m, {
                                    query: a,
                                    variables: o,
                                    context: l,
                                    fetchPolicy: s,
                                    errorPolicy: d
                                })
                            },
                            T = p && "number" == typeof y && y !== f && (0, K.Oj)(f);
                        switch (s) {
                            default:
                                case "cache-first":
                                var g = b();
                            if (g.complete) return {
                                fromLink: !1,
                                sources: [h(g, e.markReady())]
                            };
                            if (c || T) return {
                                fromLink: !0,
                                sources: [h(g), v()]
                            };
                            return {
                                fromLink: !0,
                                sources: [v()]
                            };
                            case "cache-and-network":
                                    var g = b();
                                if (g.complete || c || T) return {
                                    fromLink: !0,
                                    sources: [h(g), v()]
                                };
                                return {
                                    fromLink: !0,
                                    sources: [v()]
                                };
                            case "cache-only":
                                    return {
                                    fromLink: !1,
                                    sources: [h(b(), e.markReady())]
                                };
                            case "network-only":
                                    if (T) return {
                                    fromLink: !0,
                                    sources: [h(b()), v()]
                                };
                                return {
                                    fromLink: !0,
                                    sources: [v()]
                                };
                            case "no-cache":
                                    if (T) return {
                                    fromLink: !0,
                                    sources: [h(e.getDiff()), v()]
                                };
                                return {
                                    fromLink: !0,
                                    sources: [v()]
                                };
                            case "standby":
                                    return {
                                    fromLink: !1,
                                    sources: []
                                }
                        }
                    }, e.prototype.getQuery = function(e) {
                        return e && !this.queries.has(e) && this.queries.set(e, new eb(this, e)), this.queries.get(e)
                    }, e.prototype.prepareContext = function(e) {
                        void 0 === e && (e = {});
                        var t = this.localState.prepareContext(e);
                        return (0, n.__assign)((0, n.__assign)({}, t), {
                            clientAwareness: this.clientAwareness
                        })
                    }, e
                }(),
                eT = f(64754),
                eg = !1,
                ew = function() {
                    function e(e) {
                        var t = this;
                        if (this.resetStoreCallbacks = [], this.clearStoreCallbacks = [], !e.cache) throw (0, r._K)(15);
                        var f = e.uri,
                            n = e.credentials,
                            i = e.headers,
                            a = e.cache,
                            o = e.documentTransform,
                            s = e.ssrMode,
                            u = void 0 !== s && s,
                            c = e.ssrForceFetchDelay,
                            p = void 0 === c ? 0 : c,
                            y = e.connectToDevTools,
                            b = void 0 === y ? "object" == typeof window && !window.__APOLLO_CLIENT__ && !1 !== globalThis.__DEV__ : y,
                            h = e.queryDeduplication,
                            m = void 0 === h || h,
                            v = e.defaultOptions,
                            T = e.assumeImmutableResults,
                            g = void 0 === T ? a.assumeImmutableResults : T,
                            w = e.resolvers,
                            A = e.typeDefs,
                            I = e.fragmentMatcher,
                            E = e.name,
                            _ = e.version,
                            k = e.link;
                        k || (k = f ? new B({
                            uri: f,
                            credentials: n,
                            headers: i
                        }) : d.empty()), this.link = k, this.cache = a, this.disableNetworkFetches = u || p > 0, this.queryDeduplication = m, this.defaultOptions = v || Object.create(null), this.typeDefs = A, p && setTimeout(function() {
                            return t.disableNetworkFetches = !1
                        }, p), this.watchQuery = this.watchQuery.bind(this), this.query = this.query.bind(this), this.mutate = this.mutate.bind(this), this.resetStore = this.resetStore.bind(this), this.reFetchObservableQueries = this.reFetchObservableQueries.bind(this), this.version = l.i, this.localState = new ec({
                            cache: a,
                            client: this,
                            resolvers: w,
                            fragmentMatcher: I
                        }), this.queryManager = new ev({
                            cache: this.cache,
                            link: this.link,
                            defaultOptions: this.defaultOptions,
                            documentTransform: o,
                            queryDeduplication: m,
                            ssrMode: u,
                            clientAwareness: {
                                name: E,
                                version: _
                            },
                            localState: this.localState,
                            assumeImmutableResults: g,
                            onBroadcast: b ? function() {
                                t.devToolsHookCb && t.devToolsHookCb({
                                    action: {},
                                    state: {
                                        queries: t.queryManager.getQueryStore(),
                                        mutations: t.queryManager.mutationStore || {}
                                    },
                                    dataWithOptimisticResults: t.cache.extract(!0)
                                })
                            } : void 0
                        }), b && this.connectToDevTools()
                    }
                    return e.prototype.connectToDevTools = function() {
                        if ("object" == typeof window) {
                            var e = window,
                                t = Symbol.for("apollo.devtools");
                            (e[t] = e[t] || []).push(this), e.__APOLLO_CLIENT__ = this
                        }
                        eg || !1 === globalThis.__DEV__ || (eg = !0, setTimeout(function() {
                            if ("undefined" != typeof window && window.document && window.top === window.self && !window.__APOLLO_DEVTOOLS_GLOBAL_HOOK__) {
                                var e = window.navigator,
                                    t = e && e.userAgent,
                                    f = void 0;
                                "string" == typeof t && (t.indexOf("Chrome/") > -1 ? f = "https://chrome.google.com/webstore/detail/apollo-client-developer-t/jdkknkkbebbapilgoeccciglkfbmbnfm" : t.indexOf("Firefox/") > -1 && (f = "https://addons.mozilla.org/en-US/firefox/addon/apollo-developer-tools/")), f && !1 !== globalThis.__DEV__ && r.kG.log("Download the Apollo DevTools for a better development experience: %s", f)
                            }
                        }, 1e4))
                    }, Object.defineProperty(e.prototype, "documentTransform", {
                        get: function() {
                            return this.queryManager.documentTransform
                        },
                        enumerable: !1,
                        configurable: !0
                    }), e.prototype.stop = function() {
                        this.queryManager.stop()
                    }, e.prototype.watchQuery = function(e) {
                        return this.defaultOptions.watchQuery && (e = (0, eT.J)(this.defaultOptions.watchQuery, e)), this.disableNetworkFetches && ("network-only" === e.fetchPolicy || "cache-and-network" === e.fetchPolicy) && (e = (0, n.__assign)((0, n.__assign)({}, e), {
                            fetchPolicy: "cache-first"
                        })), this.queryManager.watchQuery(e)
                    }, e.prototype.query = function(e) {
                        return this.defaultOptions.query && (e = (0, eT.J)(this.defaultOptions.query, e)), (0, r.kG)("cache-and-network" !== e.fetchPolicy, 16), this.disableNetworkFetches && "network-only" === e.fetchPolicy && (e = (0, n.__assign)((0, n.__assign)({}, e), {
                            fetchPolicy: "cache-first"
                        })), this.queryManager.query(e)
                    }, e.prototype.mutate = function(e) {
                        return this.defaultOptions.mutate && (e = (0, eT.J)(this.defaultOptions.mutate, e)), this.queryManager.mutate(e)
                    }, e.prototype.subscribe = function(e) {
                        return this.queryManager.startGraphQLSubscription(e)
                    }, e.prototype.readQuery = function(e, t) {
                        return void 0 === t && (t = !1), this.cache.readQuery(e, t)
                    }, e.prototype.readFragment = function(e, t) {
                        return void 0 === t && (t = !1), this.cache.readFragment(e, t)
                    }, e.prototype.writeQuery = function(e) {
                        var t = this.cache.writeQuery(e);
                        return !1 !== e.broadcast && this.queryManager.broadcastQueries(), t
                    }, e.prototype.writeFragment = function(e) {
                        var t = this.cache.writeFragment(e);
                        return !1 !== e.broadcast && this.queryManager.broadcastQueries(), t
                    }, e.prototype.__actionHookForDevTools = function(e) {
                        this.devToolsHookCb = e
                    }, e.prototype.__requestRaw = function(e) {
                        return c(this.link, e)
                    }, e.prototype.resetStore = function() {
                        var e = this;
                        return Promise.resolve().then(function() {
                            return e.queryManager.clearStore({
                                discardWatches: !1
                            })
                        }).then(function() {
                            return Promise.all(e.resetStoreCallbacks.map(function(e) {
                                return e()
                            }))
                        }).then(function() {
                            return e.reFetchObservableQueries()
                        })
                    }, e.prototype.clearStore = function() {
                        var e = this;
                        return Promise.resolve().then(function() {
                            return e.queryManager.clearStore({
                                discardWatches: !0
                            })
                        }).then(function() {
                            return Promise.all(e.clearStoreCallbacks.map(function(e) {
                                return e()
                            }))
                        })
                    }, e.prototype.onResetStore = function(e) {
                        var t = this;
                        return this.resetStoreCallbacks.push(e),
                            function() {
                                t.resetStoreCallbacks = t.resetStoreCallbacks.filter(function(t) {
                                    return t !== e
                                })
                            }
                    }, e.prototype.onClearStore = function(e) {
                        var t = this;
                        return this.clearStoreCallbacks.push(e),
                            function() {
                                t.clearStoreCallbacks = t.clearStoreCallbacks.filter(function(t) {
                                    return t !== e
                                })
                            }
                    }, e.prototype.reFetchObservableQueries = function(e) {
                        return this.queryManager.reFetchObservableQueries(e)
                    }, e.prototype.refetchQueries = function(e) {
                        var t = this.queryManager.refetchQueries(e),
                            f = [],
                            n = [];
                        t.forEach(function(e, t) {
                            f.push(t), n.push(e)
                        });
                        var i = Promise.all(n);
                        return i.queries = f, i.results = n, i.catch(function(e) {
                            !1 !== globalThis.__DEV__ && r.kG.debug(17, e)
                        }), i
                    }, e.prototype.getObservableQueries = function(e) {
                        return void 0 === e && (e = "active"), this.queryManager.getObservableQueries(e)
                    }, e.prototype.extract = function(e) {
                        return this.cache.extract(e)
                    }, e.prototype.restore = function(e) {
                        return this.cache.restore(e)
                    }, e.prototype.addResolvers = function(e) {
                        this.localState.addResolvers(e)
                    }, e.prototype.setResolvers = function(e) {
                        this.localState.setResolvers(e)
                    }, e.prototype.getResolvers = function() {
                        return this.localState.getResolvers()
                    }, e.prototype.setLocalStateFragmentMatcher = function(e) {
                        this.localState.setFragmentMatcher(e)
                    }, e.prototype.setLink = function(e) {
                        this.link = this.queryManager.link = e
                    }, e
                }()
        },
        14759: (e, t, f) => {
            "use strict";
            var n;

            function r(e) {
                return !!e && e < 7
            }
            f.d(t, {
                    Ie: () => n,
                    Oj: () => r
                }),
                function(e) {
                    e[e.loading = 1] = "loading", e[e.setVariables = 2] = "setVariables", e[e.fetchMore = 3] = "fetchMore", e[e.refetch = 4] = "refetch", e[e.poll = 6] = "poll", e[e.ready = 7] = "ready", e[e.error = 8] = "error"
                }(n || (n = {}))
        },
        71106: (e, t, f) => {
            "use strict";
            f.d(t, {
                MS: () => o,
                YG: () => i,
                cA: () => u,
                ls: () => a
            });
            var n = f(51113);
            f(22461);
            var r = f(57048),
                i = Symbol();

            function a(e) {
                return !!e.extensions && Array.isArray(e.extensions[i])
            }

            function o(e) {
                return e.hasOwnProperty("graphQLErrors")
            }
            var s = function(e) {
                    var t = (0, n.__spreadArray)((0, n.__spreadArray)((0, n.__spreadArray)([], e.graphQLErrors, !0), e.clientErrors, !0), e.protocolErrors, !0);
                    return e.networkError && t.push(e.networkError), t.map(function(e) {
                        return (0, r.s)(e) && e.message || "Error message not found."
                    }).join("\n")
                },
                u = function(e) {
                    function t(f) {
                        var n = f.graphQLErrors,
                            r = f.protocolErrors,
                            i = f.clientErrors,
                            a = f.networkError,
                            o = f.errorMessage,
                            u = f.extraInfo,
                            d = e.call(this, o) || this;
                        return d.name = "ApolloError", d.graphQLErrors = n || [], d.protocolErrors = r || [], d.clientErrors = i || [], d.networkError = a || null, d.message = o || s(d), d.extraInfo = u, d.__proto__ = t.prototype, d
                    }
                    return (0, n.__extends)(t, e), t
                }(Error)
        },
        55514: (e, t, f) => {
            "use strict";
            f.d(t, {
                K: () => o
            });
            var n = f(63505),
                r = f(76409),
                i = f(22461),
                a = r.aS ? Symbol.for("__APOLLO_CONTEXT__") : "__APOLLO_CONTEXT__";

            function o() {
                (0, i.kG)(!0, 45);
                var e = n.createContext[a];
                return e || (Object.defineProperty(n.createContext, a, {
                    value: e = n.createContext({}),
                    enumerable: !1,
                    writable: !1,
                    configurable: !0
                }), e.displayName = "ApolloContext"), e
            }
        },
        78017: (e, t, f) => {
            "use strict";
            f.d(t, {
                e: () => o
            });
            var n = f(51113),
                r = f(22461),
                i = f(63505),
                a = f(55514),
                o = function(e) {
                    var t = e.client,
                        f = e.children,
                        o = (0, a.K)(),
                        s = i.useContext(o),
                        u = i.useMemo(function() {
                            return (0, n.__assign)((0, n.__assign)({}, s), {
                                client: t || s.client
                            })
                        }, [s, t]);
                    return (0, r.kG)(u.client, 46), i.createElement(o.Provider, {
                        value: u
                    }, f)
                }
        },
        35667: (e, t, f) => {
            "use strict";
            f.d(t, {
                a: () => I
            });
            var n, r = f(51113),
                i = f(22461),
                a = f(63505),
                o = f.t(a, 2),
                s = f(76409),
                u = !1,
                d = o.useSyncExternalStore || function(e, t, f) {
                    var n = t();
                    !1 === globalThis.__DEV__ || u || n === t() || (u = !0, !1 !== globalThis.__DEV__ && i.kG.error(58));
                    var r = a.useState({
                            inst: {
                                value: n,
                                getSnapshot: t
                            }
                        }),
                        o = r[0].inst,
                        d = r[1];
                    return s.JC ? a.useLayoutEffect(function() {
                        Object.assign(o, {
                            value: n,
                            getSnapshot: t
                        }), c(o) && d({
                            inst: o
                        })
                    }, [e, n, t]) : Object.assign(o, {
                        value: n,
                        getSnapshot: t
                    }), a.useEffect(function() {
                        return c(o) && d({
                            inst: o
                        }), e(function() {
                            c(o) && d({
                                inst: o
                            })
                        })
                    }, [e]), n
                };

            function c(e) {
                var t = e.value,
                    f = e.getSnapshot;
                try {
                    return t !== f()
                } catch (e) {
                    return !0
                }
            }
            var l = f(21270),
                p = f(64754),
                y = f(55514),
                b = f(71106),
                h = f(14759);
            ! function(e) {
                e[e.Query = 0] = "Query", e[e.Mutation = 1] = "Mutation", e[e.Subscription = 2] = "Subscription"
            }(n || (n = {}));
            var m = new Map;

            function v(e) {
                var t;
                switch (e) {
                    case n.Query:
                        t = "Query";
                        break;
                    case n.Mutation:
                        t = "Mutation";
                        break;
                    case n.Subscription:
                        t = "Subscription"
                }
                return t
            }
            var T = f(83985),
                g = f(60829),
                w = f(16188),
                A = Object.prototype.hasOwnProperty;

            function I(e, t) {
                var f, n, r, o, s;
                return void 0 === t && (t = Object.create(null)), (f = t.client, n = a.useContext((0, y.K)()), r = f || n.client, (0, i.kG)(!!r, 49), (o = a.useRef()).current && r === o.current.client && e === o.current.query || (o.current = new E(r, e, o.current)), (s = o.current).forceUpdateState = a.useReducer(function(e) {
                    return e + 1
                }, 0)[1], s).useQuery(t)
            }
            var E = function() {
                function e(e, t, f) {
                    var r, a, o, u, d = this;
                    this.client = e, this.query = t, this.forceUpdate = function() {
                        return d.forceUpdateState()
                    }, this.ssrDisabledResult = (0, T.J)({
                        loading: !0,
                        data: void 0,
                        error: void 0,
                        networkStatus: h.Ie.loading
                    }), this.skipStandbyResult = (0, T.J)({
                        loading: !1,
                        data: void 0,
                        error: void 0,
                        networkStatus: h.Ie.ready
                    }), this.toQueryResultCache = new(s.mr ? WeakMap : Map), r = n.Query, a = function(e) {
                        var t, f, r = m.get(e);
                        if (r) return r;
                        (0, i.kG)(!!e && !!e.kind, 59, e);
                        for (var a = [], o = [], s = [], u = [], d = 0, c = e.definitions; d < c.length; d++) {
                            var l = c[d];
                            if ("FragmentDefinition" === l.kind) {
                                a.push(l);
                                continue
                            }
                            if ("OperationDefinition" === l.kind) switch (l.operation) {
                                case "query":
                                    o.push(l);
                                    break;
                                case "mutation":
                                    s.push(l);
                                    break;
                                case "subscription":
                                    u.push(l)
                            }
                        }(0, i.kG)(!a.length || o.length || s.length || u.length, 60), (0, i.kG)(o.length + s.length + u.length <= 1, 61, e, o.length, u.length, s.length), f = o.length ? n.Query : n.Mutation, o.length || s.length || (f = n.Subscription);
                        var p = o.length ? o : s.length ? s : u;
                        (0, i.kG)(1 === p.length, 62, e, p.length);
                        var y = p[0];
                        t = y.variableDefinitions || [];
                        var b = {
                            name: y.name && "Name" === y.name.kind ? y.name.value : "data",
                            type: f,
                            variables: t
                        };
                        return m.set(e, b), b
                    }(t), o = v(r), u = v(a.type), (0, i.kG)(a.type === r, 63, o, o, u);
                    var c = f && f.result,
                        l = c && c.data;
                    l && (this.previousData = l)
                }
                return e.prototype.forceUpdateState = function() {
                    !1 !== globalThis.__DEV__ && i.kG.warn(50)
                }, e.prototype.executeQuery = function(e) {
                    var t, f = this;
                    e.query && Object.assign(this, {
                        query: e.query
                    }), this.watchQueryOptions = this.createWatchQueryOptions(this.queryHookOptions = e);
                    var n = this.observable.reobserveAsConcast(this.getObsQueryOptions());
                    return this.previousData = (null === (t = this.result) || void 0 === t ? void 0 : t.data) || this.previousData, this.result = void 0, this.forceUpdate(), new Promise(function(e) {
                        var t;
                        n.subscribe({
                            next: function(e) {
                                t = e
                            },
                            error: function() {
                                e(f.toQueryResult(f.observable.getCurrentResult()))
                            },
                            complete: function() {
                                e(f.toQueryResult(t))
                            }
                        })
                    })
                }, e.prototype.useQuery = function(e) {
                    var t = this;
                    this.renderPromises = a.useContext((0, y.K)()).renderPromises, this.useOptions(e);
                    var f = this.useObservableQuery(),
                        n = d(a.useCallback(function(e) {
                            if (t.renderPromises) return function() {};
                            t.forceUpdate = e;
                            var n = function() {
                                    var e = t.result,
                                        n = f.getCurrentResult();
                                    e && e.loading === n.loading && e.networkStatus === n.networkStatus && (0, l.D)(e.data, n.data) || t.setResult(n)
                                },
                                r = function(e) {
                                    if (i.unsubscribe(), i = f.resubscribeAfterError(n, r), !A.call(e, "graphQLErrors")) throw e;
                                    var a = t.result;
                                    (!a || a && a.loading || !(0, l.D)(e, a.error)) && t.setResult({
                                        data: a && a.data,
                                        error: e,
                                        loading: !1,
                                        networkStatus: h.Ie.error
                                    })
                                },
                                i = f.subscribe(n, r);
                            return function() {
                                setTimeout(function() {
                                    return i.unsubscribe()
                                }), t.forceUpdate = function() {
                                    return t.forceUpdateState()
                                }
                            }
                        }, [f, this.renderPromises, this.client.disableNetworkFetches]), function() {
                            return t.getCurrentResult()
                        }, function() {
                            return t.getCurrentResult()
                        });
                    return this.unsafeHandlePartialRefetch(n), this.toQueryResult(n)
                }, e.prototype.useOptions = function(t) {
                    var f, n = this.createWatchQueryOptions(this.queryHookOptions = t),
                        r = this.watchQueryOptions;
                    !(0, l.D)(n, r) && (this.watchQueryOptions = n, r && this.observable && (this.observable.reobserve(this.getObsQueryOptions()), this.previousData = (null === (f = this.result) || void 0 === f ? void 0 : f.data) || this.previousData, this.result = void 0)), this.onCompleted = t.onCompleted || e.prototype.onCompleted, this.onError = t.onError || e.prototype.onError, (this.renderPromises || this.client.disableNetworkFetches) && !1 === this.queryHookOptions.ssr && !this.queryHookOptions.skip ? this.result = this.ssrDisabledResult : this.queryHookOptions.skip || "standby" === this.watchQueryOptions.fetchPolicy ? this.result = this.skipStandbyResult : (this.result === this.ssrDisabledResult || this.result === this.skipStandbyResult) && (this.result = void 0)
                }, e.prototype.getObsQueryOptions = function() {
                    var e = [],
                        t = this.client.defaultOptions.watchQuery;
                    return t && e.push(t), this.queryHookOptions.defaultOptions && e.push(this.queryHookOptions.defaultOptions), e.push((0, g.o)(this.observable && this.observable.options, this.watchQueryOptions)), e.reduce(p.J)
                }, e.prototype.createWatchQueryOptions = function(e) {
                    void 0 === e && (e = {});
                    var t, f = e.skip,
                        n = Object.assign((e.ssr, e.onCompleted, e.onError, e.defaultOptions, (0, r.__rest)(e, ["skip", "ssr", "onCompleted", "onError", "defaultOptions"])), {
                            query: this.query
                        });
                    if (this.renderPromises && ("network-only" === n.fetchPolicy || "cache-and-network" === n.fetchPolicy) && (n.fetchPolicy = "cache-first"), n.variables || (n.variables = {}), f) {
                        var i = n.fetchPolicy,
                            a = void 0 === i ? this.getDefaultFetchPolicy() : i,
                            o = n.initialFetchPolicy;
                        Object.assign(n, {
                            initialFetchPolicy: void 0 === o ? a : o,
                            fetchPolicy: "standby"
                        })
                    } else n.fetchPolicy || (n.fetchPolicy = (null === (t = this.observable) || void 0 === t ? void 0 : t.options.initialFetchPolicy) || this.getDefaultFetchPolicy());
                    return n
                }, e.prototype.getDefaultFetchPolicy = function() {
                    var e, t;
                    return (null === (e = this.queryHookOptions.defaultOptions) || void 0 === e ? void 0 : e.fetchPolicy) || (null === (t = this.client.defaultOptions.watchQuery) || void 0 === t ? void 0 : t.fetchPolicy) || "cache-first"
                }, e.prototype.onCompleted = function(e) {}, e.prototype.onError = function(e) {}, e.prototype.useObservableQuery = function() {
                    var e = this.observable = this.renderPromises && this.renderPromises.getSSRObservable(this.watchQueryOptions) || this.observable || this.client.watchQuery(this.getObsQueryOptions());
                    this.obsQueryFields = a.useMemo(function() {
                        return {
                            refetch: e.refetch.bind(e),
                            reobserve: e.reobserve.bind(e),
                            fetchMore: e.fetchMore.bind(e),
                            updateQuery: e.updateQuery.bind(e),
                            startPolling: e.startPolling.bind(e),
                            stopPolling: e.stopPolling.bind(e),
                            subscribeToMore: e.subscribeToMore.bind(e)
                        }
                    }, [e]);
                    var t = !(!1 === this.queryHookOptions.ssr || this.queryHookOptions.skip);
                    return this.renderPromises && t && (this.renderPromises.registerSSRObservable(e), e.getCurrentResult().loading && this.renderPromises.addObservableQueryPromise(e)), e
                }, e.prototype.setResult = function(e) {
                    var t = this.result;
                    t && t.data && (this.previousData = t.data), this.result = e, this.forceUpdate(), this.handleErrorOrCompleted(e, t)
                }, e.prototype.handleErrorOrCompleted = function(e, t) {
                    var f = this;
                    if (!e.loading) {
                        var n = this.toApolloError(e);
                        Promise.resolve().then(function() {
                            n ? f.onError(n) : e.data && (null == t ? void 0 : t.networkStatus) !== e.networkStatus && e.networkStatus === h.Ie.ready && f.onCompleted(e.data)
                        }).catch(function(e) {
                            !1 !== globalThis.__DEV__ && i.kG.warn(e)
                        })
                    }
                }, e.prototype.toApolloError = function(e) {
                    return (0, w.O)(e.errors) ? new b.cA({
                        graphQLErrors: e.errors
                    }) : e.error
                }, e.prototype.getCurrentResult = function() {
                    return this.result || this.handleErrorOrCompleted(this.result = this.observable.getCurrentResult()), this.result
                }, e.prototype.toQueryResult = function(e) {
                    var t = this.toQueryResultCache.get(e);
                    if (t) return t;
                    var f = e.data,
                        n = (e.partial, (0, r.__rest)(e, ["data", "partial"]));
                    return this.toQueryResultCache.set(e, t = (0, r.__assign)((0, r.__assign)((0, r.__assign)({
                        data: f
                    }, n), this.obsQueryFields), {
                        client: this.client,
                        observable: this.observable,
                        variables: this.observable.variables,
                        called: !this.queryHookOptions.skip,
                        previousData: this.previousData
                    })), !t.error && (0, w.O)(e.errors) && (t.error = new b.cA({
                        graphQLErrors: e.errors
                    })), t
                }, e.prototype.unsafeHandlePartialRefetch = function(e) {
                    e.partial && this.queryHookOptions.partialRefetch && !e.loading && (!e.data || 0 === Object.keys(e.data).length) && "cache-only" !== this.observable.options.fetchPolicy && (Object.assign(e, {
                        loading: !0,
                        networkStatus: h.Ie.refetch
                    }), this.observable.refetch())
                }, e
            }()
        },
        16188: (e, t, f) => {
            "use strict";
            f.d(t, {
                O: () => r,
                k: () => n
            });
            var n = Array.isArray;

            function r(e) {
                return Array.isArray(e) && e.length > 0
            }
        },
        76409: (e, t, f) => {
            "use strict";
            f.d(t, {
                DN: () => o,
                JC: () => d,
                aS: () => a,
                mr: () => r,
                sy: () => i
            });
            var n = f(22461),
                r = "function" == typeof WeakMap && "ReactNative" !== (0, n.wY)(function() {
                    return navigator.product
                }),
                i = "function" == typeof WeakSet,
                a = "function" == typeof Symbol && "function" == typeof Symbol.for,
                o = a && Symbol.asyncIterator,
                s = "function" == typeof(0, n.wY)(function() {
                    return window.document.createElement
                }),
                u = (0, n.wY)(function() {
                    return navigator.userAgent.indexOf("jsdom") >= 0
                }) || !1,
                d = s && !u
        },
        21236: (e, t, f) => {
            "use strict";
            f.d(t, {
                X: () => r
            });
            var n = Object.prototype.toString;

            function r(e) {
                return function e(t, f) {
                    switch (n.call(t)) {
                        case "[object Array]":
                            if ((f = f || new Map).has(t)) return f.get(t);
                            var r = t.slice(0);
                            return f.set(t, r), r.forEach(function(t, n) {
                                r[n] = e(t, f)
                            }), r;
                        case "[object Object]":
                            if ((f = f || new Map).has(t)) return f.get(t);
                            var i = Object.create(Object.getPrototypeOf(t));
                            return f.set(t, i), Object.keys(t).forEach(function(n) {
                                i[n] = e(t[n], f)
                            }), i;
                        default:
                            return t
                    }
                }(e)
            }
        },
        60829: (e, t, f) => {
            "use strict";

            function n() {
                for (var e = [], t = 0; t < arguments.length; t++) e[t] = arguments[t];
                var f = Object.create(null);
                return e.forEach(function(e) {
                    e && Object.keys(e).forEach(function(t) {
                        var n = e[t];
                        void 0 !== n && (f[t] = n)
                    })
                }), f
            }
            f.d(t, {
                o: () => n
            })
        },
        57121: (e, t, f) => {
            "use strict";
            f.d(t, {
                X: () => r
            });
            var n = new Map;

            function r(e) {
                var t = n.get(e) || 1;
                return n.set(e, t + 1), "".concat(e, ":").concat(t, ":").concat(Math.random().toString(36).slice(2))
            }
        },
        83985: (e, t, f) => {
            "use strict";
            f.d(t, {
                J: () => r
            });
            var n = f(57048);

            function r(e) {
                if (!1 !== globalThis.__DEV__) {
                    var t;
                    (t = new Set([e])).forEach(function(e) {
                        (0, n.s)(e) && function(e) {
                            if (!1 !== globalThis.__DEV__ && !Object.isFrozen(e)) try {
                                Object.freeze(e)
                            } catch (e) {
                                if (e instanceof TypeError) return null;
                                throw e
                            }
                            return e
                        }(e) === e && Object.getOwnPropertyNames(e).forEach(function(f) {
                            (0, n.s)(e[f]) && t.add(e[f])
                        })
                    })
                }
                return e
            }
        },
        98759: (e, t, f) => {
            "use strict";
            f.d(t, {
                Ee: () => a,
                bw: () => o,
                w0: () => u
            });
            var n = f(51113),
                r = f(57048),
                i = Object.prototype.hasOwnProperty;

            function a() {
                for (var e = [], t = 0; t < arguments.length; t++) e[t] = arguments[t];
                return o(e)
            }

            function o(e) {
                var t = e[0] || {},
                    f = e.length;
                if (f > 1)
                    for (var n = new u, r = 1; r < f; ++r) t = n.merge(t, e[r]);
                return t
            }
            var s = function(e, t, f) {
                    return this.merge(e[f], t[f])
                },
                u = function() {
                    function e(e) {
                        void 0 === e && (e = s), this.reconciler = e, this.isObject = r.s, this.pastCopies = new Set
                    }
                    return e.prototype.merge = function(e, t) {
                        for (var f = this, a = [], o = 2; o < arguments.length; o++) a[o - 2] = arguments[o];
                        return (0, r.s)(t) && (0, r.s)(e) ? (Object.keys(t).forEach(function(r) {
                            if (i.call(e, r)) {
                                var o = e[r];
                                if (t[r] !== o) {
                                    var s = f.reconciler.apply(f, (0, n.__spreadArray)([e, t, r], a, !1));
                                    s !== o && ((e = f.shallowCopyForMerge(e))[r] = s)
                                }
                            } else(e = f.shallowCopyForMerge(e))[r] = t[r]
                        }), e) : t
                    }, e.prototype.shallowCopyForMerge = function(e) {
                        return (0, r.s)(e) && !this.pastCopies.has(e) && (e = Array.isArray(e) ? e.slice(0) : (0, n.__assign)({
                            __proto__: Object.getPrototypeOf(e)
                        }, e), this.pastCopies.add(e)), e
                    }, e
                }()
        },
        64754: (e, t, f) => {
            "use strict";
            f.d(t, {
                J: () => i
            });
            var n = f(51113),
                r = f(60829);

            function i(e, t) {
                return (0, r.o)(e, t, t.variables && {
                    variables: (0, r.o)((0, n.__assign)((0, n.__assign)({}, e && e.variables), t.variables))
                })
            }
        },
        57048: (e, t, f) => {
            "use strict";

            function n(e) {
                return null !== e && "object" == typeof e
            }
            f.d(t, {
                s: () => n
            })
        },
        19888: (e, t, f) => {
            "use strict";
            f.d(t, {
                v: () => r
            });
            var n = f(57121);

            function r(e, t) {
                void 0 === t && (t = 0);
                var f = (0, n.X)("stringifyForDisplay");
                return JSON.stringify(e, function(e, t) {
                    return void 0 === t ? f : t
                }, t).split(JSON.stringify(f)).join("<undefined>")
            }
        },
        22461: (e, t, f) => {
            "use strict";
            f.d(t, {
                kG: () => u,
                wY: () => i,
                _K: () => d
            });
            var n = f(63225),
                r = f(52051);

            function i(e) {
                try {
                    return e()
                } catch (e) {}
            }
            let a = i(function() {
                return globalThis
            }) || i(function() {
                return window
            }) || i(function() {
                return self
            }) || i(function() {
                return global
            }) || i(function() {
                return i.constructor("return this")()
            });
            var o = f(19888);

            function s(e) {
                return function(t) {
                    for (var f = [], n = 1; n < arguments.length; n++) f[n - 1] = arguments[n];
                    if ("number" == typeof t) {
                        var r = t;
                        (t = p(r)) || (t = y(r, f), f = [])
                    }
                    e.apply(void 0, [t].concat(f))
                }
            }
            var u = Object.assign(function(e, t) {
                for (var f = [], r = 2; r < arguments.length; r++) f[r - 2] = arguments[r];
                e || (0, n.kG)(e, p(t, f) || y(t, f))
            }, {
                debug: s(n.kG.debug),
                log: s(n.kG.log),
                warn: s(n.kG.warn),
                error: s(n.kG.error)
            });

            function d(e) {
                for (var t = [], f = 1; f < arguments.length; f++) t[f - 1] = arguments[f];
                return new n.ej(p(e, t) || y(e, t))
            }
            var c = Symbol.for("ApolloErrorMessageHandler_" + r.i);

            function l(e) {
                return "string" == typeof e ? e : (0, o.v)(e, 2).slice(0, 1e3)
            }

            function p(e, t) {
                if (void 0 === t && (t = []), e) return a[c] && a[c](e, t.map(l))
            }

            function y(e, t) {
                if (void 0 === t && (t = []), e) return "An error occurred! For more details, see the full error text at https://go.apollo.dev/c/err#".concat(encodeURIComponent(JSON.stringify({
                    version: r.i,
                    message: e,
                    args: t.map(l)
                })))
            }
            globalThis.__DEV__
        },
        40362: (e, t, f) => {
            "use strict";
            f.d(t, {
                A: () => s
            });
            var n = f(59993),
                r = f(76409),
                i = f(57175),
                a = f(22461);

            function o(e) {
                return e
            }
            var s = function() {
                function e(e, t) {
                    void 0 === t && (t = Object.create(null)), this.resultCache = r.sy ? new WeakSet : new Set, this.transform = e, t.getCacheKey && (this.getCacheKey = t.getCacheKey), !1 !== t.cache && (this.stableCacheKeys = new n.B(r.mr, function(e) {
                        return {
                            key: e
                        }
                    }))
                }
                return e.prototype.getCacheKey = function(e) {
                    return [e]
                }, e.identity = function() {
                    return new e(o, {
                        cache: !1
                    })
                }, e.split = function(t, f, n) {
                    return void 0 === n && (n = e.identity()), new e(function(e) {
                        return (t(e) ? f : n).transformDocument(e)
                    }, {
                        cache: !1
                    })
                }, e.prototype.transformDocument = function(e) {
                    if (this.resultCache.has(e)) return e;
                    var t = this.getStableCacheEntry(e);
                    if (t && t.value) return t.value;
                    (0, i.A$)(e);
                    var f = this.transform(e);
                    return this.resultCache.add(f), t && (t.value = f), f
                }, e.prototype.concat = function(t) {
                    var f = this;
                    return new e(function(e) {
                        return t.transformDocument(f.transformDocument(e))
                    }, {
                        cache: !1
                    })
                }, e.prototype.getStableCacheEntry = function(e) {
                    if (this.stableCacheKeys) {
                        var t = this.getCacheKey(e);
                        if (t) return (0, a.kG)(Array.isArray(t), 65), this.stableCacheKeys.lookupArray(t)
                    }
                }, e
            }()
        },
        75714: (e, t, f) => {
            "use strict";
            f.d(t, {
                FS: () => a,
                LZ: () => i,
                mj: () => o
            });
            var n = f(22461),
                r = f(33640);

            function i(e, t) {
                var f, r = e.directives;
                return !r || !r.length || (f = [], r && r.length && r.forEach(function(e) {
                    var t;
                    if (!("skip" !== (t = e.name.value) && "include" !== t)) {
                        var r = e.arguments,
                            i = e.name.value;
                        (0, n.kG)(r && 1 === r.length, 67, i);
                        var a = r[0];
                        (0, n.kG)(a.name && "if" === a.name.value, 68, i);
                        var o = a.value;
                        (0, n.kG)(o && ("Variable" === o.kind || "BooleanValue" === o.kind), 69, i), f.push({
                            directive: e,
                            ifArgument: a
                        })
                    }
                }), f).every(function(e) {
                    var f = e.directive,
                        r = e.ifArgument,
                        i = !1;
                    return "Variable" === r.value.kind ? (i = t && t[r.value.name.value], (0, n.kG)(void 0 !== i, 66, f.name.value)) : i = r.value.value, "skip" === f.name.value ? !i : i
                })
            }

            function a(e, t, f) {
                var n = new Set(e),
                    i = n.size;
                return (0, r.Vn)(t, {
                    Directive: function(e) {
                        if (n.delete(e.name.value) && (!f || !n.size)) return r.$_
                    }
                }), f ? !n.size : n.size < i
            }

            function o(e) {
                return e && a(["client", "export"], e, !0)
            }
        },
        72273: (e, t, f) => {
            "use strict";
            f.d(t, {
                F: () => a,
                Yk: () => i,
                hi: () => o
            });
            var n = f(51113),
                r = f(22461);

            function i(e, t) {
                var f = t,
                    i = [];
                return e.definitions.forEach(function(e) {
                    if ("OperationDefinition" === e.kind) throw (0, r._K)(70, e.operation, e.name ? " named '".concat(e.name.value, "'") : "");
                    "FragmentDefinition" === e.kind && i.push(e)
                }), void 0 === f && ((0, r.kG)(1 === i.length, 71, i.length), f = i[0].name.value), (0, n.__assign)((0, n.__assign)({}, e), {
                    definitions: (0, n.__spreadArray)([{
                        kind: "OperationDefinition",
                        operation: "query",
                        selectionSet: {
                            kind: "SelectionSet",
                            selections: [{
                                kind: "FragmentSpread",
                                name: {
                                    kind: "Name",
                                    value: f
                                }
                            }]
                        }
                    }], e.definitions, !0)
                })
            }

            function a(e) {
                void 0 === e && (e = []);
                var t = {};
                return e.forEach(function(e) {
                    t[e.name.value] = e
                }), t
            }

            function o(e, t) {
                switch (e.kind) {
                    case "InlineFragment":
                        return e;
                    case "FragmentSpread":
                        var f = e.name.value;
                        if ("function" == typeof t) return t(f);
                        var n = t && t[f];
                        return (0, r.kG)(n, 72, f), n || null;
                    default:
                        return null
                }
            }
        },
        57175: (e, t, f) => {
            "use strict";
            f.d(t, {
                $H: () => a,
                A$: () => i,
                O4: () => l,
                iW: () => u,
                kU: () => s,
                p$: () => c,
                pD: () => d,
                rY: () => o
            });
            var n = f(22461),
                r = f(11511);

            function i(e) {
                (0, n.kG)(e && "Document" === e.kind, 73);
                var t = e.definitions.filter(function(e) {
                    return "FragmentDefinition" !== e.kind
                }).map(function(e) {
                    if ("OperationDefinition" !== e.kind) throw (0, n._K)(74, e.kind);
                    return e
                });
                return (0, n.kG)(t.length <= 1, 75, t.length), e
            }

            function a(e) {
                return i(e), e.definitions.filter(function(e) {
                    return "OperationDefinition" === e.kind
                })[0]
            }

            function o(e) {
                return e.definitions.filter(function(e) {
                    return "OperationDefinition" === e.kind && !!e.name
                }).map(function(e) {
                    return e.name.value
                })[0] || null
            }

            function s(e) {
                return e.definitions.filter(function(e) {
                    return "FragmentDefinition" === e.kind
                })
            }

            function u(e) {
                var t = a(e);
                return (0, n.kG)(t && "query" === t.operation, 76), t
            }

            function d(e) {
                (0, n.kG)("Document" === e.kind, 77), (0, n.kG)(e.definitions.length <= 1, 78);
                var t = e.definitions[0];
                return (0, n.kG)("FragmentDefinition" === t.kind, 79), t
            }

            function c(e) {
                i(e);
                for (var t, f = 0, r = e.definitions; f < r.length; f++) {
                    var a = r[f];
                    if ("OperationDefinition" === a.kind) {
                        var o = a.operation;
                        if ("query" === o || "mutation" === o || "subscription" === o) return a
                    }
                    "FragmentDefinition" !== a.kind || t || (t = a)
                }
                if (t) return t;
                throw (0, n._K)(80)
            }

            function l(e) {
                var t = Object.create(null),
                    f = e && e.variableDefinitions;
                return f && f.length && f.forEach(function(e) {
                    e.defaultValue && (0, r.vb)(t, e.variable.name, e.defaultValue)
                }), t
            }
        },
        11511: (e, t, f) => {
            "use strict";
            f.d(t, {
                Ao: () => v,
                JW: () => s,
                My: () => m,
                NC: () => b,
                PT: () => l,
                Yk: () => o,
                kQ: () => a,
                qw: () => function e(t, f, n) {
                    for (var r, a = 0, o = f.selections; a < o.length; a++) {
                        var s = o[a];
                        if (m(s)) {
                            if ("__typename" === s.name.value) return t[h(s)]
                        } else r ? r.push(s) : r = [s]
                    }
                    if ("string" == typeof t.__typename) return t.__typename;
                    if (r)
                        for (var u = 0, d = r; u < d.length; u++) {
                            var s = d[u],
                                c = e(t, (0, i.hi)(s, n).selectionSet, n);
                            if ("string" == typeof c) return c
                        }
                },
                u2: () => h,
                vb: () => u,
                vf: () => d
            });
            var n = f(22461),
                r = f(57048),
                i = f(72273);

            function a(e) {
                return {
                    __ref: String(e)
                }
            }

            function o(e) {
                return !!(e && "object" == typeof e && "string" == typeof e.__ref)
            }

            function s(e) {
                return (0, r.s)(e) && "Document" === e.kind && Array.isArray(e.definitions)
            }

            function u(e, t, f, r) {
                if ("IntValue" === f.kind || "FloatValue" === f.kind) e[t.value] = Number(f.value);
                else if ("BooleanValue" === f.kind || "StringValue" === f.kind) e[t.value] = f.value;
                else if ("ObjectValue" === f.kind) {
                    var i = {};
                    f.fields.map(function(e) {
                        return u(i, e.name, e.value, r)
                    }), e[t.value] = i
                } else if ("Variable" === f.kind) {
                    var a = (r || {})[f.name.value];
                    e[t.value] = a
                } else if ("ListValue" === f.kind) e[t.value] = f.values.map(function(e) {
                    var f = {};
                    return u(f, t, e, r), f[t.value]
                });
                else if ("EnumValue" === f.kind) e[t.value] = f.value;
                else if ("NullValue" === f.kind) e[t.value] = null;
                else throw (0, n._K)(81, t.value, f.kind)
            }

            function d(e, t) {
                var f = null;
                e.directives && (f = {}, e.directives.forEach(function(e) {
                    f[e.name.value] = {}, e.arguments && e.arguments.forEach(function(n) {
                        var r = n.name,
                            i = n.value;
                        return u(f[e.name.value], r, i, t)
                    })
                }));
                var n = null;
                return e.arguments && e.arguments.length && (n = {}, e.arguments.forEach(function(e) {
                    var f = e.name,
                        r = e.value;
                    return u(n, f, r, t)
                })), l(e.name.value, n, f)
            }
            var c = ["connection", "include", "skip", "client", "rest", "export", "nonreactive"],
                l = Object.assign(function(e, t, f) {
                    if (t && f && f.connection && f.connection.key) {
                        if (!f.connection.filter || !(f.connection.filter.length > 0)) return f.connection.key;
                        var n = f.connection.filter ? f.connection.filter : [];
                        n.sort();
                        var r = {};
                        return n.forEach(function(e) {
                            r[e] = t[e]
                        }), "".concat(f.connection.key, "(").concat(p(r), ")")
                    }
                    var i = e;
                    if (t) {
                        var a = p(t);
                        i += "(".concat(a, ")")
                    }
                    return f && Object.keys(f).forEach(function(e) {
                        -1 === c.indexOf(e) && (f[e] && Object.keys(f[e]).length ? i += "@".concat(e, "(").concat(p(f[e]), ")") : i += "@".concat(e))
                    }), i
                }, {
                    setStringify: function(e) {
                        var t = p;
                        return p = e, t
                    }
                }),
                p = function(e) {
                    return JSON.stringify(e, y)
                };

            function y(e, t) {
                return (0, r.s)(t) && !Array.isArray(t) && (t = Object.keys(t).sort().reduce(function(e, f) {
                    return e[f] = t[f], e
                }, {})), t
            }

            function b(e, t) {
                if (e.arguments && e.arguments.length) {
                    var f = {};
                    return e.arguments.forEach(function(e) {
                        return u(f, e.name, e.value, t)
                    }), f
                }
                return null
            }

            function h(e) {
                return e.alias ? e.alias.value : e.name.value
            }

            function m(e) {
                return "Field" === e.kind
            }

            function v(e) {
                return "InlineFragment" === e.kind
            }
        },
        89428: (e, t, f) => {
            "use strict";
            f.d(t, {
                Gw: () => y,
                aL: () => b,
                bi: () => p,
                ob: () => h
            });
            var n = f(51113),
                r = f(22461),
                i = f(52953),
                a = f(33640),
                o = f(57175),
                s = f(11511),
                u = f(72273),
                d = f(16188),
                c = {
                    kind: i.h.FIELD,
                    name: {
                        kind: i.h.NAME,
                        value: "__typename"
                    }
                };

            function l(e) {
                var t = new Map;
                return function(f) {
                    void 0 === f && (f = e);
                    var n = t.get(f);
                    return n || t.set(f, n = {
                        variables: new Set,
                        fragmentSpreads: new Set
                    }), n
                }
            }

            function p(e, t) {
                (0, o.A$)(t);
                for (var f, s, c, p = l(""), y = l(""), b = function(e) {
                        for (var t = 0, f = void 0; t < e.length && (f = e[t]); ++t)
                            if (!(0, d.k)(f)) {
                                if (f.kind === i.h.OPERATION_DEFINITION) return p(f.name && f.name.value);
                                if (f.kind === i.h.FRAGMENT_DEFINITION) return y(f.name.value)
                            }
                        return !1 !== globalThis.__DEV__ && r.kG.error(82), null
                    }, h = 0, m = t.definitions.length - 1; m >= 0; --m) t.definitions[m].kind === i.h.OPERATION_DEFINITION && ++h;
                var v = (f = new Map, s = new Map, e.forEach(function(e) {
                        e && (e.name ? f.set(e.name, e) : e.test && s.set(e.test, e))
                    }), function(e) {
                        var t = f.get(e.name.value);
                        return !t && s.size && s.forEach(function(f, n) {
                            n(e) && (t = f)
                        }), t
                    }),
                    T = function(e) {
                        return (0, d.O)(e) && e.map(v).some(function(e) {
                            return e && e.remove
                        })
                    },
                    g = new Map,
                    w = !1,
                    A = {
                        enter: function(e) {
                            if (T(e.directives)) return w = !0, null
                        }
                    },
                    I = (0, a.Vn)(t, {
                        Field: A,
                        InlineFragment: A,
                        VariableDefinition: {
                            enter: function() {
                                return !1
                            }
                        },
                        Variable: {
                            enter: function(e, t, f, n, r) {
                                var i = b(r);
                                i && i.variables.add(e.name.value)
                            }
                        },
                        FragmentSpread: {
                            enter: function(e, t, f, n, r) {
                                if (T(e.directives)) return w = !0, null;
                                var i = b(r);
                                i && i.fragmentSpreads.add(e.name.value)
                            }
                        },
                        FragmentDefinition: {
                            enter: function(e, t, f, n) {
                                g.set(JSON.stringify(n), e)
                            },
                            leave: function(e, t, f, n) {
                                return e === g.get(JSON.stringify(n)) ? e : h > 0 && e.selectionSet.selections.every(function(e) {
                                    return e.kind === i.h.FIELD && "__typename" === e.name.value
                                }) ? (y(e.name.value).removed = !0, w = !0, null) : void 0
                            }
                        },
                        Directive: {
                            leave: function(e) {
                                if (v(e)) return w = !0, null
                            }
                        }
                    });
                if (!w) return t;
                var E = function(e) {
                        return e.transitiveVars || (e.transitiveVars = new Set(e.variables), e.removed || e.fragmentSpreads.forEach(function(t) {
                            E(y(t)).transitiveVars.forEach(function(t) {
                                e.transitiveVars.add(t)
                            })
                        })), e
                    },
                    _ = new Set;
                I.definitions.forEach(function(e) {
                    e.kind === i.h.OPERATION_DEFINITION ? E(p(e.name && e.name.value)).fragmentSpreads.forEach(function(e) {
                        _.add(e)
                    }) : e.kind !== i.h.FRAGMENT_DEFINITION || 0 !== h || y(e.name.value).removed || _.add(e.name.value)
                }), _.forEach(function(e) {
                    E(y(e)).fragmentSpreads.forEach(function(e) {
                        _.add(e)
                    })
                });
                var k = {
                    enter: function(e) {
                        var t;
                        if (t = e.name.value, !_.has(t) || y(t).removed) return null
                    }
                };
                return c = (0, a.Vn)(I, {
                    FragmentSpread: k,
                    FragmentDefinition: k,
                    OperationDefinition: {
                        leave: function(e) {
                            if (e.variableDefinitions) {
                                var t = E(p(e.name && e.name.value)).transitiveVars;
                                if (t.size < e.variableDefinitions.length) return (0, n.__assign)((0, n.__assign)({}, e), {
                                    variableDefinitions: e.variableDefinitions.filter(function(e) {
                                        return t.has(e.variable.name.value)
                                    })
                                })
                            }
                        }
                    }
                }), ! function e(t, f) {
                    return !t || t.selectionSet.selections.every(function(t) {
                        return t.kind === i.h.FRAGMENT_SPREAD && e(f[t.name.value], f)
                    })
                }((0, o.$H)(c) || (0, o.pD)(c), (0, u.F)((0, o.kU)(c))) ? c : null
            }
            var y = Object.assign(function(e) {
                return (0, a.Vn)(e, {
                    SelectionSet: {
                        enter: function(e, t, f) {
                            if (!f || f.kind !== i.h.OPERATION_DEFINITION) {
                                var r = e.selections;
                                if (!(!r || r.some(function(e) {
                                        return (0, s.My)(e) && ("__typename" === e.name.value || 0 === e.name.value.lastIndexOf("__", 0))
                                    })) && !((0, s.My)(f) && f.directives && f.directives.some(function(e) {
                                        return "export" === e.name.value
                                    }))) return (0, n.__assign)((0, n.__assign)({}, e), {
                                    selections: (0, n.__spreadArray)((0, n.__spreadArray)([], r, !0), [c], !1)
                                })
                            }
                        }
                    }
                })
            }, {
                added: function(e) {
                    return e === c
                }
            });

            function b(e) {
                return "query" === (0, o.p$)(e).operation ? e : (0, a.Vn)(e, {
                    OperationDefinition: {
                        enter: function(e) {
                            return (0, n.__assign)((0, n.__assign)({}, e), {
                                operation: "query"
                            })
                        }
                    }
                })
            }

            function h(e) {
                return (0, o.A$)(e), p([{
                    test: function(e) {
                        return "client" === e.name.value
                    },
                    remove: !0
                }], e)
            }
        },
        52051: (e, t, f) => {
            "use strict";
            f.d(t, {
                i: () => n
            });
            var n = "3.8.9"
        },
        88593: e => {
            "use strict";
            e.exports = JSON.parse('{"name":"axios","version":"0.21.4","description":"Promise based HTTP client for the browser and node.js","main":"index.js","scripts":{"test":"grunt test","start":"node ./sandbox/server.js","build":"NODE_ENV=production grunt build","preversion":"npm test","version":"npm run build && grunt version && git add -A dist && git add CHANGELOG.md bower.json package.json","postversion":"git push && git push --tags","examples":"node ./examples/server.js","coveralls":"cat coverage/lcov.info | ./node_modules/coveralls/bin/coveralls.js","fix":"eslint --fix lib/**/*.js"},"repository":{"type":"git","url":"https://github.com/axios/axios.git"},"keywords":["xhr","http","ajax","promise","node"],"author":"Matt Zabriskie","license":"MIT","bugs":{"url":"https://github.com/axios/axios/issues"},"homepage":"https://axios-http.com","devDependencies":{"coveralls":"^3.0.0","es6-promise":"^4.2.4","grunt":"^1.3.0","grunt-banner":"^0.6.0","grunt-cli":"^1.2.0","grunt-contrib-clean":"^1.1.0","grunt-contrib-watch":"^1.0.0","grunt-eslint":"^23.0.0","grunt-karma":"^4.0.0","grunt-mocha-test":"^0.13.3","grunt-ts":"^6.0.0-beta.19","grunt-webpack":"^4.0.2","istanbul-instrumenter-loader":"^1.0.0","jasmine-core":"^2.4.1","karma":"^6.3.2","karma-chrome-launcher":"^3.1.0","karma-firefox-launcher":"^2.1.0","karma-jasmine":"^1.1.1","karma-jasmine-ajax":"^0.1.13","karma-safari-launcher":"^1.0.0","karma-sauce-launcher":"^4.3.6","karma-sinon":"^1.0.5","karma-sourcemap-loader":"^0.3.8","karma-webpack":"^4.0.2","load-grunt-tasks":"^3.5.2","minimist":"^1.2.0","mocha":"^8.2.1","sinon":"^4.5.0","terser-webpack-plugin":"^4.2.3","typescript":"^4.0.5","url-search-params":"^0.10.0","webpack":"^4.44.2","webpack-dev-server":"^3.11.0"},"browser":{"./lib/adapters/http.js":"./lib/adapters/xhr.js"},"jsdelivr":"dist/axios.min.js","unpkg":"dist/axios.min.js","typings":"./index.d.ts","dependencies":{"follow-redirects":"^1.14.0"},"bundlesize":[{"path":"./dist/axios.min.js","threshold":"5kB"}]}')
        },
        61599: e => {
            "use strict";
            e.exports = JSON.parse('{"abi":[{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"symbol","type":"string"},{"internalType":"uint8","name":"decimals","type":"uint8"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_from","type":"address"},{"internalType":"address","name":"_to","type":"address"},{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"forceApprove","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_to","type":"address"},{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"mint","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"bytecode":{"object":"0x60e06040523480156200001157600080fd5b5060405162001039380380620010398339810160408190526200003491620001db565b8282826000620000458482620002ef565b506001620000548382620002ef565b5060ff81166080524660a0526200006a6200007a565b60c0525062000439945050505050565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6000604051620000ae9190620003bb565b6040805191829003822060208301939093528101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260c00160405160208183030381529060405280519060200120905090565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200013e57600080fd5b81516001600160401b03808211156200015b576200015b62000116565b604051601f8301601f19908116603f0116810190828211818310171562000186576200018662000116565b81604052838152602092508683858801011115620001a357600080fd5b600091505b83821015620001c75785820183015181830184015290820190620001a8565b600093810190920192909252949350505050565b600080600060608486031215620001f157600080fd5b83516001600160401b03808211156200020957600080fd5b62000217878388016200012c565b945060208601519150808211156200022e57600080fd5b506200023d868287016200012c565b925050604084015160ff811681146200025557600080fd5b809150509250925092565b600181811c908216806200027557607f821691505b6020821081036200029657634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620002ea57600081815260208120601f850160051c81016020861015620002c55750805b601f850160051c820191505b81811015620002e657828155600101620002d1565b5050505b505050565b81516001600160401b038111156200030b576200030b62000116565b62000323816200031c845462000260565b846200029c565b602080601f8311600181146200035b5760008415620003425750858301515b600019600386901b1c1916600185901b178555620002e6565b600085815260208120601f198616915b828110156200038c578886015182559484019460019091019084016200036b565b5085821015620003ab5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6000808354620003cb8162000260565b60018281168015620003e65760018114620003fc576200042d565b60ff19841687528215158302870194506200042d565b8760005260208060002060005b85811015620004245781548a82015290840190820162000409565b50505082870194505b50929695505050505050565b60805160a05160c051610bd06200046960003960006104820152600061044d0152600061015f0152610bd06000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c806361f49ed61161008c57806395d89b411161006657806395d89b4114610203578063a9059cbb1461020b578063d505accf1461021e578063dd62ed3e1461023157600080fd5b806361f49ed6146101b057806370a08231146101c35780637ecebe00146101e357600080fd5b806323b872dd116100c857806323b872dd14610147578063313ce5671461015a5780633644e5151461019357806340c10f191461019b57600080fd5b806306fdde03146100ef578063095ea7b31461010d57806318160ddd14610130575b600080fd5b6100f761025c565b60405161010491906108ed565b60405180910390f35b61012061011b366004610957565b6102ea565b6040519015158152602001610104565b61013960025481565b604051908152602001610104565b610120610155366004610981565b610357565b6101817f000000000000000000000000000000000000000000000000000000000000000081565b60405160ff9091168152602001610104565b610139610449565b6101ae6101a9366004610957565b6104a4565b005b6101206101be366004610981565b6104b2565b6101396101d13660046109bd565b60036020526000908152604090205481565b6101396101f13660046109bd565b60056020526000908152604090205481565b6100f761051a565b610120610219366004610957565b610527565b6101ae61022c3660046109df565b61059f565b61013961023f366004610a52565b600460209081526000928352604080842090915290825290205481565b6000805461026990610a85565b80601f016020809104026020016040519081016040528092919081815260200182805461029590610a85565b80156102e25780601f106102b7576101008083540402835291602001916102e2565b820191906000526020600020905b8154815290600101906020018083116102c557829003601f168201915b505050505081565b3360008181526004602090815260408083206001600160a01b038716808552925280832085905551919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925906103459086815260200190565b60405180910390a35060015b92915050565b6001600160a01b038316600090815260046020908152604080832033845290915281205460001981146103b35761038e8382610ad5565b6001600160a01b03861660009081526004602090815260408083203384529091529020555b6001600160a01b038516600090815260036020526040812080548592906103db908490610ad5565b90915550506001600160a01b03808516600081815260036020526040908190208054870190555190918716907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906104369087815260200190565b60405180910390a3506001949350505050565b60007f0000000000000000000000000000000000000000000000000000000000000000461461047f5761047a6107e8565b905090565b507f000000000000000000000000000000000000000000000000000000000000000090565b6104ae8282610882565b5050565b6001600160a01b03838116600081815260046020908152604080832094871680845294825280832086905551858152919392917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a35060019392505050565b6001805461026990610a85565b33600090815260036020526040812080548391908390610548908490610ad5565b90915550506001600160a01b038316600081815260036020526040908190208054850190555133907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906103459086815260200190565b428410156105f45760405162461bcd60e51b815260206004820152601760248201527f5045524d49545f444541444c494e455f4558504952454400000000000000000060448201526064015b60405180910390fd5b60006001610600610449565b6001600160a01b038a811660008181526005602090815260409182902080546001810190915582517f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98184015280840194909452938d166060840152608083018c905260a083019390935260c08083018b90528151808403909101815260e08301909152805192019190912061190160f01b6101008301526101028201929092526101228101919091526101420160408051601f198184030181528282528051602091820120600084529083018083525260ff871690820152606081018590526080810184905260a0016020604051602081039080840390855afa15801561070c573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116158015906107425750876001600160a01b0316816001600160a01b0316145b61077f5760405162461bcd60e51b815260206004820152600e60248201526d24a72b20a624a22fa9a4a3a722a960911b60448201526064016105eb565b6001600160a01b0390811660009081526004602090815260408083208a8516808552908352928190208990555188815291928a16917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a350505050505050565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f600060405161081a9190610ae8565b6040805191829003822060208301939093528101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260c00160405160208183030381529060405280519060200120905090565b80600260008282546108949190610b87565b90915550506001600160a01b0382166000818152600360209081526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b600060208083528351808285015260005b8181101561091a578581018301518582016040015282016108fe565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b038116811461095257600080fd5b919050565b6000806040838503121561096a57600080fd5b6109738361093b565b946020939093013593505050565b60008060006060848603121561099657600080fd5b61099f8461093b565b92506109ad6020850161093b565b9150604084013590509250925092565b6000602082840312156109cf57600080fd5b6109d88261093b565b9392505050565b600080600080600080600060e0888a0312156109fa57600080fd5b610a038861093b565b9650610a116020890161093b565b95506040880135945060608801359350608088013560ff81168114610a3557600080fd5b9699959850939692959460a0840135945060c09093013592915050565b60008060408385031215610a6557600080fd5b610a6e8361093b565b9150610a7c6020840161093b565b90509250929050565b600181811c90821680610a9957607f821691505b602082108103610ab957634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b8181038181111561035157610351610abf565b600080835481600182811c915080831680610b0457607f831692505b60208084108203610b2357634e487b7160e01b86526022600452602486fd5b818015610b375760018114610b4c57610b79565b60ff1986168952841515850289019650610b79565b60008a81526020902060005b86811015610b715781548b820152908501908301610b58565b505084890196505b509498975050505050505050565b8082018082111561035157610351610abf56fea26469706673582212203582f9ba28e259cd1bb001b79d8e065911e52d22256508983534d64d7fdc459664736f6c63430008100033","sourceMap":"119:441:41:-:0;;;153:102;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;229:4;235:6;243:8;2094:4:13;:12;229:4:41;2094::13;:12;:::i;:::-;-1:-1:-1;2116:6:13;:16;2125:7;2116:6;:16;:::i;:::-;-1:-1:-1;2142:20:13;;;;;2192:13;2173:32;;2242:24;:22;:24::i;:::-;2215:51;;-1:-1:-1;119:441:41;;-1:-1:-1;;;;;119:441:41;5510:446:13;5575:7;5672:95;5805:4;5789:22;;;;;;:::i;:::-;;;;;;;;;;5640:295;;;5405:25:46;;;;5446:18;;5439:34;;;;5833:14:13;5489:18:46;;;5482:34;5869:13:13;5532:18:46;;;5525:34;5912:4:13;5575:19:46;;;5568:61;5377:19;;5640:295:13;;;;;;;;;;;;5613:336;;;;;;5594:355;;5510:446;:::o;14:127:46:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:840;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:46;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:46;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;730:3;725:2;720;712:6;708:15;704:24;701:33;698:53;;;747:1;744;737:12;698:53;769:1;760:10;;779:133;793:2;790:1;787:9;779:133;;;881:14;;;877:23;;871:30;850:14;;;846:23;;839:63;804:10;;;;779:133;;;954:1;932:15;;;928:24;;;921:35;;;;936:6;146:840;-1:-1:-1;;;;146:840:46:o;991:712::-;1097:6;1105;1113;1166:2;1154:9;1145:7;1141:23;1137:32;1134:52;;;1182:1;1179;1172:12;1134:52;1209:16;;-1:-1:-1;;;;;1274:14:46;;;1271:34;;;1301:1;1298;1291:12;1271:34;1324:61;1377:7;1368:6;1357:9;1353:22;1324:61;:::i;:::-;1314:71;;1431:2;1420:9;1416:18;1410:25;1394:41;;1460:2;1450:8;1447:16;1444:36;;;1476:1;1473;1466:12;1444:36;;1499:63;1554:7;1543:8;1532:9;1528:24;1499:63;:::i;:::-;1489:73;;;1605:2;1594:9;1590:18;1584:25;1649:4;1642:5;1638:16;1631:5;1628:27;1618:55;;1669:1;1666;1659:12;1618:55;1692:5;1682:15;;;991:712;;;;;:::o;1708:380::-;1787:1;1783:12;;;;1830;;;1851:61;;1905:4;1897:6;1893:17;1883:27;;1851:61;1958:2;1950:6;1947:14;1927:18;1924:38;1921:161;;2004:10;1999:3;1995:20;1992:1;1985:31;2039:4;2036:1;2029:15;2067:4;2064:1;2057:15;1921:161;;1708:380;;;:::o;2219:545::-;2321:2;2316:3;2313:11;2310:448;;;2357:1;2382:5;2378:2;2371:17;2427:4;2423:2;2413:19;2497:2;2485:10;2481:19;2478:1;2474:27;2468:4;2464:38;2533:4;2521:10;2518:20;2515:47;;;-1:-1:-1;2556:4:46;2515:47;2611:2;2606:3;2602:12;2599:1;2595:20;2589:4;2585:31;2575:41;;2666:82;2684:2;2677:5;2674:13;2666:82;;;2729:17;;;2710:1;2699:13;2666:82;;;2670:3;;;2310:448;2219:545;;;:::o;2940:1352::-;3060:10;;-1:-1:-1;;;;;3082:30:46;;3079:56;;;3115:18;;:::i;:::-;3144:97;3234:6;3194:38;3226:4;3220:11;3194:38;:::i;:::-;3188:4;3144:97;:::i;:::-;3296:4;;3360:2;3349:14;;3377:1;3372:663;;;;4079:1;4096:6;4093:89;;;-1:-1:-1;4148:19:46;;;4142:26;4093:89;-1:-1:-1;;2897:1:46;2893:11;;;2889:24;2885:29;2875:40;2921:1;2917:11;;;2872:57;4195:81;;3342:944;;3372:663;2166:1;2159:14;;;2203:4;2190:18;;-1:-1:-1;;3408:20:46;;;3526:236;3540:7;3537:1;3534:14;3526:236;;;3629:19;;;3623:26;3608:42;;3721:27;;;;3689:1;3677:14;;;;3556:19;;3526:236;;;3530:3;3790:6;3781:7;3778:19;3775:201;;;3851:19;;;3845:26;-1:-1:-1;;3934:1:46;3930:14;;;3946:3;3926:24;3922:37;3918:42;3903:58;3888:74;;3775:201;-1:-1:-1;;;;;4022:1:46;4006:14;;;4002:22;3989:36;;-1:-1:-1;2940:1352:46:o;4297:844::-;4427:3;4456:1;4489:6;4483:13;4519:36;4545:9;4519:36;:::i;:::-;4574:1;4591:18;;;4618:133;;;;4765:1;4760:356;;;;4584:532;;4618:133;-1:-1:-1;;4651:24:46;;4639:37;;4724:14;;4717:22;4705:35;;4696:45;;;-1:-1:-1;4618:133:46;;4760:356;4791:6;4788:1;4781:17;4821:4;4866:2;4863:1;4853:16;4891:1;4905:165;4919:6;4916:1;4913:13;4905:165;;;4997:14;;4984:11;;;4977:35;5040:16;;;;4934:10;;4905:165;;;4909:3;;;5099:6;5094:3;5090:16;5083:23;;4584:532;-1:-1:-1;5132:3:46;;4297:844;-1:-1:-1;;;;;;4297:844:46:o;5146:489::-;119:441:41;;;;;;;;;;;;;;;;;;;;;;;;","linkReferences":{}},"deployedBytecode":{"object":"0x608060405234801561001057600080fd5b50600436106100ea5760003560e01c806361f49ed61161008c57806395d89b411161006657806395d89b4114610203578063a9059cbb1461020b578063d505accf1461021e578063dd62ed3e1461023157600080fd5b806361f49ed6146101b057806370a08231146101c35780637ecebe00146101e357600080fd5b806323b872dd116100c857806323b872dd14610147578063313ce5671461015a5780633644e5151461019357806340c10f191461019b57600080fd5b806306fdde03146100ef578063095ea7b31461010d57806318160ddd14610130575b600080fd5b6100f761025c565b60405161010491906108ed565b60405180910390f35b61012061011b366004610957565b6102ea565b6040519015158152602001610104565b61013960025481565b604051908152602001610104565b610120610155366004610981565b610357565b6101817f000000000000000000000000000000000000000000000000000000000000000081565b60405160ff9091168152602001610104565b610139610449565b6101ae6101a9366004610957565b6104a4565b005b6101206101be366004610981565b6104b2565b6101396101d13660046109bd565b60036020526000908152604090205481565b6101396101f13660046109bd565b60056020526000908152604090205481565b6100f761051a565b610120610219366004610957565b610527565b6101ae61022c3660046109df565b61059f565b61013961023f366004610a52565b600460209081526000928352604080842090915290825290205481565b6000805461026990610a85565b80601f016020809104026020016040519081016040528092919081815260200182805461029590610a85565b80156102e25780601f106102b7576101008083540402835291602001916102e2565b820191906000526020600020905b8154815290600101906020018083116102c557829003601f168201915b505050505081565b3360008181526004602090815260408083206001600160a01b038716808552925280832085905551919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925906103459086815260200190565b60405180910390a35060015b92915050565b6001600160a01b038316600090815260046020908152604080832033845290915281205460001981146103b35761038e8382610ad5565b6001600160a01b03861660009081526004602090815260408083203384529091529020555b6001600160a01b038516600090815260036020526040812080548592906103db908490610ad5565b90915550506001600160a01b03808516600081815260036020526040908190208054870190555190918716907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906104369087815260200190565b60405180910390a3506001949350505050565b60007f0000000000000000000000000000000000000000000000000000000000000000461461047f5761047a6107e8565b905090565b507f000000000000000000000000000000000000000000000000000000000000000090565b6104ae8282610882565b5050565b6001600160a01b03838116600081815260046020908152604080832094871680845294825280832086905551858152919392917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a35060019392505050565b6001805461026990610a85565b33600090815260036020526040812080548391908390610548908490610ad5565b90915550506001600160a01b038316600081815260036020526040908190208054850190555133907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906103459086815260200190565b428410156105f45760405162461bcd60e51b815260206004820152601760248201527f5045524d49545f444541444c494e455f4558504952454400000000000000000060448201526064015b60405180910390fd5b60006001610600610449565b6001600160a01b038a811660008181526005602090815260409182902080546001810190915582517f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98184015280840194909452938d166060840152608083018c905260a083019390935260c08083018b90528151808403909101815260e08301909152805192019190912061190160f01b6101008301526101028201929092526101228101919091526101420160408051601f198184030181528282528051602091820120600084529083018083525260ff871690820152606081018590526080810184905260a0016020604051602081039080840390855afa15801561070c573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116158015906107425750876001600160a01b0316816001600160a01b0316145b61077f5760405162461bcd60e51b815260206004820152600e60248201526d24a72b20a624a22fa9a4a3a722a960911b60448201526064016105eb565b6001600160a01b0390811660009081526004602090815260408083208a8516808552908352928190208990555188815291928a16917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a350505050505050565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f600060405161081a9190610ae8565b6040805191829003822060208301939093528101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260c00160405160208183030381529060405280519060200120905090565b80600260008282546108949190610b87565b90915550506001600160a01b0382166000818152600360209081526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b600060208083528351808285015260005b8181101561091a578581018301518582016040015282016108fe565b506000604082860101526040601f19601f8301168501019250505092915050565b80356001600160a01b038116811461095257600080fd5b919050565b6000806040838503121561096a57600080fd5b6109738361093b565b946020939093013593505050565b60008060006060848603121561099657600080fd5b61099f8461093b565b92506109ad6020850161093b565b9150604084013590509250925092565b6000602082840312156109cf57600080fd5b6109d88261093b565b9392505050565b600080600080600080600060e0888a0312156109fa57600080fd5b610a038861093b565b9650610a116020890161093b565b95506040880135945060608801359350608088013560ff81168114610a3557600080fd5b9699959850939692959460a0840135945060c09093013592915050565b60008060408385031215610a6557600080fd5b610a6e8361093b565b9150610a7c6020840161093b565b90509250929050565b600181811c90821680610a9957607f821691505b602082108103610ab957634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b8181038181111561035157610351610abf565b600080835481600182811c915080831680610b0457607f831692505b60208084108203610b2357634e487b7160e01b86526022600452602486fd5b818015610b375760018114610b4c57610b79565b60ff1986168952841515850289019650610b79565b60008a81526020902060005b86811015610b715781548b820152908501908301610b58565b505084890196505b509498975050505050505050565b8082018082111561035157610351610abf56fea26469706673582212203582f9ba28e259cd1bb001b79d8e065911e52d22256508983534d64d7fdc459664736f6c63430008100033","sourceMap":"119:441:41:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1031:18:13;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2461:211;;;;;;:::i;:::-;;:::i;:::-;;;1169:14:46;;1162:22;1144:41;;1132:2;1117:18;2461:211:13;1004:187:46;1304:26:13;;;;;;;;;1342:25:46;;;1330:2;1315:18;1304:26:13;1196:177:46;3057:592:13;;;;;;:::i;:::-;;:::i;1083:31::-;;;;;;;;1883:4:46;1871:17;;;1853:36;;1841:2;1826:18;1083:31:13;1711:184:46;5327:177:13;;;:::i;261:87:41:-;;;;;;:::i;:::-;;:::i;:::-;;354:204;;;;;;:::i;:::-;;:::i;1337:44:13:-;;;;;;:::i;:::-;;;;;;;;;;;;;;1751:41;;;;;;:::i;:::-;;;;;;;;;;;;;;1056:20;;;:::i;2678:373::-;;;;;;:::i;:::-;;:::i;3838:1483::-;;;;;;:::i;:::-;;:::i;1388:64::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;1031:18;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2461:211::-;2561:10;2535:4;2551:21;;;:9;:21;;;;;;;;-1:-1:-1;;;;;2551:30:13;;;;;;;;;;:39;;;2606:37;2535:4;;2551:30;;2606:37;;;;2584:6;1342:25:46;;1330:2;1315:18;;1196:177;2606:37:13;;;;;;;;-1:-1:-1;2661:4:13;2461:211;;;;;:::o;3057:592::-;-1:-1:-1;;;;;3209:15:13;;3175:4;3209:15;;;:9;:15;;;;;;;;3225:10;3209:27;;;;;;;;-1:-1:-1;;3287:28:13;;3283:80;;3347:16;3357:6;3347:7;:16;:::i;:::-;-1:-1:-1;;;;;3317:15:13;;;;;;:9;:15;;;;;;;;3333:10;3317:27;;;;;;;:46;3283:80;-1:-1:-1;;;;;3374:15:13;;;;;;:9;:15;;;;;:25;;3393:6;;3374:15;:25;;3393:6;;3374:25;:::i;:::-;;;;-1:-1:-1;;;;;;;3545:13:13;;;;;;;:9;:13;;;;;;;:23;;;;;;3594:26;3545:13;;3594:26;;;;;;;3562:6;1342:25:46;;1330:2;1315:18;;1196:177;3594:26:13;;;;;;;;-1:-1:-1;3638:4:13;;3057:592;-1:-1:-1;;;;3057:592:13:o;5327:177::-;5384:7;5427:16;5410:13;:33;:87;;5473:24;:22;:24::i;:::-;5403:94;;5327:177;:::o;5410:87::-;-1:-1:-1;5446:24:13;;5327:177::o;261:87:41:-;322:19;328:3;333:7;322:5;:19::i;:::-;261:87;;:::o;354:204::-;-1:-1:-1;;;;;453:16:41;;;437:4;453:16;;;:9;:16;;;;;;;;:21;;;;;;;;;;;;:31;;;500:29;1342:25:46;;;437:4:41;;453:21;:16;500:29;;1315:18:46;500:29:41;;;;;;;-1:-1:-1;547:4:41;354:204;;;;;:::o;1056:20:13:-;;;;;;;:::i;2678:373::-;2774:10;2748:4;2764:21;;;:9;:21;;;;;:31;;2789:6;;2764:21;2748:4;;2764:31;;2789:6;;2764:31;:::i;:::-;;;;-1:-1:-1;;;;;;;2941:13:13;;;;;;:9;:13;;;;;;;:23;;;;;;2990:32;2999:10;;2990:32;;;;2958:6;1342:25:46;;1330:2;1315:18;;1196:177;3838:1483:13;4057:15;4045:8;:27;;4037:63;;;;-1:-1:-1;;;4037:63:13;;4088:2:46;4037:63:13;;;4070:21:46;4127:2;4107:18;;;4100:30;4166:25;4146:18;;;4139:53;4209:18;;4037:63:13;;;;;;;;;4265:24;4292:805;4428:18;:16;:18::i;:::-;-1:-1:-1;;;;;4873:13:13;;;;;;;:6;:13;;;;;;;;;:15;;;;;;;;4511:449;;4555:165;4511:449;;;4525:25:46;4604:18;;;4597:43;;;;4676:15;;;4656:18;;;4649:43;4708:18;;;4701:34;;;4751:19;;;4744:35;;;;4795:19;;;;4788:35;;;4511:449:13;;;;;;;;;;4497:19:46;;;4511:449:13;;;4472:514;;;;;;;;-1:-1:-1;;;4350:658:13;;;5092:27:46;5135:11;;;5128:27;;;;5171:12;;;5164:28;;;;5208:12;;4350:658:13;;;-1:-1:-1;;4350:658:13;;;;;;;;;4319:707;;4350:658;4319:707;;;;4292:805;;;;;;;;;5458:25:46;5531:4;5519:17;;5499:18;;;5492:45;5553:18;;;5546:34;;;5596:18;;;5589:34;;;5430:19;;4292:805:13;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4292:805:13;;-1:-1:-1;;4292:805:13;;;-1:-1:-1;;;;;;;5120:30:13;;;;;;:59;;;5174:5;-1:-1:-1;;;;;5154:25:13;:16;-1:-1:-1;;;;;5154:25:13;;5120:59;5112:86;;;;-1:-1:-1;;;5112:86:13;;5836:2:46;5112:86:13;;;5818:21:46;5875:2;5855:18;;;5848:30;-1:-1:-1;;;5894:18:46;;;5887:44;5948:18;;5112:86:13;5634:338:46;5112:86:13;-1:-1:-1;;;;;5213:27:13;;;;;;;:9;:27;;;;;;;;:36;;;;;;;;;;;;;:44;;;5283:31;1342:25:46;;;5213:36:13;;5283:31;;;;;1315:18:46;5283:31:13;;;;;;;3838:1483;;;;;;;:::o;5510:446::-;5575:7;5672:95;5805:4;5789:22;;;;;;:::i;:::-;;;;;;;;;;5640:295;;;7503:25:46;;;;7544:18;;7537:34;;;;5833:14:13;7587:18:46;;;7580:34;5869:13:13;7630:18:46;;;7623:34;5912:4:13;7673:19:46;;;7666:61;7475:19;;5640:295:13;;;;;;;;;;;;5613:336;;;;;;5594:355;;5510:446;:::o;6150:325::-;6235:6;6220:11;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;6387:13:13;;;;;;:9;:13;;;;;;;;:23;;;;;;6436:32;1342:25:46;;;6436:32:13;;1315:18:46;6436:32:13;;;;;;;6150:325;;:::o;14:548:46:-;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;298:3;483:1;478:2;469:6;458:9;454:22;450:31;443:42;553:2;546;542:7;537:2;529:6;525:15;521:29;510:9;506:45;502:54;494:62;;;;14:548;;;;:::o;567:173::-;635:20;;-1:-1:-1;;;;;684:31:46;;674:42;;664:70;;730:1;727;720:12;664:70;567:173;;;:::o;745:254::-;813:6;821;874:2;862:9;853:7;849:23;845:32;842:52;;;890:1;887;880:12;842:52;913:29;932:9;913:29;:::i;:::-;903:39;989:2;974:18;;;;961:32;;-1:-1:-1;;;745:254:46:o;1378:328::-;1455:6;1463;1471;1524:2;1512:9;1503:7;1499:23;1495:32;1492:52;;;1540:1;1537;1530:12;1492:52;1563:29;1582:9;1563:29;:::i;:::-;1553:39;;1611:38;1645:2;1634:9;1630:18;1611:38;:::i;:::-;1601:48;;1696:2;1685:9;1681:18;1668:32;1658:42;;1378:328;;;;;:::o;2082:186::-;2141:6;2194:2;2182:9;2173:7;2169:23;2165:32;2162:52;;;2210:1;2207;2200:12;2162:52;2233:29;2252:9;2233:29;:::i;:::-;2223:39;2082:186;-1:-1:-1;;;2082:186:46:o;2273:693::-;2384:6;2392;2400;2408;2416;2424;2432;2485:3;2473:9;2464:7;2460:23;2456:33;2453:53;;;2502:1;2499;2492:12;2453:53;2525:29;2544:9;2525:29;:::i;:::-;2515:39;;2573:38;2607:2;2596:9;2592:18;2573:38;:::i;:::-;2563:48;;2658:2;2647:9;2643:18;2630:32;2620:42;;2709:2;2698:9;2694:18;2681:32;2671:42;;2763:3;2752:9;2748:19;2735:33;2808:4;2801:5;2797:16;2790:5;2787:27;2777:55;;2828:1;2825;2818:12;2777:55;2273:693;;;;-1:-1:-1;2273:693:46;;;;2851:5;2903:3;2888:19;;2875:33;;-1:-1:-1;2955:3:46;2940:19;;;2927:33;;2273:693;-1:-1:-1;;2273:693:46:o;2971:260::-;3039:6;3047;3100:2;3088:9;3079:7;3075:23;3071:32;3068:52;;;3116:1;3113;3106:12;3068:52;3139:29;3158:9;3139:29;:::i;:::-;3129:39;;3187:38;3221:2;3210:9;3206:18;3187:38;:::i;:::-;3177:48;;2971:260;;;;;:::o;3236:380::-;3315:1;3311:12;;;;3358;;;3379:61;;3433:4;3425:6;3421:17;3411:27;;3379:61;3486:2;3478:6;3475:14;3455:18;3452:38;3449:161;;3532:10;3527:3;3523:20;3520:1;3513:31;3567:4;3564:1;3557:15;3595:4;3592:1;3585:15;3449:161;;3236:380;;;:::o;3621:127::-;3682:10;3677:3;3673:20;3670:1;3663:31;3713:4;3710:1;3703:15;3737:4;3734:1;3727:15;3753:128;3820:9;;;3841:11;;;3838:37;;;3855:18;;:::i;6106:1133::-;6236:3;6265:1;6298:6;6292:13;6328:3;6350:1;6378:9;6374:2;6370:18;6360:28;;6438:2;6427:9;6423:18;6460;6450:61;;6504:4;6496:6;6492:17;6482:27;;6450:61;6530:2;6578;6570:6;6567:14;6547:18;6544:38;6541:165;;-1:-1:-1;;;6605:33:46;;6661:4;6658:1;6651:15;6691:4;6612:3;6679:17;6541:165;6722:18;6749:133;;;;6896:1;6891:323;;;;6715:499;;6749:133;-1:-1:-1;;6782:24:46;;6770:37;;6855:14;;6848:22;6836:35;;6827:45;;;-1:-1:-1;6749:133:46;;6891:323;6053:1;6046:14;;;6090:4;6077:18;;6989:1;7003:165;7017:6;7014:1;7011:13;7003:165;;;7095:14;;7082:11;;;7075:35;7138:16;;;;7032:10;;7003:165;;;7007:3;;7197:6;7192:3;7188:16;7181:23;;6715:499;-1:-1:-1;7230:3:46;;6106:1133;-1:-1:-1;;;;;;;;6106:1133:46:o;7738:125::-;7803:9;;;7824:10;;;7821:36;;;7837:18;;:::i","linkReferences":{},"immutableReferences":{"23768":[{"start":351,"length":32}],"23782":[{"start":1101,"length":32}],"23784":[{"start":1154,"length":32}]}},"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","forceApprove(address,address,uint256)":"61f49ed6","mint(address,uint256)":"40c10f19","name()":"06fdde03","nonces(address)":"7ecebe00","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"},"rawMetadata":"{\\"compiler\\":{\\"version\\":\\"0.8.16+commit.07a7930e\\"},\\"language\\":\\"Solidity\\",\\"output\\":{\\"abi\\":[{\\"inputs\\":[{\\"internalType\\":\\"string\\",\\"name\\":\\"name\\",\\"type\\":\\"string\\"},{\\"internalType\\":\\"string\\",\\"name\\":\\"symbol\\",\\"type\\":\\"string\\"},{\\"internalType\\":\\"uint8\\",\\"name\\":\\"decimals\\",\\"type\\":\\"uint8\\"}],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"constructor\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":true,\\"internalType\\":\\"address\\",\\"name\\":\\"owner\\",\\"type\\":\\"address\\"},{\\"indexed\\":true,\\"internalType\\":\\"address\\",\\"name\\":\\"spender\\",\\"type\\":\\"address\\"},{\\"indexed\\":false,\\"internalType\\":\\"uint256\\",\\"name\\":\\"amount\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"Approval\\",\\"type\\":\\"event\\"},{\\"anonymous\\":false,\\"inputs\\":[{\\"indexed\\":true,\\"internalType\\":\\"address\\",\\"name\\":\\"from\\",\\"type\\":\\"address\\"},{\\"indexed\\":true,\\"internalType\\":\\"address\\",\\"name\\":\\"to\\",\\"type\\":\\"address\\"},{\\"indexed\\":false,\\"internalType\\":\\"uint256\\",\\"name\\":\\"amount\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"Transfer\\",\\"type\\":\\"event\\"},{\\"inputs\\":[],\\"name\\":\\"DOMAIN_SEPARATOR\\",\\"outputs\\":[{\\"internalType\\":\\"bytes32\\",\\"name\\":\\"\\",\\"type\\":\\"bytes32\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"\\",\\"type\\":\\"address\\"},{\\"internalType\\":\\"address\\",\\"name\\":\\"\\",\\"type\\":\\"address\\"}],\\"name\\":\\"allowance\\",\\"outputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"spender\\",\\"type\\":\\"address\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"amount\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"approve\\",\\"outputs\\":[{\\"internalType\\":\\"bool\\",\\"name\\":\\"\\",\\"type\\":\\"bool\\"}],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"\\",\\"type\\":\\"address\\"}],\\"name\\":\\"balanceOf\\",\\"outputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"decimals\\",\\"outputs\\":[{\\"internalType\\":\\"uint8\\",\\"name\\":\\"\\",\\"type\\":\\"uint8\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"_from\\",\\"type\\":\\"address\\"},{\\"internalType\\":\\"address\\",\\"name\\":\\"_to\\",\\"type\\":\\"address\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"_amount\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"forceApprove\\",\\"outputs\\":[{\\"internalType\\":\\"bool\\",\\"name\\":\\"\\",\\"type\\":\\"bool\\"}],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"_to\\",\\"type\\":\\"address\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"_amount\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"mint\\",\\"outputs\\":[],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"name\\",\\"outputs\\":[{\\"internalType\\":\\"string\\",\\"name\\":\\"\\",\\"type\\":\\"string\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"\\",\\"type\\":\\"address\\"}],\\"name\\":\\"nonces\\",\\"outputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"owner\\",\\"type\\":\\"address\\"},{\\"internalType\\":\\"address\\",\\"name\\":\\"spender\\",\\"type\\":\\"address\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"value\\",\\"type\\":\\"uint256\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"deadline\\",\\"type\\":\\"uint256\\"},{\\"internalType\\":\\"uint8\\",\\"name\\":\\"v\\",\\"type\\":\\"uint8\\"},{\\"internalType\\":\\"bytes32\\",\\"name\\":\\"r\\",\\"type\\":\\"bytes32\\"},{\\"internalType\\":\\"bytes32\\",\\"name\\":\\"s\\",\\"type\\":\\"bytes32\\"}],\\"name\\":\\"permit\\",\\"outputs\\":[],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"symbol\\",\\"outputs\\":[{\\"internalType\\":\\"string\\",\\"name\\":\\"\\",\\"type\\":\\"string\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[],\\"name\\":\\"totalSupply\\",\\"outputs\\":[{\\"internalType\\":\\"uint256\\",\\"name\\":\\"\\",\\"type\\":\\"uint256\\"}],\\"stateMutability\\":\\"view\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"to\\",\\"type\\":\\"address\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"amount\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"transfer\\",\\"outputs\\":[{\\"internalType\\":\\"bool\\",\\"name\\":\\"\\",\\"type\\":\\"bool\\"}],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"},{\\"inputs\\":[{\\"internalType\\":\\"address\\",\\"name\\":\\"from\\",\\"type\\":\\"address\\"},{\\"internalType\\":\\"address\\",\\"name\\":\\"to\\",\\"type\\":\\"address\\"},{\\"internalType\\":\\"uint256\\",\\"name\\":\\"amount\\",\\"type\\":\\"uint256\\"}],\\"name\\":\\"transferFrom\\",\\"outputs\\":[{\\"internalType\\":\\"bool\\",\\"name\\":\\"\\",\\"type\\":\\"bool\\"}],\\"stateMutability\\":\\"nonpayable\\",\\"type\\":\\"function\\"}],\\"devdoc\\":{\\"kind\\":\\"dev\\",\\"methods\\":{},\\"version\\":1},\\"userdoc\\":{\\"kind\\":\\"user\\",\\"methods\\":{},\\"version\\":1}},\\"settings\\":{\\"compilationTarget\\":{\\"test/util/mock/MockERC20.sol\\":\\"MockERC20\\"},\\"evmVersion\\":\\"london\\",\\"libraries\\":{},\\"metadata\\":{\\"bytecodeHash\\":\\"ipfs\\"},\\"optimizer\\":{\\"enabled\\":true,\\"runs\\":200},\\"remappings\\":[\\":ds-test/=lib/solmate/lib/ds-test/src/\\",\\":forge-gas-snapshot/=lib/forge-gas-snapshot/src/\\",\\":forge-std/=lib/forge-std/src/\\",\\":openzeppelin-contracts/=lib/permitpost/lib/openzeppelin-contracts/\\",\\":permitpost/=lib/permitpost/src/\\",\\":solmate/=lib/solmate/src/\\"]},\\"sources\\":{\\"lib/solmate/src/tokens/ERC20.sol\\":{\\"keccak256\\":\\"0xcdfd8db76b2a3415620e4d18cc5545f3d50de792dbf2c3dd5adb40cbe6f94b10\\",\\"license\\":\\"AGPL-3.0-only\\",\\"urls\\":[\\"bzz-raw://57b3ab70cde374af1cf2c9888636e8de6cf660f087b1c9abd805e9271e19fa35\\",\\"dweb:/ipfs/QmNrLDBAHYFjpjSd12jerm1AdBkDqEYUUaXgnT854BUZ97\\"]},\\"test/util/mock/MockERC20.sol\\":{\\"keccak256\\":\\"0x24fa8fbc7f9808ff57350f5d1db0ba36b0a0cfa307b9d6ebfde2a5569e1cf97b\\",\\"license\\":\\"GPL-2.0-or-later\\",\\"urls\\":[\\"bzz-raw://74b25454411858e25ffab76b02492a49144cead8f1f4a3b95e9046ef3b22d231\\",\\"dweb:/ipfs/QmPLsGijRDnfQRFgUTRKYKqybkum8AxzapzCfGRXBL4qsz\\"]}},\\"version\\":1}","metadata":{"compiler":{"version":"0.8.16+commit.07a7930e"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"symbol","type":"string"},{"internalType":"uint8","name":"decimals","type":"uint8"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"owner","type":"address","indexed":true},{"internalType":"address","name":"spender","type":"address","indexed":true},{"internalType":"uint256","name":"amount","type":"uint256","indexed":false}],"type":"event","name":"Approval","anonymous":false},{"inputs":[{"internalType":"address","name":"from","type":"address","indexed":true},{"internalType":"address","name":"to","type":"address","indexed":true},{"internalType":"uint256","name":"amount","type":"uint256","indexed":false}],"type":"event","name":"Transfer","anonymous":false},{"inputs":[],"stateMutability":"view","type":"function","name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}]},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function","name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function","name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}]},{"inputs":[{"internalType":"address","name":"_from","type":"address"},{"internalType":"address","name":"_to","type":"address"},{"internalType":"uint256","name":"_amount","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"forceApprove","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"address","name":"_to","type":"address"},{"internalType":"uint256","name":"_amount","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"mint"},{"inputs":[],"stateMutability":"view","type":"function","name":"name","outputs":[{"internalType":"string","name":"","type":"string"}]},{"inputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function","name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"stateMutability":"nonpayable","type":"function","name":"permit"},{"inputs":[],"stateMutability":"view","type":"function","name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}]}],"devdoc":{"kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"remappings":[":ds-test/=lib/solmate/lib/ds-test/src/",":forge-gas-snapshot/=lib/forge-gas-snapshot/src/",":forge-std/=lib/forge-std/src/",":openzeppelin-contracts/=lib/permitpost/lib/openzeppelin-contracts/",":permitpost/=lib/permitpost/src/",":solmate/=lib/solmate/src/"],"optimizer":{"enabled":true,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"test/util/mock/MockERC20.sol":"MockERC20"},"libraries":{}},"sources":{"lib/solmate/src/tokens/ERC20.sol":{"keccak256":"0xcdfd8db76b2a3415620e4d18cc5545f3d50de792dbf2c3dd5adb40cbe6f94b10","urls":["bzz-raw://57b3ab70cde374af1cf2c9888636e8de6cf660f087b1c9abd805e9271e19fa35","dweb:/ipfs/QmNrLDBAHYFjpjSd12jerm1AdBkDqEYUUaXgnT854BUZ97"],"license":"AGPL-3.0-only"},"test/util/mock/MockERC20.sol":{"keccak256":"0x24fa8fbc7f9808ff57350f5d1db0ba36b0a0cfa307b9d6ebfde2a5569e1cf97b","urls":["bzz-raw://74b25454411858e25ffab76b02492a49144cead8f1f4a3b95e9046ef3b22d231","dweb:/ipfs/QmPLsGijRDnfQRFgUTRKYKqybkum8AxzapzCfGRXBL4qsz"],"license":"GPL-2.0-or-later"}},"version":1},"ast":{"absolutePath":"test/util/mock/MockERC20.sol","id":32252,"exportedSymbols":{"ERC20":[24131],"MockERC20":[32251]},"nodeType":"SourceUnit","src":"45:516:41","nodes":[{"id":32190,"nodeType":"PragmaDirective","src":"45:23:41","literals":["solidity","^","0.8",".0"]},{"id":32192,"nodeType":"ImportDirective","src":"70:47:41","absolutePath":"lib/solmate/src/tokens/ERC20.sol","file":"solmate/tokens/ERC20.sol","nameLocation":"-1:-1:-1","scope":32252,"sourceUnit":24132,"symbolAliases":[{"foreign":{"id":32191,"name":"ERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24131,"src":"78:5:41","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"id":32251,"nodeType":"ContractDefinition","src":"119:441:41","nodes":[{"id":32209,"nodeType":"FunctionDefinition","src":"153:102:41","body":{"id":32208,"nodeType":"Block","src":"253:2:41","statements":[]},"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":32203,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":32196,"src":"229:4:41","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":32204,"name":"symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":32198,"src":"235:6:41","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":32205,"name":"decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":32200,"src":"243:8:41","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":32206,"kind":"baseConstructorSpecifier","modifierName":{"id":32202,"name":"ERC20","nameLocations":["223:5:41"],"nodeType":"IdentifierPath","referencedDeclaration":24131,"src":"223:5:41"},"nodeType":"ModifierInvocation","src":"223:29:41"}],"name":"","nameLocation":"-1:-1:-1","parameters":{"id":32201,"nodeType":"ParameterList","parameters":[{"constant":false,"id":32196,"mutability":"mutable","name":"name","nameLocation":"179:4:41","nodeType":"VariableDeclaration","scope":32209,"src":"165:18:41","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":32195,"name":"string","nodeType":"ElementaryTypeName","src":"165:6:41","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":32198,"mutability":"mutable","name":"symbol","nameLocation":"199:6:41","nodeType":"VariableDeclaration","scope":32209,"src":"185:20:41","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":32197,"name":"string","nodeType":"ElementaryTypeName","src":"185:6:41","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":32200,"mutability":"mutable","name":"decimals","nameLocation":"213:8:41","nodeType":"VariableDeclaration","scope":32209,"src":"207:14:41","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":32199,"name":"uint8","nodeType":"ElementaryTypeName","src":"207:5:41","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"164:58:41"},"returnParameters":{"id":32207,"nodeType":"ParameterList","parameters":[],"src":"253:0:41"},"scope":32251,"stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"id":32222,"nodeType":"FunctionDefinition","src":"261:87:41","body":{"id":32221,"nodeType":"Block","src":"312:36:41","statements":[{"expression":{"arguments":[{"id":32217,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":32211,"src":"328:3:41","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":32218,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":32213,"src":"333:7:41","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":32216,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24102,"src":"322:5:41","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":32219,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"322:19:41","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":32220,"nodeType":"ExpressionStatement","src":"322:19:41"}]},"functionSelector":"40c10f19","implemented":true,"kind":"function","modifiers":[],"name":"mint","nameLocation":"270:4:41","parameters":{"id":32214,"nodeType":"ParameterList","parameters":[{"constant":false,"id":32211,"mutability":"mutable","name":"_to","nameLocation":"283:3:41","nodeType":"VariableDeclaration","scope":32222,"src":"275:11:41","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":32210,"name":"address","nodeType":"ElementaryTypeName","src":"275:7:41","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":32213,"mutability":"mutable","name":"_amount","nameLocation":"296:7:41","nodeType":"VariableDeclaration","scope":32222,"src":"288:15:41","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":32212,"name":"uint256","nodeType":"ElementaryTypeName","src":"288:7:41","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"274:30:41"},"returnParameters":{"id":32215,"nodeType":"ParameterList","parameters":[],"src":"312:0:41"},"scope":32251,"stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"id":32250,"nodeType":"FunctionDefinition","src":"354:204:41","body":{"id":32249,"nodeType":"Block","src":"443:115:41","statements":[{"expression":{"id":32239,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":32233,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":23780,"src":"453:9:41","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":32236,"indexExpression":{"id":32234,"name":"_from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":32224,"src":"463:5:41","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"453:16:41","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":32237,"indexExpression":{"id":32235,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":32226,"src":"470:3:41","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"453:21:41","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":32238,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":32228,"src":"477:7:41","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"453:31:41","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":32240,"nodeType":"ExpressionStatement","src":"453:31:41"},{"eventCall":{"arguments":[{"id":32242,"name":"_from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":32224,"src":"509:5:41","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":32243,"name":"_to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":32226,"src":"516:3:41","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":32244,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":32228,"src":"521:7:41","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":32241,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":23762,"src":"500:8:41","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":32245,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"500:29:41","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":32246,"nodeType":"EmitStatement","src":"495:34:41"},{"expression":{"hexValue":"74727565","id":32247,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"547:4:41","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":32232,"id":32248,"nodeType":"Return","src":"540:11:41"}]},"functionSelector":"61f49ed6","implemented":true,"kind":"function","modifiers":[],"name":"forceApprove","nameLocation":"363:12:41","parameters":{"id":32229,"nodeType":"ParameterList","parameters":[{"constant":false,"id":32224,"mutability":"mutable","name":"_from","nameLocation":"384:5:41","nodeType":"VariableDeclaration","scope":32250,"src":"376:13:41","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":32223,"name":"address","nodeType":"ElementaryTypeName","src":"376:7:41","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":32226,"mutability":"mutable","name":"_to","nameLocation":"399:3:41","nodeType":"VariableDeclaration","scope":32250,"src":"391:11:41","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":32225,"name":"address","nodeType":"ElementaryTypeName","src":"391:7:41","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":32228,"mutability":"mutable","name":"_amount","nameLocation":"412:7:41","nodeType":"VariableDeclaration","scope":32250,"src":"404:15:41","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":32227,"name":"uint256","nodeType":"ElementaryTypeName","src":"404:7:41","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"375:45:41"},"returnParameters":{"id":32232,"nodeType":"ParameterList","parameters":[{"constant":false,"id":32231,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":32250,"src":"437:4:41","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":32230,"name":"bool","nodeType":"ElementaryTypeName","src":"437:4:41","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"436:6:41"},"scope":32251,"stateMutability":"nonpayable","virtual":false,"visibility":"public"}],"abstract":false,"baseContracts":[{"baseName":{"id":32193,"name":"ERC20","nameLocations":["141:5:41"],"nodeType":"IdentifierPath","referencedDeclaration":24131,"src":"141:5:41"},"id":32194,"nodeType":"InheritanceSpecifier","src":"141:5:41"}],"canonicalName":"MockERC20","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"linearizedBaseContracts":[32251,24131],"name":"MockERC20","nameLocation":"128:9:41","scope":32252,"usedErrors":[]}],"license":"GPL-2.0-or-later"},"id":41}')
        },
        33405: e => {
            "use strict";
            e.exports = JSON.parse('[{"inputs":[{"internalType":"bool","name":"requireSuccess","type":"bool"},{"components":[{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes","name":"callData","type":"bytes"}],"internalType":"struct DeploylessMulticall2.Call[]","name":"calls","type":"tuple[]"}],"stateMutability":"nonpayable","type":"constructor"}]')
        },
        9614: e => {
            "use strict";
            e.exports = JSON.parse('[{"inputs":[{"components":[{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes","name":"callData","type":"bytes"}],"internalType":"struct Multicall2.Call[]","name":"calls","type":"tuple[]"}],"name":"aggregate","outputs":[{"internalType":"uint256","name":"blockNumber","type":"uint256"},{"internalType":"bytes[]","name":"returnData","type":"bytes[]"}],"payable":false,"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes","name":"callData","type":"bytes"}],"internalType":"struct Multicall2.Call[]","name":"calls","type":"tuple[]"}],"name":"blockAndAggregate","outputs":[{"internalType":"uint256","name":"blockNumber","type":"uint256"},{"internalType":"bytes32","name":"blockHash","type":"bytes32"},{"components":[{"internalType":"bool","name":"success","type":"bool"},{"internalType":"bytes","name":"returnData","type":"bytes"}],"internalType":"struct Multicall2.Result[]","name":"returnData","type":"tuple[]"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"blockNumber","type":"uint256"}],"name":"getBlockHash","outputs":[{"internalType":"bytes32","name":"blockHash","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getBlockNumber","outputs":[{"internalType":"uint256","name":"blockNumber","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getCurrentBlockCoinbase","outputs":[{"internalType":"address","name":"coinbase","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getCurrentBlockDifficulty","outputs":[{"internalType":"uint256","name":"difficulty","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getCurrentBlockGasLimit","outputs":[{"internalType":"uint256","name":"gaslimit","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getCurrentBlockTimestamp","outputs":[{"internalType":"uint256","name":"timestamp","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"addr","type":"address"}],"name":"getEthBalance","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getLastBlockHash","outputs":[{"internalType":"bytes32","name":"blockHash","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bool","name":"requireSuccess","type":"bool"},{"components":[{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes","name":"callData","type":"bytes"}],"internalType":"struct Multicall2.Call[]","name":"calls","type":"tuple[]"}],"name":"tryAggregate","outputs":[{"components":[{"internalType":"bool","name":"success","type":"bool"},{"internalType":"bytes","name":"returnData","type":"bytes"}],"internalType":"struct Multicall2.Result[]","name":"returnData","type":"tuple[]"}],"payable":false,"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bool","name":"requireSuccess","type":"bool"},{"components":[{"internalType":"address","name":"target","type":"address"},{"internalType":"bytes","name":"callData","type":"bytes"}],"internalType":"struct Multicall2.Call[]","name":"calls","type":"tuple[]"}],"name":"tryBlockAndAggregate","outputs":[{"internalType":"uint256","name":"blockNumber","type":"uint256"},{"internalType":"bytes32","name":"blockHash","type":"bytes32"},{"components":[{"internalType":"bool","name":"success","type":"bool"},{"internalType":"bytes","name":"returnData","type":"bytes"}],"internalType":"struct Multicall2.Result[]","name":"returnData","type":"tuple[]"}],"stateMutability":"nonpayable","type":"function"}]')
        }
    }
]);